#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_IceHarpy_Attack_Whirlwind

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "GA_MonsterMeleeAttackBaseWithOptions_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass GA_IceHarpy_Attack_Whirlwind.GA_IceHarpy_Attack_Whirlwind_C
// 0x0190 (0x08B0 - 0x0720)
class UGA_IceHarpy_Attack_Whirlwind_C final : public UGA_MonsterMeleeAttackBaseWithOptions_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_GA_IceHarpy_Attack_Whirlwind_C;     // 0x0720(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FTimerHandle                           Whirlwind_TimerHandleL;                            // 0x0728(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Whirlwind_Size;                                    // 0x0730(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Whirlwind_This_Time_Location_L;                    // 0x0748(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Whirlwind_This_Time_Location_R;                    // 0x0760(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_50AE[0x8];                                     // 0x0778(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             Avatar_Transform;                                  // 0x0780(0x0060)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Left_Circle_Location;                              // 0x07E0(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               Left_Circle_Rotation;                              // 0x07F8(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FVector                                Right_Circle_Location;                             // 0x0810(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               Right_Circle_Rotation;                             // 0x0828(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	double                                        Circle_Size;                                       // 0x0840(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         Hit_Actors;                                        // 0x0848(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	class ABP_IceHarpy_C*                         As_BP_Ice_Harpy;                                   // 0x0858(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           Whirlwind_TimerHandleR;                            // 0x0860(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Whirlwind_Last_Location_L;                         // 0x0868(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Whirlwind_Last_Location_R;                         // 0x0880(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         Overlap_Actors;                                    // 0x0898(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)

public:
	void AbilityActivated(const struct FGameplayEventData& TriggerEventData);
	void Draw_Whirlwind(bool Left_Side);
	void EventReceived_8A926ED049483123053938B1308043C1(const struct FGameplayEventData& Payload);
	void ExecuteUbergraph_GA_IceHarpy_Attack_Whirlwind(int32 EntryPoint);
	void K2_OnEndAbility(bool bWasCancelled);
	void NewFunction();
	void Set_Initial_Variables();
	void Spawn_LWhirlwind();
	void Spawn_RWhirlwind();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GA_IceHarpy_Attack_Whirlwind_C">();
	}
	static class UGA_IceHarpy_Attack_Whirlwind_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGA_IceHarpy_Attack_Whirlwind_C>();
	}
};
static_assert(alignof(UGA_IceHarpy_Attack_Whirlwind_C) == 0x000010, "Wrong alignment on UGA_IceHarpy_Attack_Whirlwind_C");
static_assert(sizeof(UGA_IceHarpy_Attack_Whirlwind_C) == 0x0008B0, "Wrong size on UGA_IceHarpy_Attack_Whirlwind_C");
static_assert(offsetof(UGA_IceHarpy_Attack_Whirlwind_C, UberGraphFrame_GA_IceHarpy_Attack_Whirlwind_C) == 0x000720, "Member 'UGA_IceHarpy_Attack_Whirlwind_C::UberGraphFrame_GA_IceHarpy_Attack_Whirlwind_C' has a wrong offset!");
static_assert(offsetof(UGA_IceHarpy_Attack_Whirlwind_C, Whirlwind_TimerHandleL) == 0x000728, "Member 'UGA_IceHarpy_Attack_Whirlwind_C::Whirlwind_TimerHandleL' has a wrong offset!");
static_assert(offsetof(UGA_IceHarpy_Attack_Whirlwind_C, Whirlwind_Size) == 0x000730, "Member 'UGA_IceHarpy_Attack_Whirlwind_C::Whirlwind_Size' has a wrong offset!");
static_assert(offsetof(UGA_IceHarpy_Attack_Whirlwind_C, Whirlwind_This_Time_Location_L) == 0x000748, "Member 'UGA_IceHarpy_Attack_Whirlwind_C::Whirlwind_This_Time_Location_L' has a wrong offset!");
static_assert(offsetof(UGA_IceHarpy_Attack_Whirlwind_C, Whirlwind_This_Time_Location_R) == 0x000760, "Member 'UGA_IceHarpy_Attack_Whirlwind_C::Whirlwind_This_Time_Location_R' has a wrong offset!");
static_assert(offsetof(UGA_IceHarpy_Attack_Whirlwind_C, Avatar_Transform) == 0x000780, "Member 'UGA_IceHarpy_Attack_Whirlwind_C::Avatar_Transform' has a wrong offset!");
static_assert(offsetof(UGA_IceHarpy_Attack_Whirlwind_C, Left_Circle_Location) == 0x0007E0, "Member 'UGA_IceHarpy_Attack_Whirlwind_C::Left_Circle_Location' has a wrong offset!");
static_assert(offsetof(UGA_IceHarpy_Attack_Whirlwind_C, Left_Circle_Rotation) == 0x0007F8, "Member 'UGA_IceHarpy_Attack_Whirlwind_C::Left_Circle_Rotation' has a wrong offset!");
static_assert(offsetof(UGA_IceHarpy_Attack_Whirlwind_C, Right_Circle_Location) == 0x000810, "Member 'UGA_IceHarpy_Attack_Whirlwind_C::Right_Circle_Location' has a wrong offset!");
static_assert(offsetof(UGA_IceHarpy_Attack_Whirlwind_C, Right_Circle_Rotation) == 0x000828, "Member 'UGA_IceHarpy_Attack_Whirlwind_C::Right_Circle_Rotation' has a wrong offset!");
static_assert(offsetof(UGA_IceHarpy_Attack_Whirlwind_C, Circle_Size) == 0x000840, "Member 'UGA_IceHarpy_Attack_Whirlwind_C::Circle_Size' has a wrong offset!");
static_assert(offsetof(UGA_IceHarpy_Attack_Whirlwind_C, Hit_Actors) == 0x000848, "Member 'UGA_IceHarpy_Attack_Whirlwind_C::Hit_Actors' has a wrong offset!");
static_assert(offsetof(UGA_IceHarpy_Attack_Whirlwind_C, As_BP_Ice_Harpy) == 0x000858, "Member 'UGA_IceHarpy_Attack_Whirlwind_C::As_BP_Ice_Harpy' has a wrong offset!");
static_assert(offsetof(UGA_IceHarpy_Attack_Whirlwind_C, Whirlwind_TimerHandleR) == 0x000860, "Member 'UGA_IceHarpy_Attack_Whirlwind_C::Whirlwind_TimerHandleR' has a wrong offset!");
static_assert(offsetof(UGA_IceHarpy_Attack_Whirlwind_C, Whirlwind_Last_Location_L) == 0x000868, "Member 'UGA_IceHarpy_Attack_Whirlwind_C::Whirlwind_Last_Location_L' has a wrong offset!");
static_assert(offsetof(UGA_IceHarpy_Attack_Whirlwind_C, Whirlwind_Last_Location_R) == 0x000880, "Member 'UGA_IceHarpy_Attack_Whirlwind_C::Whirlwind_Last_Location_R' has a wrong offset!");
static_assert(offsetof(UGA_IceHarpy_Attack_Whirlwind_C, Overlap_Actors) == 0x000898, "Member 'UGA_IceHarpy_Attack_Whirlwind_C::Overlap_Actors' has a wrong offset!");

}

