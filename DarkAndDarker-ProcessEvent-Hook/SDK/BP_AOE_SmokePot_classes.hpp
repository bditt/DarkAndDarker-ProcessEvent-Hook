#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AOE_SmokePot

#include "Basic.hpp"

#include "BP_AoeDefineBase_Sphere_classes.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "AkAudio_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_AOE_SmokePot.BP_AOE_SmokePot_C
// 0x0090 (0x09A0 - 0x0910)
class ABP_AOE_SmokePot_C final : public ABP_AoeDefineBase_Sphere_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_AOE_SmokePot_C;                  // 0x0908(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UStaticMeshComponent*                   StaticMesh;                                        // 0x0910(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        RemainTime;                                        // 0x0918(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         SpawingCount;                                      // 0x0920(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_56F0[0x4];                                     // 0x0924(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                PivotLocation;                                     // 0x0928(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ADCPlayerCharacterBase*                 OwnerActor;                                        // 0x0940(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	struct FPrimaryAssetId                        GrantingAbilityId;                                 // 0x0948(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	int32                                         Range;                                             // 0x0958(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         OuterRangeRatio;                                   // 0x095C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        InnerRangeRatio;                                   // 0x0960(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        HeightRangeRatioInner;                             // 0x0968(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        HeightRangerRatioOuter;                            // 0x0970(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        TimeOuterEmerge;                                   // 0x0978(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        TimeInnerEmerge;                                   // 0x0980(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FPrimaryAssetId                        SkillData;                                         // 0x0988(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void AddBeginOverlapActor(class ADCCharacterBase* CharacterBase);
	void ExecuteUbergraph_BP_AOE_SmokePot(int32 EntryPoint);
	void InitSkillData();
	void ReceiveBeginPlay();
	void SetSmokeMesh(class UStaticMeshComponent* MeshComp, double RangeRatio, double Height, class UMaterialInstance* Material_Instance, double TimeEmerge);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_AOE_SmokePot_C">();
	}
	static class ABP_AOE_SmokePot_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_AOE_SmokePot_C>();
	}
};
static_assert(alignof(ABP_AOE_SmokePot_C) == 0x000010, "Wrong alignment on ABP_AOE_SmokePot_C");
static_assert(sizeof(ABP_AOE_SmokePot_C) == 0x0009A0, "Wrong size on ABP_AOE_SmokePot_C");
static_assert(offsetof(ABP_AOE_SmokePot_C, UberGraphFrame_BP_AOE_SmokePot_C) == 0x000908, "Member 'ABP_AOE_SmokePot_C::UberGraphFrame_BP_AOE_SmokePot_C' has a wrong offset!");
static_assert(offsetof(ABP_AOE_SmokePot_C, StaticMesh) == 0x000910, "Member 'ABP_AOE_SmokePot_C::StaticMesh' has a wrong offset!");
static_assert(offsetof(ABP_AOE_SmokePot_C, RemainTime) == 0x000918, "Member 'ABP_AOE_SmokePot_C::RemainTime' has a wrong offset!");
static_assert(offsetof(ABP_AOE_SmokePot_C, SpawingCount) == 0x000920, "Member 'ABP_AOE_SmokePot_C::SpawingCount' has a wrong offset!");
static_assert(offsetof(ABP_AOE_SmokePot_C, PivotLocation) == 0x000928, "Member 'ABP_AOE_SmokePot_C::PivotLocation' has a wrong offset!");
static_assert(offsetof(ABP_AOE_SmokePot_C, OwnerActor) == 0x000940, "Member 'ABP_AOE_SmokePot_C::OwnerActor' has a wrong offset!");
static_assert(offsetof(ABP_AOE_SmokePot_C, GrantingAbilityId) == 0x000948, "Member 'ABP_AOE_SmokePot_C::GrantingAbilityId' has a wrong offset!");
static_assert(offsetof(ABP_AOE_SmokePot_C, Range) == 0x000958, "Member 'ABP_AOE_SmokePot_C::Range' has a wrong offset!");
static_assert(offsetof(ABP_AOE_SmokePot_C, OuterRangeRatio) == 0x00095C, "Member 'ABP_AOE_SmokePot_C::OuterRangeRatio' has a wrong offset!");
static_assert(offsetof(ABP_AOE_SmokePot_C, InnerRangeRatio) == 0x000960, "Member 'ABP_AOE_SmokePot_C::InnerRangeRatio' has a wrong offset!");
static_assert(offsetof(ABP_AOE_SmokePot_C, HeightRangeRatioInner) == 0x000968, "Member 'ABP_AOE_SmokePot_C::HeightRangeRatioInner' has a wrong offset!");
static_assert(offsetof(ABP_AOE_SmokePot_C, HeightRangerRatioOuter) == 0x000970, "Member 'ABP_AOE_SmokePot_C::HeightRangerRatioOuter' has a wrong offset!");
static_assert(offsetof(ABP_AOE_SmokePot_C, TimeOuterEmerge) == 0x000978, "Member 'ABP_AOE_SmokePot_C::TimeOuterEmerge' has a wrong offset!");
static_assert(offsetof(ABP_AOE_SmokePot_C, TimeInnerEmerge) == 0x000980, "Member 'ABP_AOE_SmokePot_C::TimeInnerEmerge' has a wrong offset!");
static_assert(offsetof(ABP_AOE_SmokePot_C, SkillData) == 0x000988, "Member 'ABP_AOE_SmokePot_C::SkillData' has a wrong offset!");

}

