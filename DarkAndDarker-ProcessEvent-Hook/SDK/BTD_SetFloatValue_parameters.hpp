#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BTD_SetFloatValue

#include "Basic.hpp"


namespace SDK::Params
{

// Function BTD_SetFloatValue.BTD_SetFloatValue_C.Add
// 0x0010 (0x0010 - 0x0000)
struct BTD_SetFloatValue_C_Add final
{
public:
	double                                        FloatValue_Before_Change;                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTD_SetFloatValue_C_Add) == 0x000008, "Wrong alignment on BTD_SetFloatValue_C_Add");
static_assert(sizeof(BTD_SetFloatValue_C_Add) == 0x000010, "Wrong size on BTD_SetFloatValue_C_Add");
static_assert(offsetof(BTD_SetFloatValue_C_Add, FloatValue_Before_Change) == 0x000000, "Member 'BTD_SetFloatValue_C_Add::FloatValue_Before_Change' has a wrong offset!");
static_assert(offsetof(BTD_SetFloatValue_C_Add, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000008, "Member 'BTD_SetFloatValue_C_Add::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");

// Function BTD_SetFloatValue.BTD_SetFloatValue_C.Divide
// 0x0010 (0x0010 - 0x0000)
struct BTD_SetFloatValue_C_Divide final
{
public:
	double                                        FloatValue_Before_Change;                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTD_SetFloatValue_C_Divide) == 0x000008, "Wrong alignment on BTD_SetFloatValue_C_Divide");
static_assert(sizeof(BTD_SetFloatValue_C_Divide) == 0x000010, "Wrong size on BTD_SetFloatValue_C_Divide");
static_assert(offsetof(BTD_SetFloatValue_C_Divide, FloatValue_Before_Change) == 0x000000, "Member 'BTD_SetFloatValue_C_Divide::FloatValue_Before_Change' has a wrong offset!");
static_assert(offsetof(BTD_SetFloatValue_C_Divide, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000008, "Member 'BTD_SetFloatValue_C_Divide::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");

// Function BTD_SetFloatValue.BTD_SetFloatValue_C.Multiply
// 0x0010 (0x0010 - 0x0000)
struct BTD_SetFloatValue_C_Multiply final
{
public:
	double                                        FloatValue_Before_Change;                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTD_SetFloatValue_C_Multiply) == 0x000008, "Wrong alignment on BTD_SetFloatValue_C_Multiply");
static_assert(sizeof(BTD_SetFloatValue_C_Multiply) == 0x000010, "Wrong size on BTD_SetFloatValue_C_Multiply");
static_assert(offsetof(BTD_SetFloatValue_C_Multiply, FloatValue_Before_Change) == 0x000000, "Member 'BTD_SetFloatValue_C_Multiply::FloatValue_Before_Change' has a wrong offset!");
static_assert(offsetof(BTD_SetFloatValue_C_Multiply, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000008, "Member 'BTD_SetFloatValue_C_Multiply::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");

// Function BTD_SetFloatValue.BTD_SetFloatValue_C.PerformConditionCheckAI
// 0x0060 (0x0060 - 0x0000)
struct BTD_SetFloatValue_C_PerformConditionCheckAI final
{
public:
	class AAIController*                          OwnerController;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  ControlledPawn;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A1C[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBlackboardComponent*                   CallFunc_GetBlackboard_ReturnValue;                // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetValueAsFloat_ReturnValue;              // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A1D[0x3];                                     // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_RandomFloatInRange_ReturnValue;           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue;      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A1E[0x3];                                     // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SetValueAsFloat_FloatValue_ImplicitCast;  // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetValueAsFloat_FloatValue_ImplicitCast_1; // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A1F[0x4];                                     // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_FloatValue_Before_Change_ImplicitCast; // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_FloatValue_Before_Change_ImplicitCast; // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_FloatValue_Before_Change_ImplicitCast; // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_FloatValue_Before_Change_ImplicitCast; // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTD_SetFloatValue_C_PerformConditionCheckAI) == 0x000008, "Wrong alignment on BTD_SetFloatValue_C_PerformConditionCheckAI");
static_assert(sizeof(BTD_SetFloatValue_C_PerformConditionCheckAI) == 0x000060, "Wrong size on BTD_SetFloatValue_C_PerformConditionCheckAI");
static_assert(offsetof(BTD_SetFloatValue_C_PerformConditionCheckAI, OwnerController) == 0x000000, "Member 'BTD_SetFloatValue_C_PerformConditionCheckAI::OwnerController' has a wrong offset!");
static_assert(offsetof(BTD_SetFloatValue_C_PerformConditionCheckAI, ControlledPawn) == 0x000008, "Member 'BTD_SetFloatValue_C_PerformConditionCheckAI::ControlledPawn' has a wrong offset!");
static_assert(offsetof(BTD_SetFloatValue_C_PerformConditionCheckAI, ReturnValue) == 0x000010, "Member 'BTD_SetFloatValue_C_PerformConditionCheckAI::ReturnValue' has a wrong offset!");
static_assert(offsetof(BTD_SetFloatValue_C_PerformConditionCheckAI, CallFunc_GetBlackboard_ReturnValue) == 0x000018, "Member 'BTD_SetFloatValue_C_PerformConditionCheckAI::CallFunc_GetBlackboard_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTD_SetFloatValue_C_PerformConditionCheckAI, CallFunc_GetValueAsFloat_ReturnValue) == 0x000020, "Member 'BTD_SetFloatValue_C_PerformConditionCheckAI::CallFunc_GetValueAsFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTD_SetFloatValue_C_PerformConditionCheckAI, K2Node_SwitchEnum_CmpSuccess) == 0x000024, "Member 'BTD_SetFloatValue_C_PerformConditionCheckAI::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BTD_SetFloatValue_C_PerformConditionCheckAI, CallFunc_RandomFloatInRange_ReturnValue) == 0x000028, "Member 'BTD_SetFloatValue_C_PerformConditionCheckAI::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTD_SetFloatValue_C_PerformConditionCheckAI, CallFunc_EqualEqual_DoubleDouble_ReturnValue) == 0x000030, "Member 'BTD_SetFloatValue_C_PerformConditionCheckAI::CallFunc_EqualEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTD_SetFloatValue_C_PerformConditionCheckAI, CallFunc_SetValueAsFloat_FloatValue_ImplicitCast) == 0x000034, "Member 'BTD_SetFloatValue_C_PerformConditionCheckAI::CallFunc_SetValueAsFloat_FloatValue_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BTD_SetFloatValue_C_PerformConditionCheckAI, CallFunc_SetValueAsFloat_FloatValue_ImplicitCast_1) == 0x000038, "Member 'BTD_SetFloatValue_C_PerformConditionCheckAI::CallFunc_SetValueAsFloat_FloatValue_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BTD_SetFloatValue_C_PerformConditionCheckAI, CallFunc_Add_FloatValue_Before_Change_ImplicitCast) == 0x000040, "Member 'BTD_SetFloatValue_C_PerformConditionCheckAI::CallFunc_Add_FloatValue_Before_Change_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BTD_SetFloatValue_C_PerformConditionCheckAI, CallFunc_Subtract_FloatValue_Before_Change_ImplicitCast) == 0x000048, "Member 'BTD_SetFloatValue_C_PerformConditionCheckAI::CallFunc_Subtract_FloatValue_Before_Change_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BTD_SetFloatValue_C_PerformConditionCheckAI, CallFunc_Multiply_FloatValue_Before_Change_ImplicitCast) == 0x000050, "Member 'BTD_SetFloatValue_C_PerformConditionCheckAI::CallFunc_Multiply_FloatValue_Before_Change_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BTD_SetFloatValue_C_PerformConditionCheckAI, CallFunc_Divide_FloatValue_Before_Change_ImplicitCast) == 0x000058, "Member 'BTD_SetFloatValue_C_PerformConditionCheckAI::CallFunc_Divide_FloatValue_Before_Change_ImplicitCast' has a wrong offset!");

// Function BTD_SetFloatValue.BTD_SetFloatValue_C.Subtract
// 0x0010 (0x0010 - 0x0000)
struct BTD_SetFloatValue_C_Subtract final
{
public:
	double                                        FloatValue_Before_Change;                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTD_SetFloatValue_C_Subtract) == 0x000008, "Wrong alignment on BTD_SetFloatValue_C_Subtract");
static_assert(sizeof(BTD_SetFloatValue_C_Subtract) == 0x000010, "Wrong size on BTD_SetFloatValue_C_Subtract");
static_assert(offsetof(BTD_SetFloatValue_C_Subtract, FloatValue_Before_Change) == 0x000000, "Member 'BTD_SetFloatValue_C_Subtract::FloatValue_Before_Change' has a wrong offset!");
static_assert(offsetof(BTD_SetFloatValue_C_Subtract, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000008, "Member 'BTD_SetFloatValue_C_Subtract::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");

}

