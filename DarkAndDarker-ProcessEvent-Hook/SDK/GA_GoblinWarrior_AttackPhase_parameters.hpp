#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_GoblinWarrior_AttackPhase

#include "Basic.hpp"

#include "GameplayAbilities_structs.hpp"


namespace SDK::Params
{

// Function GA_GoblinWarrior_AttackPhase.GA_GoblinWarrior_AttackPhase_C.AbilityActivated
// 0x00B0 (0x00B0 - 0x0000)
struct GA_GoblinWarrior_AttackPhase_C_AbilityActivated final
{
public:
	struct FGameplayEventData                     TriggerEventData;                                  // 0x0000(0x00B0)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(GA_GoblinWarrior_AttackPhase_C_AbilityActivated) == 0x000008, "Wrong alignment on GA_GoblinWarrior_AttackPhase_C_AbilityActivated");
static_assert(sizeof(GA_GoblinWarrior_AttackPhase_C_AbilityActivated) == 0x0000B0, "Wrong size on GA_GoblinWarrior_AttackPhase_C_AbilityActivated");
static_assert(offsetof(GA_GoblinWarrior_AttackPhase_C_AbilityActivated, TriggerEventData) == 0x000000, "Member 'GA_GoblinWarrior_AttackPhase_C_AbilityActivated::TriggerEventData' has a wrong offset!");

// Function GA_GoblinWarrior_AttackPhase.GA_GoblinWarrior_AttackPhase_C.EventReceived_E2AA8C3B4E27A81C3DCC05B52B7D7121
// 0x00B0 (0x00B0 - 0x0000)
struct GA_GoblinWarrior_AttackPhase_C_EventReceived_E2AA8C3B4E27A81C3DCC05B52B7D7121 final
{
public:
	struct FGameplayEventData                     Payload;                                           // 0x0000(0x00B0)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(GA_GoblinWarrior_AttackPhase_C_EventReceived_E2AA8C3B4E27A81C3DCC05B52B7D7121) == 0x000008, "Wrong alignment on GA_GoblinWarrior_AttackPhase_C_EventReceived_E2AA8C3B4E27A81C3DCC05B52B7D7121");
static_assert(sizeof(GA_GoblinWarrior_AttackPhase_C_EventReceived_E2AA8C3B4E27A81C3DCC05B52B7D7121) == 0x0000B0, "Wrong size on GA_GoblinWarrior_AttackPhase_C_EventReceived_E2AA8C3B4E27A81C3DCC05B52B7D7121");
static_assert(offsetof(GA_GoblinWarrior_AttackPhase_C_EventReceived_E2AA8C3B4E27A81C3DCC05B52B7D7121, Payload) == 0x000000, "Member 'GA_GoblinWarrior_AttackPhase_C_EventReceived_E2AA8C3B4E27A81C3DCC05B52B7D7121::Payload' has a wrong offset!");

// Function GA_GoblinWarrior_AttackPhase.GA_GoblinWarrior_AttackPhase_C.ExecuteUbergraph_GA_GoblinWarrior_AttackPhase
// 0x0260 (0x0260 - 0x0000)
struct GA_GoblinWarrior_AttackPhase_C_ExecuteUbergraph_GA_GoblinWarrior_AttackPhase final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_505F[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayEventData                     Temp_struct_Variable;                              // 0x0008(0x00B0)()
	TDelegate<void(const struct FGameplayEventData& Payload)> K2Node_CreateDelegate_OutputDelegate;              // 0x00B8(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAbilityTask_WaitGameplayEvent*         CallFunc_WaitGameplayEvent_ReturnValue;            // 0x00C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5060[0x6];                                     // 0x00D2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayEventData                     K2Node_Event_TriggerEventData;                     // 0x00D8(0x00B0)(ConstParm)
	int32                                         CallFunc_RandomInteger_ReturnValue;                // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x018C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5061[0x3];                                     // 0x018D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayEventData                     K2Node_CustomEvent_Payload;                        // 0x0190(0x00B0)()
	class AActor*                                 CallFunc_GetAvatarActorFromActorInfo_ReturnValue;  // 0x0240(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IGameplayTagAssetInterface> K2Node_DynamicCast_As_________________;            // 0x0248(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0258(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue;       // 0x0259(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_GoblinWarrior_AttackPhase_C_ExecuteUbergraph_GA_GoblinWarrior_AttackPhase) == 0x000008, "Wrong alignment on GA_GoblinWarrior_AttackPhase_C_ExecuteUbergraph_GA_GoblinWarrior_AttackPhase");
static_assert(sizeof(GA_GoblinWarrior_AttackPhase_C_ExecuteUbergraph_GA_GoblinWarrior_AttackPhase) == 0x000260, "Wrong size on GA_GoblinWarrior_AttackPhase_C_ExecuteUbergraph_GA_GoblinWarrior_AttackPhase");
static_assert(offsetof(GA_GoblinWarrior_AttackPhase_C_ExecuteUbergraph_GA_GoblinWarrior_AttackPhase, EntryPoint) == 0x000000, "Member 'GA_GoblinWarrior_AttackPhase_C_ExecuteUbergraph_GA_GoblinWarrior_AttackPhase::EntryPoint' has a wrong offset!");
static_assert(offsetof(GA_GoblinWarrior_AttackPhase_C_ExecuteUbergraph_GA_GoblinWarrior_AttackPhase, Temp_struct_Variable) == 0x000008, "Member 'GA_GoblinWarrior_AttackPhase_C_ExecuteUbergraph_GA_GoblinWarrior_AttackPhase::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(GA_GoblinWarrior_AttackPhase_C_ExecuteUbergraph_GA_GoblinWarrior_AttackPhase, K2Node_CreateDelegate_OutputDelegate) == 0x0000B8, "Member 'GA_GoblinWarrior_AttackPhase_C_ExecuteUbergraph_GA_GoblinWarrior_AttackPhase::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(GA_GoblinWarrior_AttackPhase_C_ExecuteUbergraph_GA_GoblinWarrior_AttackPhase, CallFunc_WaitGameplayEvent_ReturnValue) == 0x0000C8, "Member 'GA_GoblinWarrior_AttackPhase_C_ExecuteUbergraph_GA_GoblinWarrior_AttackPhase::CallFunc_WaitGameplayEvent_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_GoblinWarrior_AttackPhase_C_ExecuteUbergraph_GA_GoblinWarrior_AttackPhase, Temp_bool_Variable) == 0x0000D0, "Member 'GA_GoblinWarrior_AttackPhase_C_ExecuteUbergraph_GA_GoblinWarrior_AttackPhase::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(GA_GoblinWarrior_AttackPhase_C_ExecuteUbergraph_GA_GoblinWarrior_AttackPhase, CallFunc_IsValid_ReturnValue) == 0x0000D1, "Member 'GA_GoblinWarrior_AttackPhase_C_ExecuteUbergraph_GA_GoblinWarrior_AttackPhase::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_GoblinWarrior_AttackPhase_C_ExecuteUbergraph_GA_GoblinWarrior_AttackPhase, K2Node_Event_TriggerEventData) == 0x0000D8, "Member 'GA_GoblinWarrior_AttackPhase_C_ExecuteUbergraph_GA_GoblinWarrior_AttackPhase::K2Node_Event_TriggerEventData' has a wrong offset!");
static_assert(offsetof(GA_GoblinWarrior_AttackPhase_C_ExecuteUbergraph_GA_GoblinWarrior_AttackPhase, CallFunc_RandomInteger_ReturnValue) == 0x000188, "Member 'GA_GoblinWarrior_AttackPhase_C_ExecuteUbergraph_GA_GoblinWarrior_AttackPhase::CallFunc_RandomInteger_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_GoblinWarrior_AttackPhase_C_ExecuteUbergraph_GA_GoblinWarrior_AttackPhase, K2Node_SwitchInteger_CmpSuccess) == 0x00018C, "Member 'GA_GoblinWarrior_AttackPhase_C_ExecuteUbergraph_GA_GoblinWarrior_AttackPhase::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(GA_GoblinWarrior_AttackPhase_C_ExecuteUbergraph_GA_GoblinWarrior_AttackPhase, K2Node_CustomEvent_Payload) == 0x000190, "Member 'GA_GoblinWarrior_AttackPhase_C_ExecuteUbergraph_GA_GoblinWarrior_AttackPhase::K2Node_CustomEvent_Payload' has a wrong offset!");
static_assert(offsetof(GA_GoblinWarrior_AttackPhase_C_ExecuteUbergraph_GA_GoblinWarrior_AttackPhase, CallFunc_GetAvatarActorFromActorInfo_ReturnValue) == 0x000240, "Member 'GA_GoblinWarrior_AttackPhase_C_ExecuteUbergraph_GA_GoblinWarrior_AttackPhase::CallFunc_GetAvatarActorFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_GoblinWarrior_AttackPhase_C_ExecuteUbergraph_GA_GoblinWarrior_AttackPhase, K2Node_DynamicCast_As_________________) == 0x000248, "Member 'GA_GoblinWarrior_AttackPhase_C_ExecuteUbergraph_GA_GoblinWarrior_AttackPhase::K2Node_DynamicCast_As_________________' has a wrong offset!");
static_assert(offsetof(GA_GoblinWarrior_AttackPhase_C_ExecuteUbergraph_GA_GoblinWarrior_AttackPhase, K2Node_DynamicCast_bSuccess) == 0x000258, "Member 'GA_GoblinWarrior_AttackPhase_C_ExecuteUbergraph_GA_GoblinWarrior_AttackPhase::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GA_GoblinWarrior_AttackPhase_C_ExecuteUbergraph_GA_GoblinWarrior_AttackPhase, CallFunc_HasMatchingGameplayTag_ReturnValue) == 0x000259, "Member 'GA_GoblinWarrior_AttackPhase_C_ExecuteUbergraph_GA_GoblinWarrior_AttackPhase::CallFunc_HasMatchingGameplayTag_ReturnValue' has a wrong offset!");

}

