#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BTT_Specter_MoveInCombatArea

#include "Basic.hpp"

#include "BTT_BlueprintBaseWithOptions_classes.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "AIModule_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BTT_Specter_MoveInCombatArea.BTT_Specter_MoveInCombatArea_C
// 0x0068 (0x0110 - 0x00A8)
class UBTT_Specter_MoveInCombatArea_C final : public UBTT_BlueprintBaseWithOptions_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x00A8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class ABP_Specter_C*                          As_BP_Specter;                                     // 0x00B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class ABP_Banshee_Common_C*                   Summoner;                                          // 0x00B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Goal_Location;                                     // 0x00C0(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Min_Distance_To_Goal;                              // 0x00D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Vertical_Rotation_Angle_Per_Tick;                  // 0x00E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Horizontal_Rotation_Angle_Per_Tick;                // 0x00E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           Do_Move_TimerHandle;                               // 0x00F0(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Next_Tick_Location;                                // 0x00F8(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void Do_Move();
	void ExecuteUbergraph_BTT_Specter_MoveInCombatArea(int32 EntryPoint);
	void Get_Goal_Location();
	void Get_Next_Tick_Location();
	void OnTaskFinished(class AAIController* OwnerController, class APawn* ControlledPawn, EBTNodeResult TaskResult);
	void ReceiveExecuteAI(class AAIController* OwnerController, class APawn* ControlledPawn);
	void ReceiveTickAI(class AAIController* OwnerController, class APawn* ControlledPawn, float DeltaSeconds);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BTT_Specter_MoveInCombatArea_C">();
	}
	static class UBTT_Specter_MoveInCombatArea_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBTT_Specter_MoveInCombatArea_C>();
	}
};
static_assert(alignof(UBTT_Specter_MoveInCombatArea_C) == 0x000008, "Wrong alignment on UBTT_Specter_MoveInCombatArea_C");
static_assert(sizeof(UBTT_Specter_MoveInCombatArea_C) == 0x000110, "Wrong size on UBTT_Specter_MoveInCombatArea_C");
static_assert(offsetof(UBTT_Specter_MoveInCombatArea_C, UberGraphFrame) == 0x0000A8, "Member 'UBTT_Specter_MoveInCombatArea_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBTT_Specter_MoveInCombatArea_C, As_BP_Specter) == 0x0000B0, "Member 'UBTT_Specter_MoveInCombatArea_C::As_BP_Specter' has a wrong offset!");
static_assert(offsetof(UBTT_Specter_MoveInCombatArea_C, Summoner) == 0x0000B8, "Member 'UBTT_Specter_MoveInCombatArea_C::Summoner' has a wrong offset!");
static_assert(offsetof(UBTT_Specter_MoveInCombatArea_C, Goal_Location) == 0x0000C0, "Member 'UBTT_Specter_MoveInCombatArea_C::Goal_Location' has a wrong offset!");
static_assert(offsetof(UBTT_Specter_MoveInCombatArea_C, Min_Distance_To_Goal) == 0x0000D8, "Member 'UBTT_Specter_MoveInCombatArea_C::Min_Distance_To_Goal' has a wrong offset!");
static_assert(offsetof(UBTT_Specter_MoveInCombatArea_C, Vertical_Rotation_Angle_Per_Tick) == 0x0000E0, "Member 'UBTT_Specter_MoveInCombatArea_C::Vertical_Rotation_Angle_Per_Tick' has a wrong offset!");
static_assert(offsetof(UBTT_Specter_MoveInCombatArea_C, Horizontal_Rotation_Angle_Per_Tick) == 0x0000E8, "Member 'UBTT_Specter_MoveInCombatArea_C::Horizontal_Rotation_Angle_Per_Tick' has a wrong offset!");
static_assert(offsetof(UBTT_Specter_MoveInCombatArea_C, Do_Move_TimerHandle) == 0x0000F0, "Member 'UBTT_Specter_MoveInCombatArea_C::Do_Move_TimerHandle' has a wrong offset!");
static_assert(offsetof(UBTT_Specter_MoveInCombatArea_C, Next_Tick_Location) == 0x0000F8, "Member 'UBTT_Specter_MoveInCombatArea_C::Next_Tick_Location' has a wrong offset!");

}

