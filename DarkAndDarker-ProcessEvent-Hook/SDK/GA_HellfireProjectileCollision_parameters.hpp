#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_HellfireProjectileCollision

#include "Basic.hpp"

#include "GameplayAbilities_structs.hpp"
#include "Engine_structs.hpp"
#include "DungeonCrawler_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function GA_HellfireProjectileCollision.GA_HellfireProjectileCollision_C.AbilityActivated
// 0x00B0 (0x00B0 - 0x0000)
struct GA_HellfireProjectileCollision_C_AbilityActivated final
{
public:
	struct FGameplayEventData                     TriggerEventData;                                  // 0x0000(0x00B0)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(GA_HellfireProjectileCollision_C_AbilityActivated) == 0x000008, "Wrong alignment on GA_HellfireProjectileCollision_C_AbilityActivated");
static_assert(sizeof(GA_HellfireProjectileCollision_C_AbilityActivated) == 0x0000B0, "Wrong size on GA_HellfireProjectileCollision_C_AbilityActivated");
static_assert(offsetof(GA_HellfireProjectileCollision_C_AbilityActivated, TriggerEventData) == 0x000000, "Member 'GA_HellfireProjectileCollision_C_AbilityActivated::TriggerEventData' has a wrong offset!");

// Function GA_HellfireProjectileCollision.GA_HellfireProjectileCollision_C.ExecuteUbergraph_GA_HellfireProjectileCollision
// 0x0368 (0x0368 - 0x0000)
struct GA_HellfireProjectileCollision_C_ExecuteUbergraph_GA_HellfireProjectileCollision final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D6D[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetAvatarActorFromActorInfo_ReturnValue;  // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_HellfireProjectile_C*               K2Node_DynamicCast_AsBP_Hellfire_Projectile;       // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D6E[0x3];                                     // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x001C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D6F[0x4];                                     // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayEventData                     K2Node_Event_TriggerEventData;                     // 0x0030(0x00B0)(ConstParm)
	class AActor*                                 CallFunc_GetAvatarActorFromActorInfo_ReturnValue_1; // 0x00E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetAvatarActorFromActorInfo_ReturnValue_2; // 0x00E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_HellfireProjectile_C*               K2Node_DynamicCast_AsBP_Hellfire_Projectile_1;     // 0x00F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D70[0x7];                                     // 0x00F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_HellfireProjectile_C*               K2Node_DynamicCast_AsBP_Hellfire_Projectile_2;     // 0x0100(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D71[0x7];                                     // 0x0109(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0110(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FDesignDataSpell                       CallFunc_GetDesignDataSpell_ReturnValue;           // 0x0128(0x00D8)()
	class UPrimitiveComponent*                    K2Node_CustomEvent_OverlappedComponent_1;          // 0x0200(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_OtherActor_1;                   // 0x0208(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_CustomEvent_OtherComp_1;                    // 0x0210(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_OtherBodyIndex_1;               // 0x0218(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bFromSweep;                     // 0x021C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D72[0x3];                                     // 0x021D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_CustomEvent_SweepResult;                    // 0x0220(0x00E8)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0308(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_CustomEvent_OverlappedComponent;            // 0x0310(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_OtherActor;                     // 0x0318(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_CustomEvent_OtherComp;                      // 0x0320(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_OtherBodyIndex;                 // 0x0328(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D73[0x4];                                     // 0x032C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UDCAT_WaitDistChangeFromLocation*       CallFunc_WaitDistanceChange_ReturnValue;           // 0x0330(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0338(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D74[0x3];                                     // 0x0339(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x033C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex)> K2Node_CreateDelegate_OutputDelegate_2;            // 0x034C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bWasCancelled;                        // 0x035C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D75[0x3];                                     // 0x035D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_WaitDistanceChange_MaximumDistance_ImplicitCast; // 0x0360(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_HellfireProjectileCollision_C_ExecuteUbergraph_GA_HellfireProjectileCollision) == 0x000008, "Wrong alignment on GA_HellfireProjectileCollision_C_ExecuteUbergraph_GA_HellfireProjectileCollision");
static_assert(sizeof(GA_HellfireProjectileCollision_C_ExecuteUbergraph_GA_HellfireProjectileCollision) == 0x000368, "Wrong size on GA_HellfireProjectileCollision_C_ExecuteUbergraph_GA_HellfireProjectileCollision");
static_assert(offsetof(GA_HellfireProjectileCollision_C_ExecuteUbergraph_GA_HellfireProjectileCollision, EntryPoint) == 0x000000, "Member 'GA_HellfireProjectileCollision_C_ExecuteUbergraph_GA_HellfireProjectileCollision::EntryPoint' has a wrong offset!");
static_assert(offsetof(GA_HellfireProjectileCollision_C_ExecuteUbergraph_GA_HellfireProjectileCollision, CallFunc_GetAvatarActorFromActorInfo_ReturnValue) == 0x000008, "Member 'GA_HellfireProjectileCollision_C_ExecuteUbergraph_GA_HellfireProjectileCollision::CallFunc_GetAvatarActorFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_HellfireProjectileCollision_C_ExecuteUbergraph_GA_HellfireProjectileCollision, K2Node_DynamicCast_AsBP_Hellfire_Projectile) == 0x000010, "Member 'GA_HellfireProjectileCollision_C_ExecuteUbergraph_GA_HellfireProjectileCollision::K2Node_DynamicCast_AsBP_Hellfire_Projectile' has a wrong offset!");
static_assert(offsetof(GA_HellfireProjectileCollision_C_ExecuteUbergraph_GA_HellfireProjectileCollision, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'GA_HellfireProjectileCollision_C_ExecuteUbergraph_GA_HellfireProjectileCollision::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GA_HellfireProjectileCollision_C_ExecuteUbergraph_GA_HellfireProjectileCollision, K2Node_CreateDelegate_OutputDelegate) == 0x00001C, "Member 'GA_HellfireProjectileCollision_C_ExecuteUbergraph_GA_HellfireProjectileCollision::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(GA_HellfireProjectileCollision_C_ExecuteUbergraph_GA_HellfireProjectileCollision, K2Node_Event_TriggerEventData) == 0x000030, "Member 'GA_HellfireProjectileCollision_C_ExecuteUbergraph_GA_HellfireProjectileCollision::K2Node_Event_TriggerEventData' has a wrong offset!");
static_assert(offsetof(GA_HellfireProjectileCollision_C_ExecuteUbergraph_GA_HellfireProjectileCollision, CallFunc_GetAvatarActorFromActorInfo_ReturnValue_1) == 0x0000E0, "Member 'GA_HellfireProjectileCollision_C_ExecuteUbergraph_GA_HellfireProjectileCollision::CallFunc_GetAvatarActorFromActorInfo_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_HellfireProjectileCollision_C_ExecuteUbergraph_GA_HellfireProjectileCollision, CallFunc_GetAvatarActorFromActorInfo_ReturnValue_2) == 0x0000E8, "Member 'GA_HellfireProjectileCollision_C_ExecuteUbergraph_GA_HellfireProjectileCollision::CallFunc_GetAvatarActorFromActorInfo_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GA_HellfireProjectileCollision_C_ExecuteUbergraph_GA_HellfireProjectileCollision, K2Node_DynamicCast_AsBP_Hellfire_Projectile_1) == 0x0000F0, "Member 'GA_HellfireProjectileCollision_C_ExecuteUbergraph_GA_HellfireProjectileCollision::K2Node_DynamicCast_AsBP_Hellfire_Projectile_1' has a wrong offset!");
static_assert(offsetof(GA_HellfireProjectileCollision_C_ExecuteUbergraph_GA_HellfireProjectileCollision, K2Node_DynamicCast_bSuccess_1) == 0x0000F8, "Member 'GA_HellfireProjectileCollision_C_ExecuteUbergraph_GA_HellfireProjectileCollision::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(GA_HellfireProjectileCollision_C_ExecuteUbergraph_GA_HellfireProjectileCollision, K2Node_DynamicCast_AsBP_Hellfire_Projectile_2) == 0x000100, "Member 'GA_HellfireProjectileCollision_C_ExecuteUbergraph_GA_HellfireProjectileCollision::K2Node_DynamicCast_AsBP_Hellfire_Projectile_2' has a wrong offset!");
static_assert(offsetof(GA_HellfireProjectileCollision_C_ExecuteUbergraph_GA_HellfireProjectileCollision, K2Node_DynamicCast_bSuccess_2) == 0x000108, "Member 'GA_HellfireProjectileCollision_C_ExecuteUbergraph_GA_HellfireProjectileCollision::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(GA_HellfireProjectileCollision_C_ExecuteUbergraph_GA_HellfireProjectileCollision, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000110, "Member 'GA_HellfireProjectileCollision_C_ExecuteUbergraph_GA_HellfireProjectileCollision::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_HellfireProjectileCollision_C_ExecuteUbergraph_GA_HellfireProjectileCollision, CallFunc_GetDesignDataSpell_ReturnValue) == 0x000128, "Member 'GA_HellfireProjectileCollision_C_ExecuteUbergraph_GA_HellfireProjectileCollision::CallFunc_GetDesignDataSpell_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_HellfireProjectileCollision_C_ExecuteUbergraph_GA_HellfireProjectileCollision, K2Node_CustomEvent_OverlappedComponent_1) == 0x000200, "Member 'GA_HellfireProjectileCollision_C_ExecuteUbergraph_GA_HellfireProjectileCollision::K2Node_CustomEvent_OverlappedComponent_1' has a wrong offset!");
static_assert(offsetof(GA_HellfireProjectileCollision_C_ExecuteUbergraph_GA_HellfireProjectileCollision, K2Node_CustomEvent_OtherActor_1) == 0x000208, "Member 'GA_HellfireProjectileCollision_C_ExecuteUbergraph_GA_HellfireProjectileCollision::K2Node_CustomEvent_OtherActor_1' has a wrong offset!");
static_assert(offsetof(GA_HellfireProjectileCollision_C_ExecuteUbergraph_GA_HellfireProjectileCollision, K2Node_CustomEvent_OtherComp_1) == 0x000210, "Member 'GA_HellfireProjectileCollision_C_ExecuteUbergraph_GA_HellfireProjectileCollision::K2Node_CustomEvent_OtherComp_1' has a wrong offset!");
static_assert(offsetof(GA_HellfireProjectileCollision_C_ExecuteUbergraph_GA_HellfireProjectileCollision, K2Node_CustomEvent_OtherBodyIndex_1) == 0x000218, "Member 'GA_HellfireProjectileCollision_C_ExecuteUbergraph_GA_HellfireProjectileCollision::K2Node_CustomEvent_OtherBodyIndex_1' has a wrong offset!");
static_assert(offsetof(GA_HellfireProjectileCollision_C_ExecuteUbergraph_GA_HellfireProjectileCollision, K2Node_CustomEvent_bFromSweep) == 0x00021C, "Member 'GA_HellfireProjectileCollision_C_ExecuteUbergraph_GA_HellfireProjectileCollision::K2Node_CustomEvent_bFromSweep' has a wrong offset!");
static_assert(offsetof(GA_HellfireProjectileCollision_C_ExecuteUbergraph_GA_HellfireProjectileCollision, K2Node_CustomEvent_SweepResult) == 0x000220, "Member 'GA_HellfireProjectileCollision_C_ExecuteUbergraph_GA_HellfireProjectileCollision::K2Node_CustomEvent_SweepResult' has a wrong offset!");
static_assert(offsetof(GA_HellfireProjectileCollision_C_ExecuteUbergraph_GA_HellfireProjectileCollision, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000308, "Member 'GA_HellfireProjectileCollision_C_ExecuteUbergraph_GA_HellfireProjectileCollision::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_HellfireProjectileCollision_C_ExecuteUbergraph_GA_HellfireProjectileCollision, K2Node_CustomEvent_OverlappedComponent) == 0x000310, "Member 'GA_HellfireProjectileCollision_C_ExecuteUbergraph_GA_HellfireProjectileCollision::K2Node_CustomEvent_OverlappedComponent' has a wrong offset!");
static_assert(offsetof(GA_HellfireProjectileCollision_C_ExecuteUbergraph_GA_HellfireProjectileCollision, K2Node_CustomEvent_OtherActor) == 0x000318, "Member 'GA_HellfireProjectileCollision_C_ExecuteUbergraph_GA_HellfireProjectileCollision::K2Node_CustomEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(GA_HellfireProjectileCollision_C_ExecuteUbergraph_GA_HellfireProjectileCollision, K2Node_CustomEvent_OtherComp) == 0x000320, "Member 'GA_HellfireProjectileCollision_C_ExecuteUbergraph_GA_HellfireProjectileCollision::K2Node_CustomEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(GA_HellfireProjectileCollision_C_ExecuteUbergraph_GA_HellfireProjectileCollision, K2Node_CustomEvent_OtherBodyIndex) == 0x000328, "Member 'GA_HellfireProjectileCollision_C_ExecuteUbergraph_GA_HellfireProjectileCollision::K2Node_CustomEvent_OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(GA_HellfireProjectileCollision_C_ExecuteUbergraph_GA_HellfireProjectileCollision, CallFunc_WaitDistanceChange_ReturnValue) == 0x000330, "Member 'GA_HellfireProjectileCollision_C_ExecuteUbergraph_GA_HellfireProjectileCollision::CallFunc_WaitDistanceChange_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_HellfireProjectileCollision_C_ExecuteUbergraph_GA_HellfireProjectileCollision, CallFunc_IsValid_ReturnValue) == 0x000338, "Member 'GA_HellfireProjectileCollision_C_ExecuteUbergraph_GA_HellfireProjectileCollision::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_HellfireProjectileCollision_C_ExecuteUbergraph_GA_HellfireProjectileCollision, K2Node_CreateDelegate_OutputDelegate_1) == 0x00033C, "Member 'GA_HellfireProjectileCollision_C_ExecuteUbergraph_GA_HellfireProjectileCollision::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(GA_HellfireProjectileCollision_C_ExecuteUbergraph_GA_HellfireProjectileCollision, K2Node_CreateDelegate_OutputDelegate_2) == 0x00034C, "Member 'GA_HellfireProjectileCollision_C_ExecuteUbergraph_GA_HellfireProjectileCollision::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(GA_HellfireProjectileCollision_C_ExecuteUbergraph_GA_HellfireProjectileCollision, K2Node_Event_bWasCancelled) == 0x00035C, "Member 'GA_HellfireProjectileCollision_C_ExecuteUbergraph_GA_HellfireProjectileCollision::K2Node_Event_bWasCancelled' has a wrong offset!");
static_assert(offsetof(GA_HellfireProjectileCollision_C_ExecuteUbergraph_GA_HellfireProjectileCollision, CallFunc_WaitDistanceChange_MaximumDistance_ImplicitCast) == 0x000360, "Member 'GA_HellfireProjectileCollision_C_ExecuteUbergraph_GA_HellfireProjectileCollision::CallFunc_WaitDistanceChange_MaximumDistance_ImplicitCast' has a wrong offset!");

// Function GA_HellfireProjectileCollision.GA_HellfireProjectileCollision_C.K2_OnEndAbility
// 0x0001 (0x0001 - 0x0000)
struct GA_HellfireProjectileCollision_C_K2_OnEndAbility final
{
public:
	bool                                          bWasCancelled;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_HellfireProjectileCollision_C_K2_OnEndAbility) == 0x000001, "Wrong alignment on GA_HellfireProjectileCollision_C_K2_OnEndAbility");
static_assert(sizeof(GA_HellfireProjectileCollision_C_K2_OnEndAbility) == 0x000001, "Wrong size on GA_HellfireProjectileCollision_C_K2_OnEndAbility");
static_assert(offsetof(GA_HellfireProjectileCollision_C_K2_OnEndAbility, bWasCancelled) == 0x000000, "Member 'GA_HellfireProjectileCollision_C_K2_OnEndAbility::bWasCancelled' has a wrong offset!");

// Function GA_HellfireProjectileCollision.GA_HellfireProjectileCollision_C.OnOverlapBegin
// 0x0108 (0x0108 - 0x0000)
struct GA_HellfireProjectileCollision_C_OnOverlapBegin final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D76[0x3];                                     // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x00E8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(GA_HellfireProjectileCollision_C_OnOverlapBegin) == 0x000008, "Wrong alignment on GA_HellfireProjectileCollision_C_OnOverlapBegin");
static_assert(sizeof(GA_HellfireProjectileCollision_C_OnOverlapBegin) == 0x000108, "Wrong size on GA_HellfireProjectileCollision_C_OnOverlapBegin");
static_assert(offsetof(GA_HellfireProjectileCollision_C_OnOverlapBegin, OverlappedComponent) == 0x000000, "Member 'GA_HellfireProjectileCollision_C_OnOverlapBegin::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(GA_HellfireProjectileCollision_C_OnOverlapBegin, OtherActor) == 0x000008, "Member 'GA_HellfireProjectileCollision_C_OnOverlapBegin::OtherActor' has a wrong offset!");
static_assert(offsetof(GA_HellfireProjectileCollision_C_OnOverlapBegin, OtherComp) == 0x000010, "Member 'GA_HellfireProjectileCollision_C_OnOverlapBegin::OtherComp' has a wrong offset!");
static_assert(offsetof(GA_HellfireProjectileCollision_C_OnOverlapBegin, OtherBodyIndex) == 0x000018, "Member 'GA_HellfireProjectileCollision_C_OnOverlapBegin::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(GA_HellfireProjectileCollision_C_OnOverlapBegin, bFromSweep) == 0x00001C, "Member 'GA_HellfireProjectileCollision_C_OnOverlapBegin::bFromSweep' has a wrong offset!");
static_assert(offsetof(GA_HellfireProjectileCollision_C_OnOverlapBegin, SweepResult) == 0x000020, "Member 'GA_HellfireProjectileCollision_C_OnOverlapBegin::SweepResult' has a wrong offset!");

// Function GA_HellfireProjectileCollision.GA_HellfireProjectileCollision_C.OnOverlapEnd
// 0x0020 (0x0020 - 0x0000)
struct GA_HellfireProjectileCollision_C_OnOverlapEnd final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_HellfireProjectileCollision_C_OnOverlapEnd) == 0x000008, "Wrong alignment on GA_HellfireProjectileCollision_C_OnOverlapEnd");
static_assert(sizeof(GA_HellfireProjectileCollision_C_OnOverlapEnd) == 0x000020, "Wrong size on GA_HellfireProjectileCollision_C_OnOverlapEnd");
static_assert(offsetof(GA_HellfireProjectileCollision_C_OnOverlapEnd, OverlappedComponent) == 0x000000, "Member 'GA_HellfireProjectileCollision_C_OnOverlapEnd::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(GA_HellfireProjectileCollision_C_OnOverlapEnd, OtherActor) == 0x000008, "Member 'GA_HellfireProjectileCollision_C_OnOverlapEnd::OtherActor' has a wrong offset!");
static_assert(offsetof(GA_HellfireProjectileCollision_C_OnOverlapEnd, OtherComp) == 0x000010, "Member 'GA_HellfireProjectileCollision_C_OnOverlapEnd::OtherComp' has a wrong offset!");
static_assert(offsetof(GA_HellfireProjectileCollision_C_OnOverlapEnd, OtherBodyIndex) == 0x000018, "Member 'GA_HellfireProjectileCollision_C_OnOverlapEnd::OtherBodyIndex' has a wrong offset!");

// Function GA_HellfireProjectileCollision.GA_HellfireProjectileCollision_C.OverlapBeginTargetActor
// 0x0200 (0x0200 - 0x0000)
struct GA_HellfireProjectileCollision_C_OverlapBeginTargetActor final
{
public:
	class AActor*                                 InTargetActor;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEffectContextHandle           NewEffectContextHandle;                            // 0x0008(0x0018)(Edit, BlueprintVisible)
	struct FHitResult                             CallFunc_MakeHitResult_ReturnValue;                // 0x0020(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D77[0x7];                                     // 0x0109(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAbilitySystemComponent*                CallFunc_GetAbilitySystemComponentFromActorInfo_ReturnValue; // 0x0110(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D78[0x4];                                     // 0x011C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayEffectContextHandle           CallFunc_MakeEffectContext_ReturnValue;            // 0x0120(0x0018)()
	class AActor*                                 CallFunc_GetAvatarActorFromActorInfo_ReturnValue;  // 0x0138(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEventData                     K2Node_MakeStruct_GameplayEventData;               // 0x0140(0x00B0)()
	TArray<struct FActiveGameplayEffectHandle>    CallFunc_ApplyPremadeSpecArray_ReturnValue;        // 0x01F0(0x0010)(ReferenceParm)
};
static_assert(alignof(GA_HellfireProjectileCollision_C_OverlapBeginTargetActor) == 0x000008, "Wrong alignment on GA_HellfireProjectileCollision_C_OverlapBeginTargetActor");
static_assert(sizeof(GA_HellfireProjectileCollision_C_OverlapBeginTargetActor) == 0x000200, "Wrong size on GA_HellfireProjectileCollision_C_OverlapBeginTargetActor");
static_assert(offsetof(GA_HellfireProjectileCollision_C_OverlapBeginTargetActor, InTargetActor) == 0x000000, "Member 'GA_HellfireProjectileCollision_C_OverlapBeginTargetActor::InTargetActor' has a wrong offset!");
static_assert(offsetof(GA_HellfireProjectileCollision_C_OverlapBeginTargetActor, NewEffectContextHandle) == 0x000008, "Member 'GA_HellfireProjectileCollision_C_OverlapBeginTargetActor::NewEffectContextHandle' has a wrong offset!");
static_assert(offsetof(GA_HellfireProjectileCollision_C_OverlapBeginTargetActor, CallFunc_MakeHitResult_ReturnValue) == 0x000020, "Member 'GA_HellfireProjectileCollision_C_OverlapBeginTargetActor::CallFunc_MakeHitResult_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_HellfireProjectileCollision_C_OverlapBeginTargetActor, CallFunc_Array_Contains_ReturnValue) == 0x000108, "Member 'GA_HellfireProjectileCollision_C_OverlapBeginTargetActor::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_HellfireProjectileCollision_C_OverlapBeginTargetActor, CallFunc_GetAbilitySystemComponentFromActorInfo_ReturnValue) == 0x000110, "Member 'GA_HellfireProjectileCollision_C_OverlapBeginTargetActor::CallFunc_GetAbilitySystemComponentFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_HellfireProjectileCollision_C_OverlapBeginTargetActor, CallFunc_Array_AddUnique_ReturnValue) == 0x000118, "Member 'GA_HellfireProjectileCollision_C_OverlapBeginTargetActor::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_HellfireProjectileCollision_C_OverlapBeginTargetActor, CallFunc_MakeEffectContext_ReturnValue) == 0x000120, "Member 'GA_HellfireProjectileCollision_C_OverlapBeginTargetActor::CallFunc_MakeEffectContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_HellfireProjectileCollision_C_OverlapBeginTargetActor, CallFunc_GetAvatarActorFromActorInfo_ReturnValue) == 0x000138, "Member 'GA_HellfireProjectileCollision_C_OverlapBeginTargetActor::CallFunc_GetAvatarActorFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_HellfireProjectileCollision_C_OverlapBeginTargetActor, K2Node_MakeStruct_GameplayEventData) == 0x000140, "Member 'GA_HellfireProjectileCollision_C_OverlapBeginTargetActor::K2Node_MakeStruct_GameplayEventData' has a wrong offset!");
static_assert(offsetof(GA_HellfireProjectileCollision_C_OverlapBeginTargetActor, CallFunc_ApplyPremadeSpecArray_ReturnValue) == 0x0001F0, "Member 'GA_HellfireProjectileCollision_C_OverlapBeginTargetActor::CallFunc_ApplyPremadeSpecArray_ReturnValue' has a wrong offset!");

// Function GA_HellfireProjectileCollision.GA_HellfireProjectileCollision_C.OverlapEndTargetActor
// 0x0090 (0x0090 - 0x0000)
struct GA_HellfireProjectileCollision_C_OverlapEndTargetActor final
{
public:
	class AActor*                                 InTargetActor;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEffectContextHandle           NewEffectContextHandle;                            // 0x0008(0x0018)(Edit, BlueprintVisible)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D79[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ADCCharacterBase*                       K2Node_DynamicCast_AsDCCharacter_Base;             // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D7A[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAbilitySystemComponent*                CallFunc_GetAbilitySystemComponent_ReturnValue;    // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D7B[0x3];                                     // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D7C[0x4];                                     // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasMatchingGameplayTag_self_CastInput;    // 0x0050(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue;       // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D7D[0x7];                                     // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FActiveGameplayEffectHandle>    CallFunc_GetActiveEffects_ReturnValue;             // 0x0068(0x0010)(ReferenceParm)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D7E[0x3];                                     // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FActiveGameplayEffectHandle            CallFunc_Array_Get_Item;                           // 0x007C(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RemoveActiveGameplayEffect_ReturnValue;   // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D7F[0x3];                                     // 0x0085(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x008D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_HellfireProjectileCollision_C_OverlapEndTargetActor) == 0x000008, "Wrong alignment on GA_HellfireProjectileCollision_C_OverlapEndTargetActor");
static_assert(sizeof(GA_HellfireProjectileCollision_C_OverlapEndTargetActor) == 0x000090, "Wrong size on GA_HellfireProjectileCollision_C_OverlapEndTargetActor");
static_assert(offsetof(GA_HellfireProjectileCollision_C_OverlapEndTargetActor, InTargetActor) == 0x000000, "Member 'GA_HellfireProjectileCollision_C_OverlapEndTargetActor::InTargetActor' has a wrong offset!");
static_assert(offsetof(GA_HellfireProjectileCollision_C_OverlapEndTargetActor, NewEffectContextHandle) == 0x000008, "Member 'GA_HellfireProjectileCollision_C_OverlapEndTargetActor::NewEffectContextHandle' has a wrong offset!");
static_assert(offsetof(GA_HellfireProjectileCollision_C_OverlapEndTargetActor, Temp_int_Array_Index_Variable) == 0x000020, "Member 'GA_HellfireProjectileCollision_C_OverlapEndTargetActor::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(GA_HellfireProjectileCollision_C_OverlapEndTargetActor, K2Node_DynamicCast_AsDCCharacter_Base) == 0x000028, "Member 'GA_HellfireProjectileCollision_C_OverlapEndTargetActor::K2Node_DynamicCast_AsDCCharacter_Base' has a wrong offset!");
static_assert(offsetof(GA_HellfireProjectileCollision_C_OverlapEndTargetActor, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'GA_HellfireProjectileCollision_C_OverlapEndTargetActor::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GA_HellfireProjectileCollision_C_OverlapEndTargetActor, CallFunc_GetAbilitySystemComponent_ReturnValue) == 0x000038, "Member 'GA_HellfireProjectileCollision_C_OverlapEndTargetActor::CallFunc_GetAbilitySystemComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_HellfireProjectileCollision_C_OverlapEndTargetActor, Temp_int_Loop_Counter_Variable) == 0x000040, "Member 'GA_HellfireProjectileCollision_C_OverlapEndTargetActor::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(GA_HellfireProjectileCollision_C_OverlapEndTargetActor, CallFunc_IsValid_ReturnValue) == 0x000044, "Member 'GA_HellfireProjectileCollision_C_OverlapEndTargetActor::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_HellfireProjectileCollision_C_OverlapEndTargetActor, CallFunc_Add_IntInt_ReturnValue) == 0x000048, "Member 'GA_HellfireProjectileCollision_C_OverlapEndTargetActor::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_HellfireProjectileCollision_C_OverlapEndTargetActor, CallFunc_HasMatchingGameplayTag_self_CastInput) == 0x000050, "Member 'GA_HellfireProjectileCollision_C_OverlapEndTargetActor::CallFunc_HasMatchingGameplayTag_self_CastInput' has a wrong offset!");
static_assert(offsetof(GA_HellfireProjectileCollision_C_OverlapEndTargetActor, CallFunc_HasMatchingGameplayTag_ReturnValue) == 0x000060, "Member 'GA_HellfireProjectileCollision_C_OverlapEndTargetActor::CallFunc_HasMatchingGameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_HellfireProjectileCollision_C_OverlapEndTargetActor, CallFunc_GetActiveEffects_ReturnValue) == 0x000068, "Member 'GA_HellfireProjectileCollision_C_OverlapEndTargetActor::CallFunc_GetActiveEffects_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_HellfireProjectileCollision_C_OverlapEndTargetActor, CallFunc_Array_RemoveItem_ReturnValue) == 0x000078, "Member 'GA_HellfireProjectileCollision_C_OverlapEndTargetActor::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_HellfireProjectileCollision_C_OverlapEndTargetActor, CallFunc_Array_Get_Item) == 0x00007C, "Member 'GA_HellfireProjectileCollision_C_OverlapEndTargetActor::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(GA_HellfireProjectileCollision_C_OverlapEndTargetActor, CallFunc_RemoveActiveGameplayEffect_ReturnValue) == 0x000084, "Member 'GA_HellfireProjectileCollision_C_OverlapEndTargetActor::CallFunc_RemoveActiveGameplayEffect_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_HellfireProjectileCollision_C_OverlapEndTargetActor, CallFunc_Array_Length_ReturnValue) == 0x000088, "Member 'GA_HellfireProjectileCollision_C_OverlapEndTargetActor::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_HellfireProjectileCollision_C_OverlapEndTargetActor, CallFunc_Array_Contains_ReturnValue) == 0x00008C, "Member 'GA_HellfireProjectileCollision_C_OverlapEndTargetActor::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_HellfireProjectileCollision_C_OverlapEndTargetActor, CallFunc_Less_IntInt_ReturnValue) == 0x00008D, "Member 'GA_HellfireProjectileCollision_C_OverlapEndTargetActor::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

}

