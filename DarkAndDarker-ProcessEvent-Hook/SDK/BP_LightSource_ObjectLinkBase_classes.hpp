#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_LightSource_ObjectLinkBase

#include "Basic.hpp"

#include "BP_LightSourceBase_classes.hpp"
#include "Engine_structs.hpp"
#include "AkAudio_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_LightSource_ObjectLinkBase.BP_LightSource_ObjectLinkBase_C
// 0x0050 (0x0540 - 0x04F0)
class ABP_LightSource_ObjectLinkBase_C : public ABP_LightSourceBase_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_LightSource_ObjectLinkBase_C;    // 0x04F0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UNiagaraComponent*                      FXS_TorchFire_001A;                                // 0x04F8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USphereComponent*                       Sphere;                                            // 0x0500(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   StaticMesh;                                        // 0x0508(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UDCGameObjectLinkComponent*             DCGameObjectLink;                                  // 0x0510(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         Timeline_1______0_CCDCD8934D8C22B097DD80BBCC300B7E; // 0x0518(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Timeline_1__Direction_CCDCD8934D8C22B097DD80BBCC300B7E; // 0x051C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A90[0x3];                                     // 0x051D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Timeline_1;                                        // 0x0520(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	float                                         Timeline_0______0_8DBBBC6145D8199EC5ADE4A02887DE6D; // 0x0528(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Timeline_0__Direction_8DBBBC6145D8199EC5ADE4A02887DE6D; // 0x052C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A91[0x3];                                     // 0x052D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Timeline_0;                                        // 0x0530(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsOverlapped;                                     // 0x0538(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void BndEvt__BP_TorchOn_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void BndEvt__BP_TorchOn_Sphere_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void ExecuteUbergraph_BP_LightSource_ObjectLinkBase(int32 EntryPoint);
	void GameplayTagUpdated(const struct FGameplayTag& InGameplayTag, int32 InCount);
	void OnBurst_AKEvent();
	void OnExtinguish_AKEvent();
	void SetLightIntensity(double Value);
	void SetParticleActive(bool New_Active, bool Reset);
	void Timeline_0__FinishedFunc();
	void Timeline_0__UpdateFunc();
	void Timeline_1__FinishedFunc();
	void Timeline_1__UpdateFunc();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_LightSource_ObjectLinkBase_C">();
	}
	static class ABP_LightSource_ObjectLinkBase_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_LightSource_ObjectLinkBase_C>();
	}
};
static_assert(alignof(ABP_LightSource_ObjectLinkBase_C) == 0x000008, "Wrong alignment on ABP_LightSource_ObjectLinkBase_C");
static_assert(sizeof(ABP_LightSource_ObjectLinkBase_C) == 0x000540, "Wrong size on ABP_LightSource_ObjectLinkBase_C");
static_assert(offsetof(ABP_LightSource_ObjectLinkBase_C, UberGraphFrame_BP_LightSource_ObjectLinkBase_C) == 0x0004F0, "Member 'ABP_LightSource_ObjectLinkBase_C::UberGraphFrame_BP_LightSource_ObjectLinkBase_C' has a wrong offset!");
static_assert(offsetof(ABP_LightSource_ObjectLinkBase_C, FXS_TorchFire_001A) == 0x0004F8, "Member 'ABP_LightSource_ObjectLinkBase_C::FXS_TorchFire_001A' has a wrong offset!");
static_assert(offsetof(ABP_LightSource_ObjectLinkBase_C, Sphere) == 0x000500, "Member 'ABP_LightSource_ObjectLinkBase_C::Sphere' has a wrong offset!");
static_assert(offsetof(ABP_LightSource_ObjectLinkBase_C, StaticMesh) == 0x000508, "Member 'ABP_LightSource_ObjectLinkBase_C::StaticMesh' has a wrong offset!");
static_assert(offsetof(ABP_LightSource_ObjectLinkBase_C, DCGameObjectLink) == 0x000510, "Member 'ABP_LightSource_ObjectLinkBase_C::DCGameObjectLink' has a wrong offset!");
static_assert(offsetof(ABP_LightSource_ObjectLinkBase_C, Timeline_1______0_CCDCD8934D8C22B097DD80BBCC300B7E) == 0x000518, "Member 'ABP_LightSource_ObjectLinkBase_C::Timeline_1______0_CCDCD8934D8C22B097DD80BBCC300B7E' has a wrong offset!");
static_assert(offsetof(ABP_LightSource_ObjectLinkBase_C, Timeline_1__Direction_CCDCD8934D8C22B097DD80BBCC300B7E) == 0x00051C, "Member 'ABP_LightSource_ObjectLinkBase_C::Timeline_1__Direction_CCDCD8934D8C22B097DD80BBCC300B7E' has a wrong offset!");
static_assert(offsetof(ABP_LightSource_ObjectLinkBase_C, Timeline_1) == 0x000520, "Member 'ABP_LightSource_ObjectLinkBase_C::Timeline_1' has a wrong offset!");
static_assert(offsetof(ABP_LightSource_ObjectLinkBase_C, Timeline_0______0_8DBBBC6145D8199EC5ADE4A02887DE6D) == 0x000528, "Member 'ABP_LightSource_ObjectLinkBase_C::Timeline_0______0_8DBBBC6145D8199EC5ADE4A02887DE6D' has a wrong offset!");
static_assert(offsetof(ABP_LightSource_ObjectLinkBase_C, Timeline_0__Direction_8DBBBC6145D8199EC5ADE4A02887DE6D) == 0x00052C, "Member 'ABP_LightSource_ObjectLinkBase_C::Timeline_0__Direction_8DBBBC6145D8199EC5ADE4A02887DE6D' has a wrong offset!");
static_assert(offsetof(ABP_LightSource_ObjectLinkBase_C, Timeline_0) == 0x000530, "Member 'ABP_LightSource_ObjectLinkBase_C::Timeline_0' has a wrong offset!");
static_assert(offsetof(ABP_LightSource_ObjectLinkBase_C, bIsOverlapped) == 0x000538, "Member 'ABP_LightSource_ObjectLinkBase_C::bIsOverlapped' has a wrong offset!");

}

