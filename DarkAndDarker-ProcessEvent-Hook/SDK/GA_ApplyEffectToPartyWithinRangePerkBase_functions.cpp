#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_ApplyEffectToPartyWithinRangePerkBase

#include "Basic.hpp"

#include "GA_ApplyEffectToPartyWithinRangePerkBase_classes.hpp"
#include "GA_ApplyEffectToPartyWithinRangePerkBase_parameters.hpp"


namespace SDK
{

// Function GA_ApplyEffectToPartyWithinRangePerkBase.GA_ApplyEffectToPartyWithinRangePerkBase_C.ApplyEffect
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ADCPlayerCharacterBase*           Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
// bool                                    bIsApplied                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UGA_ApplyEffectToPartyWithinRangePerkBase_C::ApplyEffect(class ADCPlayerCharacterBase* Target, bool* bIsApplied)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_ApplyEffectToPartyWithinRangePerkBase_C", "ApplyEffect");

	Params::GA_ApplyEffectToPartyWithinRangePerkBase_C_ApplyEffect Parms{};

	Parms.Target = Target;

	UObject::ProcessEvent(Func, &Parms);

	if (bIsApplied != nullptr)
		*bIsApplied = Parms.bIsApplied;
}


// Function GA_ApplyEffectToPartyWithinRangePerkBase.GA_ApplyEffectToPartyWithinRangePerkBase_C.CanApplyEffect
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ADCCharacterBase*                 OverlapCharacter                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    CanApply                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UGA_ApplyEffectToPartyWithinRangePerkBase_C::CanApplyEffect(class ADCCharacterBase* OverlapCharacter, bool* CanApply)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_ApplyEffectToPartyWithinRangePerkBase_C", "CanApplyEffect");

	Params::GA_ApplyEffectToPartyWithinRangePerkBase_C_CanApplyEffect Parms{};

	Parms.OverlapCharacter = OverlapCharacter;

	UObject::ProcessEvent(Func, &Parms);

	if (CanApply != nullptr)
		*CanApply = Parms.CanApply;
}


// Function GA_ApplyEffectToPartyWithinRangePerkBase.GA_ApplyEffectToPartyWithinRangePerkBase_C.CreateAndAttachCollisionToOwner
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USphereComponent*                 Output_Get                                             (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UGA_ApplyEffectToPartyWithinRangePerkBase_C::CreateAndAttachCollisionToOwner(class USphereComponent** Output_Get)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_ApplyEffectToPartyWithinRangePerkBase_C", "CreateAndAttachCollisionToOwner");

	Params::GA_ApplyEffectToPartyWithinRangePerkBase_C_CreateAndAttachCollisionToOwner Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Output_Get != nullptr)
		*Output_Get = Parms.Output_Get;
}


// Function GA_ApplyEffectToPartyWithinRangePerkBase.GA_ApplyEffectToPartyWithinRangePerkBase_C.ExecuteUbergraph_GA_ApplyEffectToPartyWithinRangePerkBase
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UGA_ApplyEffectToPartyWithinRangePerkBase_C::ExecuteUbergraph_GA_ApplyEffectToPartyWithinRangePerkBase(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_ApplyEffectToPartyWithinRangePerkBase_C", "ExecuteUbergraph_GA_ApplyEffectToPartyWithinRangePerkBase");

	Params::GA_ApplyEffectToPartyWithinRangePerkBase_C_ExecuteUbergraph_GA_ApplyEffectToPartyWithinRangePerkBase Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GA_ApplyEffectToPartyWithinRangePerkBase.GA_ApplyEffectToPartyWithinRangePerkBase_C.GrantAbility
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UGA_ApplyEffectToPartyWithinRangePerkBase_C::GrantAbility(class AActor* Target)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_ApplyEffectToPartyWithinRangePerkBase_C", "GrantAbility");

	Params::GA_ApplyEffectToPartyWithinRangePerkBase_C_GrantAbility Parms{};

	Parms.Target = Target;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GA_ApplyEffectToPartyWithinRangePerkBase.GA_ApplyEffectToPartyWithinRangePerkBase_C.K2_ActivateAbilityFromEvent
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// struct FGameplayEventData               EventData                                              (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UGA_ApplyEffectToPartyWithinRangePerkBase_C::K2_ActivateAbilityFromEvent(const struct FGameplayEventData& EventData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_ApplyEffectToPartyWithinRangePerkBase_C", "K2_ActivateAbilityFromEvent");

	Params::GA_ApplyEffectToPartyWithinRangePerkBase_C_K2_ActivateAbilityFromEvent Parms{};

	Parms.EventData = std::move(EventData);

	UObject::ProcessEvent(Func, &Parms);
}


// Function GA_ApplyEffectToPartyWithinRangePerkBase.GA_ApplyEffectToPartyWithinRangePerkBase_C.K2_OnEndAbility
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bWasCancelled                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UGA_ApplyEffectToPartyWithinRangePerkBase_C::K2_OnEndAbility(bool bWasCancelled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_ApplyEffectToPartyWithinRangePerkBase_C", "K2_OnEndAbility");

	Params::GA_ApplyEffectToPartyWithinRangePerkBase_C_K2_OnEndAbility Parms{};

	Parms.bWasCancelled = bWasCancelled;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GA_ApplyEffectToPartyWithinRangePerkBase.GA_ApplyEffectToPartyWithinRangePerkBase_C.OnComponentBeginOverlap
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// int32                                   OtherBodyIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bFromSweep                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FHitResult                       SweepResult                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void UGA_ApplyEffectToPartyWithinRangePerkBase_C::OnComponentBeginOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_ApplyEffectToPartyWithinRangePerkBase_C", "OnComponentBeginOverlap");

	Params::GA_ApplyEffectToPartyWithinRangePerkBase_C_OnComponentBeginOverlap Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;
	Parms.bFromSweep = bFromSweep;
	Parms.SweepResult = std::move(SweepResult);

	UObject::ProcessEvent(Func, &Parms);
}


// Function GA_ApplyEffectToPartyWithinRangePerkBase.GA_ApplyEffectToPartyWithinRangePerkBase_C.OnComponentEndOverlap
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// int32                                   OtherBodyIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UGA_ApplyEffectToPartyWithinRangePerkBase_C::OnComponentEndOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_ApplyEffectToPartyWithinRangePerkBase_C", "OnComponentEndOverlap");

	Params::GA_ApplyEffectToPartyWithinRangePerkBase_C_OnComponentEndOverlap Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GA_ApplyEffectToPartyWithinRangePerkBase.GA_ApplyEffectToPartyWithinRangePerkBase_C.RemoveEffect
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ADCPlayerCharacterBase*           Character                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UGA_ApplyEffectToPartyWithinRangePerkBase_C::RemoveEffect(class ADCPlayerCharacterBase* Character)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_ApplyEffectToPartyWithinRangePerkBase_C", "RemoveEffect");

	Params::GA_ApplyEffectToPartyWithinRangePerkBase_C_RemoveEffect Parms{};

	Parms.Character = Character;

	UObject::ProcessEvent(Func, &Parms);
}

}

