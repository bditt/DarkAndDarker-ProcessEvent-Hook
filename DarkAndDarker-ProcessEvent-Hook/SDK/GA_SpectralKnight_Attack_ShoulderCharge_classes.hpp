#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_SpectralKnight_Attack_ShoulderCharge

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "GA_PlayMontageAndWaitForEventBase_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass GA_SpectralKnight_Attack_ShoulderCharge.GA_SpectralKnight_Attack_ShoulderCharge_C
// 0x0038 (0x06B0 - 0x0678)
class UGA_SpectralKnight_Attack_ShoulderCharge_C : public UGA_PlayMontageAndWaitForEventBase_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_GA_SpectralKnight_Attack_ShoulderCharge_C; // 0x0678(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class ABP_SpectralKnight_Common_C*            As_BP_SpectralKnight;                              // 0x0680(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UDCAT_WaitForGameplayEvents*            Wait_Events_Async_Task;                            // 0x0688(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           Start_Charge_Timer_Handle;                         // 0x0690(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         Hit_Actors;                                        // 0x0698(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	bool                                          Has_Matching;                                      // 0x06A8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          NewVar;                                            // 0x06A9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void AbilityActivated(const struct FGameplayEventData& TriggerEventData);
	void EventReceived_AF5E43114CC34E519289199CD89CD03C(const struct FGameplayTag& EventTag, const struct FGameplayEventData& EventData);
	void ExecuteUbergraph_GA_SpectralKnight_Attack_ShoulderCharge(int32 EntryPoint);
	void K2_OnEndAbility(bool bWasCancelled);
	void Start_Charge_();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GA_SpectralKnight_Attack_ShoulderCharge_C">();
	}
	static class UGA_SpectralKnight_Attack_ShoulderCharge_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGA_SpectralKnight_Attack_ShoulderCharge_C>();
	}
};
static_assert(alignof(UGA_SpectralKnight_Attack_ShoulderCharge_C) == 0x000008, "Wrong alignment on UGA_SpectralKnight_Attack_ShoulderCharge_C");
static_assert(sizeof(UGA_SpectralKnight_Attack_ShoulderCharge_C) == 0x0006B0, "Wrong size on UGA_SpectralKnight_Attack_ShoulderCharge_C");
static_assert(offsetof(UGA_SpectralKnight_Attack_ShoulderCharge_C, UberGraphFrame_GA_SpectralKnight_Attack_ShoulderCharge_C) == 0x000678, "Member 'UGA_SpectralKnight_Attack_ShoulderCharge_C::UberGraphFrame_GA_SpectralKnight_Attack_ShoulderCharge_C' has a wrong offset!");
static_assert(offsetof(UGA_SpectralKnight_Attack_ShoulderCharge_C, As_BP_SpectralKnight) == 0x000680, "Member 'UGA_SpectralKnight_Attack_ShoulderCharge_C::As_BP_SpectralKnight' has a wrong offset!");
static_assert(offsetof(UGA_SpectralKnight_Attack_ShoulderCharge_C, Wait_Events_Async_Task) == 0x000688, "Member 'UGA_SpectralKnight_Attack_ShoulderCharge_C::Wait_Events_Async_Task' has a wrong offset!");
static_assert(offsetof(UGA_SpectralKnight_Attack_ShoulderCharge_C, Start_Charge_Timer_Handle) == 0x000690, "Member 'UGA_SpectralKnight_Attack_ShoulderCharge_C::Start_Charge_Timer_Handle' has a wrong offset!");
static_assert(offsetof(UGA_SpectralKnight_Attack_ShoulderCharge_C, Hit_Actors) == 0x000698, "Member 'UGA_SpectralKnight_Attack_ShoulderCharge_C::Hit_Actors' has a wrong offset!");
static_assert(offsetof(UGA_SpectralKnight_Attack_ShoulderCharge_C, Has_Matching) == 0x0006A8, "Member 'UGA_SpectralKnight_Attack_ShoulderCharge_C::Has_Matching' has a wrong offset!");
static_assert(offsetof(UGA_SpectralKnight_Attack_ShoulderCharge_C, NewVar) == 0x0006A9, "Member 'UGA_SpectralKnight_Attack_ShoulderCharge_C::NewVar' has a wrong offset!");

}

