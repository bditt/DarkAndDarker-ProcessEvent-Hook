#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_MenuOptionsAudios

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "DungeonCrawler_classes.hpp"
#include "AkAudio_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WB_MenuOptionsAudios.WB_MenuOptionsAudios_C
// 0x0060 (0x0568 - 0x0508)
class UWB_MenuOptionsAudios_C final : public UGameMenuOptionsAudioWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0508(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UTextBlock*                             AudioOptionDetailDesc;                             // 0x0510(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             AudioOptionDetailTitle;                            // 0x0518(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_MenuOptionSlot_Slider_C*            TotalVolume;                                       // 0x0520(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWB_MenuOptionSlot_Slider_C*            EffectVolume;                                      // 0x0528(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWB_MenuOptionSlot_Slider_C*            MusicVolume;                                       // 0x0530(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWB_MenuOptionToggleSwitchSlot_C*       BackgroundVolume;                                  // 0x0538(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWB_MenuOptionToggleSwitchSlot_C*       VoipOnOff;                                         // 0x0540(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWB_MenuOptionToggleSwitchSlot_C*       VoipMode;                                          // 0x0548(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWB_MenuOptionSlot_Slider_C*            VoipInputVolume;                                   // 0x0550(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWB_MenuOptionSlot_Slider_C*            VoipOutputVolume;                                  // 0x0558(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWB_MenuOptionToggleSwitchSlot_C*       VoipSendMode;                                      // 0x0560(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)

public:
	void UpdateWindowFocusChanged(bool IsFocus, bool IsBackgroundOption, float Param_TotalVolume);
	void SetActivateSlotHoverDetailText(const class FText& Title, const class FText& Descript);
	void Set_Activate_Slot_Hover(class UWidgetSwitcher* ActivateSwitcherSelected);
	void OnVoipSendModeHovered();
	void OnVoipOutputVolumeHovered();
	void OnVoipOnOffHovered();
	void OnVoipModeHovered();
	void OnVoipInputVolumeHovered();
	void OnTotalVolumeHovered();
	void OnSliderHovered(class UWB_MenuOptionSlot_Slider_C* Slider);
	void OnMusicVolumeHovered();
	void OnGameUserSettingAudiosChanged(const struct FGameUserSettingAudios& InGameUserSettingAudios, const struct FGameUserSettingAudios& InOldGameUserSettingAudios, bool bInForce);
	void OnEffectVolumeHovered();
	void OnBackgroundVolumeHovered();
	void InitOptionWidgetBinding();
	void ExecuteUbergraph_WB_MenuOptionsAudios(int32 EntryPoint);
	void Construct();

	class UWidget* BP_GetDesiredFocusTarget() const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WB_MenuOptionsAudios_C">();
	}
	static class UWB_MenuOptionsAudios_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWB_MenuOptionsAudios_C>();
	}
};
static_assert(alignof(UWB_MenuOptionsAudios_C) == 0x000008, "Wrong alignment on UWB_MenuOptionsAudios_C");
static_assert(sizeof(UWB_MenuOptionsAudios_C) == 0x000568, "Wrong size on UWB_MenuOptionsAudios_C");
static_assert(offsetof(UWB_MenuOptionsAudios_C, UberGraphFrame) == 0x000508, "Member 'UWB_MenuOptionsAudios_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWB_MenuOptionsAudios_C, AudioOptionDetailDesc) == 0x000510, "Member 'UWB_MenuOptionsAudios_C::AudioOptionDetailDesc' has a wrong offset!");
static_assert(offsetof(UWB_MenuOptionsAudios_C, AudioOptionDetailTitle) == 0x000518, "Member 'UWB_MenuOptionsAudios_C::AudioOptionDetailTitle' has a wrong offset!");
static_assert(offsetof(UWB_MenuOptionsAudios_C, TotalVolume) == 0x000520, "Member 'UWB_MenuOptionsAudios_C::TotalVolume' has a wrong offset!");
static_assert(offsetof(UWB_MenuOptionsAudios_C, EffectVolume) == 0x000528, "Member 'UWB_MenuOptionsAudios_C::EffectVolume' has a wrong offset!");
static_assert(offsetof(UWB_MenuOptionsAudios_C, MusicVolume) == 0x000530, "Member 'UWB_MenuOptionsAudios_C::MusicVolume' has a wrong offset!");
static_assert(offsetof(UWB_MenuOptionsAudios_C, BackgroundVolume) == 0x000538, "Member 'UWB_MenuOptionsAudios_C::BackgroundVolume' has a wrong offset!");
static_assert(offsetof(UWB_MenuOptionsAudios_C, VoipOnOff) == 0x000540, "Member 'UWB_MenuOptionsAudios_C::VoipOnOff' has a wrong offset!");
static_assert(offsetof(UWB_MenuOptionsAudios_C, VoipMode) == 0x000548, "Member 'UWB_MenuOptionsAudios_C::VoipMode' has a wrong offset!");
static_assert(offsetof(UWB_MenuOptionsAudios_C, VoipInputVolume) == 0x000550, "Member 'UWB_MenuOptionsAudios_C::VoipInputVolume' has a wrong offset!");
static_assert(offsetof(UWB_MenuOptionsAudios_C, VoipOutputVolume) == 0x000558, "Member 'UWB_MenuOptionsAudios_C::VoipOutputVolume' has a wrong offset!");
static_assert(offsetof(UWB_MenuOptionsAudios_C, VoipSendMode) == 0x000560, "Member 'UWB_MenuOptionsAudios_C::VoipSendMode' has a wrong offset!");

}

