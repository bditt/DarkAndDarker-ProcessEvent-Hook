#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ProjectileToSpawnItemHolder

#include "Basic.hpp"

#include "BP_ProjectileToSpawnItemHolder_classes.hpp"
#include "BP_ProjectileToSpawnItemHolder_parameters.hpp"


namespace SDK
{

// Function BP_ProjectileToSpawnItemHolder.BP_ProjectileToSpawnItemHolder_C.ExecuteUbergraph_BP_ProjectileToSpawnItemHolder
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ProjectileToSpawnItemHolder_C::ExecuteUbergraph_BP_ProjectileToSpawnItemHolder(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ProjectileToSpawnItemHolder_C", "ExecuteUbergraph_BP_ProjectileToSpawnItemHolder");

	Params::BP_ProjectileToSpawnItemHolder_C_ExecuteUbergraph_BP_ProjectileToSpawnItemHolder Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ProjectileToSpawnItemHolder.BP_ProjectileToSpawnItemHolder_C.ProjectileHit
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// struct FHitResult                       Hit                                                    (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
// bool                                    bIsAttached                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FTransform                       ActorPrevTickTransform                                 (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ProjectileToSpawnItemHolder_C::ProjectileHit(const struct FHitResult& Hit, bool bIsAttached, const struct FTransform& ActorPrevTickTransform)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ProjectileToSpawnItemHolder_C", "ProjectileHit");

	Params::BP_ProjectileToSpawnItemHolder_C_ProjectileHit Parms{};

	Parms.Hit = std::move(Hit);
	Parms.bIsAttached = bIsAttached;
	Parms.ActorPrevTickTransform = std::move(ActorPrevTickTransform);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ProjectileToSpawnItemHolder.BP_ProjectileToSpawnItemHolder_C.SpawnItemHolder
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UClass*                           SpawnHolderClass                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FTransform                       InTransform                                            (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ProjectileToSpawnItemHolder_C::SpawnItemHolder(class UClass* SpawnHolderClass, const struct FTransform& InTransform)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ProjectileToSpawnItemHolder_C", "SpawnItemHolder");

	Params::BP_ProjectileToSpawnItemHolder_C_SpawnItemHolder Parms{};

	Parms.SpawnHolderClass = SpawnHolderClass;
	Parms.InTransform = std::move(InTransform);

	UObject::ProcessEvent(Func, &Parms);
}

}

