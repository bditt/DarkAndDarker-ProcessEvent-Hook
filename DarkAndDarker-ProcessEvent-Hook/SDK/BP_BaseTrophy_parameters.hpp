#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_BaseTrophy

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_BaseTrophy.BP_BaseTrophy_C.ExecuteUbergraph_BP_BaseTrophy
// 0x0210 (0x0210 - 0x0000)
struct BP_BaseTrophy_C_ExecuteUbergraph_BP_BaseTrophy final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5AAD[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_Interacter;                           // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_Event_StateTag;                             // 0x0010(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_Event_TriggerTag;                           // 0x0018(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_Event_HitResult;                            // 0x0020(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_IsValidPrimaryAssetId_ReturnValue;        // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0109(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x010A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5AAE[0x1];                                     // 0x010B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5AAF[0x4];                                     // 0x0114(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0118(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0130(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0148(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0160(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0178(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0180(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0188(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x01A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x01A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5AB0[0x4];                                     // 0x01AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x01B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x01C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess;   // 0x01E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5AB1[0x7];                                     // 0x01E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerCharacter_C*                  K2Node_DynamicCast_AsBP_Player_Character;          // 0x01E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x01F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5AB2[0x7];                                     // 0x01F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x01F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      K2Node_DynamicCast_As_________;                    // 0x0200(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0208(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BaseTrophy_C_ExecuteUbergraph_BP_BaseTrophy) == 0x000008, "Wrong alignment on BP_BaseTrophy_C_ExecuteUbergraph_BP_BaseTrophy");
static_assert(sizeof(BP_BaseTrophy_C_ExecuteUbergraph_BP_BaseTrophy) == 0x000210, "Wrong size on BP_BaseTrophy_C_ExecuteUbergraph_BP_BaseTrophy");
static_assert(offsetof(BP_BaseTrophy_C_ExecuteUbergraph_BP_BaseTrophy, EntryPoint) == 0x000000, "Member 'BP_BaseTrophy_C_ExecuteUbergraph_BP_BaseTrophy::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_BaseTrophy_C_ExecuteUbergraph_BP_BaseTrophy, K2Node_Event_Interacter) == 0x000008, "Member 'BP_BaseTrophy_C_ExecuteUbergraph_BP_BaseTrophy::K2Node_Event_Interacter' has a wrong offset!");
static_assert(offsetof(BP_BaseTrophy_C_ExecuteUbergraph_BP_BaseTrophy, K2Node_Event_StateTag) == 0x000010, "Member 'BP_BaseTrophy_C_ExecuteUbergraph_BP_BaseTrophy::K2Node_Event_StateTag' has a wrong offset!");
static_assert(offsetof(BP_BaseTrophy_C_ExecuteUbergraph_BP_BaseTrophy, K2Node_Event_TriggerTag) == 0x000018, "Member 'BP_BaseTrophy_C_ExecuteUbergraph_BP_BaseTrophy::K2Node_Event_TriggerTag' has a wrong offset!");
static_assert(offsetof(BP_BaseTrophy_C_ExecuteUbergraph_BP_BaseTrophy, K2Node_Event_HitResult) == 0x000020, "Member 'BP_BaseTrophy_C_ExecuteUbergraph_BP_BaseTrophy::K2Node_Event_HitResult' has a wrong offset!");
static_assert(offsetof(BP_BaseTrophy_C_ExecuteUbergraph_BP_BaseTrophy, CallFunc_IsValidPrimaryAssetId_ReturnValue) == 0x000108, "Member 'BP_BaseTrophy_C_ExecuteUbergraph_BP_BaseTrophy::CallFunc_IsValidPrimaryAssetId_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseTrophy_C_ExecuteUbergraph_BP_BaseTrophy, CallFunc_BreakHitResult_bBlockingHit) == 0x000109, "Member 'BP_BaseTrophy_C_ExecuteUbergraph_BP_BaseTrophy::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_BaseTrophy_C_ExecuteUbergraph_BP_BaseTrophy, CallFunc_BreakHitResult_bInitialOverlap) == 0x00010A, "Member 'BP_BaseTrophy_C_ExecuteUbergraph_BP_BaseTrophy::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_BaseTrophy_C_ExecuteUbergraph_BP_BaseTrophy, CallFunc_BreakHitResult_Time) == 0x00010C, "Member 'BP_BaseTrophy_C_ExecuteUbergraph_BP_BaseTrophy::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_BaseTrophy_C_ExecuteUbergraph_BP_BaseTrophy, CallFunc_BreakHitResult_Distance) == 0x000110, "Member 'BP_BaseTrophy_C_ExecuteUbergraph_BP_BaseTrophy::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_BaseTrophy_C_ExecuteUbergraph_BP_BaseTrophy, CallFunc_BreakHitResult_Location) == 0x000118, "Member 'BP_BaseTrophy_C_ExecuteUbergraph_BP_BaseTrophy::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_BaseTrophy_C_ExecuteUbergraph_BP_BaseTrophy, CallFunc_BreakHitResult_ImpactPoint) == 0x000130, "Member 'BP_BaseTrophy_C_ExecuteUbergraph_BP_BaseTrophy::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_BaseTrophy_C_ExecuteUbergraph_BP_BaseTrophy, CallFunc_BreakHitResult_Normal) == 0x000148, "Member 'BP_BaseTrophy_C_ExecuteUbergraph_BP_BaseTrophy::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_BaseTrophy_C_ExecuteUbergraph_BP_BaseTrophy, CallFunc_BreakHitResult_ImpactNormal) == 0x000160, "Member 'BP_BaseTrophy_C_ExecuteUbergraph_BP_BaseTrophy::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_BaseTrophy_C_ExecuteUbergraph_BP_BaseTrophy, CallFunc_BreakHitResult_PhysMat) == 0x000178, "Member 'BP_BaseTrophy_C_ExecuteUbergraph_BP_BaseTrophy::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_BaseTrophy_C_ExecuteUbergraph_BP_BaseTrophy, CallFunc_BreakHitResult_HitActor) == 0x000180, "Member 'BP_BaseTrophy_C_ExecuteUbergraph_BP_BaseTrophy::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_BaseTrophy_C_ExecuteUbergraph_BP_BaseTrophy, CallFunc_BreakHitResult_HitComponent) == 0x000188, "Member 'BP_BaseTrophy_C_ExecuteUbergraph_BP_BaseTrophy::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_BaseTrophy_C_ExecuteUbergraph_BP_BaseTrophy, CallFunc_BreakHitResult_HitBoneName) == 0x000190, "Member 'BP_BaseTrophy_C_ExecuteUbergraph_BP_BaseTrophy::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_BaseTrophy_C_ExecuteUbergraph_BP_BaseTrophy, CallFunc_BreakHitResult_BoneName) == 0x000198, "Member 'BP_BaseTrophy_C_ExecuteUbergraph_BP_BaseTrophy::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(BP_BaseTrophy_C_ExecuteUbergraph_BP_BaseTrophy, CallFunc_BreakHitResult_HitItem) == 0x0001A0, "Member 'BP_BaseTrophy_C_ExecuteUbergraph_BP_BaseTrophy::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_BaseTrophy_C_ExecuteUbergraph_BP_BaseTrophy, CallFunc_BreakHitResult_ElementIndex) == 0x0001A4, "Member 'BP_BaseTrophy_C_ExecuteUbergraph_BP_BaseTrophy::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(BP_BaseTrophy_C_ExecuteUbergraph_BP_BaseTrophy, CallFunc_BreakHitResult_FaceIndex) == 0x0001A8, "Member 'BP_BaseTrophy_C_ExecuteUbergraph_BP_BaseTrophy::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_BaseTrophy_C_ExecuteUbergraph_BP_BaseTrophy, CallFunc_BreakHitResult_TraceStart) == 0x0001B0, "Member 'BP_BaseTrophy_C_ExecuteUbergraph_BP_BaseTrophy::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_BaseTrophy_C_ExecuteUbergraph_BP_BaseTrophy, CallFunc_BreakHitResult_TraceEnd) == 0x0001C8, "Member 'BP_BaseTrophy_C_ExecuteUbergraph_BP_BaseTrophy::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_BaseTrophy_C_ExecuteUbergraph_BP_BaseTrophy, GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess) == 0x0001E0, "Member 'BP_BaseTrophy_C_ExecuteUbergraph_BP_BaseTrophy::GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_BaseTrophy_C_ExecuteUbergraph_BP_BaseTrophy, K2Node_DynamicCast_AsBP_Player_Character) == 0x0001E8, "Member 'BP_BaseTrophy_C_ExecuteUbergraph_BP_BaseTrophy::K2Node_DynamicCast_AsBP_Player_Character' has a wrong offset!");
static_assert(offsetof(BP_BaseTrophy_C_ExecuteUbergraph_BP_BaseTrophy, K2Node_DynamicCast_bSuccess) == 0x0001F0, "Member 'BP_BaseTrophy_C_ExecuteUbergraph_BP_BaseTrophy::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_BaseTrophy_C_ExecuteUbergraph_BP_BaseTrophy, CallFunc_GetController_ReturnValue) == 0x0001F8, "Member 'BP_BaseTrophy_C_ExecuteUbergraph_BP_BaseTrophy::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseTrophy_C_ExecuteUbergraph_BP_BaseTrophy, K2Node_DynamicCast_As_________) == 0x000200, "Member 'BP_BaseTrophy_C_ExecuteUbergraph_BP_BaseTrophy::K2Node_DynamicCast_As_________' has a wrong offset!");
static_assert(offsetof(BP_BaseTrophy_C_ExecuteUbergraph_BP_BaseTrophy, K2Node_DynamicCast_bSuccess_1) == 0x000208, "Member 'BP_BaseTrophy_C_ExecuteUbergraph_BP_BaseTrophy::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

// Function BP_BaseTrophy.BP_BaseTrophy_C.InteractSucceed
// 0x0100 (0x0100 - 0x0000)
struct BP_BaseTrophy_C_InteractSucceed final
{
public:
	class AActor*                                 Interacter;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           StateTag;                                          // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           TriggerTag;                                        // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             HitResult;                                         // 0x0018(0x00E8)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_BaseTrophy_C_InteractSucceed) == 0x000008, "Wrong alignment on BP_BaseTrophy_C_InteractSucceed");
static_assert(sizeof(BP_BaseTrophy_C_InteractSucceed) == 0x000100, "Wrong size on BP_BaseTrophy_C_InteractSucceed");
static_assert(offsetof(BP_BaseTrophy_C_InteractSucceed, Interacter) == 0x000000, "Member 'BP_BaseTrophy_C_InteractSucceed::Interacter' has a wrong offset!");
static_assert(offsetof(BP_BaseTrophy_C_InteractSucceed, StateTag) == 0x000008, "Member 'BP_BaseTrophy_C_InteractSucceed::StateTag' has a wrong offset!");
static_assert(offsetof(BP_BaseTrophy_C_InteractSucceed, TriggerTag) == 0x000010, "Member 'BP_BaseTrophy_C_InteractSucceed::TriggerTag' has a wrong offset!");
static_assert(offsetof(BP_BaseTrophy_C_InteractSucceed, HitResult) == 0x000018, "Member 'BP_BaseTrophy_C_InteractSucceed::HitResult' has a wrong offset!");

}

