#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_DCItemTooltip

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "DungeonCrawler_structs.hpp"
#include "DungeonCrawler_classes.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WB_DCItemTooltip.WB_DCItemTooltip_C
// 0x0420 (0x0878 - 0x0458)
class UWB_DCItemTooltip_C final : public UItemTooltipWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0458(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UTextBlock*                             ArmorType;                                         // 0x0460(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             HandType;                                          // 0x0468(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         HBox_AbilityListDline;                             // 0x0470(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         HBox_Item_DescriptionDLine;                        // 0x0478(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         HBox_SourceType;                                   // 0x0480(0x0008)(ExportObject, ZeroConstructor, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         HBox_StatDline;                                    // 0x0488(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Img_NameColorLine;                                 // 0x0490(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Item_Description;                                  // 0x0498(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UListView*                              ItemAbilityList;                                   // 0x04A0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             ItemName;                                          // 0x04A8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 ItemNameBG_Rarity;                                 // 0x04B0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           ItemRequirement;                                   // 0x04B8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               ItemRequirementWidgetHolder;                       // 0x04C0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UListView*                              ItemStatMainList;                                  // 0x04C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UListView*                              ItemStatSubList;                                   // 0x04D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UListView*                              ItemUniqueStatSubList;                             // 0x04D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             RarityType;                                        // 0x04E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             SlotType;                                          // 0x04E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             SourceType;                                        // 0x04F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetSwitcher*                        Switcher_Category;                                 // 0x04F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             UtilityType;                                       // 0x0500(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             WeaponType;                                        // 0x0508(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	struct FItemData                              ItemData;                                          // 0x0510(0x0100)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FDesignDataItem                        DesignDataItem;                                    // 0x0610(0x0198)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UArtDataItem*                           ArtDataItem;                                       // 0x07A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          bMainEffect;                                       // 0x07B0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D3F[0x7];                                     // 0x07B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWB_ItemTooltipRequirementGroup_C*      RequirementGroupWidget;                            // 0x07B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          bRequirementsSet;                                  // 0x07C0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D40[0x3];                                     // 0x07C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FItemDataProperty                      ItemDataProperty;                                  // 0x07C4(0x0014)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	struct FDesignDataItemPropertyType            ItemPropertyType;                                  // 0x07D8(0x0060)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	class FString                                 WeaponTypeTooltipText;                             // 0x0838(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	class FText                                   DescText;                                          // 0x0848(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FText                                   UniqueItemTextName;                                // 0x0860(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void Get_Spell_Name(class FText* Param_Name);
	void UpdateItemTooltip();
	void OnUpdateItemRequirementsFulfilledStatus(bool bFulfilled, const TArray<EItemRequirementType>& UnmetRequirementsArray);
	void OnRefreshItemName();
	void OnLoadArtData(class UObject* InObjectLoaded);
	void OnItemData(const struct FItemData& NewItemData, const struct FItemData& OldItemData);
	class FText Get_SourceType_Text();
	class FText Get_RarityType_Text();
	ESlateVisibility Get_HBox_SourceType_Visibility();
	void Get_Skill_Name(class FText* Param_Name);
	void Get_Property_Value_String(class FString* ValueString);
	void Get_Perk_Name(class FText* Param_Name);
	void FindItemDataGameplayEffect(TArray<struct FItemDataGameplayEffect>& ItemDataGameplayEffectArray, const struct FPrimaryAssetId& EffectId, struct FItemDataGameplayEffect* FoundItemDataGameplayEffect);
	void ExecuteUbergraph_WB_DCItemTooltip(int32 EntryPoint);
	void Completed_E5EDA09445BB690707F6069D183BA8BC(class UObject* Loaded);
	void Completed_7A731DA443E500513897BE9B77262946(class UObject* Loaded);
	void UpdateItemTooltipWeapon();
	void UpdateItemTooltipUtility();
	void UpdateItemTooltipUniqueStatProperty();
	void UpdateItemTooltipStatPropertyDescData(const class FText& TypeText, const class FText& ValueText);
	void UpdateItemTooltipStatProperty();
	void UpdateItemTooltipStatAbility();
	void UpdateItemTooltipRequirements();
	void UpdateItemTooltipMics();
	void UpdateItemTooltipDesc();
	void UpdateItemTooltipArmor();
	void UpdateItemTooltipAccessory();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WB_DCItemTooltip_C">();
	}
	static class UWB_DCItemTooltip_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWB_DCItemTooltip_C>();
	}
};
static_assert(alignof(UWB_DCItemTooltip_C) == 0x000008, "Wrong alignment on UWB_DCItemTooltip_C");
static_assert(sizeof(UWB_DCItemTooltip_C) == 0x000878, "Wrong size on UWB_DCItemTooltip_C");
static_assert(offsetof(UWB_DCItemTooltip_C, UberGraphFrame) == 0x000458, "Member 'UWB_DCItemTooltip_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWB_DCItemTooltip_C, ArmorType) == 0x000460, "Member 'UWB_DCItemTooltip_C::ArmorType' has a wrong offset!");
static_assert(offsetof(UWB_DCItemTooltip_C, HandType) == 0x000468, "Member 'UWB_DCItemTooltip_C::HandType' has a wrong offset!");
static_assert(offsetof(UWB_DCItemTooltip_C, HBox_AbilityListDline) == 0x000470, "Member 'UWB_DCItemTooltip_C::HBox_AbilityListDline' has a wrong offset!");
static_assert(offsetof(UWB_DCItemTooltip_C, HBox_Item_DescriptionDLine) == 0x000478, "Member 'UWB_DCItemTooltip_C::HBox_Item_DescriptionDLine' has a wrong offset!");
static_assert(offsetof(UWB_DCItemTooltip_C, HBox_SourceType) == 0x000480, "Member 'UWB_DCItemTooltip_C::HBox_SourceType' has a wrong offset!");
static_assert(offsetof(UWB_DCItemTooltip_C, HBox_StatDline) == 0x000488, "Member 'UWB_DCItemTooltip_C::HBox_StatDline' has a wrong offset!");
static_assert(offsetof(UWB_DCItemTooltip_C, Img_NameColorLine) == 0x000490, "Member 'UWB_DCItemTooltip_C::Img_NameColorLine' has a wrong offset!");
static_assert(offsetof(UWB_DCItemTooltip_C, Item_Description) == 0x000498, "Member 'UWB_DCItemTooltip_C::Item_Description' has a wrong offset!");
static_assert(offsetof(UWB_DCItemTooltip_C, ItemAbilityList) == 0x0004A0, "Member 'UWB_DCItemTooltip_C::ItemAbilityList' has a wrong offset!");
static_assert(offsetof(UWB_DCItemTooltip_C, ItemName) == 0x0004A8, "Member 'UWB_DCItemTooltip_C::ItemName' has a wrong offset!");
static_assert(offsetof(UWB_DCItemTooltip_C, ItemNameBG_Rarity) == 0x0004B0, "Member 'UWB_DCItemTooltip_C::ItemNameBG_Rarity' has a wrong offset!");
static_assert(offsetof(UWB_DCItemTooltip_C, ItemRequirement) == 0x0004B8, "Member 'UWB_DCItemTooltip_C::ItemRequirement' has a wrong offset!");
static_assert(offsetof(UWB_DCItemTooltip_C, ItemRequirementWidgetHolder) == 0x0004C0, "Member 'UWB_DCItemTooltip_C::ItemRequirementWidgetHolder' has a wrong offset!");
static_assert(offsetof(UWB_DCItemTooltip_C, ItemStatMainList) == 0x0004C8, "Member 'UWB_DCItemTooltip_C::ItemStatMainList' has a wrong offset!");
static_assert(offsetof(UWB_DCItemTooltip_C, ItemStatSubList) == 0x0004D0, "Member 'UWB_DCItemTooltip_C::ItemStatSubList' has a wrong offset!");
static_assert(offsetof(UWB_DCItemTooltip_C, ItemUniqueStatSubList) == 0x0004D8, "Member 'UWB_DCItemTooltip_C::ItemUniqueStatSubList' has a wrong offset!");
static_assert(offsetof(UWB_DCItemTooltip_C, RarityType) == 0x0004E0, "Member 'UWB_DCItemTooltip_C::RarityType' has a wrong offset!");
static_assert(offsetof(UWB_DCItemTooltip_C, SlotType) == 0x0004E8, "Member 'UWB_DCItemTooltip_C::SlotType' has a wrong offset!");
static_assert(offsetof(UWB_DCItemTooltip_C, SourceType) == 0x0004F0, "Member 'UWB_DCItemTooltip_C::SourceType' has a wrong offset!");
static_assert(offsetof(UWB_DCItemTooltip_C, Switcher_Category) == 0x0004F8, "Member 'UWB_DCItemTooltip_C::Switcher_Category' has a wrong offset!");
static_assert(offsetof(UWB_DCItemTooltip_C, UtilityType) == 0x000500, "Member 'UWB_DCItemTooltip_C::UtilityType' has a wrong offset!");
static_assert(offsetof(UWB_DCItemTooltip_C, WeaponType) == 0x000508, "Member 'UWB_DCItemTooltip_C::WeaponType' has a wrong offset!");
static_assert(offsetof(UWB_DCItemTooltip_C, ItemData) == 0x000510, "Member 'UWB_DCItemTooltip_C::ItemData' has a wrong offset!");
static_assert(offsetof(UWB_DCItemTooltip_C, DesignDataItem) == 0x000610, "Member 'UWB_DCItemTooltip_C::DesignDataItem' has a wrong offset!");
static_assert(offsetof(UWB_DCItemTooltip_C, ArtDataItem) == 0x0007A8, "Member 'UWB_DCItemTooltip_C::ArtDataItem' has a wrong offset!");
static_assert(offsetof(UWB_DCItemTooltip_C, bMainEffect) == 0x0007B0, "Member 'UWB_DCItemTooltip_C::bMainEffect' has a wrong offset!");
static_assert(offsetof(UWB_DCItemTooltip_C, RequirementGroupWidget) == 0x0007B8, "Member 'UWB_DCItemTooltip_C::RequirementGroupWidget' has a wrong offset!");
static_assert(offsetof(UWB_DCItemTooltip_C, bRequirementsSet) == 0x0007C0, "Member 'UWB_DCItemTooltip_C::bRequirementsSet' has a wrong offset!");
static_assert(offsetof(UWB_DCItemTooltip_C, ItemDataProperty) == 0x0007C4, "Member 'UWB_DCItemTooltip_C::ItemDataProperty' has a wrong offset!");
static_assert(offsetof(UWB_DCItemTooltip_C, ItemPropertyType) == 0x0007D8, "Member 'UWB_DCItemTooltip_C::ItemPropertyType' has a wrong offset!");
static_assert(offsetof(UWB_DCItemTooltip_C, WeaponTypeTooltipText) == 0x000838, "Member 'UWB_DCItemTooltip_C::WeaponTypeTooltipText' has a wrong offset!");
static_assert(offsetof(UWB_DCItemTooltip_C, DescText) == 0x000848, "Member 'UWB_DCItemTooltip_C::DescText' has a wrong offset!");
static_assert(offsetof(UWB_DCItemTooltip_C, UniqueItemTextName) == 0x000860, "Member 'UWB_DCItemTooltip_C::UniqueItemTextName' has a wrong offset!");

}

