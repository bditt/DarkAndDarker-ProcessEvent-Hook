#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_GiantCentipede

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "DungeonCrawler_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "BP_DCMonsterBaseWithOptions_SubBoss_classes.hpp"
#include "GameplayAbilities_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_GiantCentipede.BP_GiantCentipede_C
// 0x0120 (0x1500 - 0x13E0)
class ABP_GiantCentipede_C : public ABP_DCMonsterBaseWithOptions_SubBoss_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_GiantCentipede_C;                // 0x13D8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBP_DCHitBox_C*                         BP_DCHitBox15;                                     // 0x13E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_DCHitBox_C*                         BP_DCHitBox14;                                     // 0x13E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_DCHitBox_C*                         BP_DCHitBox13;                                     // 0x13F0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_DCHitBox_C*                         BP_DCHitBox12;                                     // 0x13F8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_DCHitBox_C*                         BP_DCHitBox11;                                     // 0x1400(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_DCHitBox_C*                         BP_DCHitBox10;                                     // 0x1408(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_DCHitBox_C*                         BP_DCHitBox9;                                      // 0x1410(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_DCHitBox_C*                         BP_DCHitBox8;                                      // 0x1418(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_DCHitBox_C*                         BP_DCHitBox7;                                      // 0x1420(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_DCHitBox_C*                         BP_DCHitBox6;                                      // 0x1428(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_DCHitBox_C*                         BP_DCHitBox5;                                      // 0x1430(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_DCHitBox_C*                         BP_DCHitBox4;                                      // 0x1438(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_DCHitBox_C*                         BP_DCHitBox3;                                      // 0x1440(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_DCHitBox_C*                         BP_DCHitBox2;                                      // 0x1448(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_DCHitBox_C*                         BP_DCHitBox1;                                      // 0x1450(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_DCHitBox_C*                         BP_DCHitBox;                                       // 0x1458(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        FleePhaseHP;                                       // 0x1460(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        FleePhase_Probability;                             // 0x1468(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Flee_Target;                                       // 0x1470(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Foot_Offset;                                       // 0x1478(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FDCGameplayEffectData>          In_Gameplay_Effect_Data_Array;                     // 0x1490(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<struct FActiveGameplayEffectHandle>    BuffMoveSpeed;                                     // 0x14A0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FVector                                Offset;                                            // 0x14B0(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Original;                                          // 0x14C8(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                New;                                               // 0x14E0(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_GiantCentipede(int32 EntryPoint);
	void GameplayTagUpdated(const struct FGameplayTag& InGameplayTag, int32 InCount);
	void OnFMsgGASAttributeNotifyBlueprint(const struct FMsgGASAttributeNotify& InMsg);
	void OnSetAI();
	void RandomizePosition();
	void Removed_52E302D841D5B338C73EF98C045E573C();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_GiantCentipede_C">();
	}
	static class ABP_GiantCentipede_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_GiantCentipede_C>();
	}
};
static_assert(alignof(ABP_GiantCentipede_C) == 0x000010, "Wrong alignment on ABP_GiantCentipede_C");
static_assert(sizeof(ABP_GiantCentipede_C) == 0x001500, "Wrong size on ABP_GiantCentipede_C");
static_assert(offsetof(ABP_GiantCentipede_C, UberGraphFrame_BP_GiantCentipede_C) == 0x0013D8, "Member 'ABP_GiantCentipede_C::UberGraphFrame_BP_GiantCentipede_C' has a wrong offset!");
static_assert(offsetof(ABP_GiantCentipede_C, BP_DCHitBox15) == 0x0013E0, "Member 'ABP_GiantCentipede_C::BP_DCHitBox15' has a wrong offset!");
static_assert(offsetof(ABP_GiantCentipede_C, BP_DCHitBox14) == 0x0013E8, "Member 'ABP_GiantCentipede_C::BP_DCHitBox14' has a wrong offset!");
static_assert(offsetof(ABP_GiantCentipede_C, BP_DCHitBox13) == 0x0013F0, "Member 'ABP_GiantCentipede_C::BP_DCHitBox13' has a wrong offset!");
static_assert(offsetof(ABP_GiantCentipede_C, BP_DCHitBox12) == 0x0013F8, "Member 'ABP_GiantCentipede_C::BP_DCHitBox12' has a wrong offset!");
static_assert(offsetof(ABP_GiantCentipede_C, BP_DCHitBox11) == 0x001400, "Member 'ABP_GiantCentipede_C::BP_DCHitBox11' has a wrong offset!");
static_assert(offsetof(ABP_GiantCentipede_C, BP_DCHitBox10) == 0x001408, "Member 'ABP_GiantCentipede_C::BP_DCHitBox10' has a wrong offset!");
static_assert(offsetof(ABP_GiantCentipede_C, BP_DCHitBox9) == 0x001410, "Member 'ABP_GiantCentipede_C::BP_DCHitBox9' has a wrong offset!");
static_assert(offsetof(ABP_GiantCentipede_C, BP_DCHitBox8) == 0x001418, "Member 'ABP_GiantCentipede_C::BP_DCHitBox8' has a wrong offset!");
static_assert(offsetof(ABP_GiantCentipede_C, BP_DCHitBox7) == 0x001420, "Member 'ABP_GiantCentipede_C::BP_DCHitBox7' has a wrong offset!");
static_assert(offsetof(ABP_GiantCentipede_C, BP_DCHitBox6) == 0x001428, "Member 'ABP_GiantCentipede_C::BP_DCHitBox6' has a wrong offset!");
static_assert(offsetof(ABP_GiantCentipede_C, BP_DCHitBox5) == 0x001430, "Member 'ABP_GiantCentipede_C::BP_DCHitBox5' has a wrong offset!");
static_assert(offsetof(ABP_GiantCentipede_C, BP_DCHitBox4) == 0x001438, "Member 'ABP_GiantCentipede_C::BP_DCHitBox4' has a wrong offset!");
static_assert(offsetof(ABP_GiantCentipede_C, BP_DCHitBox3) == 0x001440, "Member 'ABP_GiantCentipede_C::BP_DCHitBox3' has a wrong offset!");
static_assert(offsetof(ABP_GiantCentipede_C, BP_DCHitBox2) == 0x001448, "Member 'ABP_GiantCentipede_C::BP_DCHitBox2' has a wrong offset!");
static_assert(offsetof(ABP_GiantCentipede_C, BP_DCHitBox1) == 0x001450, "Member 'ABP_GiantCentipede_C::BP_DCHitBox1' has a wrong offset!");
static_assert(offsetof(ABP_GiantCentipede_C, BP_DCHitBox) == 0x001458, "Member 'ABP_GiantCentipede_C::BP_DCHitBox' has a wrong offset!");
static_assert(offsetof(ABP_GiantCentipede_C, FleePhaseHP) == 0x001460, "Member 'ABP_GiantCentipede_C::FleePhaseHP' has a wrong offset!");
static_assert(offsetof(ABP_GiantCentipede_C, FleePhase_Probability) == 0x001468, "Member 'ABP_GiantCentipede_C::FleePhase_Probability' has a wrong offset!");
static_assert(offsetof(ABP_GiantCentipede_C, Flee_Target) == 0x001470, "Member 'ABP_GiantCentipede_C::Flee_Target' has a wrong offset!");
static_assert(offsetof(ABP_GiantCentipede_C, Foot_Offset) == 0x001478, "Member 'ABP_GiantCentipede_C::Foot_Offset' has a wrong offset!");
static_assert(offsetof(ABP_GiantCentipede_C, In_Gameplay_Effect_Data_Array) == 0x001490, "Member 'ABP_GiantCentipede_C::In_Gameplay_Effect_Data_Array' has a wrong offset!");
static_assert(offsetof(ABP_GiantCentipede_C, BuffMoveSpeed) == 0x0014A0, "Member 'ABP_GiantCentipede_C::BuffMoveSpeed' has a wrong offset!");
static_assert(offsetof(ABP_GiantCentipede_C, Offset) == 0x0014B0, "Member 'ABP_GiantCentipede_C::Offset' has a wrong offset!");
static_assert(offsetof(ABP_GiantCentipede_C, Original) == 0x0014C8, "Member 'ABP_GiantCentipede_C::Original' has a wrong offset!");
static_assert(offsetof(ABP_GiantCentipede_C, New) == 0x0014E0, "Member 'ABP_GiantCentipede_C::New' has a wrong offset!");

}

