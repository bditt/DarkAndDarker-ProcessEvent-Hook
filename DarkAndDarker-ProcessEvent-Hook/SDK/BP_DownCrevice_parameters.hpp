#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_DownCrevice

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"
#include "DungeonCrawler_structs.hpp"
#include "GameplayAbilities_structs.hpp"


namespace SDK::Params
{

// Function BP_DownCrevice.BP_DownCrevice_C.BndEvt__BP_Portcullis_DCGameObjectLink_K2Node_ComponentBoundEvent_0_DCGameObjectLinkComponentUMsgGameLinkerRequest__DelegateSignature
// 0x00D8 (0x00D8 - 0x0000)
struct BP_DownCrevice_C_BndEvt__BP_Portcullis_DCGameObjectLink_K2Node_ComponentBoundEvent_0_DCGameObjectLinkComponentUMsgGameLinkerRequest__DelegateSignature final
{
public:
	struct FObjectLinkRequestEvent                RecvEvent;                                         // 0x0000(0x00D0)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class UObjectLinkMetaDataBlueprint*           SendEventParam;                                    // 0x00D0(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DownCrevice_C_BndEvt__BP_Portcullis_DCGameObjectLink_K2Node_ComponentBoundEvent_0_DCGameObjectLinkComponentUMsgGameLinkerRequest__DelegateSignature) == 0x000008, "Wrong alignment on BP_DownCrevice_C_BndEvt__BP_Portcullis_DCGameObjectLink_K2Node_ComponentBoundEvent_0_DCGameObjectLinkComponentUMsgGameLinkerRequest__DelegateSignature");
static_assert(sizeof(BP_DownCrevice_C_BndEvt__BP_Portcullis_DCGameObjectLink_K2Node_ComponentBoundEvent_0_DCGameObjectLinkComponentUMsgGameLinkerRequest__DelegateSignature) == 0x0000D8, "Wrong size on BP_DownCrevice_C_BndEvt__BP_Portcullis_DCGameObjectLink_K2Node_ComponentBoundEvent_0_DCGameObjectLinkComponentUMsgGameLinkerRequest__DelegateSignature");
static_assert(offsetof(BP_DownCrevice_C_BndEvt__BP_Portcullis_DCGameObjectLink_K2Node_ComponentBoundEvent_0_DCGameObjectLinkComponentUMsgGameLinkerRequest__DelegateSignature, RecvEvent) == 0x000000, "Member 'BP_DownCrevice_C_BndEvt__BP_Portcullis_DCGameObjectLink_K2Node_ComponentBoundEvent_0_DCGameObjectLinkComponentUMsgGameLinkerRequest__DelegateSignature::RecvEvent' has a wrong offset!");
static_assert(offsetof(BP_DownCrevice_C_BndEvt__BP_Portcullis_DCGameObjectLink_K2Node_ComponentBoundEvent_0_DCGameObjectLinkComponentUMsgGameLinkerRequest__DelegateSignature, SendEventParam) == 0x0000D0, "Member 'BP_DownCrevice_C_BndEvt__BP_Portcullis_DCGameObjectLink_K2Node_ComponentBoundEvent_0_DCGameObjectLinkComponentUMsgGameLinkerRequest__DelegateSignature::SendEventParam' has a wrong offset!");

// Function BP_DownCrevice.BP_DownCrevice_C.ExecuteUbergraph_BP_DownCrevice
// 0x01D0 (0x01D0 - 0x0000)
struct BP_DownCrevice_C_ExecuteUbergraph_BP_DownCrevice final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5AB9[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FObjectLinkRequestEvent                K2Node_ComponentBoundEvent_RecvEvent;              // 0x0008(0x00D0)(ConstParm)
	class UObjectLinkMetaDataBlueprint*           K2Node_ComponentBoundEvent_SendEventParam;         // 0x00D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 Temp_struct_Variable;                              // 0x00E0(0x00D8)(ConstParm, ContainsInstancedReference)
	bool                                          GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess;   // 0x01B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x01B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5ABA[0x2];                                     // 0x01BA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           K2Node_Event_InGameplayTag;                        // 0x01BC(0x0008)(ConstParm, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_InCount;                              // 0x01C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x01C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess_1; // 0x01C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DownCrevice_C_ExecuteUbergraph_BP_DownCrevice) == 0x000008, "Wrong alignment on BP_DownCrevice_C_ExecuteUbergraph_BP_DownCrevice");
static_assert(sizeof(BP_DownCrevice_C_ExecuteUbergraph_BP_DownCrevice) == 0x0001D0, "Wrong size on BP_DownCrevice_C_ExecuteUbergraph_BP_DownCrevice");
static_assert(offsetof(BP_DownCrevice_C_ExecuteUbergraph_BP_DownCrevice, EntryPoint) == 0x000000, "Member 'BP_DownCrevice_C_ExecuteUbergraph_BP_DownCrevice::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_DownCrevice_C_ExecuteUbergraph_BP_DownCrevice, Temp_bool_IsClosed_Variable) == 0x000004, "Member 'BP_DownCrevice_C_ExecuteUbergraph_BP_DownCrevice::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(BP_DownCrevice_C_ExecuteUbergraph_BP_DownCrevice, K2Node_ComponentBoundEvent_RecvEvent) == 0x000008, "Member 'BP_DownCrevice_C_ExecuteUbergraph_BP_DownCrevice::K2Node_ComponentBoundEvent_RecvEvent' has a wrong offset!");
static_assert(offsetof(BP_DownCrevice_C_ExecuteUbergraph_BP_DownCrevice, K2Node_ComponentBoundEvent_SendEventParam) == 0x0000D8, "Member 'BP_DownCrevice_C_ExecuteUbergraph_BP_DownCrevice::K2Node_ComponentBoundEvent_SendEventParam' has a wrong offset!");
static_assert(offsetof(BP_DownCrevice_C_ExecuteUbergraph_BP_DownCrevice, Temp_struct_Variable) == 0x0000E0, "Member 'BP_DownCrevice_C_ExecuteUbergraph_BP_DownCrevice::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_DownCrevice_C_ExecuteUbergraph_BP_DownCrevice, GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess) == 0x0001B8, "Member 'BP_DownCrevice_C_ExecuteUbergraph_BP_DownCrevice::GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_DownCrevice_C_ExecuteUbergraph_BP_DownCrevice, Temp_bool_Has_Been_Initd_Variable) == 0x0001B9, "Member 'BP_DownCrevice_C_ExecuteUbergraph_BP_DownCrevice::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(BP_DownCrevice_C_ExecuteUbergraph_BP_DownCrevice, K2Node_Event_InGameplayTag) == 0x0001BC, "Member 'BP_DownCrevice_C_ExecuteUbergraph_BP_DownCrevice::K2Node_Event_InGameplayTag' has a wrong offset!");
static_assert(offsetof(BP_DownCrevice_C_ExecuteUbergraph_BP_DownCrevice, K2Node_Event_InCount) == 0x0001C4, "Member 'BP_DownCrevice_C_ExecuteUbergraph_BP_DownCrevice::K2Node_Event_InCount' has a wrong offset!");
static_assert(offsetof(BP_DownCrevice_C_ExecuteUbergraph_BP_DownCrevice, CallFunc_Greater_IntInt_ReturnValue) == 0x0001C8, "Member 'BP_DownCrevice_C_ExecuteUbergraph_BP_DownCrevice::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DownCrevice_C_ExecuteUbergraph_BP_DownCrevice, GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess_1) == 0x0001C9, "Member 'BP_DownCrevice_C_ExecuteUbergraph_BP_DownCrevice::GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess_1' has a wrong offset!");

// Function BP_DownCrevice.BP_DownCrevice_C.GameplayTagUpdated
// 0x000C (0x000C - 0x0000)
struct BP_DownCrevice_C_GameplayTagUpdated final
{
public:
	struct FGameplayTag                           InGameplayTag;                                     // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	int32                                         InCount;                                           // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DownCrevice_C_GameplayTagUpdated) == 0x000004, "Wrong alignment on BP_DownCrevice_C_GameplayTagUpdated");
static_assert(sizeof(BP_DownCrevice_C_GameplayTagUpdated) == 0x00000C, "Wrong size on BP_DownCrevice_C_GameplayTagUpdated");
static_assert(offsetof(BP_DownCrevice_C_GameplayTagUpdated, InGameplayTag) == 0x000000, "Member 'BP_DownCrevice_C_GameplayTagUpdated::InGameplayTag' has a wrong offset!");
static_assert(offsetof(BP_DownCrevice_C_GameplayTagUpdated, InCount) == 0x000008, "Member 'BP_DownCrevice_C_GameplayTagUpdated::InCount' has a wrong offset!");

}

