#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MonsterBPLibrary

#include "Basic.hpp"

#include "DungeonCrawler_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "E_Direction_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "Engine_structs.hpp"
#include "E_ModeType_structs.hpp"
#include "E_DistanceFromVariables_structs.hpp"
#include "E_SensorType_structs.hpp"


namespace SDK::Params
{

// Function MonsterBPLibrary.MonsterBPLibrary_C.Actor Has AI Timer
// 0x0040 (0x0040 - 0x0000)
struct MonsterBPLibrary_C_Actor_Has_AI_Timer final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Timer_Index;                                       // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_392D[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Return_Value;                                      // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_392E[0x3];                                     // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           Timer_Tag;                                         // 0x001C(0x0008)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_392F[0x2];                                     // 0x0026(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> K2Node_DynamicCast_As_________________;            // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue;       // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MonsterBPLibrary_C_Actor_Has_AI_Timer) == 0x000008, "Wrong alignment on MonsterBPLibrary_C_Actor_Has_AI_Timer");
static_assert(sizeof(MonsterBPLibrary_C_Actor_Has_AI_Timer) == 0x000040, "Wrong size on MonsterBPLibrary_C_Actor_Has_AI_Timer");
static_assert(offsetof(MonsterBPLibrary_C_Actor_Has_AI_Timer, Actor) == 0x000000, "Member 'MonsterBPLibrary_C_Actor_Has_AI_Timer::Actor' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Actor_Has_AI_Timer, Timer_Index) == 0x000008, "Member 'MonsterBPLibrary_C_Actor_Has_AI_Timer::Timer_Index' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Actor_Has_AI_Timer, __WorldContext) == 0x000010, "Member 'MonsterBPLibrary_C_Actor_Has_AI_Timer::__WorldContext' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Actor_Has_AI_Timer, Return_Value) == 0x000018, "Member 'MonsterBPLibrary_C_Actor_Has_AI_Timer::Return_Value' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Actor_Has_AI_Timer, Timer_Tag) == 0x00001C, "Member 'MonsterBPLibrary_C_Actor_Has_AI_Timer::Timer_Tag' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Actor_Has_AI_Timer, Temp_bool_Variable) == 0x000024, "Member 'MonsterBPLibrary_C_Actor_Has_AI_Timer::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Actor_Has_AI_Timer, K2Node_SwitchInteger_CmpSuccess) == 0x000025, "Member 'MonsterBPLibrary_C_Actor_Has_AI_Timer::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Actor_Has_AI_Timer, K2Node_DynamicCast_As_________________) == 0x000028, "Member 'MonsterBPLibrary_C_Actor_Has_AI_Timer::K2Node_DynamicCast_As_________________' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Actor_Has_AI_Timer, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'MonsterBPLibrary_C_Actor_Has_AI_Timer::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Actor_Has_AI_Timer, CallFunc_HasMatchingGameplayTag_ReturnValue) == 0x000039, "Member 'MonsterBPLibrary_C_Actor_Has_AI_Timer::CallFunc_HasMatchingGameplayTag_ReturnValue' has a wrong offset!");

// Function MonsterBPLibrary.MonsterBPLibrary_C.Add AI Timer
// 0x0048 (0x0048 - 0x0000)
struct MonsterBPLibrary_C_Add_AI_Timer final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Timer_Index;                                       // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3930[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Second;                                            // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FPrimaryAssetId                        Timer_Asset;                                       // 0x0020(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3931[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FActiveGameplayEffectHandle>    CallFunc_Change_GE_Attribute_And_Apply_Return_Value; // 0x0038(0x0010)(ReferenceParm)
};
static_assert(alignof(MonsterBPLibrary_C_Add_AI_Timer) == 0x000008, "Wrong alignment on MonsterBPLibrary_C_Add_AI_Timer");
static_assert(sizeof(MonsterBPLibrary_C_Add_AI_Timer) == 0x000048, "Wrong size on MonsterBPLibrary_C_Add_AI_Timer");
static_assert(offsetof(MonsterBPLibrary_C_Add_AI_Timer, Actor) == 0x000000, "Member 'MonsterBPLibrary_C_Add_AI_Timer::Actor' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Add_AI_Timer, Timer_Index) == 0x000008, "Member 'MonsterBPLibrary_C_Add_AI_Timer::Timer_Index' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Add_AI_Timer, Second) == 0x000010, "Member 'MonsterBPLibrary_C_Add_AI_Timer::Second' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Add_AI_Timer, __WorldContext) == 0x000018, "Member 'MonsterBPLibrary_C_Add_AI_Timer::__WorldContext' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Add_AI_Timer, Timer_Asset) == 0x000020, "Member 'MonsterBPLibrary_C_Add_AI_Timer::Timer_Asset' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Add_AI_Timer, K2Node_SwitchInteger_CmpSuccess) == 0x000030, "Member 'MonsterBPLibrary_C_Add_AI_Timer::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Add_AI_Timer, CallFunc_Change_GE_Attribute_And_Apply_Return_Value) == 0x000038, "Member 'MonsterBPLibrary_C_Add_AI_Timer::CallFunc_Change_GE_Attribute_And_Apply_Return_Value' has a wrong offset!");

// Function MonsterBPLibrary.MonsterBPLibrary_C.Change GE Attribute And Apply
// 0x03C0 (0x03C0 - 0x0000)
struct MonsterBPLibrary_C_Change_GE_Attribute_And_Apply final
{
public:
	class AActor*                                 SourceActor;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Target_Actor;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FPrimaryAssetId                        Gameplay_Effect;                                   // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Set_By_Caller_Tag;                                 // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	double                                        Value;                                             // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<struct FActiveGameplayEffectHandle>    Return_Value;                                      // 0x0038(0x0010)(Parm, OutParm)
	TArray<struct FDCGameplayEffectSetByCallerData> OverrideSetByCallerDataArray;                      // 0x0048(0x0010)(Edit, BlueprintVisible)
	struct FDCGameplayEffectData                  Local_Out_Gameplay_Effect_Data;                    // 0x0058(0x0068)(Edit, BlueprintVisible)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3932[0x4];                                     // 0x00C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDesignDataGameplayEffect              CallFunc_GetDesignDataGameplayEffect_ReturnValue;  // 0x00C8(0x02A0)()
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0368(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x036C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FDCGameplayEffectData>          K2Node_MakeArray_Array;                            // 0x0370(0x0010)(ConstParm, ReferenceParm)
	TArray<struct FActiveGameplayEffectHandle>    CallFunc_ApplyGameplayEffects_ReturnValue;         // 0x0380(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0390(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FDCGameplayEffectSetByCallerData       CallFunc_Array_Get_Item;                           // 0x0394(0x000C)(NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x03A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3933[0x3];                                     // 0x03A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x03A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FDCGameplayEffectSetByCallerData       K2Node_MakeStruct_DCGameplayEffectSetByCallerData; // 0x03A8(0x000C)(NoDestructor)
	bool                                          CallFunc_EqualEqual_GameplayTag_ReturnValue;       // 0x03B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3934[0x3];                                     // 0x03B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x03B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_SetByCallerValue_ImplicitCast;   // 0x03BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MonsterBPLibrary_C_Change_GE_Attribute_And_Apply) == 0x000008, "Wrong alignment on MonsterBPLibrary_C_Change_GE_Attribute_And_Apply");
static_assert(sizeof(MonsterBPLibrary_C_Change_GE_Attribute_And_Apply) == 0x0003C0, "Wrong size on MonsterBPLibrary_C_Change_GE_Attribute_And_Apply");
static_assert(offsetof(MonsterBPLibrary_C_Change_GE_Attribute_And_Apply, SourceActor) == 0x000000, "Member 'MonsterBPLibrary_C_Change_GE_Attribute_And_Apply::SourceActor' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Change_GE_Attribute_And_Apply, Target_Actor) == 0x000008, "Member 'MonsterBPLibrary_C_Change_GE_Attribute_And_Apply::Target_Actor' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Change_GE_Attribute_And_Apply, Gameplay_Effect) == 0x000010, "Member 'MonsterBPLibrary_C_Change_GE_Attribute_And_Apply::Gameplay_Effect' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Change_GE_Attribute_And_Apply, Set_By_Caller_Tag) == 0x000020, "Member 'MonsterBPLibrary_C_Change_GE_Attribute_And_Apply::Set_By_Caller_Tag' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Change_GE_Attribute_And_Apply, Value) == 0x000028, "Member 'MonsterBPLibrary_C_Change_GE_Attribute_And_Apply::Value' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Change_GE_Attribute_And_Apply, __WorldContext) == 0x000030, "Member 'MonsterBPLibrary_C_Change_GE_Attribute_And_Apply::__WorldContext' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Change_GE_Attribute_And_Apply, Return_Value) == 0x000038, "Member 'MonsterBPLibrary_C_Change_GE_Attribute_And_Apply::Return_Value' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Change_GE_Attribute_And_Apply, OverrideSetByCallerDataArray) == 0x000048, "Member 'MonsterBPLibrary_C_Change_GE_Attribute_And_Apply::OverrideSetByCallerDataArray' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Change_GE_Attribute_And_Apply, Local_Out_Gameplay_Effect_Data) == 0x000058, "Member 'MonsterBPLibrary_C_Change_GE_Attribute_And_Apply::Local_Out_Gameplay_Effect_Data' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Change_GE_Attribute_And_Apply, Temp_int_Loop_Counter_Variable) == 0x0000C0, "Member 'MonsterBPLibrary_C_Change_GE_Attribute_And_Apply::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Change_GE_Attribute_And_Apply, CallFunc_GetDesignDataGameplayEffect_ReturnValue) == 0x0000C8, "Member 'MonsterBPLibrary_C_Change_GE_Attribute_And_Apply::CallFunc_GetDesignDataGameplayEffect_ReturnValue' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Change_GE_Attribute_And_Apply, CallFunc_Add_IntInt_ReturnValue) == 0x000368, "Member 'MonsterBPLibrary_C_Change_GE_Attribute_And_Apply::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Change_GE_Attribute_And_Apply, Temp_int_Array_Index_Variable) == 0x00036C, "Member 'MonsterBPLibrary_C_Change_GE_Attribute_And_Apply::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Change_GE_Attribute_And_Apply, K2Node_MakeArray_Array) == 0x000370, "Member 'MonsterBPLibrary_C_Change_GE_Attribute_And_Apply::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Change_GE_Attribute_And_Apply, CallFunc_ApplyGameplayEffects_ReturnValue) == 0x000380, "Member 'MonsterBPLibrary_C_Change_GE_Attribute_And_Apply::CallFunc_ApplyGameplayEffects_ReturnValue' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Change_GE_Attribute_And_Apply, CallFunc_Array_Length_ReturnValue) == 0x000390, "Member 'MonsterBPLibrary_C_Change_GE_Attribute_And_Apply::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Change_GE_Attribute_And_Apply, CallFunc_Array_Get_Item) == 0x000394, "Member 'MonsterBPLibrary_C_Change_GE_Attribute_And_Apply::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Change_GE_Attribute_And_Apply, CallFunc_Less_IntInt_ReturnValue) == 0x0003A0, "Member 'MonsterBPLibrary_C_Change_GE_Attribute_And_Apply::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Change_GE_Attribute_And_Apply, CallFunc_Array_Add_ReturnValue) == 0x0003A4, "Member 'MonsterBPLibrary_C_Change_GE_Attribute_And_Apply::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Change_GE_Attribute_And_Apply, K2Node_MakeStruct_DCGameplayEffectSetByCallerData) == 0x0003A8, "Member 'MonsterBPLibrary_C_Change_GE_Attribute_And_Apply::K2Node_MakeStruct_DCGameplayEffectSetByCallerData' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Change_GE_Attribute_And_Apply, CallFunc_EqualEqual_GameplayTag_ReturnValue) == 0x0003B4, "Member 'MonsterBPLibrary_C_Change_GE_Attribute_And_Apply::CallFunc_EqualEqual_GameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Change_GE_Attribute_And_Apply, CallFunc_Array_Add_ReturnValue_1) == 0x0003B8, "Member 'MonsterBPLibrary_C_Change_GE_Attribute_And_Apply::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Change_GE_Attribute_And_Apply, K2Node_MakeStruct_SetByCallerValue_ImplicitCast) == 0x0003BC, "Member 'MonsterBPLibrary_C_Change_GE_Attribute_And_Apply::K2Node_MakeStruct_SetByCallerValue_ImplicitCast' has a wrong offset!");

// Function MonsterBPLibrary.MonsterBPLibrary_C.Check Target Has State Tags To Lose From Array
// 0x0068 (0x0068 - 0x0000)
struct MonsterBPLibrary_C_Check_Target_Has_State_Tags_To_Lose_From_Array final
{
public:
	class UObject*                                Target;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3935[0x6];                                     // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> K2Node_DynamicCast_As_________________;            // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3936[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FGameplayTag>                   K2Node_MakeArray_Array;                            // 0x0030(0x0010)(ConstParm, ReferenceParm)
	struct FGameplayTagContainer                  CallFunc_MakeGameplayTagContainerFromArray_ReturnValue; // 0x0040(0x0020)()
	bool                                          CallFunc_HasAnyMatchingGameplayTags_ReturnValue;   // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MonsterBPLibrary_C_Check_Target_Has_State_Tags_To_Lose_From_Array) == 0x000008, "Wrong alignment on MonsterBPLibrary_C_Check_Target_Has_State_Tags_To_Lose_From_Array");
static_assert(sizeof(MonsterBPLibrary_C_Check_Target_Has_State_Tags_To_Lose_From_Array) == 0x000068, "Wrong size on MonsterBPLibrary_C_Check_Target_Has_State_Tags_To_Lose_From_Array");
static_assert(offsetof(MonsterBPLibrary_C_Check_Target_Has_State_Tags_To_Lose_From_Array, Target) == 0x000000, "Member 'MonsterBPLibrary_C_Check_Target_Has_State_Tags_To_Lose_From_Array::Target' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Check_Target_Has_State_Tags_To_Lose_From_Array, __WorldContext) == 0x000008, "Member 'MonsterBPLibrary_C_Check_Target_Has_State_Tags_To_Lose_From_Array::__WorldContext' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Check_Target_Has_State_Tags_To_Lose_From_Array, Result) == 0x000010, "Member 'MonsterBPLibrary_C_Check_Target_Has_State_Tags_To_Lose_From_Array::Result' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Check_Target_Has_State_Tags_To_Lose_From_Array, Temp_bool_Variable) == 0x000011, "Member 'MonsterBPLibrary_C_Check_Target_Has_State_Tags_To_Lose_From_Array::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Check_Target_Has_State_Tags_To_Lose_From_Array, K2Node_DynamicCast_As_________________) == 0x000018, "Member 'MonsterBPLibrary_C_Check_Target_Has_State_Tags_To_Lose_From_Array::K2Node_DynamicCast_As_________________' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Check_Target_Has_State_Tags_To_Lose_From_Array, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'MonsterBPLibrary_C_Check_Target_Has_State_Tags_To_Lose_From_Array::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Check_Target_Has_State_Tags_To_Lose_From_Array, K2Node_MakeArray_Array) == 0x000030, "Member 'MonsterBPLibrary_C_Check_Target_Has_State_Tags_To_Lose_From_Array::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Check_Target_Has_State_Tags_To_Lose_From_Array, CallFunc_MakeGameplayTagContainerFromArray_ReturnValue) == 0x000040, "Member 'MonsterBPLibrary_C_Check_Target_Has_State_Tags_To_Lose_From_Array::CallFunc_MakeGameplayTagContainerFromArray_ReturnValue' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Check_Target_Has_State_Tags_To_Lose_From_Array, CallFunc_HasAnyMatchingGameplayTags_ReturnValue) == 0x000060, "Member 'MonsterBPLibrary_C_Check_Target_Has_State_Tags_To_Lose_From_Array::CallFunc_HasAnyMatchingGameplayTags_ReturnValue' has a wrong offset!");

// Function MonsterBPLibrary.MonsterBPLibrary_C.Filter Target From CombatArea
// 0x00B8 (0x00B8 - 0x0000)
struct MonsterBPLibrary_C_Filter_Target_From_CombatArea final
{
public:
	struct FVector                                SpawnLocation;                                     // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        FilterDistanceFromSpawnLocation;                   // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ADCCharacterBase*>               TargetArray;                                       // 0x0020(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class UObject*                                __WorldContext;                                    // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Return_Value;                                      // 0x0038(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3937[0x7];                                     // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ADCCharacterBase*>               Result;                                            // 0x0040(0x0010)(Parm, OutParm)
	TArray<class ADCCharacterBase*>               LocalTargetArray;                                  // 0x0050(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_1;        // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3938[0x6];                                     // 0x0072(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ADCCharacterBase*                       CallFunc_Array_Get_Item;                           // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0080(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3939[0x4];                                     // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Vector_Distance_ReturnValue;              // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x00AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_393A[0x3];                                     // 0x00AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Max_ReturnValue;                          // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MonsterBPLibrary_C_Filter_Target_From_CombatArea) == 0x000008, "Wrong alignment on MonsterBPLibrary_C_Filter_Target_From_CombatArea");
static_assert(sizeof(MonsterBPLibrary_C_Filter_Target_From_CombatArea) == 0x0000B8, "Wrong size on MonsterBPLibrary_C_Filter_Target_From_CombatArea");
static_assert(offsetof(MonsterBPLibrary_C_Filter_Target_From_CombatArea, SpawnLocation) == 0x000000, "Member 'MonsterBPLibrary_C_Filter_Target_From_CombatArea::SpawnLocation' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Filter_Target_From_CombatArea, FilterDistanceFromSpawnLocation) == 0x000018, "Member 'MonsterBPLibrary_C_Filter_Target_From_CombatArea::FilterDistanceFromSpawnLocation' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Filter_Target_From_CombatArea, TargetArray) == 0x000020, "Member 'MonsterBPLibrary_C_Filter_Target_From_CombatArea::TargetArray' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Filter_Target_From_CombatArea, __WorldContext) == 0x000030, "Member 'MonsterBPLibrary_C_Filter_Target_From_CombatArea::__WorldContext' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Filter_Target_From_CombatArea, Return_Value) == 0x000038, "Member 'MonsterBPLibrary_C_Filter_Target_From_CombatArea::Return_Value' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Filter_Target_From_CombatArea, Result) == 0x000040, "Member 'MonsterBPLibrary_C_Filter_Target_From_CombatArea::Result' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Filter_Target_From_CombatArea, LocalTargetArray) == 0x000050, "Member 'MonsterBPLibrary_C_Filter_Target_From_CombatArea::LocalTargetArray' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Filter_Target_From_CombatArea, Temp_int_Array_Index_Variable) == 0x000060, "Member 'MonsterBPLibrary_C_Filter_Target_From_CombatArea::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Filter_Target_From_CombatArea, Temp_int_Loop_Counter_Variable) == 0x000064, "Member 'MonsterBPLibrary_C_Filter_Target_From_CombatArea::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Filter_Target_From_CombatArea, CallFunc_Subtract_IntInt_ReturnValue) == 0x000068, "Member 'MonsterBPLibrary_C_Filter_Target_From_CombatArea::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Filter_Target_From_CombatArea, CallFunc_Array_Length_ReturnValue) == 0x00006C, "Member 'MonsterBPLibrary_C_Filter_Target_From_CombatArea::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Filter_Target_From_CombatArea, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000070, "Member 'MonsterBPLibrary_C_Filter_Target_From_CombatArea::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Filter_Target_From_CombatArea, CallFunc_GreaterEqual_IntInt_ReturnValue_1) == 0x000071, "Member 'MonsterBPLibrary_C_Filter_Target_From_CombatArea::CallFunc_GreaterEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Filter_Target_From_CombatArea, CallFunc_Array_Get_Item) == 0x000078, "Member 'MonsterBPLibrary_C_Filter_Target_From_CombatArea::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Filter_Target_From_CombatArea, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000080, "Member 'MonsterBPLibrary_C_Filter_Target_From_CombatArea::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Filter_Target_From_CombatArea, CallFunc_Array_Length_ReturnValue_1) == 0x000098, "Member 'MonsterBPLibrary_C_Filter_Target_From_CombatArea::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Filter_Target_From_CombatArea, CallFunc_Vector_Distance_ReturnValue) == 0x0000A0, "Member 'MonsterBPLibrary_C_Filter_Target_From_CombatArea::CallFunc_Vector_Distance_ReturnValue' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Filter_Target_From_CombatArea, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x0000A8, "Member 'MonsterBPLibrary_C_Filter_Target_From_CombatArea::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Filter_Target_From_CombatArea, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x0000AC, "Member 'MonsterBPLibrary_C_Filter_Target_From_CombatArea::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Filter_Target_From_CombatArea, CallFunc_Max_ReturnValue) == 0x0000B0, "Member 'MonsterBPLibrary_C_Filter_Target_From_CombatArea::CallFunc_Max_ReturnValue' has a wrong offset!");

// Function MonsterBPLibrary.MonsterBPLibrary_C.Filter Target From Spawn Location
// 0x00B8 (0x00B8 - 0x0000)
struct MonsterBPLibrary_C_Filter_Target_From_Spawn_Location final
{
public:
	struct FVector                                SpawnLocation;                                     // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        FilterDistanceFromSpawnLocation;                   // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ADCCharacterBase*>               TargetArray;                                       // 0x0020(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class UObject*                                __WorldContext;                                    // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Return_Value;                                      // 0x0038(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_393B[0x7];                                     // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ADCCharacterBase*>               Result;                                            // 0x0040(0x0010)(Parm, OutParm)
	TArray<class ADCCharacterBase*>               LocalTargetArray;                                  // 0x0050(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_1;        // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_393C[0x6];                                     // 0x0072(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ADCCharacterBase*                       CallFunc_Array_Get_Item;                           // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0080(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_393D[0x4];                                     // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Vector_Distance_ReturnValue;              // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x00AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_393E[0x3];                                     // 0x00AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Max_ReturnValue;                          // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MonsterBPLibrary_C_Filter_Target_From_Spawn_Location) == 0x000008, "Wrong alignment on MonsterBPLibrary_C_Filter_Target_From_Spawn_Location");
static_assert(sizeof(MonsterBPLibrary_C_Filter_Target_From_Spawn_Location) == 0x0000B8, "Wrong size on MonsterBPLibrary_C_Filter_Target_From_Spawn_Location");
static_assert(offsetof(MonsterBPLibrary_C_Filter_Target_From_Spawn_Location, SpawnLocation) == 0x000000, "Member 'MonsterBPLibrary_C_Filter_Target_From_Spawn_Location::SpawnLocation' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Filter_Target_From_Spawn_Location, FilterDistanceFromSpawnLocation) == 0x000018, "Member 'MonsterBPLibrary_C_Filter_Target_From_Spawn_Location::FilterDistanceFromSpawnLocation' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Filter_Target_From_Spawn_Location, TargetArray) == 0x000020, "Member 'MonsterBPLibrary_C_Filter_Target_From_Spawn_Location::TargetArray' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Filter_Target_From_Spawn_Location, __WorldContext) == 0x000030, "Member 'MonsterBPLibrary_C_Filter_Target_From_Spawn_Location::__WorldContext' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Filter_Target_From_Spawn_Location, Return_Value) == 0x000038, "Member 'MonsterBPLibrary_C_Filter_Target_From_Spawn_Location::Return_Value' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Filter_Target_From_Spawn_Location, Result) == 0x000040, "Member 'MonsterBPLibrary_C_Filter_Target_From_Spawn_Location::Result' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Filter_Target_From_Spawn_Location, LocalTargetArray) == 0x000050, "Member 'MonsterBPLibrary_C_Filter_Target_From_Spawn_Location::LocalTargetArray' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Filter_Target_From_Spawn_Location, Temp_int_Array_Index_Variable) == 0x000060, "Member 'MonsterBPLibrary_C_Filter_Target_From_Spawn_Location::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Filter_Target_From_Spawn_Location, Temp_int_Loop_Counter_Variable) == 0x000064, "Member 'MonsterBPLibrary_C_Filter_Target_From_Spawn_Location::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Filter_Target_From_Spawn_Location, CallFunc_Subtract_IntInt_ReturnValue) == 0x000068, "Member 'MonsterBPLibrary_C_Filter_Target_From_Spawn_Location::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Filter_Target_From_Spawn_Location, CallFunc_Array_Length_ReturnValue) == 0x00006C, "Member 'MonsterBPLibrary_C_Filter_Target_From_Spawn_Location::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Filter_Target_From_Spawn_Location, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000070, "Member 'MonsterBPLibrary_C_Filter_Target_From_Spawn_Location::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Filter_Target_From_Spawn_Location, CallFunc_GreaterEqual_IntInt_ReturnValue_1) == 0x000071, "Member 'MonsterBPLibrary_C_Filter_Target_From_Spawn_Location::CallFunc_GreaterEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Filter_Target_From_Spawn_Location, CallFunc_Array_Get_Item) == 0x000078, "Member 'MonsterBPLibrary_C_Filter_Target_From_Spawn_Location::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Filter_Target_From_Spawn_Location, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000080, "Member 'MonsterBPLibrary_C_Filter_Target_From_Spawn_Location::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Filter_Target_From_Spawn_Location, CallFunc_Array_Length_ReturnValue_1) == 0x000098, "Member 'MonsterBPLibrary_C_Filter_Target_From_Spawn_Location::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Filter_Target_From_Spawn_Location, CallFunc_Vector_Distance_ReturnValue) == 0x0000A0, "Member 'MonsterBPLibrary_C_Filter_Target_From_Spawn_Location::CallFunc_Vector_Distance_ReturnValue' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Filter_Target_From_Spawn_Location, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x0000A8, "Member 'MonsterBPLibrary_C_Filter_Target_From_Spawn_Location::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Filter_Target_From_Spawn_Location, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x0000AC, "Member 'MonsterBPLibrary_C_Filter_Target_From_Spawn_Location::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Filter_Target_From_Spawn_Location, CallFunc_Max_ReturnValue) == 0x0000B0, "Member 'MonsterBPLibrary_C_Filter_Target_From_Spawn_Location::CallFunc_Max_ReturnValue' has a wrong offset!");

// Function MonsterBPLibrary.MonsterBPLibrary_C.Filter Target Has Aggro
// 0x0078 (0x0078 - 0x0000)
struct MonsterBPLibrary_C_Filter_Target_Has_Aggro final
{
public:
	class ABP_DCMonsterBase_C*                    MonsterBase;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class ADCCharacterBase*>               Input_TargetArray;                                 // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Return_Value;                                      // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_393F[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ADCCharacterBase*>               Output_TargetArray;                                // 0x0028(0x0010)(Parm, OutParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3940[0x3];                                     // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue;                          // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ADCCharacterBase*                       CallFunc_Array_Get_Item;                           // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetAggroPoint_bSuccessfully;              // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3941[0x2];                                     // 0x005A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetAggroPoint_ReturnValue;                // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3942[0x3];                                     // 0x0065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3943[0x3];                                     // 0x006D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_LessEqual_DoubleDouble_A_ImplicitCast;    // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MonsterBPLibrary_C_Filter_Target_Has_Aggro) == 0x000008, "Wrong alignment on MonsterBPLibrary_C_Filter_Target_Has_Aggro");
static_assert(sizeof(MonsterBPLibrary_C_Filter_Target_Has_Aggro) == 0x000078, "Wrong size on MonsterBPLibrary_C_Filter_Target_Has_Aggro");
static_assert(offsetof(MonsterBPLibrary_C_Filter_Target_Has_Aggro, MonsterBase) == 0x000000, "Member 'MonsterBPLibrary_C_Filter_Target_Has_Aggro::MonsterBase' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Filter_Target_Has_Aggro, Input_TargetArray) == 0x000008, "Member 'MonsterBPLibrary_C_Filter_Target_Has_Aggro::Input_TargetArray' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Filter_Target_Has_Aggro, __WorldContext) == 0x000018, "Member 'MonsterBPLibrary_C_Filter_Target_Has_Aggro::__WorldContext' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Filter_Target_Has_Aggro, Return_Value) == 0x000020, "Member 'MonsterBPLibrary_C_Filter_Target_Has_Aggro::Return_Value' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Filter_Target_Has_Aggro, Output_TargetArray) == 0x000028, "Member 'MonsterBPLibrary_C_Filter_Target_Has_Aggro::Output_TargetArray' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Filter_Target_Has_Aggro, CallFunc_Array_Length_ReturnValue) == 0x000038, "Member 'MonsterBPLibrary_C_Filter_Target_Has_Aggro::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Filter_Target_Has_Aggro, CallFunc_Array_Length_ReturnValue_1) == 0x00003C, "Member 'MonsterBPLibrary_C_Filter_Target_Has_Aggro::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Filter_Target_Has_Aggro, CallFunc_Greater_IntInt_ReturnValue) == 0x000040, "Member 'MonsterBPLibrary_C_Filter_Target_Has_Aggro::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Filter_Target_Has_Aggro, CallFunc_Subtract_IntInt_ReturnValue) == 0x000044, "Member 'MonsterBPLibrary_C_Filter_Target_Has_Aggro::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Filter_Target_Has_Aggro, CallFunc_Max_ReturnValue) == 0x000048, "Member 'MonsterBPLibrary_C_Filter_Target_Has_Aggro::CallFunc_Max_ReturnValue' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Filter_Target_Has_Aggro, Temp_int_Array_Index_Variable) == 0x00004C, "Member 'MonsterBPLibrary_C_Filter_Target_Has_Aggro::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Filter_Target_Has_Aggro, CallFunc_Array_Get_Item) == 0x000050, "Member 'MonsterBPLibrary_C_Filter_Target_Has_Aggro::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Filter_Target_Has_Aggro, CallFunc_Array_RemoveItem_ReturnValue) == 0x000058, "Member 'MonsterBPLibrary_C_Filter_Target_Has_Aggro::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Filter_Target_Has_Aggro, CallFunc_GetAggroPoint_bSuccessfully) == 0x000059, "Member 'MonsterBPLibrary_C_Filter_Target_Has_Aggro::CallFunc_GetAggroPoint_bSuccessfully' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Filter_Target_Has_Aggro, CallFunc_GetAggroPoint_ReturnValue) == 0x00005C, "Member 'MonsterBPLibrary_C_Filter_Target_Has_Aggro::CallFunc_GetAggroPoint_ReturnValue' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Filter_Target_Has_Aggro, Temp_int_Loop_Counter_Variable) == 0x000060, "Member 'MonsterBPLibrary_C_Filter_Target_Has_Aggro::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Filter_Target_Has_Aggro, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x000064, "Member 'MonsterBPLibrary_C_Filter_Target_Has_Aggro::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Filter_Target_Has_Aggro, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x000068, "Member 'MonsterBPLibrary_C_Filter_Target_Has_Aggro::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Filter_Target_Has_Aggro, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x00006C, "Member 'MonsterBPLibrary_C_Filter_Target_Has_Aggro::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Filter_Target_Has_Aggro, CallFunc_LessEqual_DoubleDouble_A_ImplicitCast) == 0x000070, "Member 'MonsterBPLibrary_C_Filter_Target_Has_Aggro::CallFunc_LessEqual_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function MonsterBPLibrary.MonsterBPLibrary_C.Get Actors In Range And Angle From Location
// 0x01B0 (0x01B0 - 0x0000)
struct MonsterBPLibrary_C_Get_Actors_In_Range_And_Angle_From_Location final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Range;                                             // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Direction;                                         // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Angle;                                             // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         ActorsToIgnore;                                    // 0x0030(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class UObject*                                __WorldContext;                                    // 0x0040(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0048(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3944[0x7];                                     // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ADCCharacterBase*>               DCCharacterBase;                                   // 0x0050(0x0010)(Parm, OutParm)
	double                                        Local_Range;                                       // 0x0060(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Local_Location;                                    // 0x0068(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Native_Angle;                                      // 0x0080(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Native_Direction;                                  // 0x0088(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ADCCharacterBase*>               TargetArray;                                       // 0x0090(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3945[0x4];                                     // 0x00A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Get_Native_Angle_Return_Value;            // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Get_Native_Angle_Return_Value_1;          // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3946[0x3];                                     // 0x00C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_1;        // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x00D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3947[0x6];                                     // 0x00D2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array;                            // 0x00E8(0x0010)(ConstParm, ReferenceParm)
	TArray<class AActor*>                         CallFunc_SphereOverlapActors_OutActors;            // 0x00F8(0x0010)(ReferenceParm)
	bool                                          CallFunc_SphereOverlapActors_ReturnValue;          // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3948[0x3];                                     // 0x0109(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_2;            // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3949[0x4];                                     // 0x0114(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0118(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue;                          // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_394A[0x4];                                     // 0x0124(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ADCCharacterBase*                       K2Node_DynamicCast_AsDCCharacter_Base;             // 0x0128(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_394B[0x3];                                     // 0x0131(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_Array_Get_Item_1;                         // 0x0138(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_394C[0x4];                                     // 0x0144(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ADCCharacterBase*                       K2Node_DynamicCast_AsDCCharacter_Base_1;           // 0x0148(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_394D[0x3];                                     // 0x0151(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_3;            // 0x0154(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue_1;            // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue_1;                        // 0x015C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0160(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_FindLookAtRotation_ReturnValue;           // 0x0178(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0194(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0198(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_InRange_FloatFloat_ReturnValue;           // 0x019C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_394E[0x3];                                     // 0x019D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SphereOverlapActors_SphereRadius_ImplicitCast; // 0x01A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_394F[0x4];                                     // 0x01A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_InRange_FloatFloat_Value_ImplicitCast;    // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MonsterBPLibrary_C_Get_Actors_In_Range_And_Angle_From_Location) == 0x000008, "Wrong alignment on MonsterBPLibrary_C_Get_Actors_In_Range_And_Angle_From_Location");
static_assert(sizeof(MonsterBPLibrary_C_Get_Actors_In_Range_And_Angle_From_Location) == 0x0001B0, "Wrong size on MonsterBPLibrary_C_Get_Actors_In_Range_And_Angle_From_Location");
static_assert(offsetof(MonsterBPLibrary_C_Get_Actors_In_Range_And_Angle_From_Location, Location) == 0x000000, "Member 'MonsterBPLibrary_C_Get_Actors_In_Range_And_Angle_From_Location::Location' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Actors_In_Range_And_Angle_From_Location, Range) == 0x000018, "Member 'MonsterBPLibrary_C_Get_Actors_In_Range_And_Angle_From_Location::Range' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Actors_In_Range_And_Angle_From_Location, Direction) == 0x000020, "Member 'MonsterBPLibrary_C_Get_Actors_In_Range_And_Angle_From_Location::Direction' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Actors_In_Range_And_Angle_From_Location, Angle) == 0x000028, "Member 'MonsterBPLibrary_C_Get_Actors_In_Range_And_Angle_From_Location::Angle' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Actors_In_Range_And_Angle_From_Location, ActorsToIgnore) == 0x000030, "Member 'MonsterBPLibrary_C_Get_Actors_In_Range_And_Angle_From_Location::ActorsToIgnore' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Actors_In_Range_And_Angle_From_Location, __WorldContext) == 0x000040, "Member 'MonsterBPLibrary_C_Get_Actors_In_Range_And_Angle_From_Location::__WorldContext' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Actors_In_Range_And_Angle_From_Location, Result) == 0x000048, "Member 'MonsterBPLibrary_C_Get_Actors_In_Range_And_Angle_From_Location::Result' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Actors_In_Range_And_Angle_From_Location, DCCharacterBase) == 0x000050, "Member 'MonsterBPLibrary_C_Get_Actors_In_Range_And_Angle_From_Location::DCCharacterBase' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Actors_In_Range_And_Angle_From_Location, Local_Range) == 0x000060, "Member 'MonsterBPLibrary_C_Get_Actors_In_Range_And_Angle_From_Location::Local_Range' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Actors_In_Range_And_Angle_From_Location, Local_Location) == 0x000068, "Member 'MonsterBPLibrary_C_Get_Actors_In_Range_And_Angle_From_Location::Local_Location' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Actors_In_Range_And_Angle_From_Location, Native_Angle) == 0x000080, "Member 'MonsterBPLibrary_C_Get_Actors_In_Range_And_Angle_From_Location::Native_Angle' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Actors_In_Range_And_Angle_From_Location, Native_Direction) == 0x000088, "Member 'MonsterBPLibrary_C_Get_Actors_In_Range_And_Angle_From_Location::Native_Direction' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Actors_In_Range_And_Angle_From_Location, TargetArray) == 0x000090, "Member 'MonsterBPLibrary_C_Get_Actors_In_Range_And_Angle_From_Location::TargetArray' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Actors_In_Range_And_Angle_From_Location, Temp_int_Array_Index_Variable) == 0x0000A0, "Member 'MonsterBPLibrary_C_Get_Actors_In_Range_And_Angle_From_Location::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Actors_In_Range_And_Angle_From_Location, CallFunc_Get_Native_Angle_Return_Value) == 0x0000A8, "Member 'MonsterBPLibrary_C_Get_Actors_In_Range_And_Angle_From_Location::CallFunc_Get_Native_Angle_Return_Value' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Actors_In_Range_And_Angle_From_Location, CallFunc_Get_Native_Angle_Return_Value_1) == 0x0000B0, "Member 'MonsterBPLibrary_C_Get_Actors_In_Range_And_Angle_From_Location::CallFunc_Get_Native_Angle_Return_Value_1' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Actors_In_Range_And_Angle_From_Location, Temp_int_Loop_Counter_Variable) == 0x0000B8, "Member 'MonsterBPLibrary_C_Get_Actors_In_Range_And_Angle_From_Location::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Actors_In_Range_And_Angle_From_Location, CallFunc_Subtract_IntInt_ReturnValue) == 0x0000BC, "Member 'MonsterBPLibrary_C_Get_Actors_In_Range_And_Angle_From_Location::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Actors_In_Range_And_Angle_From_Location, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x0000C0, "Member 'MonsterBPLibrary_C_Get_Actors_In_Range_And_Angle_From_Location::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Actors_In_Range_And_Angle_From_Location, Temp_int_Array_Index_Variable_1) == 0x0000C4, "Member 'MonsterBPLibrary_C_Get_Actors_In_Range_And_Angle_From_Location::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Actors_In_Range_And_Angle_From_Location, Temp_int_Loop_Counter_Variable_1) == 0x0000C8, "Member 'MonsterBPLibrary_C_Get_Actors_In_Range_And_Angle_From_Location::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Actors_In_Range_And_Angle_From_Location, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x0000CC, "Member 'MonsterBPLibrary_C_Get_Actors_In_Range_And_Angle_From_Location::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Actors_In_Range_And_Angle_From_Location, CallFunc_GreaterEqual_IntInt_ReturnValue_1) == 0x0000D0, "Member 'MonsterBPLibrary_C_Get_Actors_In_Range_And_Angle_From_Location::CallFunc_GreaterEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Actors_In_Range_And_Angle_From_Location, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x0000D1, "Member 'MonsterBPLibrary_C_Get_Actors_In_Range_And_Angle_From_Location::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Actors_In_Range_And_Angle_From_Location, CallFunc_Add_DoubleDouble_ReturnValue) == 0x0000D8, "Member 'MonsterBPLibrary_C_Get_Actors_In_Range_And_Angle_From_Location::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Actors_In_Range_And_Angle_From_Location, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x0000E0, "Member 'MonsterBPLibrary_C_Get_Actors_In_Range_And_Angle_From_Location::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Actors_In_Range_And_Angle_From_Location, K2Node_MakeArray_Array) == 0x0000E8, "Member 'MonsterBPLibrary_C_Get_Actors_In_Range_And_Angle_From_Location::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Actors_In_Range_And_Angle_From_Location, CallFunc_SphereOverlapActors_OutActors) == 0x0000F8, "Member 'MonsterBPLibrary_C_Get_Actors_In_Range_And_Angle_From_Location::CallFunc_SphereOverlapActors_OutActors' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Actors_In_Range_And_Angle_From_Location, CallFunc_SphereOverlapActors_ReturnValue) == 0x000108, "Member 'MonsterBPLibrary_C_Get_Actors_In_Range_And_Angle_From_Location::CallFunc_SphereOverlapActors_ReturnValue' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Actors_In_Range_And_Angle_From_Location, CallFunc_Array_Length_ReturnValue) == 0x00010C, "Member 'MonsterBPLibrary_C_Get_Actors_In_Range_And_Angle_From_Location::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Actors_In_Range_And_Angle_From_Location, CallFunc_Subtract_IntInt_ReturnValue_2) == 0x000110, "Member 'MonsterBPLibrary_C_Get_Actors_In_Range_And_Angle_From_Location::CallFunc_Subtract_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Actors_In_Range_And_Angle_From_Location, CallFunc_Array_Get_Item) == 0x000118, "Member 'MonsterBPLibrary_C_Get_Actors_In_Range_And_Angle_From_Location::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Actors_In_Range_And_Angle_From_Location, CallFunc_Max_ReturnValue) == 0x000120, "Member 'MonsterBPLibrary_C_Get_Actors_In_Range_And_Angle_From_Location::CallFunc_Max_ReturnValue' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Actors_In_Range_And_Angle_From_Location, K2Node_DynamicCast_AsDCCharacter_Base) == 0x000128, "Member 'MonsterBPLibrary_C_Get_Actors_In_Range_And_Angle_From_Location::K2Node_DynamicCast_AsDCCharacter_Base' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Actors_In_Range_And_Angle_From_Location, K2Node_DynamicCast_bSuccess) == 0x000130, "Member 'MonsterBPLibrary_C_Get_Actors_In_Range_And_Angle_From_Location::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Actors_In_Range_And_Angle_From_Location, CallFunc_Array_AddUnique_ReturnValue) == 0x000134, "Member 'MonsterBPLibrary_C_Get_Actors_In_Range_And_Angle_From_Location::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Actors_In_Range_And_Angle_From_Location, CallFunc_Array_Get_Item_1) == 0x000138, "Member 'MonsterBPLibrary_C_Get_Actors_In_Range_And_Angle_From_Location::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Actors_In_Range_And_Angle_From_Location, CallFunc_Array_Length_ReturnValue_1) == 0x000140, "Member 'MonsterBPLibrary_C_Get_Actors_In_Range_And_Angle_From_Location::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Actors_In_Range_And_Angle_From_Location, K2Node_DynamicCast_AsDCCharacter_Base_1) == 0x000148, "Member 'MonsterBPLibrary_C_Get_Actors_In_Range_And_Angle_From_Location::K2Node_DynamicCast_AsDCCharacter_Base_1' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Actors_In_Range_And_Angle_From_Location, K2Node_DynamicCast_bSuccess_1) == 0x000150, "Member 'MonsterBPLibrary_C_Get_Actors_In_Range_And_Angle_From_Location::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Actors_In_Range_And_Angle_From_Location, CallFunc_Subtract_IntInt_ReturnValue_3) == 0x000154, "Member 'MonsterBPLibrary_C_Get_Actors_In_Range_And_Angle_From_Location::CallFunc_Subtract_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Actors_In_Range_And_Angle_From_Location, CallFunc_Array_AddUnique_ReturnValue_1) == 0x000158, "Member 'MonsterBPLibrary_C_Get_Actors_In_Range_And_Angle_From_Location::CallFunc_Array_AddUnique_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Actors_In_Range_And_Angle_From_Location, CallFunc_Max_ReturnValue_1) == 0x00015C, "Member 'MonsterBPLibrary_C_Get_Actors_In_Range_And_Angle_From_Location::CallFunc_Max_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Actors_In_Range_And_Angle_From_Location, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000160, "Member 'MonsterBPLibrary_C_Get_Actors_In_Range_And_Angle_From_Location::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Actors_In_Range_And_Angle_From_Location, CallFunc_FindLookAtRotation_ReturnValue) == 0x000178, "Member 'MonsterBPLibrary_C_Get_Actors_In_Range_And_Angle_From_Location::CallFunc_FindLookAtRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Actors_In_Range_And_Angle_From_Location, CallFunc_BreakRotator_Roll) == 0x000190, "Member 'MonsterBPLibrary_C_Get_Actors_In_Range_And_Angle_From_Location::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Actors_In_Range_And_Angle_From_Location, CallFunc_BreakRotator_Pitch) == 0x000194, "Member 'MonsterBPLibrary_C_Get_Actors_In_Range_And_Angle_From_Location::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Actors_In_Range_And_Angle_From_Location, CallFunc_BreakRotator_Yaw) == 0x000198, "Member 'MonsterBPLibrary_C_Get_Actors_In_Range_And_Angle_From_Location::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Actors_In_Range_And_Angle_From_Location, CallFunc_InRange_FloatFloat_ReturnValue) == 0x00019C, "Member 'MonsterBPLibrary_C_Get_Actors_In_Range_And_Angle_From_Location::CallFunc_InRange_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Actors_In_Range_And_Angle_From_Location, CallFunc_SphereOverlapActors_SphereRadius_ImplicitCast) == 0x0001A0, "Member 'MonsterBPLibrary_C_Get_Actors_In_Range_And_Angle_From_Location::CallFunc_SphereOverlapActors_SphereRadius_ImplicitCast' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Actors_In_Range_And_Angle_From_Location, CallFunc_InRange_FloatFloat_Value_ImplicitCast) == 0x0001A8, "Member 'MonsterBPLibrary_C_Get_Actors_In_Range_And_Angle_From_Location::CallFunc_InRange_FloatFloat_Value_ImplicitCast' has a wrong offset!");

// Function MonsterBPLibrary.MonsterBPLibrary_C.Get And Compare To BlackBoard Mode
// 0x0040 (0x0040 - 0x0000)
struct MonsterBPLibrary_C_Get_And_Compare_To_BlackBoard_Mode final
{
public:
	class ABP_DCMonsterBaseWithOptions_C*         DCMonsterBase;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	E_ModeType                                    Mode_Type;                                         // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3950[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3951[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBlackboardComponent*                   CallFunc_GetBlackboard_ReturnValue;                // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UBlackboardComponent*                   CallFunc_GetBlackboard_ReturnValue_1;              // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3952[0x3];                                     // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_MakeLiteralName_ReturnValue;              // 0x0034(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValueAsEnum_ReturnValue;               // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x003E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MonsterBPLibrary_C_Get_And_Compare_To_BlackBoard_Mode) == 0x000008, "Wrong alignment on MonsterBPLibrary_C_Get_And_Compare_To_BlackBoard_Mode");
static_assert(sizeof(MonsterBPLibrary_C_Get_And_Compare_To_BlackBoard_Mode) == 0x000040, "Wrong size on MonsterBPLibrary_C_Get_And_Compare_To_BlackBoard_Mode");
static_assert(offsetof(MonsterBPLibrary_C_Get_And_Compare_To_BlackBoard_Mode, DCMonsterBase) == 0x000000, "Member 'MonsterBPLibrary_C_Get_And_Compare_To_BlackBoard_Mode::DCMonsterBase' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_And_Compare_To_BlackBoard_Mode, Mode_Type) == 0x000008, "Member 'MonsterBPLibrary_C_Get_And_Compare_To_BlackBoard_Mode::Mode_Type' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_And_Compare_To_BlackBoard_Mode, __WorldContext) == 0x000010, "Member 'MonsterBPLibrary_C_Get_And_Compare_To_BlackBoard_Mode::__WorldContext' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_And_Compare_To_BlackBoard_Mode, Result) == 0x000018, "Member 'MonsterBPLibrary_C_Get_And_Compare_To_BlackBoard_Mode::Result' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_And_Compare_To_BlackBoard_Mode, CallFunc_GetBlackboard_ReturnValue) == 0x000020, "Member 'MonsterBPLibrary_C_Get_And_Compare_To_BlackBoard_Mode::CallFunc_GetBlackboard_ReturnValue' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_And_Compare_To_BlackBoard_Mode, CallFunc_GetBlackboard_ReturnValue_1) == 0x000028, "Member 'MonsterBPLibrary_C_Get_And_Compare_To_BlackBoard_Mode::CallFunc_GetBlackboard_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_And_Compare_To_BlackBoard_Mode, CallFunc_IsValid_ReturnValue) == 0x000030, "Member 'MonsterBPLibrary_C_Get_And_Compare_To_BlackBoard_Mode::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_And_Compare_To_BlackBoard_Mode, CallFunc_MakeLiteralName_ReturnValue) == 0x000034, "Member 'MonsterBPLibrary_C_Get_And_Compare_To_BlackBoard_Mode::CallFunc_MakeLiteralName_ReturnValue' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_And_Compare_To_BlackBoard_Mode, CallFunc_GetValueAsEnum_ReturnValue) == 0x00003C, "Member 'MonsterBPLibrary_C_Get_And_Compare_To_BlackBoard_Mode::CallFunc_GetValueAsEnum_ReturnValue' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_And_Compare_To_BlackBoard_Mode, CallFunc_GetValidValue_ReturnValue) == 0x00003D, "Member 'MonsterBPLibrary_C_Get_And_Compare_To_BlackBoard_Mode::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_And_Compare_To_BlackBoard_Mode, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00003E, "Member 'MonsterBPLibrary_C_Get_And_Compare_To_BlackBoard_Mode::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function MonsterBPLibrary.MonsterBPLibrary_C.Get Angle Vector From Actor
// 0x0110 (0x0110 - 0x0000)
struct MonsterBPLibrary_C_Get_Angle_Vector_From_Actor final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        Angle;                                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Distance;                                          // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Return_Valut;                                      // 0x0020(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0038(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Get_Native_Angle_Return_Value;            // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue;          // 0x0058(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x0070(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3953[0x4];                                     // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x00A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x00B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x00D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x00E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_A_ImplicitCast;          // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Yaw_ImplicitCast;             // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MonsterBPLibrary_C_Get_Angle_Vector_From_Actor) == 0x000008, "Wrong alignment on MonsterBPLibrary_C_Get_Angle_Vector_From_Actor");
static_assert(sizeof(MonsterBPLibrary_C_Get_Angle_Vector_From_Actor) == 0x000110, "Wrong size on MonsterBPLibrary_C_Get_Angle_Vector_From_Actor");
static_assert(offsetof(MonsterBPLibrary_C_Get_Angle_Vector_From_Actor, Actor) == 0x000000, "Member 'MonsterBPLibrary_C_Get_Angle_Vector_From_Actor::Actor' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Angle_Vector_From_Actor, Angle) == 0x000008, "Member 'MonsterBPLibrary_C_Get_Angle_Vector_From_Actor::Angle' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Angle_Vector_From_Actor, Distance) == 0x000010, "Member 'MonsterBPLibrary_C_Get_Angle_Vector_From_Actor::Distance' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Angle_Vector_From_Actor, __WorldContext) == 0x000018, "Member 'MonsterBPLibrary_C_Get_Angle_Vector_From_Actor::__WorldContext' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Angle_Vector_From_Actor, Return_Valut) == 0x000020, "Member 'MonsterBPLibrary_C_Get_Angle_Vector_From_Actor::Return_Valut' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Angle_Vector_From_Actor, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000038, "Member 'MonsterBPLibrary_C_Get_Angle_Vector_From_Actor::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Angle_Vector_From_Actor, CallFunc_Get_Native_Angle_Return_Value) == 0x000050, "Member 'MonsterBPLibrary_C_Get_Angle_Vector_From_Actor::CallFunc_Get_Native_Angle_Return_Value' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Angle_Vector_From_Actor, CallFunc_Conv_DoubleToVector_ReturnValue) == 0x000058, "Member 'MonsterBPLibrary_C_Get_Angle_Vector_From_Actor::CallFunc_Conv_DoubleToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Angle_Vector_From_Actor, CallFunc_K2_GetActorRotation_ReturnValue) == 0x000070, "Member 'MonsterBPLibrary_C_Get_Angle_Vector_From_Actor::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Angle_Vector_From_Actor, CallFunc_BreakRotator_Roll) == 0x000088, "Member 'MonsterBPLibrary_C_Get_Angle_Vector_From_Actor::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Angle_Vector_From_Actor, CallFunc_BreakRotator_Pitch) == 0x00008C, "Member 'MonsterBPLibrary_C_Get_Angle_Vector_From_Actor::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Angle_Vector_From_Actor, CallFunc_BreakRotator_Yaw) == 0x000090, "Member 'MonsterBPLibrary_C_Get_Angle_Vector_From_Actor::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Angle_Vector_From_Actor, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000098, "Member 'MonsterBPLibrary_C_Get_Angle_Vector_From_Actor::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Angle_Vector_From_Actor, CallFunc_MakeRotator_ReturnValue) == 0x0000A0, "Member 'MonsterBPLibrary_C_Get_Angle_Vector_From_Actor::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Angle_Vector_From_Actor, CallFunc_GetForwardVector_ReturnValue) == 0x0000B8, "Member 'MonsterBPLibrary_C_Get_Angle_Vector_From_Actor::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Angle_Vector_From_Actor, CallFunc_Multiply_VectorVector_ReturnValue) == 0x0000D0, "Member 'MonsterBPLibrary_C_Get_Angle_Vector_From_Actor::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Angle_Vector_From_Actor, CallFunc_Add_VectorVector_ReturnValue) == 0x0000E8, "Member 'MonsterBPLibrary_C_Get_Angle_Vector_From_Actor::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Angle_Vector_From_Actor, CallFunc_Add_DoubleDouble_A_ImplicitCast) == 0x000100, "Member 'MonsterBPLibrary_C_Get_Angle_Vector_From_Actor::CallFunc_Add_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Angle_Vector_From_Actor, CallFunc_MakeRotator_Yaw_ImplicitCast) == 0x000108, "Member 'MonsterBPLibrary_C_Get_Angle_Vector_From_Actor::CallFunc_MakeRotator_Yaw_ImplicitCast' has a wrong offset!");

// Function MonsterBPLibrary.MonsterBPLibrary_C.Get Angle Vector From Location
// 0x0108 (0x0108 - 0x0000)
struct MonsterBPLibrary_C_Get_Angle_Vector_From_Location final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               Rotation;                                          // 0x0018(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                        Angle;                                             // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Distance;                                          // 0x0038(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0040(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Return_Valut;                                      // 0x0048(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3954[0x4];                                     // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Get_Native_Angle_Return_Value;            // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue;          // 0x0078(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0098(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x00B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x00C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x00E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_A_ImplicitCast;          // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Yaw_ImplicitCast;             // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MonsterBPLibrary_C_Get_Angle_Vector_From_Location) == 0x000008, "Wrong alignment on MonsterBPLibrary_C_Get_Angle_Vector_From_Location");
static_assert(sizeof(MonsterBPLibrary_C_Get_Angle_Vector_From_Location) == 0x000108, "Wrong size on MonsterBPLibrary_C_Get_Angle_Vector_From_Location");
static_assert(offsetof(MonsterBPLibrary_C_Get_Angle_Vector_From_Location, Location) == 0x000000, "Member 'MonsterBPLibrary_C_Get_Angle_Vector_From_Location::Location' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Angle_Vector_From_Location, Rotation) == 0x000018, "Member 'MonsterBPLibrary_C_Get_Angle_Vector_From_Location::Rotation' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Angle_Vector_From_Location, Angle) == 0x000030, "Member 'MonsterBPLibrary_C_Get_Angle_Vector_From_Location::Angle' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Angle_Vector_From_Location, Distance) == 0x000038, "Member 'MonsterBPLibrary_C_Get_Angle_Vector_From_Location::Distance' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Angle_Vector_From_Location, __WorldContext) == 0x000040, "Member 'MonsterBPLibrary_C_Get_Angle_Vector_From_Location::__WorldContext' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Angle_Vector_From_Location, Return_Valut) == 0x000048, "Member 'MonsterBPLibrary_C_Get_Angle_Vector_From_Location::Return_Valut' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Angle_Vector_From_Location, CallFunc_BreakRotator_Roll) == 0x000060, "Member 'MonsterBPLibrary_C_Get_Angle_Vector_From_Location::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Angle_Vector_From_Location, CallFunc_BreakRotator_Pitch) == 0x000064, "Member 'MonsterBPLibrary_C_Get_Angle_Vector_From_Location::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Angle_Vector_From_Location, CallFunc_BreakRotator_Yaw) == 0x000068, "Member 'MonsterBPLibrary_C_Get_Angle_Vector_From_Location::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Angle_Vector_From_Location, CallFunc_Get_Native_Angle_Return_Value) == 0x000070, "Member 'MonsterBPLibrary_C_Get_Angle_Vector_From_Location::CallFunc_Get_Native_Angle_Return_Value' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Angle_Vector_From_Location, CallFunc_Conv_DoubleToVector_ReturnValue) == 0x000078, "Member 'MonsterBPLibrary_C_Get_Angle_Vector_From_Location::CallFunc_Conv_DoubleToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Angle_Vector_From_Location, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000090, "Member 'MonsterBPLibrary_C_Get_Angle_Vector_From_Location::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Angle_Vector_From_Location, CallFunc_MakeRotator_ReturnValue) == 0x000098, "Member 'MonsterBPLibrary_C_Get_Angle_Vector_From_Location::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Angle_Vector_From_Location, CallFunc_GetForwardVector_ReturnValue) == 0x0000B0, "Member 'MonsterBPLibrary_C_Get_Angle_Vector_From_Location::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Angle_Vector_From_Location, CallFunc_Multiply_VectorVector_ReturnValue) == 0x0000C8, "Member 'MonsterBPLibrary_C_Get_Angle_Vector_From_Location::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Angle_Vector_From_Location, CallFunc_Add_VectorVector_ReturnValue) == 0x0000E0, "Member 'MonsterBPLibrary_C_Get_Angle_Vector_From_Location::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Angle_Vector_From_Location, CallFunc_Add_DoubleDouble_A_ImplicitCast) == 0x0000F8, "Member 'MonsterBPLibrary_C_Get_Angle_Vector_From_Location::CallFunc_Add_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Angle_Vector_From_Location, CallFunc_MakeRotator_Yaw_ImplicitCast) == 0x000100, "Member 'MonsterBPLibrary_C_Get_Angle_Vector_From_Location::CallFunc_MakeRotator_Yaw_ImplicitCast' has a wrong offset!");

// Function MonsterBPLibrary.MonsterBPLibrary_C.Get Aoe Variables
// 0x0040 (0x0040 - 0x0000)
struct MonsterBPLibrary_C_Get_Aoe_Variables final
{
public:
	class AActor*                                 Instigator;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_AoeDefineBase_C*                    AsBP_Aoe_Define_Base;                              // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        Preceding_Time;                                    // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Firing_Time;                                       // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Destroying_Time;                                   // 0x0028(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AoeDefineBase_C*                    K2Node_DynamicCast_AsBP_Aoe_Define_Base;           // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MonsterBPLibrary_C_Get_Aoe_Variables) == 0x000008, "Wrong alignment on MonsterBPLibrary_C_Get_Aoe_Variables");
static_assert(sizeof(MonsterBPLibrary_C_Get_Aoe_Variables) == 0x000040, "Wrong size on MonsterBPLibrary_C_Get_Aoe_Variables");
static_assert(offsetof(MonsterBPLibrary_C_Get_Aoe_Variables, Instigator) == 0x000000, "Member 'MonsterBPLibrary_C_Get_Aoe_Variables::Instigator' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Aoe_Variables, __WorldContext) == 0x000008, "Member 'MonsterBPLibrary_C_Get_Aoe_Variables::__WorldContext' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Aoe_Variables, AsBP_Aoe_Define_Base) == 0x000010, "Member 'MonsterBPLibrary_C_Get_Aoe_Variables::AsBP_Aoe_Define_Base' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Aoe_Variables, Preceding_Time) == 0x000018, "Member 'MonsterBPLibrary_C_Get_Aoe_Variables::Preceding_Time' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Aoe_Variables, Firing_Time) == 0x000020, "Member 'MonsterBPLibrary_C_Get_Aoe_Variables::Firing_Time' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Aoe_Variables, Destroying_Time) == 0x000028, "Member 'MonsterBPLibrary_C_Get_Aoe_Variables::Destroying_Time' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Aoe_Variables, K2Node_DynamicCast_AsBP_Aoe_Define_Base) == 0x000030, "Member 'MonsterBPLibrary_C_Get_Aoe_Variables::K2Node_DynamicCast_AsBP_Aoe_Define_Base' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Aoe_Variables, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'MonsterBPLibrary_C_Get_Aoe_Variables::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function MonsterBPLibrary.MonsterBPLibrary_C.Get BB HPRatio
// 0x0038 (0x0038 - 0x0000)
struct MonsterBPLibrary_C_Get_BB_HPRatio final
{
public:
	class ABP_DCMonsterBaseWithOptions_C*         MonsterBase;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        HPRatio;                                           // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_MakeLiteralName_ReturnValue;              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBlackboardComponent*                   CallFunc_GetBlackboard_ReturnValue;                // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetValueAsFloat_ReturnValue;              // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3955[0x4];                                     // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_FunctionResult_HPRatio_ImplicitCast;        // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MonsterBPLibrary_C_Get_BB_HPRatio) == 0x000008, "Wrong alignment on MonsterBPLibrary_C_Get_BB_HPRatio");
static_assert(sizeof(MonsterBPLibrary_C_Get_BB_HPRatio) == 0x000038, "Wrong size on MonsterBPLibrary_C_Get_BB_HPRatio");
static_assert(offsetof(MonsterBPLibrary_C_Get_BB_HPRatio, MonsterBase) == 0x000000, "Member 'MonsterBPLibrary_C_Get_BB_HPRatio::MonsterBase' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_BB_HPRatio, __WorldContext) == 0x000008, "Member 'MonsterBPLibrary_C_Get_BB_HPRatio::__WorldContext' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_BB_HPRatio, HPRatio) == 0x000010, "Member 'MonsterBPLibrary_C_Get_BB_HPRatio::HPRatio' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_BB_HPRatio, CallFunc_MakeLiteralName_ReturnValue) == 0x000018, "Member 'MonsterBPLibrary_C_Get_BB_HPRatio::CallFunc_MakeLiteralName_ReturnValue' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_BB_HPRatio, CallFunc_GetBlackboard_ReturnValue) == 0x000020, "Member 'MonsterBPLibrary_C_Get_BB_HPRatio::CallFunc_GetBlackboard_ReturnValue' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_BB_HPRatio, CallFunc_GetValueAsFloat_ReturnValue) == 0x000028, "Member 'MonsterBPLibrary_C_Get_BB_HPRatio::CallFunc_GetValueAsFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_BB_HPRatio, K2Node_FunctionResult_HPRatio_ImplicitCast) == 0x000030, "Member 'MonsterBPLibrary_C_Get_BB_HPRatio::K2Node_FunctionResult_HPRatio_ImplicitCast' has a wrong offset!");

// Function MonsterBPLibrary.MonsterBPLibrary_C.Get BB Phase
// 0x0038 (0x0038 - 0x0000)
struct MonsterBPLibrary_C_Get_BB_Phase final
{
public:
	class ABP_DCMonsterBaseWithOptions_C*         MonsterBase;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Phase;                                             // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_MakeLiteralName_ReturnValue;              // 0x0014(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3956[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AAIController*                          CallFunc_GetAIController_ReturnValue;              // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBlackboardComponent*                   CallFunc_GetBlackboard_ReturnValue;                // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetValueAsInt_ReturnValue;                // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MonsterBPLibrary_C_Get_BB_Phase) == 0x000008, "Wrong alignment on MonsterBPLibrary_C_Get_BB_Phase");
static_assert(sizeof(MonsterBPLibrary_C_Get_BB_Phase) == 0x000038, "Wrong size on MonsterBPLibrary_C_Get_BB_Phase");
static_assert(offsetof(MonsterBPLibrary_C_Get_BB_Phase, MonsterBase) == 0x000000, "Member 'MonsterBPLibrary_C_Get_BB_Phase::MonsterBase' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_BB_Phase, __WorldContext) == 0x000008, "Member 'MonsterBPLibrary_C_Get_BB_Phase::__WorldContext' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_BB_Phase, Phase) == 0x000010, "Member 'MonsterBPLibrary_C_Get_BB_Phase::Phase' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_BB_Phase, CallFunc_MakeLiteralName_ReturnValue) == 0x000014, "Member 'MonsterBPLibrary_C_Get_BB_Phase::CallFunc_MakeLiteralName_ReturnValue' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_BB_Phase, CallFunc_GetAIController_ReturnValue) == 0x000020, "Member 'MonsterBPLibrary_C_Get_BB_Phase::CallFunc_GetAIController_ReturnValue' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_BB_Phase, CallFunc_GetBlackboard_ReturnValue) == 0x000028, "Member 'MonsterBPLibrary_C_Get_BB_Phase::CallFunc_GetBlackboard_ReturnValue' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_BB_Phase, CallFunc_GetValueAsInt_ReturnValue) == 0x000030, "Member 'MonsterBPLibrary_C_Get_BB_Phase::CallFunc_GetValueAsInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_BB_Phase, CallFunc_IsValid_ReturnValue) == 0x000034, "Member 'MonsterBPLibrary_C_Get_BB_Phase::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function MonsterBPLibrary.MonsterBPLibrary_C.Get BB Probability
// 0x0038 (0x0038 - 0x0000)
struct MonsterBPLibrary_C_Get_BB_Probability final
{
public:
	class ABP_DCMonsterBaseWithOptions_C*         MonsterBase;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        Probability;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_MakeLiteralName_ReturnValue;              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBlackboardComponent*                   CallFunc_GetBlackboard_ReturnValue;                // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetValueAsFloat_ReturnValue;              // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3957[0x4];                                     // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_FunctionResult_Probability_ImplicitCast;    // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MonsterBPLibrary_C_Get_BB_Probability) == 0x000008, "Wrong alignment on MonsterBPLibrary_C_Get_BB_Probability");
static_assert(sizeof(MonsterBPLibrary_C_Get_BB_Probability) == 0x000038, "Wrong size on MonsterBPLibrary_C_Get_BB_Probability");
static_assert(offsetof(MonsterBPLibrary_C_Get_BB_Probability, MonsterBase) == 0x000000, "Member 'MonsterBPLibrary_C_Get_BB_Probability::MonsterBase' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_BB_Probability, __WorldContext) == 0x000008, "Member 'MonsterBPLibrary_C_Get_BB_Probability::__WorldContext' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_BB_Probability, Probability) == 0x000010, "Member 'MonsterBPLibrary_C_Get_BB_Probability::Probability' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_BB_Probability, CallFunc_MakeLiteralName_ReturnValue) == 0x000018, "Member 'MonsterBPLibrary_C_Get_BB_Probability::CallFunc_MakeLiteralName_ReturnValue' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_BB_Probability, CallFunc_GetBlackboard_ReturnValue) == 0x000020, "Member 'MonsterBPLibrary_C_Get_BB_Probability::CallFunc_GetBlackboard_ReturnValue' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_BB_Probability, CallFunc_GetValueAsFloat_ReturnValue) == 0x000028, "Member 'MonsterBPLibrary_C_Get_BB_Probability::CallFunc_GetValueAsFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_BB_Probability, K2Node_FunctionResult_Probability_ImplicitCast) == 0x000030, "Member 'MonsterBPLibrary_C_Get_BB_Probability::K2Node_FunctionResult_Probability_ImplicitCast' has a wrong offset!");

// Function MonsterBPLibrary.MonsterBPLibrary_C.Get BB Target Actor
// 0x0048 (0x0048 - 0x0000)
struct MonsterBPLibrary_C_Get_BB_Target_Actor final
{
public:
	class ABP_DCMonsterBaseWithOptions_C*         MonsterBaseWithOptions;                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3958[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ADCCharacterBase*                       DCCharacterBase;                                   // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBlackboardComponent*                   CallFunc_GetBlackboard_ReturnValue;                // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_MakeLiteralName_ReturnValue;              // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_GetValueAsObject_ReturnValue;             // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ADCCharacterBase*                       K2Node_DynamicCast_AsDCCharacter_Base;             // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MonsterBPLibrary_C_Get_BB_Target_Actor) == 0x000008, "Wrong alignment on MonsterBPLibrary_C_Get_BB_Target_Actor");
static_assert(sizeof(MonsterBPLibrary_C_Get_BB_Target_Actor) == 0x000048, "Wrong size on MonsterBPLibrary_C_Get_BB_Target_Actor");
static_assert(offsetof(MonsterBPLibrary_C_Get_BB_Target_Actor, MonsterBaseWithOptions) == 0x000000, "Member 'MonsterBPLibrary_C_Get_BB_Target_Actor::MonsterBaseWithOptions' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_BB_Target_Actor, __WorldContext) == 0x000008, "Member 'MonsterBPLibrary_C_Get_BB_Target_Actor::__WorldContext' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_BB_Target_Actor, Result) == 0x000010, "Member 'MonsterBPLibrary_C_Get_BB_Target_Actor::Result' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_BB_Target_Actor, DCCharacterBase) == 0x000018, "Member 'MonsterBPLibrary_C_Get_BB_Target_Actor::DCCharacterBase' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_BB_Target_Actor, CallFunc_GetBlackboard_ReturnValue) == 0x000020, "Member 'MonsterBPLibrary_C_Get_BB_Target_Actor::CallFunc_GetBlackboard_ReturnValue' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_BB_Target_Actor, CallFunc_MakeLiteralName_ReturnValue) == 0x000028, "Member 'MonsterBPLibrary_C_Get_BB_Target_Actor::CallFunc_MakeLiteralName_ReturnValue' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_BB_Target_Actor, CallFunc_GetValueAsObject_ReturnValue) == 0x000030, "Member 'MonsterBPLibrary_C_Get_BB_Target_Actor::CallFunc_GetValueAsObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_BB_Target_Actor, K2Node_DynamicCast_AsDCCharacter_Base) == 0x000038, "Member 'MonsterBPLibrary_C_Get_BB_Target_Actor::K2Node_DynamicCast_AsDCCharacter_Base' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_BB_Target_Actor, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'MonsterBPLibrary_C_Get_BB_Target_Actor::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_BB_Target_Actor, CallFunc_IsValid_ReturnValue) == 0x000041, "Member 'MonsterBPLibrary_C_Get_BB_Target_Actor::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function MonsterBPLibrary.MonsterBPLibrary_C.Get Debuff Immune Tags
// 0x0040 (0x0040 - 0x0000)
struct MonsterBPLibrary_C_Get_Debuff_Immune_Tags final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<struct FGameplayTag>                   Debuff_Immune_Tags;                                // 0x0008(0x0010)(Parm, OutParm)
	bool                                          UnableMove;                                        // 0x0018(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Trap;                                              // 0x0019(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          KnockBack;                                         // 0x001A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Impact;                                            // 0x001B(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Fear;                                              // 0x001C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3959[0x3];                                     // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FGameplayTag>                   DebuffImmunTags;                                   // 0x0020(0x0010)(Edit, BlueprintVisible)
	TArray<struct FGameplayTag>                   K2Node_MakeArray_Array;                            // 0x0030(0x0010)(ReferenceParm)
};
static_assert(alignof(MonsterBPLibrary_C_Get_Debuff_Immune_Tags) == 0x000008, "Wrong alignment on MonsterBPLibrary_C_Get_Debuff_Immune_Tags");
static_assert(sizeof(MonsterBPLibrary_C_Get_Debuff_Immune_Tags) == 0x000040, "Wrong size on MonsterBPLibrary_C_Get_Debuff_Immune_Tags");
static_assert(offsetof(MonsterBPLibrary_C_Get_Debuff_Immune_Tags, __WorldContext) == 0x000000, "Member 'MonsterBPLibrary_C_Get_Debuff_Immune_Tags::__WorldContext' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Debuff_Immune_Tags, Debuff_Immune_Tags) == 0x000008, "Member 'MonsterBPLibrary_C_Get_Debuff_Immune_Tags::Debuff_Immune_Tags' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Debuff_Immune_Tags, UnableMove) == 0x000018, "Member 'MonsterBPLibrary_C_Get_Debuff_Immune_Tags::UnableMove' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Debuff_Immune_Tags, Trap) == 0x000019, "Member 'MonsterBPLibrary_C_Get_Debuff_Immune_Tags::Trap' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Debuff_Immune_Tags, KnockBack) == 0x00001A, "Member 'MonsterBPLibrary_C_Get_Debuff_Immune_Tags::KnockBack' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Debuff_Immune_Tags, Impact) == 0x00001B, "Member 'MonsterBPLibrary_C_Get_Debuff_Immune_Tags::Impact' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Debuff_Immune_Tags, Fear) == 0x00001C, "Member 'MonsterBPLibrary_C_Get_Debuff_Immune_Tags::Fear' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Debuff_Immune_Tags, DebuffImmunTags) == 0x000020, "Member 'MonsterBPLibrary_C_Get_Debuff_Immune_Tags::DebuffImmunTags' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Debuff_Immune_Tags, K2Node_MakeArray_Array) == 0x000030, "Member 'MonsterBPLibrary_C_Get_Debuff_Immune_Tags::K2Node_MakeArray_Array' has a wrong offset!");

// Function MonsterBPLibrary.MonsterBPLibrary_C.Get Direction From Angle
// 0x0020 (0x0020 - 0x0000)
struct MonsterBPLibrary_C_Get_Direction_From_Angle final
{
public:
	double                                        Angle;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	E_Direction                                   Direction;                                         // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_InRange_FloatFloat_ReturnValue;           // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_InRange_FloatFloat_ReturnValue_1;         // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_InRange_FloatFloat_ReturnValue_2;         // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_InRange_FloatFloat_ReturnValue_3;         // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x0017(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_InRange_FloatFloat_ReturnValue_4;         // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MonsterBPLibrary_C_Get_Direction_From_Angle) == 0x000008, "Wrong alignment on MonsterBPLibrary_C_Get_Direction_From_Angle");
static_assert(sizeof(MonsterBPLibrary_C_Get_Direction_From_Angle) == 0x000020, "Wrong size on MonsterBPLibrary_C_Get_Direction_From_Angle");
static_assert(offsetof(MonsterBPLibrary_C_Get_Direction_From_Angle, Angle) == 0x000000, "Member 'MonsterBPLibrary_C_Get_Direction_From_Angle::Angle' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Direction_From_Angle, __WorldContext) == 0x000008, "Member 'MonsterBPLibrary_C_Get_Direction_From_Angle::__WorldContext' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Direction_From_Angle, Direction) == 0x000010, "Member 'MonsterBPLibrary_C_Get_Direction_From_Angle::Direction' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Direction_From_Angle, CallFunc_InRange_FloatFloat_ReturnValue) == 0x000011, "Member 'MonsterBPLibrary_C_Get_Direction_From_Angle::CallFunc_InRange_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Direction_From_Angle, CallFunc_InRange_FloatFloat_ReturnValue_1) == 0x000012, "Member 'MonsterBPLibrary_C_Get_Direction_From_Angle::CallFunc_InRange_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Direction_From_Angle, CallFunc_Not_PreBool_ReturnValue) == 0x000013, "Member 'MonsterBPLibrary_C_Get_Direction_From_Angle::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Direction_From_Angle, CallFunc_Not_PreBool_ReturnValue_1) == 0x000014, "Member 'MonsterBPLibrary_C_Get_Direction_From_Angle::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Direction_From_Angle, CallFunc_InRange_FloatFloat_ReturnValue_2) == 0x000015, "Member 'MonsterBPLibrary_C_Get_Direction_From_Angle::CallFunc_InRange_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Direction_From_Angle, CallFunc_InRange_FloatFloat_ReturnValue_3) == 0x000016, "Member 'MonsterBPLibrary_C_Get_Direction_From_Angle::CallFunc_InRange_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Direction_From_Angle, CallFunc_Not_PreBool_ReturnValue_2) == 0x000017, "Member 'MonsterBPLibrary_C_Get_Direction_From_Angle::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Direction_From_Angle, CallFunc_InRange_FloatFloat_ReturnValue_4) == 0x000018, "Member 'MonsterBPLibrary_C_Get_Direction_From_Angle::CallFunc_InRange_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Direction_From_Angle, CallFunc_BooleanOR_ReturnValue) == 0x000019, "Member 'MonsterBPLibrary_C_Get_Direction_From_Angle::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Direction_From_Angle, CallFunc_Not_PreBool_ReturnValue_3) == 0x00001A, "Member 'MonsterBPLibrary_C_Get_Direction_From_Angle::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");

// Function MonsterBPLibrary.MonsterBPLibrary_C.Get Direction Vector
// 0x0358 (0x0358 - 0x0000)
struct MonsterBPLibrary_C_Get_Direction_Vector final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	E_Direction                                   Direction;                                         // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_395A[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Distance;                                          // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Result_Vector;                                     // 0x0020(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x0038(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue;          // 0x0050(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetUpVector_ReturnValue;                  // 0x0068(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetUpVector_ReturnValue_1;                // 0x0080(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetRightVector_ReturnValue;               // 0x0098(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetRightVector_ReturnValue_1;             // 0x00B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x00C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x00F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue_1;           // 0x0110(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_1;                          // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_1;                          // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_1;                          // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue_1;        // 0x0148(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue_2;        // 0x0160(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_1;      // 0x0178(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_2;      // 0x0190(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_2;                          // 0x01B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_2;                          // 0x01B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_2;                          // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue_3;        // 0x01C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x01E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_3;      // 0x01F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue_4;        // 0x0210(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_3;                          // 0x0228(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_3;                          // 0x0230(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_3;                          // 0x0238(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_4;      // 0x0240(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x0258(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0270(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0278(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_395B[0x7];                                     // 0x0279(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue_5;        // 0x0280(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0298(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_5;      // 0x02B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x02C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x02E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_2;           // 0x02F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_3;           // 0x0310(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_4;           // 0x0328(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_5;           // 0x0340(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MonsterBPLibrary_C_Get_Direction_Vector) == 0x000008, "Wrong alignment on MonsterBPLibrary_C_Get_Direction_Vector");
static_assert(sizeof(MonsterBPLibrary_C_Get_Direction_Vector) == 0x000358, "Wrong size on MonsterBPLibrary_C_Get_Direction_Vector");
static_assert(offsetof(MonsterBPLibrary_C_Get_Direction_Vector, Actor) == 0x000000, "Member 'MonsterBPLibrary_C_Get_Direction_Vector::Actor' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Direction_Vector, Direction) == 0x000008, "Member 'MonsterBPLibrary_C_Get_Direction_Vector::Direction' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Direction_Vector, Distance) == 0x000010, "Member 'MonsterBPLibrary_C_Get_Direction_Vector::Distance' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Direction_Vector, __WorldContext) == 0x000018, "Member 'MonsterBPLibrary_C_Get_Direction_Vector::__WorldContext' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Direction_Vector, Result_Vector) == 0x000020, "Member 'MonsterBPLibrary_C_Get_Direction_Vector::Result_Vector' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Direction_Vector, CallFunc_K2_GetActorRotation_ReturnValue) == 0x000038, "Member 'MonsterBPLibrary_C_Get_Direction_Vector::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Direction_Vector, CallFunc_Conv_DoubleToVector_ReturnValue) == 0x000050, "Member 'MonsterBPLibrary_C_Get_Direction_Vector::CallFunc_Conv_DoubleToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Direction_Vector, CallFunc_GetUpVector_ReturnValue) == 0x000068, "Member 'MonsterBPLibrary_C_Get_Direction_Vector::CallFunc_GetUpVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Direction_Vector, CallFunc_GetUpVector_ReturnValue_1) == 0x000080, "Member 'MonsterBPLibrary_C_Get_Direction_Vector::CallFunc_GetUpVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Direction_Vector, CallFunc_GetRightVector_ReturnValue) == 0x000098, "Member 'MonsterBPLibrary_C_Get_Direction_Vector::CallFunc_GetRightVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Direction_Vector, CallFunc_GetRightVector_ReturnValue_1) == 0x0000B0, "Member 'MonsterBPLibrary_C_Get_Direction_Vector::CallFunc_GetRightVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Direction_Vector, CallFunc_Multiply_VectorVector_ReturnValue) == 0x0000C8, "Member 'MonsterBPLibrary_C_Get_Direction_Vector::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Direction_Vector, CallFunc_BreakVector_X) == 0x0000E0, "Member 'MonsterBPLibrary_C_Get_Direction_Vector::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Direction_Vector, CallFunc_BreakVector_Y) == 0x0000E8, "Member 'MonsterBPLibrary_C_Get_Direction_Vector::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Direction_Vector, CallFunc_BreakVector_Z) == 0x0000F0, "Member 'MonsterBPLibrary_C_Get_Direction_Vector::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Direction_Vector, CallFunc_GetForwardVector_ReturnValue) == 0x0000F8, "Member 'MonsterBPLibrary_C_Get_Direction_Vector::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Direction_Vector, CallFunc_GetForwardVector_ReturnValue_1) == 0x000110, "Member 'MonsterBPLibrary_C_Get_Direction_Vector::CallFunc_GetForwardVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Direction_Vector, CallFunc_BreakVector_X_1) == 0x000128, "Member 'MonsterBPLibrary_C_Get_Direction_Vector::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Direction_Vector, CallFunc_BreakVector_Y_1) == 0x000130, "Member 'MonsterBPLibrary_C_Get_Direction_Vector::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Direction_Vector, CallFunc_BreakVector_Z_1) == 0x000138, "Member 'MonsterBPLibrary_C_Get_Direction_Vector::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Direction_Vector, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000140, "Member 'MonsterBPLibrary_C_Get_Direction_Vector::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Direction_Vector, CallFunc_Conv_DoubleToVector_ReturnValue_1) == 0x000148, "Member 'MonsterBPLibrary_C_Get_Direction_Vector::CallFunc_Conv_DoubleToVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Direction_Vector, CallFunc_Conv_DoubleToVector_ReturnValue_2) == 0x000160, "Member 'MonsterBPLibrary_C_Get_Direction_Vector::CallFunc_Conv_DoubleToVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Direction_Vector, CallFunc_Multiply_VectorVector_ReturnValue_1) == 0x000178, "Member 'MonsterBPLibrary_C_Get_Direction_Vector::CallFunc_Multiply_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Direction_Vector, CallFunc_Multiply_VectorVector_ReturnValue_2) == 0x000190, "Member 'MonsterBPLibrary_C_Get_Direction_Vector::CallFunc_Multiply_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Direction_Vector, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x0001A8, "Member 'MonsterBPLibrary_C_Get_Direction_Vector::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Direction_Vector, CallFunc_BreakVector_X_2) == 0x0001B0, "Member 'MonsterBPLibrary_C_Get_Direction_Vector::CallFunc_BreakVector_X_2' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Direction_Vector, CallFunc_BreakVector_Y_2) == 0x0001B8, "Member 'MonsterBPLibrary_C_Get_Direction_Vector::CallFunc_BreakVector_Y_2' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Direction_Vector, CallFunc_BreakVector_Z_2) == 0x0001C0, "Member 'MonsterBPLibrary_C_Get_Direction_Vector::CallFunc_BreakVector_Z_2' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Direction_Vector, CallFunc_Conv_DoubleToVector_ReturnValue_3) == 0x0001C8, "Member 'MonsterBPLibrary_C_Get_Direction_Vector::CallFunc_Conv_DoubleToVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Direction_Vector, CallFunc_MakeVector_ReturnValue) == 0x0001E0, "Member 'MonsterBPLibrary_C_Get_Direction_Vector::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Direction_Vector, CallFunc_Multiply_VectorVector_ReturnValue_3) == 0x0001F8, "Member 'MonsterBPLibrary_C_Get_Direction_Vector::CallFunc_Multiply_VectorVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Direction_Vector, CallFunc_Conv_DoubleToVector_ReturnValue_4) == 0x000210, "Member 'MonsterBPLibrary_C_Get_Direction_Vector::CallFunc_Conv_DoubleToVector_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Direction_Vector, CallFunc_BreakVector_X_3) == 0x000228, "Member 'MonsterBPLibrary_C_Get_Direction_Vector::CallFunc_BreakVector_X_3' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Direction_Vector, CallFunc_BreakVector_Y_3) == 0x000230, "Member 'MonsterBPLibrary_C_Get_Direction_Vector::CallFunc_BreakVector_Y_3' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Direction_Vector, CallFunc_BreakVector_Z_3) == 0x000238, "Member 'MonsterBPLibrary_C_Get_Direction_Vector::CallFunc_BreakVector_Z_3' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Direction_Vector, CallFunc_Multiply_VectorVector_ReturnValue_4) == 0x000240, "Member 'MonsterBPLibrary_C_Get_Direction_Vector::CallFunc_Multiply_VectorVector_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Direction_Vector, CallFunc_MakeVector_ReturnValue_1) == 0x000258, "Member 'MonsterBPLibrary_C_Get_Direction_Vector::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Direction_Vector, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000270, "Member 'MonsterBPLibrary_C_Get_Direction_Vector::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Direction_Vector, K2Node_SwitchEnum_CmpSuccess) == 0x000278, "Member 'MonsterBPLibrary_C_Get_Direction_Vector::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Direction_Vector, CallFunc_Conv_DoubleToVector_ReturnValue_5) == 0x000280, "Member 'MonsterBPLibrary_C_Get_Direction_Vector::CallFunc_Conv_DoubleToVector_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Direction_Vector, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000298, "Member 'MonsterBPLibrary_C_Get_Direction_Vector::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Direction_Vector, CallFunc_Multiply_VectorVector_ReturnValue_5) == 0x0002B0, "Member 'MonsterBPLibrary_C_Get_Direction_Vector::CallFunc_Multiply_VectorVector_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Direction_Vector, CallFunc_Add_VectorVector_ReturnValue) == 0x0002C8, "Member 'MonsterBPLibrary_C_Get_Direction_Vector::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Direction_Vector, CallFunc_Add_VectorVector_ReturnValue_1) == 0x0002E0, "Member 'MonsterBPLibrary_C_Get_Direction_Vector::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Direction_Vector, CallFunc_Add_VectorVector_ReturnValue_2) == 0x0002F8, "Member 'MonsterBPLibrary_C_Get_Direction_Vector::CallFunc_Add_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Direction_Vector, CallFunc_Add_VectorVector_ReturnValue_3) == 0x000310, "Member 'MonsterBPLibrary_C_Get_Direction_Vector::CallFunc_Add_VectorVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Direction_Vector, CallFunc_Add_VectorVector_ReturnValue_4) == 0x000328, "Member 'MonsterBPLibrary_C_Get_Direction_Vector::CallFunc_Add_VectorVector_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Direction_Vector, CallFunc_Add_VectorVector_ReturnValue_5) == 0x000340, "Member 'MonsterBPLibrary_C_Get_Direction_Vector::CallFunc_Add_VectorVector_ReturnValue_5' has a wrong offset!");

// Function MonsterBPLibrary.MonsterBPLibrary_C.Get Enemies In Range And Angle From Actor
// 0x02F8 (0x02F8 - 0x0000)
struct MonsterBPLibrary_C_Get_Enemies_In_Range_And_Angle_From_Actor final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Result_By_TargetActor;                             // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Get_from_Combat_Area;                              // 0x0009(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_395C[0x6];                                     // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Min_Range;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Max_Range;                                         // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Direction;                                         // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Angle;                                             // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          DrawDebugArea;                                     // 0x0030(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_395D[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0038(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0040(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_395E[0x7];                                     // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ADCCharacterBase*>               DCCharacterBase;                                   // 0x0048(0x0010)(Parm, OutParm)
	double                                        Max_Z_Angle_Origin;                                // 0x0058(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Max_Z_Angle;                                       // 0x0060(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Min_Z_Angle;                                       // 0x0068(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_Result_By_TargetActor;                        // 0x0070(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_395F[0x7];                                     // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_DCMonsterBaseWithOptions_C*         Caster_BP;                                         // 0x0078(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Caster;                                            // 0x0080(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_Angle;                                        // 0x0088(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_Direction;                                    // 0x0090(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_MaxRange;                                     // 0x0098(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_MinRange;                                     // 0x00A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ADCCharacterBase*>               TargetArray;                                       // 0x00A8(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3960[0x3];                                     // 0x00C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_1;        // 0x00D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3961[0x3];                                     // 0x00D5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x00DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsNotEmpty_ReturnValue;             // 0x00DD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x00DE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3962[0x1];                                     // 0x00DF(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_2;            // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ADCCharacterBase*                       CallFunc_Array_Get_Item;                           // 0x00E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3963[0x7];                                     // 0x00F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Get_Enemy_Angle_From_Actor_Return_Value;  // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_2;        // 0x0104(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3964[0x3];                                     // 0x0105(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_3;            // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue;                          // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_InRange_FloatFloat_ReturnValue;           // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Get_BB_Target_Actor_Result;               // 0x0111(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3965[0x6];                                     // 0x0112(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ADCCharacterBase*                       CallFunc_Get_BB_Target_Actor_DCCharacterBase;      // 0x0118(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsNotEmpty_ReturnValue_1;           // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0121(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3966[0x6];                                     // 0x0122(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ADCCharacterBase*                       CallFunc_Array_Get_Item_1;                         // 0x0128(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue_1;           // 0x0134(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3967[0x3];                                     // 0x0135(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_4;            // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3968[0x4];                                     // 0x013C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Get_Enemy_Angle_From_Actor_Return_Value_1; // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue_1;                        // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_InRange_FloatFloat_ReturnValue_1;         // 0x014C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_InRange_FloatFloat_ReturnValue_2;         // 0x014D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x014E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3969[0x1];                                     // 0x014F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x0150(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x016C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_396A[0x4];                                     // 0x0174(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Get_Native_Angle_Return_Value;            // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue_1;        // 0x0190(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll_1;                      // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_1;                     // 0x01AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_1;                       // 0x01B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_396B[0x4];                                     // 0x01B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x01B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_2;           // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_DCMonsterBaseWithOptions_C*         K2Node_DynamicCast_AsBP_DCMonster_Base_with_Options; // 0x01C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x01D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_396C[0x7];                                     // 0x01D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ADCCharacterBase*                       K2Node_DynamicCast_AsDCCharacter_Base;             // 0x01D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x01E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_396D[0x7];                                     // 0x01E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue_2;        // 0x01E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetCapsuleBottomLocation_ReturnValue;     // 0x0200(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll_2;                      // 0x0218(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_2;                     // 0x021C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_2;                       // 0x0220(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_396E[0x4];                                     // 0x0224(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector_X;                            // 0x0228(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0230(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0238(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_3;           // 0x0240(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0248(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0260(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x0278(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ADCCharacterBase*                       CallFunc_Array_Get_Item_2;                         // 0x0290(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0298(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue_2;           // 0x029C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_396F[0x3];                                     // 0x029D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_5;            // 0x02A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDistanceTo_ReturnValue;                // 0x02A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue_2;                        // 0x02A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue_1;          // 0x02AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3970[0x3];                                     // 0x02AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Get_Native_Angle_Return_Value_1;          // 0x02B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetAllTargetArray_ReturnValue;            // 0x02B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FilterTargetsWithinDistance_ReturnValue;  // 0x02B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3971[0x6];                                     // 0x02BA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_A_ImplicitCast;          // 0x02C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FilterTargetsWithinDistance_Distance_ImplicitCast; // 0x02C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3972[0x4];                                     // 0x02CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_A_ImplicitCast_1;        // 0x02D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_DrawDebugConeInDegrees_AngleWidth_ImplicitCast; // 0x02D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_DrawDebugConeInDegrees_Length_ImplicitCast; // 0x02DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_A_ImplicitCast_2;        // 0x02E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Yaw_ImplicitCast;             // 0x02E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3973[0x4];                                     // 0x02EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Less_DoubleDouble_A_ImplicitCast;         // 0x02F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MonsterBPLibrary_C_Get_Enemies_In_Range_And_Angle_From_Actor) == 0x000008, "Wrong alignment on MonsterBPLibrary_C_Get_Enemies_In_Range_And_Angle_From_Actor");
static_assert(sizeof(MonsterBPLibrary_C_Get_Enemies_In_Range_And_Angle_From_Actor) == 0x0002F8, "Wrong size on MonsterBPLibrary_C_Get_Enemies_In_Range_And_Angle_From_Actor");
static_assert(offsetof(MonsterBPLibrary_C_Get_Enemies_In_Range_And_Angle_From_Actor, Actor) == 0x000000, "Member 'MonsterBPLibrary_C_Get_Enemies_In_Range_And_Angle_From_Actor::Actor' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Enemies_In_Range_And_Angle_From_Actor, Result_By_TargetActor) == 0x000008, "Member 'MonsterBPLibrary_C_Get_Enemies_In_Range_And_Angle_From_Actor::Result_By_TargetActor' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Enemies_In_Range_And_Angle_From_Actor, Get_from_Combat_Area) == 0x000009, "Member 'MonsterBPLibrary_C_Get_Enemies_In_Range_And_Angle_From_Actor::Get_from_Combat_Area' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Enemies_In_Range_And_Angle_From_Actor, Min_Range) == 0x000010, "Member 'MonsterBPLibrary_C_Get_Enemies_In_Range_And_Angle_From_Actor::Min_Range' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Enemies_In_Range_And_Angle_From_Actor, Max_Range) == 0x000018, "Member 'MonsterBPLibrary_C_Get_Enemies_In_Range_And_Angle_From_Actor::Max_Range' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Enemies_In_Range_And_Angle_From_Actor, Direction) == 0x000020, "Member 'MonsterBPLibrary_C_Get_Enemies_In_Range_And_Angle_From_Actor::Direction' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Enemies_In_Range_And_Angle_From_Actor, Angle) == 0x000028, "Member 'MonsterBPLibrary_C_Get_Enemies_In_Range_And_Angle_From_Actor::Angle' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Enemies_In_Range_And_Angle_From_Actor, DrawDebugArea) == 0x000030, "Member 'MonsterBPLibrary_C_Get_Enemies_In_Range_And_Angle_From_Actor::DrawDebugArea' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Enemies_In_Range_And_Angle_From_Actor, __WorldContext) == 0x000038, "Member 'MonsterBPLibrary_C_Get_Enemies_In_Range_And_Angle_From_Actor::__WorldContext' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Enemies_In_Range_And_Angle_From_Actor, Result) == 0x000040, "Member 'MonsterBPLibrary_C_Get_Enemies_In_Range_And_Angle_From_Actor::Result' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Enemies_In_Range_And_Angle_From_Actor, DCCharacterBase) == 0x000048, "Member 'MonsterBPLibrary_C_Get_Enemies_In_Range_And_Angle_From_Actor::DCCharacterBase' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Enemies_In_Range_And_Angle_From_Actor, Max_Z_Angle_Origin) == 0x000058, "Member 'MonsterBPLibrary_C_Get_Enemies_In_Range_And_Angle_From_Actor::Max_Z_Angle_Origin' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Enemies_In_Range_And_Angle_From_Actor, Max_Z_Angle) == 0x000060, "Member 'MonsterBPLibrary_C_Get_Enemies_In_Range_And_Angle_From_Actor::Max_Z_Angle' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Enemies_In_Range_And_Angle_From_Actor, Min_Z_Angle) == 0x000068, "Member 'MonsterBPLibrary_C_Get_Enemies_In_Range_And_Angle_From_Actor::Min_Z_Angle' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Enemies_In_Range_And_Angle_From_Actor, Temp_Result_By_TargetActor) == 0x000070, "Member 'MonsterBPLibrary_C_Get_Enemies_In_Range_And_Angle_From_Actor::Temp_Result_By_TargetActor' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Enemies_In_Range_And_Angle_From_Actor, Caster_BP) == 0x000078, "Member 'MonsterBPLibrary_C_Get_Enemies_In_Range_And_Angle_From_Actor::Caster_BP' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Enemies_In_Range_And_Angle_From_Actor, Caster) == 0x000080, "Member 'MonsterBPLibrary_C_Get_Enemies_In_Range_And_Angle_From_Actor::Caster' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Enemies_In_Range_And_Angle_From_Actor, Temp_Angle) == 0x000088, "Member 'MonsterBPLibrary_C_Get_Enemies_In_Range_And_Angle_From_Actor::Temp_Angle' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Enemies_In_Range_And_Angle_From_Actor, Temp_Direction) == 0x000090, "Member 'MonsterBPLibrary_C_Get_Enemies_In_Range_And_Angle_From_Actor::Temp_Direction' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Enemies_In_Range_And_Angle_From_Actor, Temp_MaxRange) == 0x000098, "Member 'MonsterBPLibrary_C_Get_Enemies_In_Range_And_Angle_From_Actor::Temp_MaxRange' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Enemies_In_Range_And_Angle_From_Actor, Temp_MinRange) == 0x0000A0, "Member 'MonsterBPLibrary_C_Get_Enemies_In_Range_And_Angle_From_Actor::Temp_MinRange' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Enemies_In_Range_And_Angle_From_Actor, TargetArray) == 0x0000A8, "Member 'MonsterBPLibrary_C_Get_Enemies_In_Range_And_Angle_From_Actor::TargetArray' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Enemies_In_Range_And_Angle_From_Actor, Temp_int_Array_Index_Variable) == 0x0000B8, "Member 'MonsterBPLibrary_C_Get_Enemies_In_Range_And_Angle_From_Actor::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Enemies_In_Range_And_Angle_From_Actor, Temp_int_Loop_Counter_Variable) == 0x0000BC, "Member 'MonsterBPLibrary_C_Get_Enemies_In_Range_And_Angle_From_Actor::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Enemies_In_Range_And_Angle_From_Actor, Temp_int_Array_Index_Variable_1) == 0x0000C0, "Member 'MonsterBPLibrary_C_Get_Enemies_In_Range_And_Angle_From_Actor::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Enemies_In_Range_And_Angle_From_Actor, CallFunc_Subtract_IntInt_ReturnValue) == 0x0000C4, "Member 'MonsterBPLibrary_C_Get_Enemies_In_Range_And_Angle_From_Actor::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Enemies_In_Range_And_Angle_From_Actor, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x0000C8, "Member 'MonsterBPLibrary_C_Get_Enemies_In_Range_And_Angle_From_Actor::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Enemies_In_Range_And_Angle_From_Actor, Temp_int_Loop_Counter_Variable_1) == 0x0000CC, "Member 'MonsterBPLibrary_C_Get_Enemies_In_Range_And_Angle_From_Actor::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Enemies_In_Range_And_Angle_From_Actor, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x0000D0, "Member 'MonsterBPLibrary_C_Get_Enemies_In_Range_And_Angle_From_Actor::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Enemies_In_Range_And_Angle_From_Actor, CallFunc_GreaterEqual_IntInt_ReturnValue_1) == 0x0000D4, "Member 'MonsterBPLibrary_C_Get_Enemies_In_Range_And_Angle_From_Actor::CallFunc_GreaterEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Enemies_In_Range_And_Angle_From_Actor, Temp_int_Array_Index_Variable_2) == 0x0000D8, "Member 'MonsterBPLibrary_C_Get_Enemies_In_Range_And_Angle_From_Actor::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Enemies_In_Range_And_Angle_From_Actor, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x0000DC, "Member 'MonsterBPLibrary_C_Get_Enemies_In_Range_And_Angle_From_Actor::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Enemies_In_Range_And_Angle_From_Actor, CallFunc_Array_IsNotEmpty_ReturnValue) == 0x0000DD, "Member 'MonsterBPLibrary_C_Get_Enemies_In_Range_And_Angle_From_Actor::CallFunc_Array_IsNotEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Enemies_In_Range_And_Angle_From_Actor, CallFunc_Less_DoubleDouble_ReturnValue) == 0x0000DE, "Member 'MonsterBPLibrary_C_Get_Enemies_In_Range_And_Angle_From_Actor::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Enemies_In_Range_And_Angle_From_Actor, Temp_int_Loop_Counter_Variable_2) == 0x0000E0, "Member 'MonsterBPLibrary_C_Get_Enemies_In_Range_And_Angle_From_Actor::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Enemies_In_Range_And_Angle_From_Actor, CallFunc_Subtract_IntInt_ReturnValue_2) == 0x0000E4, "Member 'MonsterBPLibrary_C_Get_Enemies_In_Range_And_Angle_From_Actor::CallFunc_Subtract_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Enemies_In_Range_And_Angle_From_Actor, CallFunc_Array_Get_Item) == 0x0000E8, "Member 'MonsterBPLibrary_C_Get_Enemies_In_Range_And_Angle_From_Actor::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Enemies_In_Range_And_Angle_From_Actor, CallFunc_Array_RemoveItem_ReturnValue) == 0x0000F0, "Member 'MonsterBPLibrary_C_Get_Enemies_In_Range_And_Angle_From_Actor::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Enemies_In_Range_And_Angle_From_Actor, CallFunc_Get_Enemy_Angle_From_Actor_Return_Value) == 0x0000F8, "Member 'MonsterBPLibrary_C_Get_Enemies_In_Range_And_Angle_From_Actor::CallFunc_Get_Enemy_Angle_From_Actor_Return_Value' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Enemies_In_Range_And_Angle_From_Actor, CallFunc_Array_Length_ReturnValue) == 0x000100, "Member 'MonsterBPLibrary_C_Get_Enemies_In_Range_And_Angle_From_Actor::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Enemies_In_Range_And_Angle_From_Actor, CallFunc_GreaterEqual_IntInt_ReturnValue_2) == 0x000104, "Member 'MonsterBPLibrary_C_Get_Enemies_In_Range_And_Angle_From_Actor::CallFunc_GreaterEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Enemies_In_Range_And_Angle_From_Actor, CallFunc_Subtract_IntInt_ReturnValue_3) == 0x000108, "Member 'MonsterBPLibrary_C_Get_Enemies_In_Range_And_Angle_From_Actor::CallFunc_Subtract_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Enemies_In_Range_And_Angle_From_Actor, CallFunc_Max_ReturnValue) == 0x00010C, "Member 'MonsterBPLibrary_C_Get_Enemies_In_Range_And_Angle_From_Actor::CallFunc_Max_ReturnValue' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Enemies_In_Range_And_Angle_From_Actor, CallFunc_InRange_FloatFloat_ReturnValue) == 0x000110, "Member 'MonsterBPLibrary_C_Get_Enemies_In_Range_And_Angle_From_Actor::CallFunc_InRange_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Enemies_In_Range_And_Angle_From_Actor, CallFunc_Get_BB_Target_Actor_Result) == 0x000111, "Member 'MonsterBPLibrary_C_Get_Enemies_In_Range_And_Angle_From_Actor::CallFunc_Get_BB_Target_Actor_Result' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Enemies_In_Range_And_Angle_From_Actor, CallFunc_Get_BB_Target_Actor_DCCharacterBase) == 0x000118, "Member 'MonsterBPLibrary_C_Get_Enemies_In_Range_And_Angle_From_Actor::CallFunc_Get_BB_Target_Actor_DCCharacterBase' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Enemies_In_Range_And_Angle_From_Actor, CallFunc_Array_IsNotEmpty_ReturnValue_1) == 0x000120, "Member 'MonsterBPLibrary_C_Get_Enemies_In_Range_And_Angle_From_Actor::CallFunc_Array_IsNotEmpty_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Enemies_In_Range_And_Angle_From_Actor, CallFunc_Array_Contains_ReturnValue) == 0x000121, "Member 'MonsterBPLibrary_C_Get_Enemies_In_Range_And_Angle_From_Actor::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Enemies_In_Range_And_Angle_From_Actor, CallFunc_Array_Get_Item_1) == 0x000128, "Member 'MonsterBPLibrary_C_Get_Enemies_In_Range_And_Angle_From_Actor::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Enemies_In_Range_And_Angle_From_Actor, CallFunc_Array_Length_ReturnValue_1) == 0x000130, "Member 'MonsterBPLibrary_C_Get_Enemies_In_Range_And_Angle_From_Actor::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Enemies_In_Range_And_Angle_From_Actor, CallFunc_Array_RemoveItem_ReturnValue_1) == 0x000134, "Member 'MonsterBPLibrary_C_Get_Enemies_In_Range_And_Angle_From_Actor::CallFunc_Array_RemoveItem_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Enemies_In_Range_And_Angle_From_Actor, CallFunc_Subtract_IntInt_ReturnValue_4) == 0x000138, "Member 'MonsterBPLibrary_C_Get_Enemies_In_Range_And_Angle_From_Actor::CallFunc_Subtract_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Enemies_In_Range_And_Angle_From_Actor, CallFunc_Get_Enemy_Angle_From_Actor_Return_Value_1) == 0x000140, "Member 'MonsterBPLibrary_C_Get_Enemies_In_Range_And_Angle_From_Actor::CallFunc_Get_Enemy_Angle_From_Actor_Return_Value_1' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Enemies_In_Range_And_Angle_From_Actor, CallFunc_Max_ReturnValue_1) == 0x000148, "Member 'MonsterBPLibrary_C_Get_Enemies_In_Range_And_Angle_From_Actor::CallFunc_Max_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Enemies_In_Range_And_Angle_From_Actor, CallFunc_InRange_FloatFloat_ReturnValue_1) == 0x00014C, "Member 'MonsterBPLibrary_C_Get_Enemies_In_Range_And_Angle_From_Actor::CallFunc_InRange_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Enemies_In_Range_And_Angle_From_Actor, CallFunc_InRange_FloatFloat_ReturnValue_2) == 0x00014D, "Member 'MonsterBPLibrary_C_Get_Enemies_In_Range_And_Angle_From_Actor::CallFunc_InRange_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Enemies_In_Range_And_Angle_From_Actor, CallFunc_BooleanOR_ReturnValue) == 0x00014E, "Member 'MonsterBPLibrary_C_Get_Enemies_In_Range_And_Angle_From_Actor::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Enemies_In_Range_And_Angle_From_Actor, CallFunc_K2_GetActorRotation_ReturnValue) == 0x000150, "Member 'MonsterBPLibrary_C_Get_Enemies_In_Range_And_Angle_From_Actor::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Enemies_In_Range_And_Angle_From_Actor, CallFunc_BreakRotator_Roll) == 0x000168, "Member 'MonsterBPLibrary_C_Get_Enemies_In_Range_And_Angle_From_Actor::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Enemies_In_Range_And_Angle_From_Actor, CallFunc_BreakRotator_Pitch) == 0x00016C, "Member 'MonsterBPLibrary_C_Get_Enemies_In_Range_And_Angle_From_Actor::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Enemies_In_Range_And_Angle_From_Actor, CallFunc_BreakRotator_Yaw) == 0x000170, "Member 'MonsterBPLibrary_C_Get_Enemies_In_Range_And_Angle_From_Actor::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Enemies_In_Range_And_Angle_From_Actor, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000178, "Member 'MonsterBPLibrary_C_Get_Enemies_In_Range_And_Angle_From_Actor::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Enemies_In_Range_And_Angle_From_Actor, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000180, "Member 'MonsterBPLibrary_C_Get_Enemies_In_Range_And_Angle_From_Actor::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Enemies_In_Range_And_Angle_From_Actor, CallFunc_Get_Native_Angle_Return_Value) == 0x000188, "Member 'MonsterBPLibrary_C_Get_Enemies_In_Range_And_Angle_From_Actor::CallFunc_Get_Native_Angle_Return_Value' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Enemies_In_Range_And_Angle_From_Actor, CallFunc_K2_GetActorRotation_ReturnValue_1) == 0x000190, "Member 'MonsterBPLibrary_C_Get_Enemies_In_Range_And_Angle_From_Actor::CallFunc_K2_GetActorRotation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Enemies_In_Range_And_Angle_From_Actor, CallFunc_BreakRotator_Roll_1) == 0x0001A8, "Member 'MonsterBPLibrary_C_Get_Enemies_In_Range_And_Angle_From_Actor::CallFunc_BreakRotator_Roll_1' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Enemies_In_Range_And_Angle_From_Actor, CallFunc_BreakRotator_Pitch_1) == 0x0001AC, "Member 'MonsterBPLibrary_C_Get_Enemies_In_Range_And_Angle_From_Actor::CallFunc_BreakRotator_Pitch_1' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Enemies_In_Range_And_Angle_From_Actor, CallFunc_BreakRotator_Yaw_1) == 0x0001B0, "Member 'MonsterBPLibrary_C_Get_Enemies_In_Range_And_Angle_From_Actor::CallFunc_BreakRotator_Yaw_1' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Enemies_In_Range_And_Angle_From_Actor, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x0001B8, "Member 'MonsterBPLibrary_C_Get_Enemies_In_Range_And_Angle_From_Actor::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Enemies_In_Range_And_Angle_From_Actor, CallFunc_Add_DoubleDouble_ReturnValue_2) == 0x0001C0, "Member 'MonsterBPLibrary_C_Get_Enemies_In_Range_And_Angle_From_Actor::CallFunc_Add_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Enemies_In_Range_And_Angle_From_Actor, K2Node_DynamicCast_AsBP_DCMonster_Base_with_Options) == 0x0001C8, "Member 'MonsterBPLibrary_C_Get_Enemies_In_Range_And_Angle_From_Actor::K2Node_DynamicCast_AsBP_DCMonster_Base_with_Options' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Enemies_In_Range_And_Angle_From_Actor, K2Node_DynamicCast_bSuccess) == 0x0001D0, "Member 'MonsterBPLibrary_C_Get_Enemies_In_Range_And_Angle_From_Actor::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Enemies_In_Range_And_Angle_From_Actor, K2Node_DynamicCast_AsDCCharacter_Base) == 0x0001D8, "Member 'MonsterBPLibrary_C_Get_Enemies_In_Range_And_Angle_From_Actor::K2Node_DynamicCast_AsDCCharacter_Base' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Enemies_In_Range_And_Angle_From_Actor, K2Node_DynamicCast_bSuccess_1) == 0x0001E0, "Member 'MonsterBPLibrary_C_Get_Enemies_In_Range_And_Angle_From_Actor::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Enemies_In_Range_And_Angle_From_Actor, CallFunc_K2_GetActorRotation_ReturnValue_2) == 0x0001E8, "Member 'MonsterBPLibrary_C_Get_Enemies_In_Range_And_Angle_From_Actor::CallFunc_K2_GetActorRotation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Enemies_In_Range_And_Angle_From_Actor, CallFunc_GetCapsuleBottomLocation_ReturnValue) == 0x000200, "Member 'MonsterBPLibrary_C_Get_Enemies_In_Range_And_Angle_From_Actor::CallFunc_GetCapsuleBottomLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Enemies_In_Range_And_Angle_From_Actor, CallFunc_BreakRotator_Roll_2) == 0x000218, "Member 'MonsterBPLibrary_C_Get_Enemies_In_Range_And_Angle_From_Actor::CallFunc_BreakRotator_Roll_2' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Enemies_In_Range_And_Angle_From_Actor, CallFunc_BreakRotator_Pitch_2) == 0x00021C, "Member 'MonsterBPLibrary_C_Get_Enemies_In_Range_And_Angle_From_Actor::CallFunc_BreakRotator_Pitch_2' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Enemies_In_Range_And_Angle_From_Actor, CallFunc_BreakRotator_Yaw_2) == 0x000220, "Member 'MonsterBPLibrary_C_Get_Enemies_In_Range_And_Angle_From_Actor::CallFunc_BreakRotator_Yaw_2' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Enemies_In_Range_And_Angle_From_Actor, CallFunc_BreakVector_X) == 0x000228, "Member 'MonsterBPLibrary_C_Get_Enemies_In_Range_And_Angle_From_Actor::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Enemies_In_Range_And_Angle_From_Actor, CallFunc_BreakVector_Y) == 0x000230, "Member 'MonsterBPLibrary_C_Get_Enemies_In_Range_And_Angle_From_Actor::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Enemies_In_Range_And_Angle_From_Actor, CallFunc_BreakVector_Z) == 0x000238, "Member 'MonsterBPLibrary_C_Get_Enemies_In_Range_And_Angle_From_Actor::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Enemies_In_Range_And_Angle_From_Actor, CallFunc_Add_DoubleDouble_ReturnValue_3) == 0x000240, "Member 'MonsterBPLibrary_C_Get_Enemies_In_Range_And_Angle_From_Actor::CallFunc_Add_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Enemies_In_Range_And_Angle_From_Actor, CallFunc_MakeVector_ReturnValue) == 0x000248, "Member 'MonsterBPLibrary_C_Get_Enemies_In_Range_And_Angle_From_Actor::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Enemies_In_Range_And_Angle_From_Actor, CallFunc_MakeRotator_ReturnValue) == 0x000260, "Member 'MonsterBPLibrary_C_Get_Enemies_In_Range_And_Angle_From_Actor::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Enemies_In_Range_And_Angle_From_Actor, CallFunc_GetForwardVector_ReturnValue) == 0x000278, "Member 'MonsterBPLibrary_C_Get_Enemies_In_Range_And_Angle_From_Actor::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Enemies_In_Range_And_Angle_From_Actor, CallFunc_Array_Get_Item_2) == 0x000290, "Member 'MonsterBPLibrary_C_Get_Enemies_In_Range_And_Angle_From_Actor::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Enemies_In_Range_And_Angle_From_Actor, CallFunc_Array_Length_ReturnValue_2) == 0x000298, "Member 'MonsterBPLibrary_C_Get_Enemies_In_Range_And_Angle_From_Actor::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Enemies_In_Range_And_Angle_From_Actor, CallFunc_Array_RemoveItem_ReturnValue_2) == 0x00029C, "Member 'MonsterBPLibrary_C_Get_Enemies_In_Range_And_Angle_From_Actor::CallFunc_Array_RemoveItem_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Enemies_In_Range_And_Angle_From_Actor, CallFunc_Subtract_IntInt_ReturnValue_5) == 0x0002A0, "Member 'MonsterBPLibrary_C_Get_Enemies_In_Range_And_Angle_From_Actor::CallFunc_Subtract_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Enemies_In_Range_And_Angle_From_Actor, CallFunc_GetDistanceTo_ReturnValue) == 0x0002A4, "Member 'MonsterBPLibrary_C_Get_Enemies_In_Range_And_Angle_From_Actor::CallFunc_GetDistanceTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Enemies_In_Range_And_Angle_From_Actor, CallFunc_Max_ReturnValue_2) == 0x0002A8, "Member 'MonsterBPLibrary_C_Get_Enemies_In_Range_And_Angle_From_Actor::CallFunc_Max_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Enemies_In_Range_And_Angle_From_Actor, CallFunc_Less_DoubleDouble_ReturnValue_1) == 0x0002AC, "Member 'MonsterBPLibrary_C_Get_Enemies_In_Range_And_Angle_From_Actor::CallFunc_Less_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Enemies_In_Range_And_Angle_From_Actor, CallFunc_Get_Native_Angle_Return_Value_1) == 0x0002B0, "Member 'MonsterBPLibrary_C_Get_Enemies_In_Range_And_Angle_From_Actor::CallFunc_Get_Native_Angle_Return_Value_1' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Enemies_In_Range_And_Angle_From_Actor, CallFunc_GetAllTargetArray_ReturnValue) == 0x0002B8, "Member 'MonsterBPLibrary_C_Get_Enemies_In_Range_And_Angle_From_Actor::CallFunc_GetAllTargetArray_ReturnValue' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Enemies_In_Range_And_Angle_From_Actor, CallFunc_FilterTargetsWithinDistance_ReturnValue) == 0x0002B9, "Member 'MonsterBPLibrary_C_Get_Enemies_In_Range_And_Angle_From_Actor::CallFunc_FilterTargetsWithinDistance_ReturnValue' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Enemies_In_Range_And_Angle_From_Actor, CallFunc_Add_DoubleDouble_A_ImplicitCast) == 0x0002C0, "Member 'MonsterBPLibrary_C_Get_Enemies_In_Range_And_Angle_From_Actor::CallFunc_Add_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Enemies_In_Range_And_Angle_From_Actor, CallFunc_FilterTargetsWithinDistance_Distance_ImplicitCast) == 0x0002C8, "Member 'MonsterBPLibrary_C_Get_Enemies_In_Range_And_Angle_From_Actor::CallFunc_FilterTargetsWithinDistance_Distance_ImplicitCast' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Enemies_In_Range_And_Angle_From_Actor, CallFunc_Add_DoubleDouble_A_ImplicitCast_1) == 0x0002D0, "Member 'MonsterBPLibrary_C_Get_Enemies_In_Range_And_Angle_From_Actor::CallFunc_Add_DoubleDouble_A_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Enemies_In_Range_And_Angle_From_Actor, CallFunc_DrawDebugConeInDegrees_AngleWidth_ImplicitCast) == 0x0002D8, "Member 'MonsterBPLibrary_C_Get_Enemies_In_Range_And_Angle_From_Actor::CallFunc_DrawDebugConeInDegrees_AngleWidth_ImplicitCast' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Enemies_In_Range_And_Angle_From_Actor, CallFunc_DrawDebugConeInDegrees_Length_ImplicitCast) == 0x0002DC, "Member 'MonsterBPLibrary_C_Get_Enemies_In_Range_And_Angle_From_Actor::CallFunc_DrawDebugConeInDegrees_Length_ImplicitCast' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Enemies_In_Range_And_Angle_From_Actor, CallFunc_Add_DoubleDouble_A_ImplicitCast_2) == 0x0002E0, "Member 'MonsterBPLibrary_C_Get_Enemies_In_Range_And_Angle_From_Actor::CallFunc_Add_DoubleDouble_A_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Enemies_In_Range_And_Angle_From_Actor, CallFunc_MakeRotator_Yaw_ImplicitCast) == 0x0002E8, "Member 'MonsterBPLibrary_C_Get_Enemies_In_Range_And_Angle_From_Actor::CallFunc_MakeRotator_Yaw_ImplicitCast' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Enemies_In_Range_And_Angle_From_Actor, CallFunc_Less_DoubleDouble_A_ImplicitCast) == 0x0002F0, "Member 'MonsterBPLibrary_C_Get_Enemies_In_Range_And_Angle_From_Actor::CallFunc_Less_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function MonsterBPLibrary.MonsterBPLibrary_C.Get Enemy Angle From Actor
// 0x0088 (0x0088 - 0x0000)
struct MonsterBPLibrary_C_Get_Enemy_Angle_From_Actor final
{
public:
	class AActor*                                 Caster;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Target;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        Return_Value;                                      // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0020(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0038(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_FindLookAtRotation_ReturnValue;           // 0x0050(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3974[0x4];                                     // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Get_Native_Angle_Return_Value;            // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Get_Native_Angle_Angle_ImplicitCast;      // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MonsterBPLibrary_C_Get_Enemy_Angle_From_Actor) == 0x000008, "Wrong alignment on MonsterBPLibrary_C_Get_Enemy_Angle_From_Actor");
static_assert(sizeof(MonsterBPLibrary_C_Get_Enemy_Angle_From_Actor) == 0x000088, "Wrong size on MonsterBPLibrary_C_Get_Enemy_Angle_From_Actor");
static_assert(offsetof(MonsterBPLibrary_C_Get_Enemy_Angle_From_Actor, Caster) == 0x000000, "Member 'MonsterBPLibrary_C_Get_Enemy_Angle_From_Actor::Caster' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Enemy_Angle_From_Actor, Target) == 0x000008, "Member 'MonsterBPLibrary_C_Get_Enemy_Angle_From_Actor::Target' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Enemy_Angle_From_Actor, __WorldContext) == 0x000010, "Member 'MonsterBPLibrary_C_Get_Enemy_Angle_From_Actor::__WorldContext' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Enemy_Angle_From_Actor, Return_Value) == 0x000018, "Member 'MonsterBPLibrary_C_Get_Enemy_Angle_From_Actor::Return_Value' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Enemy_Angle_From_Actor, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000020, "Member 'MonsterBPLibrary_C_Get_Enemy_Angle_From_Actor::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Enemy_Angle_From_Actor, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000038, "Member 'MonsterBPLibrary_C_Get_Enemy_Angle_From_Actor::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Enemy_Angle_From_Actor, CallFunc_FindLookAtRotation_ReturnValue) == 0x000050, "Member 'MonsterBPLibrary_C_Get_Enemy_Angle_From_Actor::CallFunc_FindLookAtRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Enemy_Angle_From_Actor, CallFunc_BreakRotator_Roll) == 0x000068, "Member 'MonsterBPLibrary_C_Get_Enemy_Angle_From_Actor::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Enemy_Angle_From_Actor, CallFunc_BreakRotator_Pitch) == 0x00006C, "Member 'MonsterBPLibrary_C_Get_Enemy_Angle_From_Actor::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Enemy_Angle_From_Actor, CallFunc_BreakRotator_Yaw) == 0x000070, "Member 'MonsterBPLibrary_C_Get_Enemy_Angle_From_Actor::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Enemy_Angle_From_Actor, CallFunc_Get_Native_Angle_Return_Value) == 0x000078, "Member 'MonsterBPLibrary_C_Get_Enemy_Angle_From_Actor::CallFunc_Get_Native_Angle_Return_Value' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Enemy_Angle_From_Actor, CallFunc_Get_Native_Angle_Angle_ImplicitCast) == 0x000080, "Member 'MonsterBPLibrary_C_Get_Enemy_Angle_From_Actor::CallFunc_Get_Native_Angle_Angle_ImplicitCast' has a wrong offset!");

// Function MonsterBPLibrary.MonsterBPLibrary_C.Get Enemy Relative Angle From Actor
// 0x00F0 (0x00F0 - 0x0000)
struct MonsterBPLibrary_C_Get_Enemy_Relative_Angle_From_Actor final
{
public:
	class AActor*                                 Caster;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Target;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         Angle;                                             // 0x0018(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3975[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_Enemy_Angle;                                  // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3976[0x8];                                     // 0x0028(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0030(0x0060)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0090(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_FindRelativeLookAtRotation_ReturnValue;   // 0x00A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3977[0x4];                                     // 0x00CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Get_Native_Angle_Return_Value;            // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_FunctionResult_Angle_ImplicitCast;          // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3978[0x4];                                     // 0x00DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Get_Native_Angle_Angle_ImplicitCast;      // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MonsterBPLibrary_C_Get_Enemy_Relative_Angle_From_Actor) == 0x000010, "Wrong alignment on MonsterBPLibrary_C_Get_Enemy_Relative_Angle_From_Actor");
static_assert(sizeof(MonsterBPLibrary_C_Get_Enemy_Relative_Angle_From_Actor) == 0x0000F0, "Wrong size on MonsterBPLibrary_C_Get_Enemy_Relative_Angle_From_Actor");
static_assert(offsetof(MonsterBPLibrary_C_Get_Enemy_Relative_Angle_From_Actor, Caster) == 0x000000, "Member 'MonsterBPLibrary_C_Get_Enemy_Relative_Angle_From_Actor::Caster' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Enemy_Relative_Angle_From_Actor, Target) == 0x000008, "Member 'MonsterBPLibrary_C_Get_Enemy_Relative_Angle_From_Actor::Target' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Enemy_Relative_Angle_From_Actor, __WorldContext) == 0x000010, "Member 'MonsterBPLibrary_C_Get_Enemy_Relative_Angle_From_Actor::__WorldContext' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Enemy_Relative_Angle_From_Actor, Angle) == 0x000018, "Member 'MonsterBPLibrary_C_Get_Enemy_Relative_Angle_From_Actor::Angle' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Enemy_Relative_Angle_From_Actor, Temp_Enemy_Angle) == 0x000020, "Member 'MonsterBPLibrary_C_Get_Enemy_Relative_Angle_From_Actor::Temp_Enemy_Angle' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Enemy_Relative_Angle_From_Actor, CallFunc_GetTransform_ReturnValue) == 0x000030, "Member 'MonsterBPLibrary_C_Get_Enemy_Relative_Angle_From_Actor::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Enemy_Relative_Angle_From_Actor, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000090, "Member 'MonsterBPLibrary_C_Get_Enemy_Relative_Angle_From_Actor::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Enemy_Relative_Angle_From_Actor, CallFunc_FindRelativeLookAtRotation_ReturnValue) == 0x0000A8, "Member 'MonsterBPLibrary_C_Get_Enemy_Relative_Angle_From_Actor::CallFunc_FindRelativeLookAtRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Enemy_Relative_Angle_From_Actor, CallFunc_BreakRotator_Roll) == 0x0000C0, "Member 'MonsterBPLibrary_C_Get_Enemy_Relative_Angle_From_Actor::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Enemy_Relative_Angle_From_Actor, CallFunc_BreakRotator_Pitch) == 0x0000C4, "Member 'MonsterBPLibrary_C_Get_Enemy_Relative_Angle_From_Actor::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Enemy_Relative_Angle_From_Actor, CallFunc_BreakRotator_Yaw) == 0x0000C8, "Member 'MonsterBPLibrary_C_Get_Enemy_Relative_Angle_From_Actor::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Enemy_Relative_Angle_From_Actor, CallFunc_Get_Native_Angle_Return_Value) == 0x0000D0, "Member 'MonsterBPLibrary_C_Get_Enemy_Relative_Angle_From_Actor::CallFunc_Get_Native_Angle_Return_Value' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Enemy_Relative_Angle_From_Actor, K2Node_FunctionResult_Angle_ImplicitCast) == 0x0000D8, "Member 'MonsterBPLibrary_C_Get_Enemy_Relative_Angle_From_Actor::K2Node_FunctionResult_Angle_ImplicitCast' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Enemy_Relative_Angle_From_Actor, CallFunc_Get_Native_Angle_Angle_ImplicitCast) == 0x0000E0, "Member 'MonsterBPLibrary_C_Get_Enemy_Relative_Angle_From_Actor::CallFunc_Get_Native_Angle_Angle_ImplicitCast' has a wrong offset!");

// Function MonsterBPLibrary.MonsterBPLibrary_C.Get Instigator From Added Tag
// 0x0078 (0x0078 - 0x0000)
struct MonsterBPLibrary_C_Get_Instigator_From_Added_Tag final
{
public:
	struct FGameplayTag                           Gameplay_Tag;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEffectSpecHandle              Spec_Handle;                                       // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm)
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3979[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 Instigator;                                        // 0x0028(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEffectContextHandle           CallFunc_GetEffectContext_ReturnValue;             // 0x0030(0x0018)()
	struct FGameplayTagContainer                  CallFunc_GetGrantedTag_ReturnValue;                // 0x0048(0x0020)()
	class AActor*                                 CallFunc_EffectContextGetInstigatorActor_ReturnValue; // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasTag_ReturnValue;                       // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MonsterBPLibrary_C_Get_Instigator_From_Added_Tag) == 0x000008, "Wrong alignment on MonsterBPLibrary_C_Get_Instigator_From_Added_Tag");
static_assert(sizeof(MonsterBPLibrary_C_Get_Instigator_From_Added_Tag) == 0x000078, "Wrong size on MonsterBPLibrary_C_Get_Instigator_From_Added_Tag");
static_assert(offsetof(MonsterBPLibrary_C_Get_Instigator_From_Added_Tag, Gameplay_Tag) == 0x000000, "Member 'MonsterBPLibrary_C_Get_Instigator_From_Added_Tag::Gameplay_Tag' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Instigator_From_Added_Tag, Spec_Handle) == 0x000008, "Member 'MonsterBPLibrary_C_Get_Instigator_From_Added_Tag::Spec_Handle' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Instigator_From_Added_Tag, __WorldContext) == 0x000018, "Member 'MonsterBPLibrary_C_Get_Instigator_From_Added_Tag::__WorldContext' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Instigator_From_Added_Tag, Result) == 0x000020, "Member 'MonsterBPLibrary_C_Get_Instigator_From_Added_Tag::Result' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Instigator_From_Added_Tag, Instigator) == 0x000028, "Member 'MonsterBPLibrary_C_Get_Instigator_From_Added_Tag::Instigator' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Instigator_From_Added_Tag, CallFunc_GetEffectContext_ReturnValue) == 0x000030, "Member 'MonsterBPLibrary_C_Get_Instigator_From_Added_Tag::CallFunc_GetEffectContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Instigator_From_Added_Tag, CallFunc_GetGrantedTag_ReturnValue) == 0x000048, "Member 'MonsterBPLibrary_C_Get_Instigator_From_Added_Tag::CallFunc_GetGrantedTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Instigator_From_Added_Tag, CallFunc_EffectContextGetInstigatorActor_ReturnValue) == 0x000068, "Member 'MonsterBPLibrary_C_Get_Instigator_From_Added_Tag::CallFunc_EffectContextGetInstigatorActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Instigator_From_Added_Tag, CallFunc_HasTag_ReturnValue) == 0x000070, "Member 'MonsterBPLibrary_C_Get_Instigator_From_Added_Tag::CallFunc_HasTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Instigator_From_Added_Tag, CallFunc_IsValid_ReturnValue) == 0x000071, "Member 'MonsterBPLibrary_C_Get_Instigator_From_Added_Tag::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function MonsterBPLibrary.MonsterBPLibrary_C.Get Interrupt Montage Immune Tags
// 0x0028 (0x0028 - 0x0000)
struct MonsterBPLibrary_C_Get_Interrupt_Montage_Immune_Tags final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<struct FGameplayTag>                   Interrupt_Action_Immune_Tags;                      // 0x0008(0x0010)(Parm, OutParm)
	TArray<struct FGameplayTag>                   K2Node_MakeArray_Array;                            // 0x0018(0x0010)(ReferenceParm)
};
static_assert(alignof(MonsterBPLibrary_C_Get_Interrupt_Montage_Immune_Tags) == 0x000008, "Wrong alignment on MonsterBPLibrary_C_Get_Interrupt_Montage_Immune_Tags");
static_assert(sizeof(MonsterBPLibrary_C_Get_Interrupt_Montage_Immune_Tags) == 0x000028, "Wrong size on MonsterBPLibrary_C_Get_Interrupt_Montage_Immune_Tags");
static_assert(offsetof(MonsterBPLibrary_C_Get_Interrupt_Montage_Immune_Tags, __WorldContext) == 0x000000, "Member 'MonsterBPLibrary_C_Get_Interrupt_Montage_Immune_Tags::__WorldContext' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Interrupt_Montage_Immune_Tags, Interrupt_Action_Immune_Tags) == 0x000008, "Member 'MonsterBPLibrary_C_Get_Interrupt_Montage_Immune_Tags::Interrupt_Action_Immune_Tags' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Interrupt_Montage_Immune_Tags, K2Node_MakeArray_Array) == 0x000018, "Member 'MonsterBPLibrary_C_Get_Interrupt_Montage_Immune_Tags::K2Node_MakeArray_Array' has a wrong offset!");

// Function MonsterBPLibrary.MonsterBPLibrary_C.Get Max Distance From Perception
// 0x0060 (0x0060 - 0x0000)
struct MonsterBPLibrary_C_Get_Max_Distance_From_Perception final
{
public:
	class ABP_DCMonsterBaseWithOptions_C*         Monster_BP;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	E_DistanceFromVariables                       Get_Distance_From;                                 // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_397A[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Default_Distance;                                  // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_397B[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Return_Value;                                      // 0x0028(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AAIController*                          CallFunc_GetAIController_ReturnValue;              // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAIPerceptionComponent*                 CallFunc_GetAIPerceptionComponent_ReturnValue;     // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_397C[0x3];                                     // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetLoseSightRange_ReturnValue;            // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetSightRange_ReturnValue;                // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_397D[0x4];                                     // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_FunctionResult_Return_Value_ImplicitCast;   // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_FunctionResult_Return_Value_ImplicitCast_1; // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MonsterBPLibrary_C_Get_Max_Distance_From_Perception) == 0x000008, "Wrong alignment on MonsterBPLibrary_C_Get_Max_Distance_From_Perception");
static_assert(sizeof(MonsterBPLibrary_C_Get_Max_Distance_From_Perception) == 0x000060, "Wrong size on MonsterBPLibrary_C_Get_Max_Distance_From_Perception");
static_assert(offsetof(MonsterBPLibrary_C_Get_Max_Distance_From_Perception, Monster_BP) == 0x000000, "Member 'MonsterBPLibrary_C_Get_Max_Distance_From_Perception::Monster_BP' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Max_Distance_From_Perception, Get_Distance_From) == 0x000008, "Member 'MonsterBPLibrary_C_Get_Max_Distance_From_Perception::Get_Distance_From' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Max_Distance_From_Perception, Default_Distance) == 0x000010, "Member 'MonsterBPLibrary_C_Get_Max_Distance_From_Perception::Default_Distance' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Max_Distance_From_Perception, __WorldContext) == 0x000018, "Member 'MonsterBPLibrary_C_Get_Max_Distance_From_Perception::__WorldContext' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Max_Distance_From_Perception, Result) == 0x000020, "Member 'MonsterBPLibrary_C_Get_Max_Distance_From_Perception::Result' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Max_Distance_From_Perception, Return_Value) == 0x000028, "Member 'MonsterBPLibrary_C_Get_Max_Distance_From_Perception::Return_Value' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Max_Distance_From_Perception, CallFunc_GetAIController_ReturnValue) == 0x000030, "Member 'MonsterBPLibrary_C_Get_Max_Distance_From_Perception::CallFunc_GetAIController_ReturnValue' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Max_Distance_From_Perception, CallFunc_GetAIPerceptionComponent_ReturnValue) == 0x000038, "Member 'MonsterBPLibrary_C_Get_Max_Distance_From_Perception::CallFunc_GetAIPerceptionComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Max_Distance_From_Perception, K2Node_SwitchEnum_CmpSuccess) == 0x000040, "Member 'MonsterBPLibrary_C_Get_Max_Distance_From_Perception::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Max_Distance_From_Perception, CallFunc_GetLoseSightRange_ReturnValue) == 0x000044, "Member 'MonsterBPLibrary_C_Get_Max_Distance_From_Perception::CallFunc_GetLoseSightRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Max_Distance_From_Perception, CallFunc_GetSightRange_ReturnValue) == 0x000048, "Member 'MonsterBPLibrary_C_Get_Max_Distance_From_Perception::CallFunc_GetSightRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Max_Distance_From_Perception, K2Node_FunctionResult_Return_Value_ImplicitCast) == 0x000050, "Member 'MonsterBPLibrary_C_Get_Max_Distance_From_Perception::K2Node_FunctionResult_Return_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Max_Distance_From_Perception, K2Node_FunctionResult_Return_Value_ImplicitCast_1) == 0x000058, "Member 'MonsterBPLibrary_C_Get_Max_Distance_From_Perception::K2Node_FunctionResult_Return_Value_ImplicitCast_1' has a wrong offset!");

// Function MonsterBPLibrary.MonsterBPLibrary_C.Get Native Angle
// 0x0088 (0x0088 - 0x0000)
struct MonsterBPLibrary_C_Get_Native_Angle final
{
public:
	double                                        Angle;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        Return_Value;                                      // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_397E[0x3];                                     // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_1;           // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_397F[0x7];                                     // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue_1;  // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3980[0x7];                                     // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue_1;                     // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue;              // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_2;           // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MonsterBPLibrary_C_Get_Native_Angle) == 0x000008, "Wrong alignment on MonsterBPLibrary_C_Get_Native_Angle");
static_assert(sizeof(MonsterBPLibrary_C_Get_Native_Angle) == 0x000088, "Wrong size on MonsterBPLibrary_C_Get_Native_Angle");
static_assert(offsetof(MonsterBPLibrary_C_Get_Native_Angle, Angle) == 0x000000, "Member 'MonsterBPLibrary_C_Get_Native_Angle::Angle' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Native_Angle, __WorldContext) == 0x000008, "Member 'MonsterBPLibrary_C_Get_Native_Angle::__WorldContext' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Native_Angle, Return_Value) == 0x000010, "Member 'MonsterBPLibrary_C_Get_Native_Angle::Return_Value' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Native_Angle, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000018, "Member 'MonsterBPLibrary_C_Get_Native_Angle::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Native_Angle, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000020, "Member 'MonsterBPLibrary_C_Get_Native_Angle::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Native_Angle, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000028, "Member 'MonsterBPLibrary_C_Get_Native_Angle::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Native_Angle, CallFunc_FTrunc_ReturnValue) == 0x000030, "Member 'MonsterBPLibrary_C_Get_Native_Angle::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Native_Angle, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x000034, "Member 'MonsterBPLibrary_C_Get_Native_Angle::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Native_Angle, CallFunc_Conv_IntToDouble_ReturnValue_1) == 0x000038, "Member 'MonsterBPLibrary_C_Get_Native_Angle::CallFunc_Conv_IntToDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Native_Angle, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000040, "Member 'MonsterBPLibrary_C_Get_Native_Angle::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Native_Angle, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x000048, "Member 'MonsterBPLibrary_C_Get_Native_Angle::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Native_Angle, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000050, "Member 'MonsterBPLibrary_C_Get_Native_Angle::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Native_Angle, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x000058, "Member 'MonsterBPLibrary_C_Get_Native_Angle::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Native_Angle, CallFunc_GreaterEqual_DoubleDouble_ReturnValue_1) == 0x000060, "Member 'MonsterBPLibrary_C_Get_Native_Angle::CallFunc_GreaterEqual_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Native_Angle, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x000068, "Member 'MonsterBPLibrary_C_Get_Native_Angle::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Native_Angle, CallFunc_FTrunc_ReturnValue_1) == 0x000070, "Member 'MonsterBPLibrary_C_Get_Native_Angle::CallFunc_FTrunc_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Native_Angle, CallFunc_Multiply_IntInt_ReturnValue) == 0x000074, "Member 'MonsterBPLibrary_C_Get_Native_Angle::CallFunc_Multiply_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Native_Angle, CallFunc_Conv_IntToDouble_ReturnValue_2) == 0x000078, "Member 'MonsterBPLibrary_C_Get_Native_Angle::CallFunc_Conv_IntToDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Native_Angle, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x000080, "Member 'MonsterBPLibrary_C_Get_Native_Angle::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");

// Function MonsterBPLibrary.MonsterBPLibrary_C.Get Number Of Active Players In Combat Area
// 0x00B0 (0x00B0 - 0x0000)
struct MonsterBPLibrary_C_Get_Number_Of_Active_Players_In_Combat_Area final
{
public:
	TArray<class ADCCharacterBase*>               Enemies_In_Combat_Area;                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TArray<class ADCCharacterBase*>               Lost_Enemies_In_Combat_Area;                       // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class UObject*                                __WorldContext;                                    // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Number_Of_Players;                                 // 0x0028(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue;                          // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3981[0x3];                                     // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_2;            // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3982[0x4];                                     // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ADCCharacterBase*                       CallFunc_Array_Get_Item;                           // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue_1;                        // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Check_Target_Has_State_Tags_To_Lose_From_Array_Result; // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3983[0x7];                                     // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ADCPlayerCharacterBase*                 K2Node_DynamicCast_AsDCPlayer_Character_Base;      // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3984[0x3];                                     // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_3;            // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_1;        // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3985[0x3];                                     // 0x0085(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3986[0x4];                                     // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ADCCharacterBase*                       CallFunc_Array_Get_Item_1;                         // 0x0090(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue_1;            // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Check_Target_Has_State_Tags_To_Lose_From_Array_Result_1; // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3987[0x3];                                     // 0x009D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ADCPlayerCharacterBase*                 K2Node_DynamicCast_AsDCPlayer_Character_Base_1;    // 0x00A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MonsterBPLibrary_C_Get_Number_Of_Active_Players_In_Combat_Area) == 0x000008, "Wrong alignment on MonsterBPLibrary_C_Get_Number_Of_Active_Players_In_Combat_Area");
static_assert(sizeof(MonsterBPLibrary_C_Get_Number_Of_Active_Players_In_Combat_Area) == 0x0000B0, "Wrong size on MonsterBPLibrary_C_Get_Number_Of_Active_Players_In_Combat_Area");
static_assert(offsetof(MonsterBPLibrary_C_Get_Number_Of_Active_Players_In_Combat_Area, Enemies_In_Combat_Area) == 0x000000, "Member 'MonsterBPLibrary_C_Get_Number_Of_Active_Players_In_Combat_Area::Enemies_In_Combat_Area' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Number_Of_Active_Players_In_Combat_Area, Lost_Enemies_In_Combat_Area) == 0x000010, "Member 'MonsterBPLibrary_C_Get_Number_Of_Active_Players_In_Combat_Area::Lost_Enemies_In_Combat_Area' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Number_Of_Active_Players_In_Combat_Area, __WorldContext) == 0x000020, "Member 'MonsterBPLibrary_C_Get_Number_Of_Active_Players_In_Combat_Area::__WorldContext' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Number_Of_Active_Players_In_Combat_Area, Number_Of_Players) == 0x000028, "Member 'MonsterBPLibrary_C_Get_Number_Of_Active_Players_In_Combat_Area::Number_Of_Players' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Number_Of_Active_Players_In_Combat_Area, Temp_int_Loop_Counter_Variable) == 0x00002C, "Member 'MonsterBPLibrary_C_Get_Number_Of_Active_Players_In_Combat_Area::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Number_Of_Active_Players_In_Combat_Area, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'MonsterBPLibrary_C_Get_Number_Of_Active_Players_In_Combat_Area::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Number_Of_Active_Players_In_Combat_Area, CallFunc_Subtract_IntInt_ReturnValue) == 0x000034, "Member 'MonsterBPLibrary_C_Get_Number_Of_Active_Players_In_Combat_Area::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Number_Of_Active_Players_In_Combat_Area, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x000038, "Member 'MonsterBPLibrary_C_Get_Number_Of_Active_Players_In_Combat_Area::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Number_Of_Active_Players_In_Combat_Area, CallFunc_Max_ReturnValue) == 0x00003C, "Member 'MonsterBPLibrary_C_Get_Number_Of_Active_Players_In_Combat_Area::CallFunc_Max_ReturnValue' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Number_Of_Active_Players_In_Combat_Area, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000040, "Member 'MonsterBPLibrary_C_Get_Number_Of_Active_Players_In_Combat_Area::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Number_Of_Active_Players_In_Combat_Area, CallFunc_Array_Length_ReturnValue_1) == 0x000044, "Member 'MonsterBPLibrary_C_Get_Number_Of_Active_Players_In_Combat_Area::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Number_Of_Active_Players_In_Combat_Area, CallFunc_Array_Length_ReturnValue_2) == 0x000048, "Member 'MonsterBPLibrary_C_Get_Number_Of_Active_Players_In_Combat_Area::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Number_Of_Active_Players_In_Combat_Area, Temp_int_Array_Index_Variable) == 0x00004C, "Member 'MonsterBPLibrary_C_Get_Number_Of_Active_Players_In_Combat_Area::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Number_Of_Active_Players_In_Combat_Area, CallFunc_Subtract_IntInt_ReturnValue_2) == 0x000050, "Member 'MonsterBPLibrary_C_Get_Number_Of_Active_Players_In_Combat_Area::CallFunc_Subtract_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Number_Of_Active_Players_In_Combat_Area, CallFunc_Array_Get_Item) == 0x000058, "Member 'MonsterBPLibrary_C_Get_Number_Of_Active_Players_In_Combat_Area::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Number_Of_Active_Players_In_Combat_Area, CallFunc_Max_ReturnValue_1) == 0x000060, "Member 'MonsterBPLibrary_C_Get_Number_Of_Active_Players_In_Combat_Area::CallFunc_Max_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Number_Of_Active_Players_In_Combat_Area, CallFunc_Array_AddUnique_ReturnValue) == 0x000064, "Member 'MonsterBPLibrary_C_Get_Number_Of_Active_Players_In_Combat_Area::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Number_Of_Active_Players_In_Combat_Area, CallFunc_Check_Target_Has_State_Tags_To_Lose_From_Array_Result) == 0x000068, "Member 'MonsterBPLibrary_C_Get_Number_Of_Active_Players_In_Combat_Area::CallFunc_Check_Target_Has_State_Tags_To_Lose_From_Array_Result' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Number_Of_Active_Players_In_Combat_Area, K2Node_DynamicCast_AsDCPlayer_Character_Base) == 0x000070, "Member 'MonsterBPLibrary_C_Get_Number_Of_Active_Players_In_Combat_Area::K2Node_DynamicCast_AsDCPlayer_Character_Base' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Number_Of_Active_Players_In_Combat_Area, K2Node_DynamicCast_bSuccess) == 0x000078, "Member 'MonsterBPLibrary_C_Get_Number_Of_Active_Players_In_Combat_Area::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Number_Of_Active_Players_In_Combat_Area, Temp_int_Loop_Counter_Variable_1) == 0x00007C, "Member 'MonsterBPLibrary_C_Get_Number_Of_Active_Players_In_Combat_Area::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Number_Of_Active_Players_In_Combat_Area, CallFunc_Subtract_IntInt_ReturnValue_3) == 0x000080, "Member 'MonsterBPLibrary_C_Get_Number_Of_Active_Players_In_Combat_Area::CallFunc_Subtract_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Number_Of_Active_Players_In_Combat_Area, CallFunc_GreaterEqual_IntInt_ReturnValue_1) == 0x000084, "Member 'MonsterBPLibrary_C_Get_Number_Of_Active_Players_In_Combat_Area::CallFunc_GreaterEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Number_Of_Active_Players_In_Combat_Area, Temp_int_Array_Index_Variable_1) == 0x000088, "Member 'MonsterBPLibrary_C_Get_Number_Of_Active_Players_In_Combat_Area::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Number_Of_Active_Players_In_Combat_Area, CallFunc_Array_Get_Item_1) == 0x000090, "Member 'MonsterBPLibrary_C_Get_Number_Of_Active_Players_In_Combat_Area::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Number_Of_Active_Players_In_Combat_Area, CallFunc_Array_AddUnique_ReturnValue_1) == 0x000098, "Member 'MonsterBPLibrary_C_Get_Number_Of_Active_Players_In_Combat_Area::CallFunc_Array_AddUnique_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Number_Of_Active_Players_In_Combat_Area, CallFunc_Check_Target_Has_State_Tags_To_Lose_From_Array_Result_1) == 0x00009C, "Member 'MonsterBPLibrary_C_Get_Number_Of_Active_Players_In_Combat_Area::CallFunc_Check_Target_Has_State_Tags_To_Lose_From_Array_Result_1' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Number_Of_Active_Players_In_Combat_Area, K2Node_DynamicCast_AsDCPlayer_Character_Base_1) == 0x0000A0, "Member 'MonsterBPLibrary_C_Get_Number_Of_Active_Players_In_Combat_Area::K2Node_DynamicCast_AsDCPlayer_Character_Base_1' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Number_Of_Active_Players_In_Combat_Area, K2Node_DynamicCast_bSuccess_1) == 0x0000A8, "Member 'MonsterBPLibrary_C_Get_Number_Of_Active_Players_In_Combat_Area::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Number_Of_Active_Players_In_Combat_Area, CallFunc_Not_PreBool_ReturnValue) == 0x0000A9, "Member 'MonsterBPLibrary_C_Get_Number_Of_Active_Players_In_Combat_Area::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function MonsterBPLibrary.MonsterBPLibrary_C.Get Number Of Active Players In Recognition Area
// 0x00B0 (0x00B0 - 0x0000)
struct MonsterBPLibrary_C_Get_Number_Of_Active_Players_In_Recognition_Area final
{
public:
	TArray<class AActor*>                         Enemies_In_Recog_Area;                             // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TArray<class AActor*>                         Lost_Enemies_In_Recog_Area;                        // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class UObject*                                __WorldContext;                                    // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Number_Of_Players;                                 // 0x0028(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue;                          // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3988[0x3];                                     // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_2;            // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3989[0x4];                                     // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue_1;                        // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Check_Target_Has_State_Tags_To_Lose_From_Array_Result; // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_398A[0x7];                                     // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ADCPlayerCharacterBase*                 K2Node_DynamicCast_AsDCPlayer_Character_Base;      // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_398B[0x3];                                     // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_3;            // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_1;        // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_398C[0x3];                                     // 0x0085(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_398D[0x4];                                     // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item_1;                         // 0x0090(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue_1;            // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Check_Target_Has_State_Tags_To_Lose_From_Array_Result_1; // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_398E[0x3];                                     // 0x009D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ADCPlayerCharacterBase*                 K2Node_DynamicCast_AsDCPlayer_Character_Base_1;    // 0x00A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MonsterBPLibrary_C_Get_Number_Of_Active_Players_In_Recognition_Area) == 0x000008, "Wrong alignment on MonsterBPLibrary_C_Get_Number_Of_Active_Players_In_Recognition_Area");
static_assert(sizeof(MonsterBPLibrary_C_Get_Number_Of_Active_Players_In_Recognition_Area) == 0x0000B0, "Wrong size on MonsterBPLibrary_C_Get_Number_Of_Active_Players_In_Recognition_Area");
static_assert(offsetof(MonsterBPLibrary_C_Get_Number_Of_Active_Players_In_Recognition_Area, Enemies_In_Recog_Area) == 0x000000, "Member 'MonsterBPLibrary_C_Get_Number_Of_Active_Players_In_Recognition_Area::Enemies_In_Recog_Area' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Number_Of_Active_Players_In_Recognition_Area, Lost_Enemies_In_Recog_Area) == 0x000010, "Member 'MonsterBPLibrary_C_Get_Number_Of_Active_Players_In_Recognition_Area::Lost_Enemies_In_Recog_Area' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Number_Of_Active_Players_In_Recognition_Area, __WorldContext) == 0x000020, "Member 'MonsterBPLibrary_C_Get_Number_Of_Active_Players_In_Recognition_Area::__WorldContext' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Number_Of_Active_Players_In_Recognition_Area, Number_Of_Players) == 0x000028, "Member 'MonsterBPLibrary_C_Get_Number_Of_Active_Players_In_Recognition_Area::Number_Of_Players' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Number_Of_Active_Players_In_Recognition_Area, Temp_int_Loop_Counter_Variable) == 0x00002C, "Member 'MonsterBPLibrary_C_Get_Number_Of_Active_Players_In_Recognition_Area::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Number_Of_Active_Players_In_Recognition_Area, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'MonsterBPLibrary_C_Get_Number_Of_Active_Players_In_Recognition_Area::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Number_Of_Active_Players_In_Recognition_Area, CallFunc_Subtract_IntInt_ReturnValue) == 0x000034, "Member 'MonsterBPLibrary_C_Get_Number_Of_Active_Players_In_Recognition_Area::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Number_Of_Active_Players_In_Recognition_Area, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x000038, "Member 'MonsterBPLibrary_C_Get_Number_Of_Active_Players_In_Recognition_Area::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Number_Of_Active_Players_In_Recognition_Area, CallFunc_Max_ReturnValue) == 0x00003C, "Member 'MonsterBPLibrary_C_Get_Number_Of_Active_Players_In_Recognition_Area::CallFunc_Max_ReturnValue' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Number_Of_Active_Players_In_Recognition_Area, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000040, "Member 'MonsterBPLibrary_C_Get_Number_Of_Active_Players_In_Recognition_Area::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Number_Of_Active_Players_In_Recognition_Area, CallFunc_Array_Length_ReturnValue_1) == 0x000044, "Member 'MonsterBPLibrary_C_Get_Number_Of_Active_Players_In_Recognition_Area::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Number_Of_Active_Players_In_Recognition_Area, CallFunc_Array_Length_ReturnValue_2) == 0x000048, "Member 'MonsterBPLibrary_C_Get_Number_Of_Active_Players_In_Recognition_Area::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Number_Of_Active_Players_In_Recognition_Area, Temp_int_Array_Index_Variable) == 0x00004C, "Member 'MonsterBPLibrary_C_Get_Number_Of_Active_Players_In_Recognition_Area::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Number_Of_Active_Players_In_Recognition_Area, CallFunc_Subtract_IntInt_ReturnValue_2) == 0x000050, "Member 'MonsterBPLibrary_C_Get_Number_Of_Active_Players_In_Recognition_Area::CallFunc_Subtract_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Number_Of_Active_Players_In_Recognition_Area, CallFunc_Array_Get_Item) == 0x000058, "Member 'MonsterBPLibrary_C_Get_Number_Of_Active_Players_In_Recognition_Area::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Number_Of_Active_Players_In_Recognition_Area, CallFunc_Max_ReturnValue_1) == 0x000060, "Member 'MonsterBPLibrary_C_Get_Number_Of_Active_Players_In_Recognition_Area::CallFunc_Max_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Number_Of_Active_Players_In_Recognition_Area, CallFunc_Array_AddUnique_ReturnValue) == 0x000064, "Member 'MonsterBPLibrary_C_Get_Number_Of_Active_Players_In_Recognition_Area::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Number_Of_Active_Players_In_Recognition_Area, CallFunc_Check_Target_Has_State_Tags_To_Lose_From_Array_Result) == 0x000068, "Member 'MonsterBPLibrary_C_Get_Number_Of_Active_Players_In_Recognition_Area::CallFunc_Check_Target_Has_State_Tags_To_Lose_From_Array_Result' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Number_Of_Active_Players_In_Recognition_Area, K2Node_DynamicCast_AsDCPlayer_Character_Base) == 0x000070, "Member 'MonsterBPLibrary_C_Get_Number_Of_Active_Players_In_Recognition_Area::K2Node_DynamicCast_AsDCPlayer_Character_Base' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Number_Of_Active_Players_In_Recognition_Area, K2Node_DynamicCast_bSuccess) == 0x000078, "Member 'MonsterBPLibrary_C_Get_Number_Of_Active_Players_In_Recognition_Area::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Number_Of_Active_Players_In_Recognition_Area, Temp_int_Loop_Counter_Variable_1) == 0x00007C, "Member 'MonsterBPLibrary_C_Get_Number_Of_Active_Players_In_Recognition_Area::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Number_Of_Active_Players_In_Recognition_Area, CallFunc_Subtract_IntInt_ReturnValue_3) == 0x000080, "Member 'MonsterBPLibrary_C_Get_Number_Of_Active_Players_In_Recognition_Area::CallFunc_Subtract_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Number_Of_Active_Players_In_Recognition_Area, CallFunc_GreaterEqual_IntInt_ReturnValue_1) == 0x000084, "Member 'MonsterBPLibrary_C_Get_Number_Of_Active_Players_In_Recognition_Area::CallFunc_GreaterEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Number_Of_Active_Players_In_Recognition_Area, Temp_int_Array_Index_Variable_1) == 0x000088, "Member 'MonsterBPLibrary_C_Get_Number_Of_Active_Players_In_Recognition_Area::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Number_Of_Active_Players_In_Recognition_Area, CallFunc_Array_Get_Item_1) == 0x000090, "Member 'MonsterBPLibrary_C_Get_Number_Of_Active_Players_In_Recognition_Area::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Number_Of_Active_Players_In_Recognition_Area, CallFunc_Array_AddUnique_ReturnValue_1) == 0x000098, "Member 'MonsterBPLibrary_C_Get_Number_Of_Active_Players_In_Recognition_Area::CallFunc_Array_AddUnique_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Number_Of_Active_Players_In_Recognition_Area, CallFunc_Check_Target_Has_State_Tags_To_Lose_From_Array_Result_1) == 0x00009C, "Member 'MonsterBPLibrary_C_Get_Number_Of_Active_Players_In_Recognition_Area::CallFunc_Check_Target_Has_State_Tags_To_Lose_From_Array_Result_1' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Number_Of_Active_Players_In_Recognition_Area, K2Node_DynamicCast_AsDCPlayer_Character_Base_1) == 0x0000A0, "Member 'MonsterBPLibrary_C_Get_Number_Of_Active_Players_In_Recognition_Area::K2Node_DynamicCast_AsDCPlayer_Character_Base_1' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Number_Of_Active_Players_In_Recognition_Area, K2Node_DynamicCast_bSuccess_1) == 0x0000A8, "Member 'MonsterBPLibrary_C_Get_Number_Of_Active_Players_In_Recognition_Area::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Number_Of_Active_Players_In_Recognition_Area, CallFunc_Not_PreBool_ReturnValue) == 0x0000A9, "Member 'MonsterBPLibrary_C_Get_Number_Of_Active_Players_In_Recognition_Area::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function MonsterBPLibrary.MonsterBPLibrary_C.Get Projectile Relative Spawn Transform
// 0x02B0 (0x02B0 - 0x0000)
struct MonsterBPLibrary_C_Get_Projectile_Relative_Spawn_Transform final
{
public:
	class ADCCharacterBase*                       Start_Actor;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Start_Location;                                    // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EHitBoxType                                   Hit_Box_Type;                                      // 0x0020(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_398F[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FVector>                        Spawn_Location;                                    // 0x0028(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TArray<struct FRotator>                       Shooting_Direction;                                // 0x0038(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class UObject*                                __WorldContext;                                    // 0x0048(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0050(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3990[0x7];                                     // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FVector>                        Spawn_Transform_Location;                          // 0x0058(0x0010)(Parm, OutParm)
	TArray<struct FRotator>                       Spawn_Transform_Rotation;                          // 0x0068(0x0010)(Parm, OutParm)
	struct FVector                                Local_Start_Location;                              // 0x0078(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FRotator>                       Temp_Spawn_Transform_Rotation_Projectile;          // 0x0090(0x0010)(Edit, BlueprintVisible)
	TArray<struct FVector>                        Temp_Spawn_Transform_Location_Projectile;          // 0x00A0(0x0010)(Edit, BlueprintVisible)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x00B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3991[0x3];                                     // 0x00B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetHitBoxLocation_Location;               // 0x00B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetHitBoxLocation_ReturnValue;            // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3992[0x7];                                     // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetActorUpVector_ReturnValue;             // 0x00D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorRightVector_ReturnValue;          // 0x00F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x0108(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x0120(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0144(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x014C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3993[0x3];                                     // 0x014D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Array_Get_Item;                           // 0x0150(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_Array_Get_Item_1;                         // 0x0180(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0198(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll_1;                      // 0x01B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_1;                     // 0x01B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_1;                       // 0x01B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3994[0x4];                                     // 0x01BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x01C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x01D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x01E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_2;           // 0x01E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_2;       // 0x01F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0208(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0220(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x0238(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_2;           // 0x0250(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0268(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3995[0x4];                                     // 0x026C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_B_ImplicitCast;          // 0x0270(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_B_ImplicitCast_1;        // 0x0278(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_B_ImplicitCast_2;        // 0x0280(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_A_ImplicitCast;          // 0x0288(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_A_ImplicitCast_1;        // 0x0290(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_A_ImplicitCast_2;        // 0x0298(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Yaw_ImplicitCast;             // 0x02A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Pitch_ImplicitCast;           // 0x02A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Roll_ImplicitCast;            // 0x02A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MonsterBPLibrary_C_Get_Projectile_Relative_Spawn_Transform) == 0x000008, "Wrong alignment on MonsterBPLibrary_C_Get_Projectile_Relative_Spawn_Transform");
static_assert(sizeof(MonsterBPLibrary_C_Get_Projectile_Relative_Spawn_Transform) == 0x0002B0, "Wrong size on MonsterBPLibrary_C_Get_Projectile_Relative_Spawn_Transform");
static_assert(offsetof(MonsterBPLibrary_C_Get_Projectile_Relative_Spawn_Transform, Start_Actor) == 0x000000, "Member 'MonsterBPLibrary_C_Get_Projectile_Relative_Spawn_Transform::Start_Actor' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Projectile_Relative_Spawn_Transform, Start_Location) == 0x000008, "Member 'MonsterBPLibrary_C_Get_Projectile_Relative_Spawn_Transform::Start_Location' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Projectile_Relative_Spawn_Transform, Hit_Box_Type) == 0x000020, "Member 'MonsterBPLibrary_C_Get_Projectile_Relative_Spawn_Transform::Hit_Box_Type' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Projectile_Relative_Spawn_Transform, Spawn_Location) == 0x000028, "Member 'MonsterBPLibrary_C_Get_Projectile_Relative_Spawn_Transform::Spawn_Location' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Projectile_Relative_Spawn_Transform, Shooting_Direction) == 0x000038, "Member 'MonsterBPLibrary_C_Get_Projectile_Relative_Spawn_Transform::Shooting_Direction' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Projectile_Relative_Spawn_Transform, __WorldContext) == 0x000048, "Member 'MonsterBPLibrary_C_Get_Projectile_Relative_Spawn_Transform::__WorldContext' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Projectile_Relative_Spawn_Transform, Result) == 0x000050, "Member 'MonsterBPLibrary_C_Get_Projectile_Relative_Spawn_Transform::Result' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Projectile_Relative_Spawn_Transform, Spawn_Transform_Location) == 0x000058, "Member 'MonsterBPLibrary_C_Get_Projectile_Relative_Spawn_Transform::Spawn_Transform_Location' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Projectile_Relative_Spawn_Transform, Spawn_Transform_Rotation) == 0x000068, "Member 'MonsterBPLibrary_C_Get_Projectile_Relative_Spawn_Transform::Spawn_Transform_Rotation' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Projectile_Relative_Spawn_Transform, Local_Start_Location) == 0x000078, "Member 'MonsterBPLibrary_C_Get_Projectile_Relative_Spawn_Transform::Local_Start_Location' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Projectile_Relative_Spawn_Transform, Temp_Spawn_Transform_Rotation_Projectile) == 0x000090, "Member 'MonsterBPLibrary_C_Get_Projectile_Relative_Spawn_Transform::Temp_Spawn_Transform_Rotation_Projectile' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Projectile_Relative_Spawn_Transform, Temp_Spawn_Transform_Location_Projectile) == 0x0000A0, "Member 'MonsterBPLibrary_C_Get_Projectile_Relative_Spawn_Transform::Temp_Spawn_Transform_Location_Projectile' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Projectile_Relative_Spawn_Transform, CallFunc_Array_Length_ReturnValue) == 0x0000B0, "Member 'MonsterBPLibrary_C_Get_Projectile_Relative_Spawn_Transform::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Projectile_Relative_Spawn_Transform, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x0000B4, "Member 'MonsterBPLibrary_C_Get_Projectile_Relative_Spawn_Transform::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Projectile_Relative_Spawn_Transform, CallFunc_GetHitBoxLocation_Location) == 0x0000B8, "Member 'MonsterBPLibrary_C_Get_Projectile_Relative_Spawn_Transform::CallFunc_GetHitBoxLocation_Location' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Projectile_Relative_Spawn_Transform, CallFunc_GetHitBoxLocation_ReturnValue) == 0x0000D0, "Member 'MonsterBPLibrary_C_Get_Projectile_Relative_Spawn_Transform::CallFunc_GetHitBoxLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Projectile_Relative_Spawn_Transform, CallFunc_GetActorUpVector_ReturnValue) == 0x0000D8, "Member 'MonsterBPLibrary_C_Get_Projectile_Relative_Spawn_Transform::CallFunc_GetActorUpVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Projectile_Relative_Spawn_Transform, CallFunc_GetActorRightVector_ReturnValue) == 0x0000F0, "Member 'MonsterBPLibrary_C_Get_Projectile_Relative_Spawn_Transform::CallFunc_GetActorRightVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Projectile_Relative_Spawn_Transform, CallFunc_GetActorForwardVector_ReturnValue) == 0x000108, "Member 'MonsterBPLibrary_C_Get_Projectile_Relative_Spawn_Transform::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Projectile_Relative_Spawn_Transform, CallFunc_K2_GetActorRotation_ReturnValue) == 0x000120, "Member 'MonsterBPLibrary_C_Get_Projectile_Relative_Spawn_Transform::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Projectile_Relative_Spawn_Transform, CallFunc_BreakRotator_Roll) == 0x000138, "Member 'MonsterBPLibrary_C_Get_Projectile_Relative_Spawn_Transform::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Projectile_Relative_Spawn_Transform, CallFunc_BreakRotator_Pitch) == 0x00013C, "Member 'MonsterBPLibrary_C_Get_Projectile_Relative_Spawn_Transform::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Projectile_Relative_Spawn_Transform, CallFunc_BreakRotator_Yaw) == 0x000140, "Member 'MonsterBPLibrary_C_Get_Projectile_Relative_Spawn_Transform::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Projectile_Relative_Spawn_Transform, Temp_int_Loop_Counter_Variable) == 0x000144, "Member 'MonsterBPLibrary_C_Get_Projectile_Relative_Spawn_Transform::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Projectile_Relative_Spawn_Transform, Temp_int_Array_Index_Variable) == 0x000148, "Member 'MonsterBPLibrary_C_Get_Projectile_Relative_Spawn_Transform::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Projectile_Relative_Spawn_Transform, CallFunc_Less_IntInt_ReturnValue) == 0x00014C, "Member 'MonsterBPLibrary_C_Get_Projectile_Relative_Spawn_Transform::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Projectile_Relative_Spawn_Transform, CallFunc_Array_Get_Item) == 0x000150, "Member 'MonsterBPLibrary_C_Get_Projectile_Relative_Spawn_Transform::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Projectile_Relative_Spawn_Transform, CallFunc_BreakVector_X) == 0x000168, "Member 'MonsterBPLibrary_C_Get_Projectile_Relative_Spawn_Transform::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Projectile_Relative_Spawn_Transform, CallFunc_BreakVector_Y) == 0x000170, "Member 'MonsterBPLibrary_C_Get_Projectile_Relative_Spawn_Transform::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Projectile_Relative_Spawn_Transform, CallFunc_BreakVector_Z) == 0x000178, "Member 'MonsterBPLibrary_C_Get_Projectile_Relative_Spawn_Transform::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Projectile_Relative_Spawn_Transform, CallFunc_Array_Get_Item_1) == 0x000180, "Member 'MonsterBPLibrary_C_Get_Projectile_Relative_Spawn_Transform::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Projectile_Relative_Spawn_Transform, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000198, "Member 'MonsterBPLibrary_C_Get_Projectile_Relative_Spawn_Transform::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Projectile_Relative_Spawn_Transform, CallFunc_BreakRotator_Roll_1) == 0x0001B0, "Member 'MonsterBPLibrary_C_Get_Projectile_Relative_Spawn_Transform::CallFunc_BreakRotator_Roll_1' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Projectile_Relative_Spawn_Transform, CallFunc_BreakRotator_Pitch_1) == 0x0001B4, "Member 'MonsterBPLibrary_C_Get_Projectile_Relative_Spawn_Transform::CallFunc_BreakRotator_Pitch_1' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Projectile_Relative_Spawn_Transform, CallFunc_BreakRotator_Yaw_1) == 0x0001B8, "Member 'MonsterBPLibrary_C_Get_Projectile_Relative_Spawn_Transform::CallFunc_BreakRotator_Yaw_1' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Projectile_Relative_Spawn_Transform, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x0001C0, "Member 'MonsterBPLibrary_C_Get_Projectile_Relative_Spawn_Transform::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Projectile_Relative_Spawn_Transform, CallFunc_Add_DoubleDouble_ReturnValue) == 0x0001D8, "Member 'MonsterBPLibrary_C_Get_Projectile_Relative_Spawn_Transform::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Projectile_Relative_Spawn_Transform, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x0001E0, "Member 'MonsterBPLibrary_C_Get_Projectile_Relative_Spawn_Transform::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Projectile_Relative_Spawn_Transform, CallFunc_Add_DoubleDouble_ReturnValue_2) == 0x0001E8, "Member 'MonsterBPLibrary_C_Get_Projectile_Relative_Spawn_Transform::CallFunc_Add_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Projectile_Relative_Spawn_Transform, CallFunc_Multiply_VectorFloat_ReturnValue_2) == 0x0001F0, "Member 'MonsterBPLibrary_C_Get_Projectile_Relative_Spawn_Transform::CallFunc_Multiply_VectorFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Projectile_Relative_Spawn_Transform, CallFunc_MakeRotator_ReturnValue) == 0x000208, "Member 'MonsterBPLibrary_C_Get_Projectile_Relative_Spawn_Transform::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Projectile_Relative_Spawn_Transform, CallFunc_Add_VectorVector_ReturnValue) == 0x000220, "Member 'MonsterBPLibrary_C_Get_Projectile_Relative_Spawn_Transform::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Projectile_Relative_Spawn_Transform, CallFunc_Add_VectorVector_ReturnValue_1) == 0x000238, "Member 'MonsterBPLibrary_C_Get_Projectile_Relative_Spawn_Transform::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Projectile_Relative_Spawn_Transform, CallFunc_Add_VectorVector_ReturnValue_2) == 0x000250, "Member 'MonsterBPLibrary_C_Get_Projectile_Relative_Spawn_Transform::CallFunc_Add_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Projectile_Relative_Spawn_Transform, CallFunc_Add_IntInt_ReturnValue) == 0x000268, "Member 'MonsterBPLibrary_C_Get_Projectile_Relative_Spawn_Transform::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Projectile_Relative_Spawn_Transform, CallFunc_Add_DoubleDouble_B_ImplicitCast) == 0x000270, "Member 'MonsterBPLibrary_C_Get_Projectile_Relative_Spawn_Transform::CallFunc_Add_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Projectile_Relative_Spawn_Transform, CallFunc_Add_DoubleDouble_B_ImplicitCast_1) == 0x000278, "Member 'MonsterBPLibrary_C_Get_Projectile_Relative_Spawn_Transform::CallFunc_Add_DoubleDouble_B_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Projectile_Relative_Spawn_Transform, CallFunc_Add_DoubleDouble_B_ImplicitCast_2) == 0x000280, "Member 'MonsterBPLibrary_C_Get_Projectile_Relative_Spawn_Transform::CallFunc_Add_DoubleDouble_B_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Projectile_Relative_Spawn_Transform, CallFunc_Add_DoubleDouble_A_ImplicitCast) == 0x000288, "Member 'MonsterBPLibrary_C_Get_Projectile_Relative_Spawn_Transform::CallFunc_Add_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Projectile_Relative_Spawn_Transform, CallFunc_Add_DoubleDouble_A_ImplicitCast_1) == 0x000290, "Member 'MonsterBPLibrary_C_Get_Projectile_Relative_Spawn_Transform::CallFunc_Add_DoubleDouble_A_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Projectile_Relative_Spawn_Transform, CallFunc_Add_DoubleDouble_A_ImplicitCast_2) == 0x000298, "Member 'MonsterBPLibrary_C_Get_Projectile_Relative_Spawn_Transform::CallFunc_Add_DoubleDouble_A_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Projectile_Relative_Spawn_Transform, CallFunc_MakeRotator_Yaw_ImplicitCast) == 0x0002A0, "Member 'MonsterBPLibrary_C_Get_Projectile_Relative_Spawn_Transform::CallFunc_MakeRotator_Yaw_ImplicitCast' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Projectile_Relative_Spawn_Transform, CallFunc_MakeRotator_Pitch_ImplicitCast) == 0x0002A4, "Member 'MonsterBPLibrary_C_Get_Projectile_Relative_Spawn_Transform::CallFunc_MakeRotator_Pitch_ImplicitCast' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Projectile_Relative_Spawn_Transform, CallFunc_MakeRotator_Roll_ImplicitCast) == 0x0002A8, "Member 'MonsterBPLibrary_C_Get_Projectile_Relative_Spawn_Transform::CallFunc_MakeRotator_Roll_ImplicitCast' has a wrong offset!");

// Function MonsterBPLibrary.MonsterBPLibrary_C.Kill Actor
// 0x0030 (0x0030 - 0x0000)
struct MonsterBPLibrary_C_Kill_Actor final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<struct FPrimaryAssetId>                K2Node_MakeArray_Array;                            // 0x0010(0x0010)(ConstParm, ReferenceParm)
	TArray<struct FActiveGameplayEffectHandle>    CallFunc_ApplyGameplayEffectByIds_ReturnValue;     // 0x0020(0x0010)(ReferenceParm)
};
static_assert(alignof(MonsterBPLibrary_C_Kill_Actor) == 0x000008, "Wrong alignment on MonsterBPLibrary_C_Kill_Actor");
static_assert(sizeof(MonsterBPLibrary_C_Kill_Actor) == 0x000030, "Wrong size on MonsterBPLibrary_C_Kill_Actor");
static_assert(offsetof(MonsterBPLibrary_C_Kill_Actor, Actor) == 0x000000, "Member 'MonsterBPLibrary_C_Kill_Actor::Actor' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Kill_Actor, __WorldContext) == 0x000008, "Member 'MonsterBPLibrary_C_Kill_Actor::__WorldContext' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Kill_Actor, K2Node_MakeArray_Array) == 0x000010, "Member 'MonsterBPLibrary_C_Kill_Actor::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Kill_Actor, CallFunc_ApplyGameplayEffectByIds_ReturnValue) == 0x000020, "Member 'MonsterBPLibrary_C_Kill_Actor::CallFunc_ApplyGameplayEffectByIds_ReturnValue' has a wrong offset!");

// Function MonsterBPLibrary.MonsterBPLibrary_C.Launch Enemy
// 0x07B8 (0x07B8 - 0x0000)
struct MonsterBPLibrary_C_Launch_Enemy final
{
public:
	struct FGameplayEventData                     Event_Data;                                        // 0x0000(0x00B0)(BlueprintVisible, BlueprintReadOnly, Parm)
	bool                                          Launch_Weapon_Direction;                           // 0x00B0(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3996[0x7];                                     // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        XY_Value;                                          // 0x00B8(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Z_Value;                                           // 0x00C0(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x00C8(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x00D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x00E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue;          // 0x0110(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue_1;        // 0x0128(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue_2;        // 0x0148(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EffectContextIsValid_ReturnValue;         // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3997[0x7];                                     // 0x0161(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_EffectContextGetHitResult_ReturnValue;    // 0x0168(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0250(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0251(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3998[0x2];                                     // 0x0252(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0254(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0258(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3999[0x4];                                     // 0x025C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0260(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0278(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0290(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x02A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x02C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x02C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x02D0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x02D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x02E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x02E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x02EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x02F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_399A[0x4];                                     // 0x02F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x02F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0310(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_EffectContextGetHitResult_ReturnValue_1;  // 0x0328(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0410(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit_1;            // 0x0428(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap_1;         // 0x0429(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_399B[0x2];                                     // 0x042A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time_1;                    // 0x042C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance_1;                // 0x0430(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_399C[0x4];                                     // 0x0434(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location_1;                // 0x0438(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint_1;             // 0x0450(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal_1;                  // 0x0468(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal_1;            // 0x0480(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat_1;                 // 0x0498(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor_1;                // 0x04A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent_1;            // 0x04A8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName_1;             // 0x04B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName_1;                // 0x04B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem_1;                 // 0x04C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex_1;            // 0x04C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex_1;               // 0x04C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_399D[0x4];                                     // 0x04CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart_1;              // 0x04D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd_1;                // 0x04E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0500(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ADCCharacterBase*                       K2Node_DynamicCast_AsDCCharacter_Base;             // 0x0518(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0520(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_399E[0x7];                                     // 0x0521(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector_X;                            // 0x0528(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0530(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0538(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0540(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_399F[0x7];                                     // 0x0541(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0548(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0550(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ADCCharacterBase*                       K2Node_DynamicCast_AsDCCharacter_Base_1;           // 0x0568(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0570(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39A0[0x7];                                     // 0x0571(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector_X_1;                          // 0x0578(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_1;                          // 0x0580(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_1;                          // 0x0588(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0590(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39A1[0x7];                                     // 0x0591(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_MakeVector_ReturnValue_2;                 // 0x0598(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue_1;                     // 0x05B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_2;        // 0x05C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x05E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_2;                          // 0x05F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_2;                          // 0x0600(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_2;                          // 0x0608(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_3;                          // 0x0610(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_3;                          // 0x0618(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_3;                          // 0x0620(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_3;                 // 0x0628(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_4;                 // 0x0640(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ADCCharacterBase*                       K2Node_DynamicCast_AsDCCharacter_Base_2;           // 0x0658(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0660(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0661(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39A2[0x6];                                     // 0x0662(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_3;        // 0x0668(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_4;                          // 0x0680(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_4;                          // 0x0688(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_4;                          // 0x0690(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_4;        // 0x0698(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_5;                 // 0x06B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_5;                          // 0x06C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_5;                          // 0x06D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_5;                          // 0x06D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x06E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_6;                 // 0x06F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue_2;                     // 0x0710(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_1;      // 0x0728(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_1;      // 0x0740(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue_3;                     // 0x0758(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0770(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_2;      // 0x0788(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x07A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MonsterBPLibrary_C_Launch_Enemy) == 0x000008, "Wrong alignment on MonsterBPLibrary_C_Launch_Enemy");
static_assert(sizeof(MonsterBPLibrary_C_Launch_Enemy) == 0x0007B8, "Wrong size on MonsterBPLibrary_C_Launch_Enemy");
static_assert(offsetof(MonsterBPLibrary_C_Launch_Enemy, Event_Data) == 0x000000, "Member 'MonsterBPLibrary_C_Launch_Enemy::Event_Data' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Launch_Enemy, Launch_Weapon_Direction) == 0x0000B0, "Member 'MonsterBPLibrary_C_Launch_Enemy::Launch_Weapon_Direction' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Launch_Enemy, XY_Value) == 0x0000B8, "Member 'MonsterBPLibrary_C_Launch_Enemy::XY_Value' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Launch_Enemy, Z_Value) == 0x0000C0, "Member 'MonsterBPLibrary_C_Launch_Enemy::Z_Value' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Launch_Enemy, __WorldContext) == 0x0000C8, "Member 'MonsterBPLibrary_C_Launch_Enemy::__WorldContext' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Launch_Enemy, CallFunc_MakeVector_ReturnValue) == 0x0000D0, "Member 'MonsterBPLibrary_C_Launch_Enemy::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Launch_Enemy, CallFunc_MakeVector_ReturnValue_1) == 0x0000E8, "Member 'MonsterBPLibrary_C_Launch_Enemy::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Launch_Enemy, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000100, "Member 'MonsterBPLibrary_C_Launch_Enemy::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Launch_Enemy, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000108, "Member 'MonsterBPLibrary_C_Launch_Enemy::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Launch_Enemy, CallFunc_Conv_DoubleToVector_ReturnValue) == 0x000110, "Member 'MonsterBPLibrary_C_Launch_Enemy::CallFunc_Conv_DoubleToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Launch_Enemy, CallFunc_Conv_DoubleToVector_ReturnValue_1) == 0x000128, "Member 'MonsterBPLibrary_C_Launch_Enemy::CallFunc_Conv_DoubleToVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Launch_Enemy, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000140, "Member 'MonsterBPLibrary_C_Launch_Enemy::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Launch_Enemy, CallFunc_Conv_DoubleToVector_ReturnValue_2) == 0x000148, "Member 'MonsterBPLibrary_C_Launch_Enemy::CallFunc_Conv_DoubleToVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Launch_Enemy, CallFunc_EffectContextIsValid_ReturnValue) == 0x000160, "Member 'MonsterBPLibrary_C_Launch_Enemy::CallFunc_EffectContextIsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Launch_Enemy, CallFunc_EffectContextGetHitResult_ReturnValue) == 0x000168, "Member 'MonsterBPLibrary_C_Launch_Enemy::CallFunc_EffectContextGetHitResult_ReturnValue' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Launch_Enemy, CallFunc_BreakHitResult_bBlockingHit) == 0x000250, "Member 'MonsterBPLibrary_C_Launch_Enemy::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Launch_Enemy, CallFunc_BreakHitResult_bInitialOverlap) == 0x000251, "Member 'MonsterBPLibrary_C_Launch_Enemy::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Launch_Enemy, CallFunc_BreakHitResult_Time) == 0x000254, "Member 'MonsterBPLibrary_C_Launch_Enemy::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Launch_Enemy, CallFunc_BreakHitResult_Distance) == 0x000258, "Member 'MonsterBPLibrary_C_Launch_Enemy::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Launch_Enemy, CallFunc_BreakHitResult_Location) == 0x000260, "Member 'MonsterBPLibrary_C_Launch_Enemy::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Launch_Enemy, CallFunc_BreakHitResult_ImpactPoint) == 0x000278, "Member 'MonsterBPLibrary_C_Launch_Enemy::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Launch_Enemy, CallFunc_BreakHitResult_Normal) == 0x000290, "Member 'MonsterBPLibrary_C_Launch_Enemy::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Launch_Enemy, CallFunc_BreakHitResult_ImpactNormal) == 0x0002A8, "Member 'MonsterBPLibrary_C_Launch_Enemy::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Launch_Enemy, CallFunc_BreakHitResult_PhysMat) == 0x0002C0, "Member 'MonsterBPLibrary_C_Launch_Enemy::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Launch_Enemy, CallFunc_BreakHitResult_HitActor) == 0x0002C8, "Member 'MonsterBPLibrary_C_Launch_Enemy::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Launch_Enemy, CallFunc_BreakHitResult_HitComponent) == 0x0002D0, "Member 'MonsterBPLibrary_C_Launch_Enemy::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Launch_Enemy, CallFunc_BreakHitResult_HitBoneName) == 0x0002D8, "Member 'MonsterBPLibrary_C_Launch_Enemy::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Launch_Enemy, CallFunc_BreakHitResult_BoneName) == 0x0002E0, "Member 'MonsterBPLibrary_C_Launch_Enemy::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Launch_Enemy, CallFunc_BreakHitResult_HitItem) == 0x0002E8, "Member 'MonsterBPLibrary_C_Launch_Enemy::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Launch_Enemy, CallFunc_BreakHitResult_ElementIndex) == 0x0002EC, "Member 'MonsterBPLibrary_C_Launch_Enemy::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Launch_Enemy, CallFunc_BreakHitResult_FaceIndex) == 0x0002F0, "Member 'MonsterBPLibrary_C_Launch_Enemy::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Launch_Enemy, CallFunc_BreakHitResult_TraceStart) == 0x0002F8, "Member 'MonsterBPLibrary_C_Launch_Enemy::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Launch_Enemy, CallFunc_BreakHitResult_TraceEnd) == 0x000310, "Member 'MonsterBPLibrary_C_Launch_Enemy::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Launch_Enemy, CallFunc_EffectContextGetHitResult_ReturnValue_1) == 0x000328, "Member 'MonsterBPLibrary_C_Launch_Enemy::CallFunc_EffectContextGetHitResult_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Launch_Enemy, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000410, "Member 'MonsterBPLibrary_C_Launch_Enemy::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Launch_Enemy, CallFunc_BreakHitResult_bBlockingHit_1) == 0x000428, "Member 'MonsterBPLibrary_C_Launch_Enemy::CallFunc_BreakHitResult_bBlockingHit_1' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Launch_Enemy, CallFunc_BreakHitResult_bInitialOverlap_1) == 0x000429, "Member 'MonsterBPLibrary_C_Launch_Enemy::CallFunc_BreakHitResult_bInitialOverlap_1' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Launch_Enemy, CallFunc_BreakHitResult_Time_1) == 0x00042C, "Member 'MonsterBPLibrary_C_Launch_Enemy::CallFunc_BreakHitResult_Time_1' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Launch_Enemy, CallFunc_BreakHitResult_Distance_1) == 0x000430, "Member 'MonsterBPLibrary_C_Launch_Enemy::CallFunc_BreakHitResult_Distance_1' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Launch_Enemy, CallFunc_BreakHitResult_Location_1) == 0x000438, "Member 'MonsterBPLibrary_C_Launch_Enemy::CallFunc_BreakHitResult_Location_1' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Launch_Enemy, CallFunc_BreakHitResult_ImpactPoint_1) == 0x000450, "Member 'MonsterBPLibrary_C_Launch_Enemy::CallFunc_BreakHitResult_ImpactPoint_1' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Launch_Enemy, CallFunc_BreakHitResult_Normal_1) == 0x000468, "Member 'MonsterBPLibrary_C_Launch_Enemy::CallFunc_BreakHitResult_Normal_1' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Launch_Enemy, CallFunc_BreakHitResult_ImpactNormal_1) == 0x000480, "Member 'MonsterBPLibrary_C_Launch_Enemy::CallFunc_BreakHitResult_ImpactNormal_1' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Launch_Enemy, CallFunc_BreakHitResult_PhysMat_1) == 0x000498, "Member 'MonsterBPLibrary_C_Launch_Enemy::CallFunc_BreakHitResult_PhysMat_1' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Launch_Enemy, CallFunc_BreakHitResult_HitActor_1) == 0x0004A0, "Member 'MonsterBPLibrary_C_Launch_Enemy::CallFunc_BreakHitResult_HitActor_1' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Launch_Enemy, CallFunc_BreakHitResult_HitComponent_1) == 0x0004A8, "Member 'MonsterBPLibrary_C_Launch_Enemy::CallFunc_BreakHitResult_HitComponent_1' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Launch_Enemy, CallFunc_BreakHitResult_HitBoneName_1) == 0x0004B0, "Member 'MonsterBPLibrary_C_Launch_Enemy::CallFunc_BreakHitResult_HitBoneName_1' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Launch_Enemy, CallFunc_BreakHitResult_BoneName_1) == 0x0004B8, "Member 'MonsterBPLibrary_C_Launch_Enemy::CallFunc_BreakHitResult_BoneName_1' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Launch_Enemy, CallFunc_BreakHitResult_HitItem_1) == 0x0004C0, "Member 'MonsterBPLibrary_C_Launch_Enemy::CallFunc_BreakHitResult_HitItem_1' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Launch_Enemy, CallFunc_BreakHitResult_ElementIndex_1) == 0x0004C4, "Member 'MonsterBPLibrary_C_Launch_Enemy::CallFunc_BreakHitResult_ElementIndex_1' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Launch_Enemy, CallFunc_BreakHitResult_FaceIndex_1) == 0x0004C8, "Member 'MonsterBPLibrary_C_Launch_Enemy::CallFunc_BreakHitResult_FaceIndex_1' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Launch_Enemy, CallFunc_BreakHitResult_TraceStart_1) == 0x0004D0, "Member 'MonsterBPLibrary_C_Launch_Enemy::CallFunc_BreakHitResult_TraceStart_1' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Launch_Enemy, CallFunc_BreakHitResult_TraceEnd_1) == 0x0004E8, "Member 'MonsterBPLibrary_C_Launch_Enemy::CallFunc_BreakHitResult_TraceEnd_1' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Launch_Enemy, CallFunc_Normal_ReturnValue) == 0x000500, "Member 'MonsterBPLibrary_C_Launch_Enemy::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Launch_Enemy, K2Node_DynamicCast_AsDCCharacter_Base) == 0x000518, "Member 'MonsterBPLibrary_C_Launch_Enemy::K2Node_DynamicCast_AsDCCharacter_Base' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Launch_Enemy, K2Node_DynamicCast_bSuccess) == 0x000520, "Member 'MonsterBPLibrary_C_Launch_Enemy::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Launch_Enemy, CallFunc_BreakVector_X) == 0x000528, "Member 'MonsterBPLibrary_C_Launch_Enemy::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Launch_Enemy, CallFunc_BreakVector_Y) == 0x000530, "Member 'MonsterBPLibrary_C_Launch_Enemy::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Launch_Enemy, CallFunc_BreakVector_Z) == 0x000538, "Member 'MonsterBPLibrary_C_Launch_Enemy::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Launch_Enemy, CallFunc_IsValid_ReturnValue) == 0x000540, "Member 'MonsterBPLibrary_C_Launch_Enemy::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Launch_Enemy, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000548, "Member 'MonsterBPLibrary_C_Launch_Enemy::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Launch_Enemy, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000550, "Member 'MonsterBPLibrary_C_Launch_Enemy::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Launch_Enemy, K2Node_DynamicCast_AsDCCharacter_Base_1) == 0x000568, "Member 'MonsterBPLibrary_C_Launch_Enemy::K2Node_DynamicCast_AsDCCharacter_Base_1' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Launch_Enemy, K2Node_DynamicCast_bSuccess_1) == 0x000570, "Member 'MonsterBPLibrary_C_Launch_Enemy::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Launch_Enemy, CallFunc_BreakVector_X_1) == 0x000578, "Member 'MonsterBPLibrary_C_Launch_Enemy::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Launch_Enemy, CallFunc_BreakVector_Y_1) == 0x000580, "Member 'MonsterBPLibrary_C_Launch_Enemy::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Launch_Enemy, CallFunc_BreakVector_Z_1) == 0x000588, "Member 'MonsterBPLibrary_C_Launch_Enemy::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Launch_Enemy, CallFunc_IsValid_ReturnValue_1) == 0x000590, "Member 'MonsterBPLibrary_C_Launch_Enemy::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Launch_Enemy, CallFunc_MakeVector_ReturnValue_2) == 0x000598, "Member 'MonsterBPLibrary_C_Launch_Enemy::CallFunc_MakeVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Launch_Enemy, CallFunc_Normal_ReturnValue_1) == 0x0005B0, "Member 'MonsterBPLibrary_C_Launch_Enemy::CallFunc_Normal_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Launch_Enemy, CallFunc_K2_GetActorLocation_ReturnValue_2) == 0x0005C8, "Member 'MonsterBPLibrary_C_Launch_Enemy::CallFunc_K2_GetActorLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Launch_Enemy, CallFunc_Multiply_VectorVector_ReturnValue) == 0x0005E0, "Member 'MonsterBPLibrary_C_Launch_Enemy::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Launch_Enemy, CallFunc_BreakVector_X_2) == 0x0005F8, "Member 'MonsterBPLibrary_C_Launch_Enemy::CallFunc_BreakVector_X_2' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Launch_Enemy, CallFunc_BreakVector_Y_2) == 0x000600, "Member 'MonsterBPLibrary_C_Launch_Enemy::CallFunc_BreakVector_Y_2' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Launch_Enemy, CallFunc_BreakVector_Z_2) == 0x000608, "Member 'MonsterBPLibrary_C_Launch_Enemy::CallFunc_BreakVector_Z_2' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Launch_Enemy, CallFunc_BreakVector_X_3) == 0x000610, "Member 'MonsterBPLibrary_C_Launch_Enemy::CallFunc_BreakVector_X_3' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Launch_Enemy, CallFunc_BreakVector_Y_3) == 0x000618, "Member 'MonsterBPLibrary_C_Launch_Enemy::CallFunc_BreakVector_Y_3' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Launch_Enemy, CallFunc_BreakVector_Z_3) == 0x000620, "Member 'MonsterBPLibrary_C_Launch_Enemy::CallFunc_BreakVector_Z_3' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Launch_Enemy, CallFunc_MakeVector_ReturnValue_3) == 0x000628, "Member 'MonsterBPLibrary_C_Launch_Enemy::CallFunc_MakeVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Launch_Enemy, CallFunc_MakeVector_ReturnValue_4) == 0x000640, "Member 'MonsterBPLibrary_C_Launch_Enemy::CallFunc_MakeVector_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Launch_Enemy, K2Node_DynamicCast_AsDCCharacter_Base_2) == 0x000658, "Member 'MonsterBPLibrary_C_Launch_Enemy::K2Node_DynamicCast_AsDCCharacter_Base_2' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Launch_Enemy, K2Node_DynamicCast_bSuccess_2) == 0x000660, "Member 'MonsterBPLibrary_C_Launch_Enemy::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Launch_Enemy, CallFunc_IsValid_ReturnValue_2) == 0x000661, "Member 'MonsterBPLibrary_C_Launch_Enemy::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Launch_Enemy, CallFunc_K2_GetActorLocation_ReturnValue_3) == 0x000668, "Member 'MonsterBPLibrary_C_Launch_Enemy::CallFunc_K2_GetActorLocation_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Launch_Enemy, CallFunc_BreakVector_X_4) == 0x000680, "Member 'MonsterBPLibrary_C_Launch_Enemy::CallFunc_BreakVector_X_4' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Launch_Enemy, CallFunc_BreakVector_Y_4) == 0x000688, "Member 'MonsterBPLibrary_C_Launch_Enemy::CallFunc_BreakVector_Y_4' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Launch_Enemy, CallFunc_BreakVector_Z_4) == 0x000690, "Member 'MonsterBPLibrary_C_Launch_Enemy::CallFunc_BreakVector_Z_4' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Launch_Enemy, CallFunc_K2_GetActorLocation_ReturnValue_4) == 0x000698, "Member 'MonsterBPLibrary_C_Launch_Enemy::CallFunc_K2_GetActorLocation_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Launch_Enemy, CallFunc_MakeVector_ReturnValue_5) == 0x0006B0, "Member 'MonsterBPLibrary_C_Launch_Enemy::CallFunc_MakeVector_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Launch_Enemy, CallFunc_BreakVector_X_5) == 0x0006C8, "Member 'MonsterBPLibrary_C_Launch_Enemy::CallFunc_BreakVector_X_5' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Launch_Enemy, CallFunc_BreakVector_Y_5) == 0x0006D0, "Member 'MonsterBPLibrary_C_Launch_Enemy::CallFunc_BreakVector_Y_5' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Launch_Enemy, CallFunc_BreakVector_Z_5) == 0x0006D8, "Member 'MonsterBPLibrary_C_Launch_Enemy::CallFunc_BreakVector_Z_5' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Launch_Enemy, CallFunc_Subtract_VectorVector_ReturnValue) == 0x0006E0, "Member 'MonsterBPLibrary_C_Launch_Enemy::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Launch_Enemy, CallFunc_MakeVector_ReturnValue_6) == 0x0006F8, "Member 'MonsterBPLibrary_C_Launch_Enemy::CallFunc_MakeVector_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Launch_Enemy, CallFunc_Normal_ReturnValue_2) == 0x000710, "Member 'MonsterBPLibrary_C_Launch_Enemy::CallFunc_Normal_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Launch_Enemy, CallFunc_Subtract_VectorVector_ReturnValue_1) == 0x000728, "Member 'MonsterBPLibrary_C_Launch_Enemy::CallFunc_Subtract_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Launch_Enemy, CallFunc_Multiply_VectorVector_ReturnValue_1) == 0x000740, "Member 'MonsterBPLibrary_C_Launch_Enemy::CallFunc_Multiply_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Launch_Enemy, CallFunc_Normal_ReturnValue_3) == 0x000758, "Member 'MonsterBPLibrary_C_Launch_Enemy::CallFunc_Normal_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Launch_Enemy, CallFunc_Add_VectorVector_ReturnValue) == 0x000770, "Member 'MonsterBPLibrary_C_Launch_Enemy::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Launch_Enemy, CallFunc_Multiply_VectorVector_ReturnValue_2) == 0x000788, "Member 'MonsterBPLibrary_C_Launch_Enemy::CallFunc_Multiply_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Launch_Enemy, CallFunc_Add_VectorVector_ReturnValue_1) == 0x0007A0, "Member 'MonsterBPLibrary_C_Launch_Enemy::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");

// Function MonsterBPLibrary.MonsterBPLibrary_C.Remove AI Timer
// 0x0040 (0x0040 - 0x0000)
struct MonsterBPLibrary_C_Remove_AI_Timer final
{
public:
	class ADCMonsterBase*                         DCMonsterBase;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Timer_Index;                                       // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39A3[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  RemoveTag;                                         // 0x0018(0x0020)(Edit, BlueprintVisible)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39A4[0x3];                                     // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_RemoveActiveEffectsWithGrantedTags_ReturnValue; // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MonsterBPLibrary_C_Remove_AI_Timer) == 0x000008, "Wrong alignment on MonsterBPLibrary_C_Remove_AI_Timer");
static_assert(sizeof(MonsterBPLibrary_C_Remove_AI_Timer) == 0x000040, "Wrong size on MonsterBPLibrary_C_Remove_AI_Timer");
static_assert(offsetof(MonsterBPLibrary_C_Remove_AI_Timer, DCMonsterBase) == 0x000000, "Member 'MonsterBPLibrary_C_Remove_AI_Timer::DCMonsterBase' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Remove_AI_Timer, Timer_Index) == 0x000008, "Member 'MonsterBPLibrary_C_Remove_AI_Timer::Timer_Index' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Remove_AI_Timer, __WorldContext) == 0x000010, "Member 'MonsterBPLibrary_C_Remove_AI_Timer::__WorldContext' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Remove_AI_Timer, RemoveTag) == 0x000018, "Member 'MonsterBPLibrary_C_Remove_AI_Timer::RemoveTag' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Remove_AI_Timer, K2Node_SwitchInteger_CmpSuccess) == 0x000038, "Member 'MonsterBPLibrary_C_Remove_AI_Timer::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Remove_AI_Timer, CallFunc_RemoveActiveEffectsWithGrantedTags_ReturnValue) == 0x00003C, "Member 'MonsterBPLibrary_C_Remove_AI_Timer::CallFunc_RemoveActiveEffectsWithGrantedTags_ReturnValue' has a wrong offset!");

// Function MonsterBPLibrary.MonsterBPLibrary_C.Remove Debuff Immune
// 0x0088 (0x0088 - 0x0000)
struct MonsterBPLibrary_C_Remove_Debuff_Immune final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Fear;                                              // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Impact;                                            // 0x0009(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          KnockBack;                                         // 0x000A(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Trap;                                              // 0x000B(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          UnableMove;                                        // 0x000C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Unhealable;                                        // 0x000D(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39A5[0x2];                                     // 0x000E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Temp_struct_Variable;                              // 0x0018(0x0008)(ConstParm, NoDestructor, HasGetValueTypeHash)
	TArray<struct FGameplayTag>                   CallFunc_Get_Debuff_Immune_Tags_Debuff_Immune_Tags; // 0x0020(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39A6[0x3];                                     // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           Temp_struct_Variable_1;                            // 0x0038(0x0008)(ConstParm, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Temp_struct_Variable_2;                            // 0x0040(0x0008)(ConstParm, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue_1;           // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue_2;           // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39A7[0x2];                                     // 0x004A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           Temp_struct_Variable_3;                            // 0x004C(0x0008)(ConstParm, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue_3;           // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39A8[0x3];                                     // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           CallFunc_Array_Get_Item;                           // 0x005C(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RemoveGameplayTag_ReturnValue;            // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39A9[0x3];                                     // 0x0065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Temp_struct_Variable_4;                            // 0x006C(0x0008)(ConstParm, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue_4;           // 0x0075(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39AA[0x2];                                     // 0x0076(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Temp_struct_Variable_5;                            // 0x007C(0x0008)(ConstParm, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue_5;           // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MonsterBPLibrary_C_Remove_Debuff_Immune) == 0x000008, "Wrong alignment on MonsterBPLibrary_C_Remove_Debuff_Immune");
static_assert(sizeof(MonsterBPLibrary_C_Remove_Debuff_Immune) == 0x000088, "Wrong size on MonsterBPLibrary_C_Remove_Debuff_Immune");
static_assert(offsetof(MonsterBPLibrary_C_Remove_Debuff_Immune, Actor) == 0x000000, "Member 'MonsterBPLibrary_C_Remove_Debuff_Immune::Actor' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Remove_Debuff_Immune, Fear) == 0x000008, "Member 'MonsterBPLibrary_C_Remove_Debuff_Immune::Fear' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Remove_Debuff_Immune, Impact) == 0x000009, "Member 'MonsterBPLibrary_C_Remove_Debuff_Immune::Impact' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Remove_Debuff_Immune, KnockBack) == 0x00000A, "Member 'MonsterBPLibrary_C_Remove_Debuff_Immune::KnockBack' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Remove_Debuff_Immune, Trap) == 0x00000B, "Member 'MonsterBPLibrary_C_Remove_Debuff_Immune::Trap' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Remove_Debuff_Immune, UnableMove) == 0x00000C, "Member 'MonsterBPLibrary_C_Remove_Debuff_Immune::UnableMove' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Remove_Debuff_Immune, Unhealable) == 0x00000D, "Member 'MonsterBPLibrary_C_Remove_Debuff_Immune::Unhealable' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Remove_Debuff_Immune, __WorldContext) == 0x000010, "Member 'MonsterBPLibrary_C_Remove_Debuff_Immune::__WorldContext' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Remove_Debuff_Immune, Temp_struct_Variable) == 0x000018, "Member 'MonsterBPLibrary_C_Remove_Debuff_Immune::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Remove_Debuff_Immune, CallFunc_Get_Debuff_Immune_Tags_Debuff_Immune_Tags) == 0x000020, "Member 'MonsterBPLibrary_C_Remove_Debuff_Immune::CallFunc_Get_Debuff_Immune_Tags_Debuff_Immune_Tags' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Remove_Debuff_Immune, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'MonsterBPLibrary_C_Remove_Debuff_Immune::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Remove_Debuff_Immune, CallFunc_Array_RemoveItem_ReturnValue) == 0x000034, "Member 'MonsterBPLibrary_C_Remove_Debuff_Immune::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Remove_Debuff_Immune, Temp_struct_Variable_1) == 0x000038, "Member 'MonsterBPLibrary_C_Remove_Debuff_Immune::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Remove_Debuff_Immune, Temp_struct_Variable_2) == 0x000040, "Member 'MonsterBPLibrary_C_Remove_Debuff_Immune::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Remove_Debuff_Immune, CallFunc_Array_RemoveItem_ReturnValue_1) == 0x000048, "Member 'MonsterBPLibrary_C_Remove_Debuff_Immune::CallFunc_Array_RemoveItem_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Remove_Debuff_Immune, CallFunc_Array_RemoveItem_ReturnValue_2) == 0x000049, "Member 'MonsterBPLibrary_C_Remove_Debuff_Immune::CallFunc_Array_RemoveItem_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Remove_Debuff_Immune, Temp_struct_Variable_3) == 0x00004C, "Member 'MonsterBPLibrary_C_Remove_Debuff_Immune::Temp_struct_Variable_3' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Remove_Debuff_Immune, Temp_int_Array_Index_Variable) == 0x000054, "Member 'MonsterBPLibrary_C_Remove_Debuff_Immune::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Remove_Debuff_Immune, CallFunc_Array_RemoveItem_ReturnValue_3) == 0x000058, "Member 'MonsterBPLibrary_C_Remove_Debuff_Immune::CallFunc_Array_RemoveItem_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Remove_Debuff_Immune, CallFunc_Array_Get_Item) == 0x00005C, "Member 'MonsterBPLibrary_C_Remove_Debuff_Immune::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Remove_Debuff_Immune, CallFunc_RemoveGameplayTag_ReturnValue) == 0x000064, "Member 'MonsterBPLibrary_C_Remove_Debuff_Immune::CallFunc_RemoveGameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Remove_Debuff_Immune, Temp_int_Loop_Counter_Variable) == 0x000068, "Member 'MonsterBPLibrary_C_Remove_Debuff_Immune::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Remove_Debuff_Immune, Temp_struct_Variable_4) == 0x00006C, "Member 'MonsterBPLibrary_C_Remove_Debuff_Immune::Temp_struct_Variable_4' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Remove_Debuff_Immune, CallFunc_Less_IntInt_ReturnValue) == 0x000074, "Member 'MonsterBPLibrary_C_Remove_Debuff_Immune::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Remove_Debuff_Immune, CallFunc_Array_RemoveItem_ReturnValue_4) == 0x000075, "Member 'MonsterBPLibrary_C_Remove_Debuff_Immune::CallFunc_Array_RemoveItem_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Remove_Debuff_Immune, CallFunc_Add_IntInt_ReturnValue) == 0x000078, "Member 'MonsterBPLibrary_C_Remove_Debuff_Immune::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Remove_Debuff_Immune, Temp_struct_Variable_5) == 0x00007C, "Member 'MonsterBPLibrary_C_Remove_Debuff_Immune::Temp_struct_Variable_5' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Remove_Debuff_Immune, CallFunc_Array_RemoveItem_ReturnValue_5) == 0x000084, "Member 'MonsterBPLibrary_C_Remove_Debuff_Immune::CallFunc_Array_RemoveItem_ReturnValue_5' has a wrong offset!");

// Function MonsterBPLibrary.MonsterBPLibrary_C.Remove Immune To Comeback
// 0x0080 (0x0080 - 0x0000)
struct MonsterBPLibrary_C_Remove_Immune_To_Comeback final
{
public:
	class ABP_DCMonsterBaseWithOptions_C*         DCMonsterBase;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39AB[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FGameplayTag>                   CallFunc_Get_Debuff_Immune_Tags_Debuff_Immune_Tags; // 0x0018(0x0010)(ReferenceParm)
	struct FGameplayTagContainer                  CallFunc_MakeGameplayTagContainerFromArray_ReturnValue; // 0x0028(0x0020)()
	class ABP_DCMonsterBaseWithOptions_C*         CallFunc_Array_Get_Item;                           // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39AC[0x3];                                     // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_RemoveActiveEffectsWithGrantedTags_ReturnValue; // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RemoveActiveEffectsWithGrantedTags_ReturnValue_1; // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39AD[0x4];                                     // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAbilitySystemComponent*                CallFunc_GetAbilitySystemComponent_ReturnValue;    // 0x0068(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RemoveActiveEffectsWithGrantedTags_ReturnValue_2; // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39AE[0x3];                                     // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MonsterBPLibrary_C_Remove_Immune_To_Comeback) == 0x000008, "Wrong alignment on MonsterBPLibrary_C_Remove_Immune_To_Comeback");
static_assert(sizeof(MonsterBPLibrary_C_Remove_Immune_To_Comeback) == 0x000080, "Wrong size on MonsterBPLibrary_C_Remove_Immune_To_Comeback");
static_assert(offsetof(MonsterBPLibrary_C_Remove_Immune_To_Comeback, DCMonsterBase) == 0x000000, "Member 'MonsterBPLibrary_C_Remove_Immune_To_Comeback::DCMonsterBase' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Remove_Immune_To_Comeback, __WorldContext) == 0x000008, "Member 'MonsterBPLibrary_C_Remove_Immune_To_Comeback::__WorldContext' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Remove_Immune_To_Comeback, Temp_int_Array_Index_Variable) == 0x000010, "Member 'MonsterBPLibrary_C_Remove_Immune_To_Comeback::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Remove_Immune_To_Comeback, CallFunc_Get_Debuff_Immune_Tags_Debuff_Immune_Tags) == 0x000018, "Member 'MonsterBPLibrary_C_Remove_Immune_To_Comeback::CallFunc_Get_Debuff_Immune_Tags_Debuff_Immune_Tags' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Remove_Immune_To_Comeback, CallFunc_MakeGameplayTagContainerFromArray_ReturnValue) == 0x000028, "Member 'MonsterBPLibrary_C_Remove_Immune_To_Comeback::CallFunc_MakeGameplayTagContainerFromArray_ReturnValue' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Remove_Immune_To_Comeback, CallFunc_Array_Get_Item) == 0x000048, "Member 'MonsterBPLibrary_C_Remove_Immune_To_Comeback::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Remove_Immune_To_Comeback, CallFunc_Array_Length_ReturnValue) == 0x000050, "Member 'MonsterBPLibrary_C_Remove_Immune_To_Comeback::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Remove_Immune_To_Comeback, CallFunc_Greater_IntInt_ReturnValue) == 0x000054, "Member 'MonsterBPLibrary_C_Remove_Immune_To_Comeback::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Remove_Immune_To_Comeback, CallFunc_RemoveActiveEffectsWithGrantedTags_ReturnValue) == 0x000058, "Member 'MonsterBPLibrary_C_Remove_Immune_To_Comeback::CallFunc_RemoveActiveEffectsWithGrantedTags_ReturnValue' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Remove_Immune_To_Comeback, CallFunc_Array_Length_ReturnValue_1) == 0x00005C, "Member 'MonsterBPLibrary_C_Remove_Immune_To_Comeback::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Remove_Immune_To_Comeback, CallFunc_RemoveActiveEffectsWithGrantedTags_ReturnValue_1) == 0x000060, "Member 'MonsterBPLibrary_C_Remove_Immune_To_Comeback::CallFunc_RemoveActiveEffectsWithGrantedTags_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Remove_Immune_To_Comeback, CallFunc_GetAbilitySystemComponent_ReturnValue) == 0x000068, "Member 'MonsterBPLibrary_C_Remove_Immune_To_Comeback::CallFunc_GetAbilitySystemComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Remove_Immune_To_Comeback, Temp_int_Loop_Counter_Variable) == 0x000070, "Member 'MonsterBPLibrary_C_Remove_Immune_To_Comeback::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Remove_Immune_To_Comeback, CallFunc_RemoveActiveEffectsWithGrantedTags_ReturnValue_2) == 0x000074, "Member 'MonsterBPLibrary_C_Remove_Immune_To_Comeback::CallFunc_RemoveActiveEffectsWithGrantedTags_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Remove_Immune_To_Comeback, CallFunc_Less_IntInt_ReturnValue) == 0x000078, "Member 'MonsterBPLibrary_C_Remove_Immune_To_Comeback::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Remove_Immune_To_Comeback, CallFunc_Add_IntInt_ReturnValue) == 0x00007C, "Member 'MonsterBPLibrary_C_Remove_Immune_To_Comeback::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function MonsterBPLibrary.MonsterBPLibrary_C.Remove Interrtupt Montage Immune
// 0x0048 (0x0048 - 0x0000)
struct MonsterBPLibrary_C_Remove_Interrtupt_Montage_Immune final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<struct FGameplayTag>                   CallFunc_Get_Interrupt_Montage_Immune_Tags_Interrupt_Action_Immune_Tags; // 0x0010(0x0010)(ReferenceParm)
	struct FGameplayTagContainer                  CallFunc_MakeGameplayTagContainerFromArray_ReturnValue; // 0x0020(0x0020)()
	bool                                          CallFunc_RemoveLooseGameplayTags_ReturnValue;      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MonsterBPLibrary_C_Remove_Interrtupt_Montage_Immune) == 0x000008, "Wrong alignment on MonsterBPLibrary_C_Remove_Interrtupt_Montage_Immune");
static_assert(sizeof(MonsterBPLibrary_C_Remove_Interrtupt_Montage_Immune) == 0x000048, "Wrong size on MonsterBPLibrary_C_Remove_Interrtupt_Montage_Immune");
static_assert(offsetof(MonsterBPLibrary_C_Remove_Interrtupt_Montage_Immune, Actor) == 0x000000, "Member 'MonsterBPLibrary_C_Remove_Interrtupt_Montage_Immune::Actor' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Remove_Interrtupt_Montage_Immune, __WorldContext) == 0x000008, "Member 'MonsterBPLibrary_C_Remove_Interrtupt_Montage_Immune::__WorldContext' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Remove_Interrtupt_Montage_Immune, CallFunc_Get_Interrupt_Montage_Immune_Tags_Interrupt_Action_Immune_Tags) == 0x000010, "Member 'MonsterBPLibrary_C_Remove_Interrtupt_Montage_Immune::CallFunc_Get_Interrupt_Montage_Immune_Tags_Interrupt_Action_Immune_Tags' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Remove_Interrtupt_Montage_Immune, CallFunc_MakeGameplayTagContainerFromArray_ReturnValue) == 0x000020, "Member 'MonsterBPLibrary_C_Remove_Interrtupt_Montage_Immune::CallFunc_MakeGameplayTagContainerFromArray_ReturnValue' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Remove_Interrtupt_Montage_Immune, CallFunc_RemoveLooseGameplayTags_ReturnValue) == 0x000040, "Member 'MonsterBPLibrary_C_Remove_Interrtupt_Montage_Immune::CallFunc_RemoveLooseGameplayTags_ReturnValue' has a wrong offset!");

// Function MonsterBPLibrary.MonsterBPLibrary_C.Set BB HPRatio
// 0x0030 (0x0030 - 0x0000)
struct MonsterBPLibrary_C_Set_BB_HPRatio final
{
public:
	class ABP_DCMonsterBaseWithOptions_C*         MonsterBase;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        HPRatio;                                           // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBlackboardComponent*                   CallFunc_GetBlackboard_ReturnValue;                // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_MakeLiteralName_ReturnValue;              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetValueAsFloat_FloatValue_ImplicitCast;  // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MonsterBPLibrary_C_Set_BB_HPRatio) == 0x000008, "Wrong alignment on MonsterBPLibrary_C_Set_BB_HPRatio");
static_assert(sizeof(MonsterBPLibrary_C_Set_BB_HPRatio) == 0x000030, "Wrong size on MonsterBPLibrary_C_Set_BB_HPRatio");
static_assert(offsetof(MonsterBPLibrary_C_Set_BB_HPRatio, MonsterBase) == 0x000000, "Member 'MonsterBPLibrary_C_Set_BB_HPRatio::MonsterBase' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Set_BB_HPRatio, HPRatio) == 0x000008, "Member 'MonsterBPLibrary_C_Set_BB_HPRatio::HPRatio' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Set_BB_HPRatio, __WorldContext) == 0x000010, "Member 'MonsterBPLibrary_C_Set_BB_HPRatio::__WorldContext' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Set_BB_HPRatio, CallFunc_GetBlackboard_ReturnValue) == 0x000018, "Member 'MonsterBPLibrary_C_Set_BB_HPRatio::CallFunc_GetBlackboard_ReturnValue' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Set_BB_HPRatio, CallFunc_MakeLiteralName_ReturnValue) == 0x000020, "Member 'MonsterBPLibrary_C_Set_BB_HPRatio::CallFunc_MakeLiteralName_ReturnValue' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Set_BB_HPRatio, CallFunc_SetValueAsFloat_FloatValue_ImplicitCast) == 0x000028, "Member 'MonsterBPLibrary_C_Set_BB_HPRatio::CallFunc_SetValueAsFloat_FloatValue_ImplicitCast' has a wrong offset!");

// Function MonsterBPLibrary.MonsterBPLibrary_C.Set BB Phase
// 0x0038 (0x0038 - 0x0000)
struct MonsterBPLibrary_C_Set_BB_Phase final
{
public:
	class ABP_DCMonsterBaseWithOptions_C*         MonsterBase;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Phase;                                             // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39AF[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AAIController*                          CallFunc_GetAIController_ReturnValue;              // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_MakeLiteralName_ReturnValue;              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBlackboardComponent*                   CallFunc_GetBlackboard_ReturnValue;                // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MonsterBPLibrary_C_Set_BB_Phase) == 0x000008, "Wrong alignment on MonsterBPLibrary_C_Set_BB_Phase");
static_assert(sizeof(MonsterBPLibrary_C_Set_BB_Phase) == 0x000038, "Wrong size on MonsterBPLibrary_C_Set_BB_Phase");
static_assert(offsetof(MonsterBPLibrary_C_Set_BB_Phase, MonsterBase) == 0x000000, "Member 'MonsterBPLibrary_C_Set_BB_Phase::MonsterBase' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Set_BB_Phase, Phase) == 0x000008, "Member 'MonsterBPLibrary_C_Set_BB_Phase::Phase' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Set_BB_Phase, __WorldContext) == 0x000010, "Member 'MonsterBPLibrary_C_Set_BB_Phase::__WorldContext' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Set_BB_Phase, CallFunc_GetAIController_ReturnValue) == 0x000018, "Member 'MonsterBPLibrary_C_Set_BB_Phase::CallFunc_GetAIController_ReturnValue' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Set_BB_Phase, CallFunc_MakeLiteralName_ReturnValue) == 0x000020, "Member 'MonsterBPLibrary_C_Set_BB_Phase::CallFunc_MakeLiteralName_ReturnValue' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Set_BB_Phase, CallFunc_GetBlackboard_ReturnValue) == 0x000028, "Member 'MonsterBPLibrary_C_Set_BB_Phase::CallFunc_GetBlackboard_ReturnValue' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Set_BB_Phase, CallFunc_IsValid_ReturnValue) == 0x000030, "Member 'MonsterBPLibrary_C_Set_BB_Phase::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function MonsterBPLibrary.MonsterBPLibrary_C.Set BB Probability
// 0x0030 (0x0030 - 0x0000)
struct MonsterBPLibrary_C_Set_BB_Probability final
{
public:
	class ABP_DCMonsterBaseWithOptions_C*         MonsterBase;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        Probability;                                       // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBlackboardComponent*                   CallFunc_GetBlackboard_ReturnValue;                // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_MakeLiteralName_ReturnValue;              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetValueAsFloat_FloatValue_ImplicitCast;  // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MonsterBPLibrary_C_Set_BB_Probability) == 0x000008, "Wrong alignment on MonsterBPLibrary_C_Set_BB_Probability");
static_assert(sizeof(MonsterBPLibrary_C_Set_BB_Probability) == 0x000030, "Wrong size on MonsterBPLibrary_C_Set_BB_Probability");
static_assert(offsetof(MonsterBPLibrary_C_Set_BB_Probability, MonsterBase) == 0x000000, "Member 'MonsterBPLibrary_C_Set_BB_Probability::MonsterBase' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Set_BB_Probability, Probability) == 0x000008, "Member 'MonsterBPLibrary_C_Set_BB_Probability::Probability' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Set_BB_Probability, __WorldContext) == 0x000010, "Member 'MonsterBPLibrary_C_Set_BB_Probability::__WorldContext' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Set_BB_Probability, CallFunc_GetBlackboard_ReturnValue) == 0x000018, "Member 'MonsterBPLibrary_C_Set_BB_Probability::CallFunc_GetBlackboard_ReturnValue' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Set_BB_Probability, CallFunc_MakeLiteralName_ReturnValue) == 0x000020, "Member 'MonsterBPLibrary_C_Set_BB_Probability::CallFunc_MakeLiteralName_ReturnValue' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Set_BB_Probability, CallFunc_SetValueAsFloat_FloatValue_ImplicitCast) == 0x000028, "Member 'MonsterBPLibrary_C_Set_BB_Probability::CallFunc_SetValueAsFloat_FloatValue_ImplicitCast' has a wrong offset!");

// Function MonsterBPLibrary.MonsterBPLibrary_C.Set BlackBoard Mode
// 0x0038 (0x0038 - 0x0000)
struct MonsterBPLibrary_C_Set_BlackBoard_Mode final
{
public:
	class ABP_DCMonsterBaseWithOptions_C*         DCMonsterBase;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	E_ModeType                                    Mode_Type;                                         // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39B0[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBlackboardComponent*                   CallFunc_GetBlackboard_ReturnValue;                // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UBlackboardComponent*                   CallFunc_GetBlackboard_ReturnValue_1;              // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39B1[0x3];                                     // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_MakeLiteralName_ReturnValue;              // 0x002C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MonsterBPLibrary_C_Set_BlackBoard_Mode) == 0x000008, "Wrong alignment on MonsterBPLibrary_C_Set_BlackBoard_Mode");
static_assert(sizeof(MonsterBPLibrary_C_Set_BlackBoard_Mode) == 0x000038, "Wrong size on MonsterBPLibrary_C_Set_BlackBoard_Mode");
static_assert(offsetof(MonsterBPLibrary_C_Set_BlackBoard_Mode, DCMonsterBase) == 0x000000, "Member 'MonsterBPLibrary_C_Set_BlackBoard_Mode::DCMonsterBase' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Set_BlackBoard_Mode, Mode_Type) == 0x000008, "Member 'MonsterBPLibrary_C_Set_BlackBoard_Mode::Mode_Type' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Set_BlackBoard_Mode, __WorldContext) == 0x000010, "Member 'MonsterBPLibrary_C_Set_BlackBoard_Mode::__WorldContext' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Set_BlackBoard_Mode, CallFunc_GetBlackboard_ReturnValue) == 0x000018, "Member 'MonsterBPLibrary_C_Set_BlackBoard_Mode::CallFunc_GetBlackboard_ReturnValue' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Set_BlackBoard_Mode, CallFunc_GetBlackboard_ReturnValue_1) == 0x000020, "Member 'MonsterBPLibrary_C_Set_BlackBoard_Mode::CallFunc_GetBlackboard_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Set_BlackBoard_Mode, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'MonsterBPLibrary_C_Set_BlackBoard_Mode::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Set_BlackBoard_Mode, CallFunc_MakeLiteralName_ReturnValue) == 0x00002C, "Member 'MonsterBPLibrary_C_Set_BlackBoard_Mode::CallFunc_MakeLiteralName_ReturnValue' has a wrong offset!");

// Function MonsterBPLibrary.MonsterBPLibrary_C.Set BlackBoard Mode For Linked Monsters
// 0x0058 (0x0058 - 0x0000)
struct MonsterBPLibrary_C_Set_BlackBoard_Mode_For_Linked_Monsters final
{
public:
	TArray<class ABP_DCMonsterBaseWithOptions_C*> Linked_Monster_Array;                              // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	E_ModeType                                    Mode_Type;                                         // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39B2[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_DCMonsterBaseWithOptions_C*         CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBlackboardComponent*                   CallFunc_GetBlackboard_ReturnValue;                // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UBlackboardComponent*                   CallFunc_GetBlackboard_ReturnValue_1;              // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39B3[0x3];                                     // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39B4[0x3];                                     // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_MakeLiteralName_ReturnValue;              // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MonsterBPLibrary_C_Set_BlackBoard_Mode_For_Linked_Monsters) == 0x000008, "Wrong alignment on MonsterBPLibrary_C_Set_BlackBoard_Mode_For_Linked_Monsters");
static_assert(sizeof(MonsterBPLibrary_C_Set_BlackBoard_Mode_For_Linked_Monsters) == 0x000058, "Wrong size on MonsterBPLibrary_C_Set_BlackBoard_Mode_For_Linked_Monsters");
static_assert(offsetof(MonsterBPLibrary_C_Set_BlackBoard_Mode_For_Linked_Monsters, Linked_Monster_Array) == 0x000000, "Member 'MonsterBPLibrary_C_Set_BlackBoard_Mode_For_Linked_Monsters::Linked_Monster_Array' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Set_BlackBoard_Mode_For_Linked_Monsters, Mode_Type) == 0x000010, "Member 'MonsterBPLibrary_C_Set_BlackBoard_Mode_For_Linked_Monsters::Mode_Type' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Set_BlackBoard_Mode_For_Linked_Monsters, __WorldContext) == 0x000018, "Member 'MonsterBPLibrary_C_Set_BlackBoard_Mode_For_Linked_Monsters::__WorldContext' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Set_BlackBoard_Mode_For_Linked_Monsters, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'MonsterBPLibrary_C_Set_BlackBoard_Mode_For_Linked_Monsters::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Set_BlackBoard_Mode_For_Linked_Monsters, Temp_int_Array_Index_Variable) == 0x000024, "Member 'MonsterBPLibrary_C_Set_BlackBoard_Mode_For_Linked_Monsters::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Set_BlackBoard_Mode_For_Linked_Monsters, CallFunc_Array_Get_Item) == 0x000028, "Member 'MonsterBPLibrary_C_Set_BlackBoard_Mode_For_Linked_Monsters::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Set_BlackBoard_Mode_For_Linked_Monsters, CallFunc_GetBlackboard_ReturnValue) == 0x000030, "Member 'MonsterBPLibrary_C_Set_BlackBoard_Mode_For_Linked_Monsters::CallFunc_GetBlackboard_ReturnValue' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Set_BlackBoard_Mode_For_Linked_Monsters, CallFunc_GetBlackboard_ReturnValue_1) == 0x000038, "Member 'MonsterBPLibrary_C_Set_BlackBoard_Mode_For_Linked_Monsters::CallFunc_GetBlackboard_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Set_BlackBoard_Mode_For_Linked_Monsters, CallFunc_IsValid_ReturnValue) == 0x000040, "Member 'MonsterBPLibrary_C_Set_BlackBoard_Mode_For_Linked_Monsters::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Set_BlackBoard_Mode_For_Linked_Monsters, Temp_int_Loop_Counter_Variable) == 0x000044, "Member 'MonsterBPLibrary_C_Set_BlackBoard_Mode_For_Linked_Monsters::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Set_BlackBoard_Mode_For_Linked_Monsters, CallFunc_Less_IntInt_ReturnValue) == 0x000048, "Member 'MonsterBPLibrary_C_Set_BlackBoard_Mode_For_Linked_Monsters::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Set_BlackBoard_Mode_For_Linked_Monsters, CallFunc_Add_IntInt_ReturnValue) == 0x00004C, "Member 'MonsterBPLibrary_C_Set_BlackBoard_Mode_For_Linked_Monsters::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Set_BlackBoard_Mode_For_Linked_Monsters, CallFunc_MakeLiteralName_ReturnValue) == 0x000050, "Member 'MonsterBPLibrary_C_Set_BlackBoard_Mode_For_Linked_Monsters::CallFunc_MakeLiteralName_ReturnValue' has a wrong offset!");

// Function MonsterBPLibrary.MonsterBPLibrary_C.Set BlackBoard TargetActor To MonsterBase
// 0x0030 (0x0030 - 0x0000)
struct MonsterBPLibrary_C_Set_BlackBoard_TargetActor_To_MonsterBase final
{
public:
	class ABP_DCMonsterBaseWithOptions_C*         MonsterBaseWithOptions;                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBlackboardComponent*                   CallFunc_GetBlackboard_ReturnValue;                // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39B5[0x3];                                     // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_MakeLiteralName_ReturnValue;              // 0x001C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39B6[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_GetValueAsObject_ReturnValue;             // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MonsterBPLibrary_C_Set_BlackBoard_TargetActor_To_MonsterBase) == 0x000008, "Wrong alignment on MonsterBPLibrary_C_Set_BlackBoard_TargetActor_To_MonsterBase");
static_assert(sizeof(MonsterBPLibrary_C_Set_BlackBoard_TargetActor_To_MonsterBase) == 0x000030, "Wrong size on MonsterBPLibrary_C_Set_BlackBoard_TargetActor_To_MonsterBase");
static_assert(offsetof(MonsterBPLibrary_C_Set_BlackBoard_TargetActor_To_MonsterBase, MonsterBaseWithOptions) == 0x000000, "Member 'MonsterBPLibrary_C_Set_BlackBoard_TargetActor_To_MonsterBase::MonsterBaseWithOptions' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Set_BlackBoard_TargetActor_To_MonsterBase, __WorldContext) == 0x000008, "Member 'MonsterBPLibrary_C_Set_BlackBoard_TargetActor_To_MonsterBase::__WorldContext' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Set_BlackBoard_TargetActor_To_MonsterBase, CallFunc_GetBlackboard_ReturnValue) == 0x000010, "Member 'MonsterBPLibrary_C_Set_BlackBoard_TargetActor_To_MonsterBase::CallFunc_GetBlackboard_ReturnValue' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Set_BlackBoard_TargetActor_To_MonsterBase, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'MonsterBPLibrary_C_Set_BlackBoard_TargetActor_To_MonsterBase::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Set_BlackBoard_TargetActor_To_MonsterBase, CallFunc_MakeLiteralName_ReturnValue) == 0x00001C, "Member 'MonsterBPLibrary_C_Set_BlackBoard_TargetActor_To_MonsterBase::CallFunc_MakeLiteralName_ReturnValue' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Set_BlackBoard_TargetActor_To_MonsterBase, CallFunc_GetValueAsObject_ReturnValue) == 0x000028, "Member 'MonsterBPLibrary_C_Set_BlackBoard_TargetActor_To_MonsterBase::CallFunc_GetValueAsObject_ReturnValue' has a wrong offset!");

// Function MonsterBPLibrary.MonsterBPLibrary_C.Set Combo Attack
// 0x0278 (0x0278 - 0x0000)
struct MonsterBPLibrary_C_Set_Combo_Attack final
{
public:
	class UDCGameplayAbilityBase*                 Gameplay_Ability;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Caster;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        Sphere_Overlap_Forward_Pos;                        // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Sphere_Overlap_Radius;                             // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Event_Tag;                                         // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	double                                        Trigger_Ratio;                                     // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ADCCharacterBase*                       Target_Enemy;                                      // 0x0038(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class ADCCharacterBase*>               TargetArray;                                       // 0x0040(0x0010)(Parm, OutParm)
	bool                                          Combo_Triggered;                                   // 0x0050(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39B7[0x7];                                     // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ADCCharacterBase*>               Temp_Target_Array;                                 // 0x0058(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39B8[0x4];                                     // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39B9[0x4];                                     // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue;          // 0x0080(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_DCMonsterBaseWithOptions_C*         K2Node_DynamicCast_AsBP_DCMonster_Base_with_Options; // 0x0098(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39BA[0x7];                                     // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x00A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class ADCCharacterBase*                       CallFunc_Array_Get_Item;                           // 0x00C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x00C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x00E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x00F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39BB[0x4];                                     // 0x0114(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0118(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ADCCharacterBase*                       CallFunc_Array_Get_Item_1;                         // 0x0130(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ADCCharacterBase*                       CallFunc_Array_Get_Item_2;                         // 0x0138(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ADCCharacterBase*                       CallFunc_Array_Get_Item_3;                         // 0x0140(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEventData                     K2Node_MakeStruct_GameplayEventData;               // 0x0148(0x00B0)()
	bool                                          CallFunc_SortTargetsByDistance_ReturnValue;        // 0x01F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39BC[0x7];                                     // 0x01F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0200(0x0010)(ConstParm, ReferenceParm)
	double                                        CallFunc_RandomFloatInRange_ReturnValue;           // 0x0210(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x0218(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39BD[0x7];                                     // 0x0219(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ADCCharacterBase*                       CallFunc_Array_Get_Item_4;                         // 0x0220(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array;                            // 0x0228(0x0010)(ConstParm, ReferenceParm)
	TArray<class AActor*>                         CallFunc_SphereOverlapActors_OutActors;            // 0x0238(0x0010)(ReferenceParm)
	bool                                          CallFunc_SphereOverlapActors_ReturnValue;          // 0x0248(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39BE[0x3];                                     // 0x0249(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x024C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0250(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39BF[0x7];                                     // 0x0251(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item_5;                         // 0x0258(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ADCCharacterBase*                       K2Node_DynamicCast_AsDCCharacter_Base;             // 0x0260(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0268(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39C0[0x3];                                     // 0x0269(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x026C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SphereOverlapActors_SphereRadius_ImplicitCast; // 0x0270(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MonsterBPLibrary_C_Set_Combo_Attack) == 0x000008, "Wrong alignment on MonsterBPLibrary_C_Set_Combo_Attack");
static_assert(sizeof(MonsterBPLibrary_C_Set_Combo_Attack) == 0x000278, "Wrong size on MonsterBPLibrary_C_Set_Combo_Attack");
static_assert(offsetof(MonsterBPLibrary_C_Set_Combo_Attack, Gameplay_Ability) == 0x000000, "Member 'MonsterBPLibrary_C_Set_Combo_Attack::Gameplay_Ability' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Set_Combo_Attack, Caster) == 0x000008, "Member 'MonsterBPLibrary_C_Set_Combo_Attack::Caster' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Set_Combo_Attack, Sphere_Overlap_Forward_Pos) == 0x000010, "Member 'MonsterBPLibrary_C_Set_Combo_Attack::Sphere_Overlap_Forward_Pos' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Set_Combo_Attack, Sphere_Overlap_Radius) == 0x000018, "Member 'MonsterBPLibrary_C_Set_Combo_Attack::Sphere_Overlap_Radius' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Set_Combo_Attack, Event_Tag) == 0x000020, "Member 'MonsterBPLibrary_C_Set_Combo_Attack::Event_Tag' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Set_Combo_Attack, Trigger_Ratio) == 0x000028, "Member 'MonsterBPLibrary_C_Set_Combo_Attack::Trigger_Ratio' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Set_Combo_Attack, __WorldContext) == 0x000030, "Member 'MonsterBPLibrary_C_Set_Combo_Attack::__WorldContext' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Set_Combo_Attack, Target_Enemy) == 0x000038, "Member 'MonsterBPLibrary_C_Set_Combo_Attack::Target_Enemy' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Set_Combo_Attack, TargetArray) == 0x000040, "Member 'MonsterBPLibrary_C_Set_Combo_Attack::TargetArray' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Set_Combo_Attack, Combo_Triggered) == 0x000050, "Member 'MonsterBPLibrary_C_Set_Combo_Attack::Combo_Triggered' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Set_Combo_Attack, Temp_Target_Array) == 0x000058, "Member 'MonsterBPLibrary_C_Set_Combo_Attack::Temp_Target_Array' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Set_Combo_Attack, Temp_int_Loop_Counter_Variable) == 0x000068, "Member 'MonsterBPLibrary_C_Set_Combo_Attack::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Set_Combo_Attack, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000070, "Member 'MonsterBPLibrary_C_Set_Combo_Attack::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Set_Combo_Attack, CallFunc_Add_IntInt_ReturnValue) == 0x000078, "Member 'MonsterBPLibrary_C_Set_Combo_Attack::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Set_Combo_Attack, CallFunc_Conv_DoubleToVector_ReturnValue) == 0x000080, "Member 'MonsterBPLibrary_C_Set_Combo_Attack::CallFunc_Conv_DoubleToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Set_Combo_Attack, K2Node_DynamicCast_AsBP_DCMonster_Base_with_Options) == 0x000098, "Member 'MonsterBPLibrary_C_Set_Combo_Attack::K2Node_DynamicCast_AsBP_DCMonster_Base_with_Options' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Set_Combo_Attack, K2Node_DynamicCast_bSuccess) == 0x0000A0, "Member 'MonsterBPLibrary_C_Set_Combo_Attack::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Set_Combo_Attack, CallFunc_K2_GetActorRotation_ReturnValue) == 0x0000A8, "Member 'MonsterBPLibrary_C_Set_Combo_Attack::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Set_Combo_Attack, CallFunc_Array_Get_Item) == 0x0000C0, "Member 'MonsterBPLibrary_C_Set_Combo_Attack::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Set_Combo_Attack, CallFunc_GetForwardVector_ReturnValue) == 0x0000C8, "Member 'MonsterBPLibrary_C_Set_Combo_Attack::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Set_Combo_Attack, CallFunc_Multiply_VectorVector_ReturnValue) == 0x0000E0, "Member 'MonsterBPLibrary_C_Set_Combo_Attack::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Set_Combo_Attack, CallFunc_K2_GetActorLocation_ReturnValue) == 0x0000F8, "Member 'MonsterBPLibrary_C_Set_Combo_Attack::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Set_Combo_Attack, Temp_int_Array_Index_Variable) == 0x000110, "Member 'MonsterBPLibrary_C_Set_Combo_Attack::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Set_Combo_Attack, CallFunc_Add_VectorVector_ReturnValue) == 0x000118, "Member 'MonsterBPLibrary_C_Set_Combo_Attack::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Set_Combo_Attack, CallFunc_Array_Get_Item_1) == 0x000130, "Member 'MonsterBPLibrary_C_Set_Combo_Attack::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Set_Combo_Attack, CallFunc_Array_Get_Item_2) == 0x000138, "Member 'MonsterBPLibrary_C_Set_Combo_Attack::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Set_Combo_Attack, CallFunc_Array_Get_Item_3) == 0x000140, "Member 'MonsterBPLibrary_C_Set_Combo_Attack::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Set_Combo_Attack, K2Node_MakeStruct_GameplayEventData) == 0x000148, "Member 'MonsterBPLibrary_C_Set_Combo_Attack::K2Node_MakeStruct_GameplayEventData' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Set_Combo_Attack, CallFunc_SortTargetsByDistance_ReturnValue) == 0x0001F8, "Member 'MonsterBPLibrary_C_Set_Combo_Attack::CallFunc_SortTargetsByDistance_ReturnValue' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Set_Combo_Attack, Temp_object_Variable) == 0x000200, "Member 'MonsterBPLibrary_C_Set_Combo_Attack::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Set_Combo_Attack, CallFunc_RandomFloatInRange_ReturnValue) == 0x000210, "Member 'MonsterBPLibrary_C_Set_Combo_Attack::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Set_Combo_Attack, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x000218, "Member 'MonsterBPLibrary_C_Set_Combo_Attack::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Set_Combo_Attack, CallFunc_Array_Get_Item_4) == 0x000220, "Member 'MonsterBPLibrary_C_Set_Combo_Attack::CallFunc_Array_Get_Item_4' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Set_Combo_Attack, K2Node_MakeArray_Array) == 0x000228, "Member 'MonsterBPLibrary_C_Set_Combo_Attack::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Set_Combo_Attack, CallFunc_SphereOverlapActors_OutActors) == 0x000238, "Member 'MonsterBPLibrary_C_Set_Combo_Attack::CallFunc_SphereOverlapActors_OutActors' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Set_Combo_Attack, CallFunc_SphereOverlapActors_ReturnValue) == 0x000248, "Member 'MonsterBPLibrary_C_Set_Combo_Attack::CallFunc_SphereOverlapActors_ReturnValue' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Set_Combo_Attack, CallFunc_Array_Length_ReturnValue) == 0x00024C, "Member 'MonsterBPLibrary_C_Set_Combo_Attack::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Set_Combo_Attack, CallFunc_Less_IntInt_ReturnValue) == 0x000250, "Member 'MonsterBPLibrary_C_Set_Combo_Attack::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Set_Combo_Attack, CallFunc_Array_Get_Item_5) == 0x000258, "Member 'MonsterBPLibrary_C_Set_Combo_Attack::CallFunc_Array_Get_Item_5' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Set_Combo_Attack, K2Node_DynamicCast_AsDCCharacter_Base) == 0x000260, "Member 'MonsterBPLibrary_C_Set_Combo_Attack::K2Node_DynamicCast_AsDCCharacter_Base' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Set_Combo_Attack, K2Node_DynamicCast_bSuccess_1) == 0x000268, "Member 'MonsterBPLibrary_C_Set_Combo_Attack::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Set_Combo_Attack, CallFunc_Array_AddUnique_ReturnValue) == 0x00026C, "Member 'MonsterBPLibrary_C_Set_Combo_Attack::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Set_Combo_Attack, CallFunc_SphereOverlapActors_SphereRadius_ImplicitCast) == 0x000270, "Member 'MonsterBPLibrary_C_Set_Combo_Attack::CallFunc_SphereOverlapActors_SphereRadius_ImplicitCast' has a wrong offset!");

// Function MonsterBPLibrary.MonsterBPLibrary_C.Set Debuff Immune
// 0x0088 (0x0088 - 0x0000)
struct MonsterBPLibrary_C_Set_Debuff_Immune final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Fear;                                              // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Impact;                                            // 0x0009(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          KnockBack;                                         // 0x000A(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Trap;                                              // 0x000B(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          UnableMove;                                        // 0x000C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Unhealable;                                        // 0x000D(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39C1[0x2];                                     // 0x000E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Temp_struct_Variable;                              // 0x0018(0x0008)(ConstParm, NoDestructor, HasGetValueTypeHash)
	TArray<struct FGameplayTag>                   CallFunc_Get_Debuff_Immune_Tags_Debuff_Immune_Tags; // 0x0020(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39C2[0x3];                                     // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           Temp_struct_Variable_1;                            // 0x0038(0x0008)(ConstParm, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Temp_struct_Variable_2;                            // 0x0040(0x0008)(ConstParm, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue_1;           // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue_2;           // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39C3[0x2];                                     // 0x004A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           CallFunc_Array_Get_Item;                           // 0x0054(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_AddGameplayTag_ReturnValue;               // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x005D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39C4[0x2];                                     // 0x005E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Temp_struct_Variable_3;                            // 0x0064(0x0008)(ConstParm, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Temp_struct_Variable_4;                            // 0x006C(0x0008)(ConstParm, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue_3;           // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue_4;           // 0x0075(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39C5[0x2];                                     // 0x0076(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           Temp_struct_Variable_5;                            // 0x0078(0x0008)(ConstParm, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue_5;           // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MonsterBPLibrary_C_Set_Debuff_Immune) == 0x000008, "Wrong alignment on MonsterBPLibrary_C_Set_Debuff_Immune");
static_assert(sizeof(MonsterBPLibrary_C_Set_Debuff_Immune) == 0x000088, "Wrong size on MonsterBPLibrary_C_Set_Debuff_Immune");
static_assert(offsetof(MonsterBPLibrary_C_Set_Debuff_Immune, Actor) == 0x000000, "Member 'MonsterBPLibrary_C_Set_Debuff_Immune::Actor' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Set_Debuff_Immune, Fear) == 0x000008, "Member 'MonsterBPLibrary_C_Set_Debuff_Immune::Fear' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Set_Debuff_Immune, Impact) == 0x000009, "Member 'MonsterBPLibrary_C_Set_Debuff_Immune::Impact' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Set_Debuff_Immune, KnockBack) == 0x00000A, "Member 'MonsterBPLibrary_C_Set_Debuff_Immune::KnockBack' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Set_Debuff_Immune, Trap) == 0x00000B, "Member 'MonsterBPLibrary_C_Set_Debuff_Immune::Trap' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Set_Debuff_Immune, UnableMove) == 0x00000C, "Member 'MonsterBPLibrary_C_Set_Debuff_Immune::UnableMove' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Set_Debuff_Immune, Unhealable) == 0x00000D, "Member 'MonsterBPLibrary_C_Set_Debuff_Immune::Unhealable' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Set_Debuff_Immune, __WorldContext) == 0x000010, "Member 'MonsterBPLibrary_C_Set_Debuff_Immune::__WorldContext' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Set_Debuff_Immune, Temp_struct_Variable) == 0x000018, "Member 'MonsterBPLibrary_C_Set_Debuff_Immune::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Set_Debuff_Immune, CallFunc_Get_Debuff_Immune_Tags_Debuff_Immune_Tags) == 0x000020, "Member 'MonsterBPLibrary_C_Set_Debuff_Immune::CallFunc_Get_Debuff_Immune_Tags_Debuff_Immune_Tags' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Set_Debuff_Immune, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'MonsterBPLibrary_C_Set_Debuff_Immune::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Set_Debuff_Immune, CallFunc_Array_RemoveItem_ReturnValue) == 0x000034, "Member 'MonsterBPLibrary_C_Set_Debuff_Immune::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Set_Debuff_Immune, Temp_struct_Variable_1) == 0x000038, "Member 'MonsterBPLibrary_C_Set_Debuff_Immune::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Set_Debuff_Immune, Temp_struct_Variable_2) == 0x000040, "Member 'MonsterBPLibrary_C_Set_Debuff_Immune::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Set_Debuff_Immune, CallFunc_Array_RemoveItem_ReturnValue_1) == 0x000048, "Member 'MonsterBPLibrary_C_Set_Debuff_Immune::CallFunc_Array_RemoveItem_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Set_Debuff_Immune, CallFunc_Array_RemoveItem_ReturnValue_2) == 0x000049, "Member 'MonsterBPLibrary_C_Set_Debuff_Immune::CallFunc_Array_RemoveItem_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Set_Debuff_Immune, Temp_int_Array_Index_Variable) == 0x00004C, "Member 'MonsterBPLibrary_C_Set_Debuff_Immune::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Set_Debuff_Immune, Temp_int_Loop_Counter_Variable) == 0x000050, "Member 'MonsterBPLibrary_C_Set_Debuff_Immune::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Set_Debuff_Immune, CallFunc_Array_Get_Item) == 0x000054, "Member 'MonsterBPLibrary_C_Set_Debuff_Immune::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Set_Debuff_Immune, CallFunc_AddGameplayTag_ReturnValue) == 0x00005C, "Member 'MonsterBPLibrary_C_Set_Debuff_Immune::CallFunc_AddGameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Set_Debuff_Immune, CallFunc_Less_IntInt_ReturnValue) == 0x00005D, "Member 'MonsterBPLibrary_C_Set_Debuff_Immune::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Set_Debuff_Immune, CallFunc_Add_IntInt_ReturnValue) == 0x000060, "Member 'MonsterBPLibrary_C_Set_Debuff_Immune::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Set_Debuff_Immune, Temp_struct_Variable_3) == 0x000064, "Member 'MonsterBPLibrary_C_Set_Debuff_Immune::Temp_struct_Variable_3' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Set_Debuff_Immune, Temp_struct_Variable_4) == 0x00006C, "Member 'MonsterBPLibrary_C_Set_Debuff_Immune::Temp_struct_Variable_4' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Set_Debuff_Immune, CallFunc_Array_RemoveItem_ReturnValue_3) == 0x000074, "Member 'MonsterBPLibrary_C_Set_Debuff_Immune::CallFunc_Array_RemoveItem_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Set_Debuff_Immune, CallFunc_Array_RemoveItem_ReturnValue_4) == 0x000075, "Member 'MonsterBPLibrary_C_Set_Debuff_Immune::CallFunc_Array_RemoveItem_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Set_Debuff_Immune, Temp_struct_Variable_5) == 0x000078, "Member 'MonsterBPLibrary_C_Set_Debuff_Immune::Temp_struct_Variable_5' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Set_Debuff_Immune, CallFunc_Array_RemoveItem_ReturnValue_5) == 0x000080, "Member 'MonsterBPLibrary_C_Set_Debuff_Immune::CallFunc_Array_RemoveItem_ReturnValue_5' has a wrong offset!");

// Function MonsterBPLibrary.MonsterBPLibrary_C.Set Immune To Comeback
// 0x0030 (0x0030 - 0x0000)
struct MonsterBPLibrary_C_Set_Immune_To_Comeback final
{
public:
	class ABP_DCMonsterBaseWithOptions_C*         DCMonsterBase;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<struct FPrimaryAssetId>                K2Node_MakeArray_Array;                            // 0x0010(0x0010)(ConstParm, ReferenceParm)
	TArray<struct FActiveGameplayEffectHandle>    CallFunc_ApplyGameplayEffectByIds_ReturnValue;     // 0x0020(0x0010)(ReferenceParm)
};
static_assert(alignof(MonsterBPLibrary_C_Set_Immune_To_Comeback) == 0x000008, "Wrong alignment on MonsterBPLibrary_C_Set_Immune_To_Comeback");
static_assert(sizeof(MonsterBPLibrary_C_Set_Immune_To_Comeback) == 0x000030, "Wrong size on MonsterBPLibrary_C_Set_Immune_To_Comeback");
static_assert(offsetof(MonsterBPLibrary_C_Set_Immune_To_Comeback, DCMonsterBase) == 0x000000, "Member 'MonsterBPLibrary_C_Set_Immune_To_Comeback::DCMonsterBase' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Set_Immune_To_Comeback, __WorldContext) == 0x000008, "Member 'MonsterBPLibrary_C_Set_Immune_To_Comeback::__WorldContext' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Set_Immune_To_Comeback, K2Node_MakeArray_Array) == 0x000010, "Member 'MonsterBPLibrary_C_Set_Immune_To_Comeback::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Set_Immune_To_Comeback, CallFunc_ApplyGameplayEffectByIds_ReturnValue) == 0x000020, "Member 'MonsterBPLibrary_C_Set_Immune_To_Comeback::CallFunc_ApplyGameplayEffectByIds_ReturnValue' has a wrong offset!");

// Function MonsterBPLibrary.MonsterBPLibrary_C.Set Immune To Comeback For Linked Monsters
// 0x0058 (0x0058 - 0x0000)
struct MonsterBPLibrary_C_Set_Immune_To_Comeback_For_Linked_Monsters final
{
public:
	TArray<class ABP_DCMonsterBaseWithOptions_C*> Linked_Monster_Array;                              // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39C6[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_DCMonsterBaseWithOptions_C*         CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39C7[0x3];                                     // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FPrimaryAssetId>                K2Node_MakeArray_Array;                            // 0x0038(0x0010)(ConstParm, ReferenceParm)
	TArray<struct FActiveGameplayEffectHandle>    CallFunc_ApplyGameplayEffectByIds_ReturnValue;     // 0x0048(0x0010)(ReferenceParm)
};
static_assert(alignof(MonsterBPLibrary_C_Set_Immune_To_Comeback_For_Linked_Monsters) == 0x000008, "Wrong alignment on MonsterBPLibrary_C_Set_Immune_To_Comeback_For_Linked_Monsters");
static_assert(sizeof(MonsterBPLibrary_C_Set_Immune_To_Comeback_For_Linked_Monsters) == 0x000058, "Wrong size on MonsterBPLibrary_C_Set_Immune_To_Comeback_For_Linked_Monsters");
static_assert(offsetof(MonsterBPLibrary_C_Set_Immune_To_Comeback_For_Linked_Monsters, Linked_Monster_Array) == 0x000000, "Member 'MonsterBPLibrary_C_Set_Immune_To_Comeback_For_Linked_Monsters::Linked_Monster_Array' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Set_Immune_To_Comeback_For_Linked_Monsters, __WorldContext) == 0x000010, "Member 'MonsterBPLibrary_C_Set_Immune_To_Comeback_For_Linked_Monsters::__WorldContext' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Set_Immune_To_Comeback_For_Linked_Monsters, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'MonsterBPLibrary_C_Set_Immune_To_Comeback_For_Linked_Monsters::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Set_Immune_To_Comeback_For_Linked_Monsters, Temp_int_Array_Index_Variable) == 0x00001C, "Member 'MonsterBPLibrary_C_Set_Immune_To_Comeback_For_Linked_Monsters::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Set_Immune_To_Comeback_For_Linked_Monsters, Temp_int_Loop_Counter_Variable) == 0x000020, "Member 'MonsterBPLibrary_C_Set_Immune_To_Comeback_For_Linked_Monsters::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Set_Immune_To_Comeback_For_Linked_Monsters, CallFunc_Array_Get_Item) == 0x000028, "Member 'MonsterBPLibrary_C_Set_Immune_To_Comeback_For_Linked_Monsters::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Set_Immune_To_Comeback_For_Linked_Monsters, CallFunc_Less_IntInt_ReturnValue) == 0x000030, "Member 'MonsterBPLibrary_C_Set_Immune_To_Comeback_For_Linked_Monsters::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Set_Immune_To_Comeback_For_Linked_Monsters, CallFunc_Add_IntInt_ReturnValue) == 0x000034, "Member 'MonsterBPLibrary_C_Set_Immune_To_Comeback_For_Linked_Monsters::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Set_Immune_To_Comeback_For_Linked_Monsters, K2Node_MakeArray_Array) == 0x000038, "Member 'MonsterBPLibrary_C_Set_Immune_To_Comeback_For_Linked_Monsters::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Set_Immune_To_Comeback_For_Linked_Monsters, CallFunc_ApplyGameplayEffectByIds_ReturnValue) == 0x000048, "Member 'MonsterBPLibrary_C_Set_Immune_To_Comeback_For_Linked_Monsters::CallFunc_ApplyGameplayEffectByIds_ReturnValue' has a wrong offset!");

// Function MonsterBPLibrary.MonsterBPLibrary_C.Set Interrupt Montage Immune
// 0x0040 (0x0040 - 0x0000)
struct MonsterBPLibrary_C_Set_Interrupt_Montage_Immune final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<struct FGameplayTag>                   CallFunc_Get_Interrupt_Montage_Immune_Tags_Interrupt_Action_Immune_Tags; // 0x0010(0x0010)(ReferenceParm)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_AddGameplayTag_ReturnValue;               // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39C8[0x3];                                     // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39C9[0x3];                                     // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MonsterBPLibrary_C_Set_Interrupt_Montage_Immune) == 0x000008, "Wrong alignment on MonsterBPLibrary_C_Set_Interrupt_Montage_Immune");
static_assert(sizeof(MonsterBPLibrary_C_Set_Interrupt_Montage_Immune) == 0x000040, "Wrong size on MonsterBPLibrary_C_Set_Interrupt_Montage_Immune");
static_assert(offsetof(MonsterBPLibrary_C_Set_Interrupt_Montage_Immune, Actor) == 0x000000, "Member 'MonsterBPLibrary_C_Set_Interrupt_Montage_Immune::Actor' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Set_Interrupt_Montage_Immune, __WorldContext) == 0x000008, "Member 'MonsterBPLibrary_C_Set_Interrupt_Montage_Immune::__WorldContext' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Set_Interrupt_Montage_Immune, CallFunc_Get_Interrupt_Montage_Immune_Tags_Interrupt_Action_Immune_Tags) == 0x000010, "Member 'MonsterBPLibrary_C_Set_Interrupt_Montage_Immune::CallFunc_Get_Interrupt_Montage_Immune_Tags_Interrupt_Action_Immune_Tags' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Set_Interrupt_Montage_Immune, Temp_int_Array_Index_Variable) == 0x000020, "Member 'MonsterBPLibrary_C_Set_Interrupt_Montage_Immune::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Set_Interrupt_Montage_Immune, CallFunc_Array_Length_ReturnValue) == 0x000024, "Member 'MonsterBPLibrary_C_Set_Interrupt_Montage_Immune::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Set_Interrupt_Montage_Immune, CallFunc_Array_Get_Item) == 0x000028, "Member 'MonsterBPLibrary_C_Set_Interrupt_Montage_Immune::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Set_Interrupt_Montage_Immune, CallFunc_AddGameplayTag_ReturnValue) == 0x000030, "Member 'MonsterBPLibrary_C_Set_Interrupt_Montage_Immune::CallFunc_AddGameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Set_Interrupt_Montage_Immune, Temp_int_Loop_Counter_Variable) == 0x000034, "Member 'MonsterBPLibrary_C_Set_Interrupt_Montage_Immune::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Set_Interrupt_Montage_Immune, CallFunc_Less_IntInt_ReturnValue) == 0x000038, "Member 'MonsterBPLibrary_C_Set_Interrupt_Montage_Immune::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Set_Interrupt_Montage_Immune, CallFunc_Add_IntInt_ReturnValue) == 0x00003C, "Member 'MonsterBPLibrary_C_Set_Interrupt_Montage_Immune::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function MonsterBPLibrary.MonsterBPLibrary_C.Set Projectile Spec and Options
// 0x0188 (0x0188 - 0x0000)
struct MonsterBPLibrary_C_Set_Projectile_Spec_and_Options final
{
public:
	class UDCGameplayAbilityBase*                 DCGameplay_Ability_Base;                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Spawned_Projectile;                                // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Gameplay_Tag_For_Spec;                             // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	double                                        Pierce_Count;                                      // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Pierce_Obstacle;                                   // 0x0020(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39CA[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Decrease_Pierce_Obstacle_Count;                    // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Homing;                                            // 0x0030(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39CB[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ADCCharacterBase*                       Homing_Target;                                     // 0x0038(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EHitBoxType                                   Homing_Hit_Box_Type;                               // 0x0040(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39CC[0x7];                                     // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Homing_Magnitude;                                  // 0x0048(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0050(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0058(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39CD[0x7];                                     // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AProjectileActor*                       Projectile_Actor;                                  // 0x0060(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_ProjectileActor_C*                  Temp_Projectile_Actor;                             // 0x0068(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	class ADCCharacterBase*                       Target;                                            // 0x0070(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39CE[0x7];                                     // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_ProjectileActor_C*                  K2Node_DynamicCast_AsBP_Projectile_Actor;          // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39CF[0x3];                                     // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39D0[0x4];                                     // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UBP_DCHitBox_C*>                 CallFunc_K2_GetComponentsByClass_ReturnValue;      // 0x0098(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39D1[0x3];                                     // 0x00AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39D2[0x4];                                     // 0x00B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_DCHitBox_C*                         CallFunc_Array_Get_Item;                           // 0x00B8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00C2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00C3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39D3[0x4];                                     // 0x00C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayEventData                     Temp_struct_Variable;                              // 0x00C8(0x00B0)(ConstParm)
	float                                         CallFunc_PlayPierce_SetPierceCount_ImplicitCast;   // 0x0178(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_PlayPierce_SetObstaclePierceDecrease_ImplicitCast; // 0x017C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetHomingMagnitude_InHomingMagnitude_ImplicitCast; // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MonsterBPLibrary_C_Set_Projectile_Spec_and_Options) == 0x000008, "Wrong alignment on MonsterBPLibrary_C_Set_Projectile_Spec_and_Options");
static_assert(sizeof(MonsterBPLibrary_C_Set_Projectile_Spec_and_Options) == 0x000188, "Wrong size on MonsterBPLibrary_C_Set_Projectile_Spec_and_Options");
static_assert(offsetof(MonsterBPLibrary_C_Set_Projectile_Spec_and_Options, DCGameplay_Ability_Base) == 0x000000, "Member 'MonsterBPLibrary_C_Set_Projectile_Spec_and_Options::DCGameplay_Ability_Base' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Set_Projectile_Spec_and_Options, Spawned_Projectile) == 0x000008, "Member 'MonsterBPLibrary_C_Set_Projectile_Spec_and_Options::Spawned_Projectile' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Set_Projectile_Spec_and_Options, Gameplay_Tag_For_Spec) == 0x000010, "Member 'MonsterBPLibrary_C_Set_Projectile_Spec_and_Options::Gameplay_Tag_For_Spec' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Set_Projectile_Spec_and_Options, Pierce_Count) == 0x000018, "Member 'MonsterBPLibrary_C_Set_Projectile_Spec_and_Options::Pierce_Count' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Set_Projectile_Spec_and_Options, Pierce_Obstacle) == 0x000020, "Member 'MonsterBPLibrary_C_Set_Projectile_Spec_and_Options::Pierce_Obstacle' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Set_Projectile_Spec_and_Options, Decrease_Pierce_Obstacle_Count) == 0x000028, "Member 'MonsterBPLibrary_C_Set_Projectile_Spec_and_Options::Decrease_Pierce_Obstacle_Count' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Set_Projectile_Spec_and_Options, Homing) == 0x000030, "Member 'MonsterBPLibrary_C_Set_Projectile_Spec_and_Options::Homing' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Set_Projectile_Spec_and_Options, Homing_Target) == 0x000038, "Member 'MonsterBPLibrary_C_Set_Projectile_Spec_and_Options::Homing_Target' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Set_Projectile_Spec_and_Options, Homing_Hit_Box_Type) == 0x000040, "Member 'MonsterBPLibrary_C_Set_Projectile_Spec_and_Options::Homing_Hit_Box_Type' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Set_Projectile_Spec_and_Options, Homing_Magnitude) == 0x000048, "Member 'MonsterBPLibrary_C_Set_Projectile_Spec_and_Options::Homing_Magnitude' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Set_Projectile_Spec_and_Options, __WorldContext) == 0x000050, "Member 'MonsterBPLibrary_C_Set_Projectile_Spec_and_Options::__WorldContext' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Set_Projectile_Spec_and_Options, Result) == 0x000058, "Member 'MonsterBPLibrary_C_Set_Projectile_Spec_and_Options::Result' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Set_Projectile_Spec_and_Options, Projectile_Actor) == 0x000060, "Member 'MonsterBPLibrary_C_Set_Projectile_Spec_and_Options::Projectile_Actor' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Set_Projectile_Spec_and_Options, Temp_Projectile_Actor) == 0x000068, "Member 'MonsterBPLibrary_C_Set_Projectile_Spec_and_Options::Temp_Projectile_Actor' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Set_Projectile_Spec_and_Options, Target) == 0x000070, "Member 'MonsterBPLibrary_C_Set_Projectile_Spec_and_Options::Target' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Set_Projectile_Spec_and_Options, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000078, "Member 'MonsterBPLibrary_C_Set_Projectile_Spec_and_Options::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Set_Projectile_Spec_and_Options, K2Node_DynamicCast_AsBP_Projectile_Actor) == 0x000080, "Member 'MonsterBPLibrary_C_Set_Projectile_Spec_and_Options::K2Node_DynamicCast_AsBP_Projectile_Actor' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Set_Projectile_Spec_and_Options, K2Node_DynamicCast_bSuccess) == 0x000088, "Member 'MonsterBPLibrary_C_Set_Projectile_Spec_and_Options::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Set_Projectile_Spec_and_Options, Temp_int_Loop_Counter_Variable) == 0x00008C, "Member 'MonsterBPLibrary_C_Set_Projectile_Spec_and_Options::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Set_Projectile_Spec_and_Options, CallFunc_Add_IntInt_ReturnValue) == 0x000090, "Member 'MonsterBPLibrary_C_Set_Projectile_Spec_and_Options::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Set_Projectile_Spec_and_Options, CallFunc_K2_GetComponentsByClass_ReturnValue) == 0x000098, "Member 'MonsterBPLibrary_C_Set_Projectile_Spec_and_Options::CallFunc_K2_GetComponentsByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Set_Projectile_Spec_and_Options, CallFunc_Array_Length_ReturnValue) == 0x0000A8, "Member 'MonsterBPLibrary_C_Set_Projectile_Spec_and_Options::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Set_Projectile_Spec_and_Options, CallFunc_Less_IntInt_ReturnValue) == 0x0000AC, "Member 'MonsterBPLibrary_C_Set_Projectile_Spec_and_Options::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Set_Projectile_Spec_and_Options, Temp_int_Array_Index_Variable) == 0x0000B0, "Member 'MonsterBPLibrary_C_Set_Projectile_Spec_and_Options::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Set_Projectile_Spec_and_Options, CallFunc_Array_Get_Item) == 0x0000B8, "Member 'MonsterBPLibrary_C_Set_Projectile_Spec_and_Options::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Set_Projectile_Spec_and_Options, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x0000C0, "Member 'MonsterBPLibrary_C_Set_Projectile_Spec_and_Options::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Set_Projectile_Spec_and_Options, Temp_bool_True_if_break_was_hit_Variable) == 0x0000C1, "Member 'MonsterBPLibrary_C_Set_Projectile_Spec_and_Options::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Set_Projectile_Spec_and_Options, CallFunc_Not_PreBool_ReturnValue) == 0x0000C2, "Member 'MonsterBPLibrary_C_Set_Projectile_Spec_and_Options::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Set_Projectile_Spec_and_Options, CallFunc_BooleanAND_ReturnValue) == 0x0000C3, "Member 'MonsterBPLibrary_C_Set_Projectile_Spec_and_Options::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Set_Projectile_Spec_and_Options, Temp_struct_Variable) == 0x0000C8, "Member 'MonsterBPLibrary_C_Set_Projectile_Spec_and_Options::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Set_Projectile_Spec_and_Options, CallFunc_PlayPierce_SetPierceCount_ImplicitCast) == 0x000178, "Member 'MonsterBPLibrary_C_Set_Projectile_Spec_and_Options::CallFunc_PlayPierce_SetPierceCount_ImplicitCast' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Set_Projectile_Spec_and_Options, CallFunc_PlayPierce_SetObstaclePierceDecrease_ImplicitCast) == 0x00017C, "Member 'MonsterBPLibrary_C_Set_Projectile_Spec_and_Options::CallFunc_PlayPierce_SetObstaclePierceDecrease_ImplicitCast' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Set_Projectile_Spec_and_Options, CallFunc_SetHomingMagnitude_InHomingMagnitude_ImplicitCast) == 0x000180, "Member 'MonsterBPLibrary_C_Set_Projectile_Spec_and_Options::CallFunc_SetHomingMagnitude_InHomingMagnitude_ImplicitCast' has a wrong offset!");

// Function MonsterBPLibrary.MonsterBPLibrary_C.Set Stance
// 0x00E0 (0x00E0 - 0x0000)
struct MonsterBPLibrary_C_Set_Stance final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Stance_Number;                                     // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39D4[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39D5[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FGameplayTag>                   Stance_Tags;                                       // 0x0020(0x0010)(Edit, BlueprintVisible)
	struct FGameplayTag                           Selected_Stance;                                   // 0x0030(0x0008)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash)
	TArray<struct FGameplayTag>                   K2Node_MakeArray_Array;                            // 0x0038(0x0010)(ReferenceParm)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39D6[0x7];                                     // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> K2Node_DynamicCast_As_________________;            // 0x0050(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39D7[0x3];                                     // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39D8[0x3];                                     // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_1;        // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39D9[0x2];                                     // 0x0082(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           CallFunc_Array_Get_Item;                           // 0x0084(0x0008)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RemoveGameplayTag_ReturnValue;            // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39DA[0x3];                                     // 0x0091(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_2;            // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue;                          // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39DB[0x4];                                     // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  CallFunc_MakeGameplayTagContainerFromArray_ReturnValue; // 0x00A0(0x0020)()
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue;       // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAnyMatchingGameplayTags_ReturnValue;   // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39DC[0x2];                                     // 0x00C2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           CallFunc_Array_Get_Item_1;                         // 0x00C4(0x0008)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RemoveGameplayTag_ReturnValue_1;          // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39DD[0x3];                                     // 0x00D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_3;            // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue_1;                        // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x00DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_AddGameplayTag_ReturnValue;               // 0x00DD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MonsterBPLibrary_C_Set_Stance) == 0x000008, "Wrong alignment on MonsterBPLibrary_C_Set_Stance");
static_assert(sizeof(MonsterBPLibrary_C_Set_Stance) == 0x0000E0, "Wrong size on MonsterBPLibrary_C_Set_Stance");
static_assert(offsetof(MonsterBPLibrary_C_Set_Stance, Actor) == 0x000000, "Member 'MonsterBPLibrary_C_Set_Stance::Actor' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Set_Stance, Stance_Number) == 0x000008, "Member 'MonsterBPLibrary_C_Set_Stance::Stance_Number' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Set_Stance, __WorldContext) == 0x000010, "Member 'MonsterBPLibrary_C_Set_Stance::__WorldContext' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Set_Stance, ReturnValue) == 0x000018, "Member 'MonsterBPLibrary_C_Set_Stance::ReturnValue' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Set_Stance, Stance_Tags) == 0x000020, "Member 'MonsterBPLibrary_C_Set_Stance::Stance_Tags' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Set_Stance, Selected_Stance) == 0x000030, "Member 'MonsterBPLibrary_C_Set_Stance::Selected_Stance' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Set_Stance, K2Node_MakeArray_Array) == 0x000038, "Member 'MonsterBPLibrary_C_Set_Stance::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Set_Stance, K2Node_SwitchInteger_CmpSuccess) == 0x000048, "Member 'MonsterBPLibrary_C_Set_Stance::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Set_Stance, K2Node_DynamicCast_As_________________) == 0x000050, "Member 'MonsterBPLibrary_C_Set_Stance::K2Node_DynamicCast_As_________________' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Set_Stance, K2Node_DynamicCast_bSuccess) == 0x000060, "Member 'MonsterBPLibrary_C_Set_Stance::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Set_Stance, Temp_int_Array_Index_Variable) == 0x000064, "Member 'MonsterBPLibrary_C_Set_Stance::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Set_Stance, Temp_int_Loop_Counter_Variable) == 0x000068, "Member 'MonsterBPLibrary_C_Set_Stance::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Set_Stance, CallFunc_Subtract_IntInt_ReturnValue) == 0x00006C, "Member 'MonsterBPLibrary_C_Set_Stance::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Set_Stance, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000070, "Member 'MonsterBPLibrary_C_Set_Stance::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Set_Stance, Temp_int_Array_Index_Variable_1) == 0x000074, "Member 'MonsterBPLibrary_C_Set_Stance::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Set_Stance, Temp_int_Loop_Counter_Variable_1) == 0x000078, "Member 'MonsterBPLibrary_C_Set_Stance::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Set_Stance, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x00007C, "Member 'MonsterBPLibrary_C_Set_Stance::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Set_Stance, CallFunc_GreaterEqual_IntInt_ReturnValue_1) == 0x000080, "Member 'MonsterBPLibrary_C_Set_Stance::CallFunc_GreaterEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Set_Stance, Temp_bool_Variable) == 0x000081, "Member 'MonsterBPLibrary_C_Set_Stance::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Set_Stance, CallFunc_Array_Get_Item) == 0x000084, "Member 'MonsterBPLibrary_C_Set_Stance::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Set_Stance, CallFunc_Array_Length_ReturnValue) == 0x00008C, "Member 'MonsterBPLibrary_C_Set_Stance::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Set_Stance, CallFunc_RemoveGameplayTag_ReturnValue) == 0x000090, "Member 'MonsterBPLibrary_C_Set_Stance::CallFunc_RemoveGameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Set_Stance, CallFunc_Subtract_IntInt_ReturnValue_2) == 0x000094, "Member 'MonsterBPLibrary_C_Set_Stance::CallFunc_Subtract_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Set_Stance, CallFunc_Max_ReturnValue) == 0x000098, "Member 'MonsterBPLibrary_C_Set_Stance::CallFunc_Max_ReturnValue' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Set_Stance, CallFunc_MakeGameplayTagContainerFromArray_ReturnValue) == 0x0000A0, "Member 'MonsterBPLibrary_C_Set_Stance::CallFunc_MakeGameplayTagContainerFromArray_ReturnValue' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Set_Stance, CallFunc_HasMatchingGameplayTag_ReturnValue) == 0x0000C0, "Member 'MonsterBPLibrary_C_Set_Stance::CallFunc_HasMatchingGameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Set_Stance, CallFunc_HasAnyMatchingGameplayTags_ReturnValue) == 0x0000C1, "Member 'MonsterBPLibrary_C_Set_Stance::CallFunc_HasAnyMatchingGameplayTags_ReturnValue' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Set_Stance, CallFunc_Array_Get_Item_1) == 0x0000C4, "Member 'MonsterBPLibrary_C_Set_Stance::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Set_Stance, CallFunc_Array_Length_ReturnValue_1) == 0x0000CC, "Member 'MonsterBPLibrary_C_Set_Stance::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Set_Stance, CallFunc_RemoveGameplayTag_ReturnValue_1) == 0x0000D0, "Member 'MonsterBPLibrary_C_Set_Stance::CallFunc_RemoveGameplayTag_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Set_Stance, CallFunc_Subtract_IntInt_ReturnValue_3) == 0x0000D4, "Member 'MonsterBPLibrary_C_Set_Stance::CallFunc_Subtract_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Set_Stance, CallFunc_Max_ReturnValue_1) == 0x0000D8, "Member 'MonsterBPLibrary_C_Set_Stance::CallFunc_Max_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Set_Stance, CallFunc_Array_RemoveItem_ReturnValue) == 0x0000DC, "Member 'MonsterBPLibrary_C_Set_Stance::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Set_Stance, CallFunc_AddGameplayTag_ReturnValue) == 0x0000DD, "Member 'MonsterBPLibrary_C_Set_Stance::CallFunc_AddGameplayTag_ReturnValue' has a wrong offset!");

// Function MonsterBPLibrary.MonsterBPLibrary_C.Set Target Provider
// 0x01F0 (0x01F0 - 0x0000)
struct MonsterBPLibrary_C_Set_Target_Provider final
{
public:
	class ABP_DCMonsterBaseWithOptions_C*         Source_Target;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UDCGameObjectLinkComponent*             DCGame_Object_Link;                                // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagQuery                      Provider_Object_Tag;                               // 0x0010(0x0048)(BlueprintVisible, BlueprintReadOnly, Parm)
	class UObject*                                __WorldContext;                                    // 0x0058(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0060(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39DE[0x7];                                     // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ADCCharacterBase*>               LocalProviderArray;                                // 0x0068(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39DF[0x4];                                     // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FObjectLinkRequestEvent                K2Node_MakeStruct_ObjectLinkRequestEvent;          // 0x0080(0x00D0)()
	TArray<struct FObjectLinkResponeEvent>        CallFunc_RequestToLinkers_ReturnValue;             // 0x0150(0x0010)(ReferenceParm)
	struct FObjectLinkResponeEvent                CallFunc_Array_Get_Item;                           // 0x0160(0x0060)()
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x01C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39E0[0x3];                                     // 0x01C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x01C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_DCMonsterBaseWithOptions_C*         K2Node_DynamicCast_AsBP_DCMonster_Base_with_Options; // 0x01C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x01D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39E1[0x3];                                     // 0x01D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x01D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x01D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39E2[0x3];                                     // 0x01D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x01DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBlackboardComponent*                   CallFunc_GetBlackboard_ReturnValue;                // 0x01E0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x01E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x01E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x01EA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x01EB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MonsterBPLibrary_C_Set_Target_Provider) == 0x000008, "Wrong alignment on MonsterBPLibrary_C_Set_Target_Provider");
static_assert(sizeof(MonsterBPLibrary_C_Set_Target_Provider) == 0x0001F0, "Wrong size on MonsterBPLibrary_C_Set_Target_Provider");
static_assert(offsetof(MonsterBPLibrary_C_Set_Target_Provider, Source_Target) == 0x000000, "Member 'MonsterBPLibrary_C_Set_Target_Provider::Source_Target' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Set_Target_Provider, DCGame_Object_Link) == 0x000008, "Member 'MonsterBPLibrary_C_Set_Target_Provider::DCGame_Object_Link' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Set_Target_Provider, Provider_Object_Tag) == 0x000010, "Member 'MonsterBPLibrary_C_Set_Target_Provider::Provider_Object_Tag' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Set_Target_Provider, __WorldContext) == 0x000058, "Member 'MonsterBPLibrary_C_Set_Target_Provider::__WorldContext' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Set_Target_Provider, Result) == 0x000060, "Member 'MonsterBPLibrary_C_Set_Target_Provider::Result' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Set_Target_Provider, LocalProviderArray) == 0x000068, "Member 'MonsterBPLibrary_C_Set_Target_Provider::LocalProviderArray' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Set_Target_Provider, Temp_int_Array_Index_Variable) == 0x000078, "Member 'MonsterBPLibrary_C_Set_Target_Provider::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Set_Target_Provider, K2Node_MakeStruct_ObjectLinkRequestEvent) == 0x000080, "Member 'MonsterBPLibrary_C_Set_Target_Provider::K2Node_MakeStruct_ObjectLinkRequestEvent' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Set_Target_Provider, CallFunc_RequestToLinkers_ReturnValue) == 0x000150, "Member 'MonsterBPLibrary_C_Set_Target_Provider::CallFunc_RequestToLinkers_ReturnValue' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Set_Target_Provider, CallFunc_Array_Get_Item) == 0x000160, "Member 'MonsterBPLibrary_C_Set_Target_Provider::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Set_Target_Provider, CallFunc_IsValid_ReturnValue) == 0x0001C0, "Member 'MonsterBPLibrary_C_Set_Target_Provider::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Set_Target_Provider, CallFunc_Array_Length_ReturnValue) == 0x0001C4, "Member 'MonsterBPLibrary_C_Set_Target_Provider::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Set_Target_Provider, K2Node_DynamicCast_AsBP_DCMonster_Base_with_Options) == 0x0001C8, "Member 'MonsterBPLibrary_C_Set_Target_Provider::K2Node_DynamicCast_AsBP_DCMonster_Base_with_Options' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Set_Target_Provider, K2Node_DynamicCast_bSuccess) == 0x0001D0, "Member 'MonsterBPLibrary_C_Set_Target_Provider::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Set_Target_Provider, Temp_int_Loop_Counter_Variable) == 0x0001D4, "Member 'MonsterBPLibrary_C_Set_Target_Provider::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Set_Target_Provider, CallFunc_Less_IntInt_ReturnValue) == 0x0001D8, "Member 'MonsterBPLibrary_C_Set_Target_Provider::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Set_Target_Provider, CallFunc_Add_IntInt_ReturnValue) == 0x0001DC, "Member 'MonsterBPLibrary_C_Set_Target_Provider::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Set_Target_Provider, CallFunc_GetBlackboard_ReturnValue) == 0x0001E0, "Member 'MonsterBPLibrary_C_Set_Target_Provider::CallFunc_GetBlackboard_ReturnValue' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Set_Target_Provider, Temp_bool_True_if_break_was_hit_Variable) == 0x0001E8, "Member 'MonsterBPLibrary_C_Set_Target_Provider::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Set_Target_Provider, CallFunc_IsValid_ReturnValue_1) == 0x0001E9, "Member 'MonsterBPLibrary_C_Set_Target_Provider::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Set_Target_Provider, CallFunc_Not_PreBool_ReturnValue) == 0x0001EA, "Member 'MonsterBPLibrary_C_Set_Target_Provider::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Set_Target_Provider, CallFunc_BooleanAND_ReturnValue) == 0x0001EB, "Member 'MonsterBPLibrary_C_Set_Target_Provider::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function MonsterBPLibrary.MonsterBPLibrary_C.Get Target Array
// 0x00F8 (0x00F8 - 0x0000)
struct MonsterBPLibrary_C_Get_Target_Array final
{
public:
	class ADCMonsterBase*                         DCMonsterBase;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	E_SensorType                                  Get_List_From;                                     // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Get_From_CombatArea;                               // 0x0009(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Get_Target_Has_Aggro_Only;                         // 0x000A(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39E3[0x5];                                     // 0x000B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Return_Value;                                      // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39E4[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ADCCharacterBase*>               TargetArray;                                       // 0x0020(0x0010)(Parm, OutParm)
	TArray<class ADCCharacterBase*>               LocalEnemiesInCombatArea;                          // 0x0030(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	TArray<class ADCCharacterBase*>               LocalTargetArray;                                  // 0x0040(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	class ADCMonsterBase*                         ControlledPawn;                                    // 0x0050(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	E_SensorType                                  Get_List_From_Sensor;                              // 0x0058(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x005A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39E5[0x5];                                     // 0x005B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_DCMonsterBaseWithOptions_C*         K2Node_DynamicCast_AsBP_DCMonster_Base_with_Options; // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39E6[0x7];                                     // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_DCMonsterBaseWithOptions_C*         K2Node_DynamicCast_AsBP_DCMonster_Base_with_Options_1; // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39E7[0x6];                                     // 0x007A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_DCMonsterBaseWithOptions_C*         K2Node_DynamicCast_AsBP_DCMonster_Base_with_Options_2; // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Filter_Target_Has_Aggro_Return_Value;     // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39E8[0x6];                                     // 0x008A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ADCCharacterBase*>               CallFunc_Filter_Target_Has_Aggro_Output_TargetArray; // 0x0090(0x0010)(ReferenceParm)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Filter_Target_Has_Aggro_Return_Value_1;   // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39E9[0x6];                                     // 0x00A2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ADCCharacterBase*>               CallFunc_Filter_Target_Has_Aggro_Output_TargetArray_1; // 0x00A8(0x0010)(ReferenceParm)
	bool                                          CallFunc_Filter_Target_Has_Aggro_Return_Value_2;   // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39EA[0x7];                                     // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ADCCharacterBase*>               CallFunc_Filter_Target_Has_Aggro_Output_TargetArray_2; // 0x00C0(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x00D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Filter_Target_Has_Aggro_Return_Value_3;   // 0x00D5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39EB[0x2];                                     // 0x00D6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ADCCharacterBase*>               CallFunc_Filter_Target_Has_Aggro_Output_TargetArray_3; // 0x00D8(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_1;        // 0x00EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetAllTargetArray_ReturnValue;            // 0x00ED(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetAllTargetArray_ReturnValue_1;          // 0x00EE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetSightTargetArray_ReturnValue;          // 0x00EF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetHearingTargetArray_ReturnValue;        // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDamageTargetArray_ReturnValue;         // 0x00F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MonsterBPLibrary_C_Get_Target_Array) == 0x000008, "Wrong alignment on MonsterBPLibrary_C_Get_Target_Array");
static_assert(sizeof(MonsterBPLibrary_C_Get_Target_Array) == 0x0000F8, "Wrong size on MonsterBPLibrary_C_Get_Target_Array");
static_assert(offsetof(MonsterBPLibrary_C_Get_Target_Array, DCMonsterBase) == 0x000000, "Member 'MonsterBPLibrary_C_Get_Target_Array::DCMonsterBase' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Target_Array, Get_List_From) == 0x000008, "Member 'MonsterBPLibrary_C_Get_Target_Array::Get_List_From' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Target_Array, Get_From_CombatArea) == 0x000009, "Member 'MonsterBPLibrary_C_Get_Target_Array::Get_From_CombatArea' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Target_Array, Get_Target_Has_Aggro_Only) == 0x00000A, "Member 'MonsterBPLibrary_C_Get_Target_Array::Get_Target_Has_Aggro_Only' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Target_Array, __WorldContext) == 0x000010, "Member 'MonsterBPLibrary_C_Get_Target_Array::__WorldContext' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Target_Array, Return_Value) == 0x000018, "Member 'MonsterBPLibrary_C_Get_Target_Array::Return_Value' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Target_Array, TargetArray) == 0x000020, "Member 'MonsterBPLibrary_C_Get_Target_Array::TargetArray' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Target_Array, LocalEnemiesInCombatArea) == 0x000030, "Member 'MonsterBPLibrary_C_Get_Target_Array::LocalEnemiesInCombatArea' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Target_Array, LocalTargetArray) == 0x000040, "Member 'MonsterBPLibrary_C_Get_Target_Array::LocalTargetArray' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Target_Array, ControlledPawn) == 0x000050, "Member 'MonsterBPLibrary_C_Get_Target_Array::ControlledPawn' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Target_Array, Get_List_From_Sensor) == 0x000058, "Member 'MonsterBPLibrary_C_Get_Target_Array::Get_List_From_Sensor' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Target_Array, K2Node_SwitchEnum_CmpSuccess) == 0x000059, "Member 'MonsterBPLibrary_C_Get_Target_Array::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Target_Array, K2Node_SwitchEnum_CmpSuccess_1) == 0x00005A, "Member 'MonsterBPLibrary_C_Get_Target_Array::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Target_Array, K2Node_DynamicCast_AsBP_DCMonster_Base_with_Options) == 0x000060, "Member 'MonsterBPLibrary_C_Get_Target_Array::K2Node_DynamicCast_AsBP_DCMonster_Base_with_Options' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Target_Array, K2Node_DynamicCast_bSuccess) == 0x000068, "Member 'MonsterBPLibrary_C_Get_Target_Array::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Target_Array, K2Node_DynamicCast_AsBP_DCMonster_Base_with_Options_1) == 0x000070, "Member 'MonsterBPLibrary_C_Get_Target_Array::K2Node_DynamicCast_AsBP_DCMonster_Base_with_Options_1' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Target_Array, K2Node_DynamicCast_bSuccess_1) == 0x000078, "Member 'MonsterBPLibrary_C_Get_Target_Array::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Target_Array, CallFunc_IsValid_ReturnValue) == 0x000079, "Member 'MonsterBPLibrary_C_Get_Target_Array::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Target_Array, K2Node_DynamicCast_AsBP_DCMonster_Base_with_Options_2) == 0x000080, "Member 'MonsterBPLibrary_C_Get_Target_Array::K2Node_DynamicCast_AsBP_DCMonster_Base_with_Options_2' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Target_Array, K2Node_DynamicCast_bSuccess_2) == 0x000088, "Member 'MonsterBPLibrary_C_Get_Target_Array::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Target_Array, CallFunc_Filter_Target_Has_Aggro_Return_Value) == 0x000089, "Member 'MonsterBPLibrary_C_Get_Target_Array::CallFunc_Filter_Target_Has_Aggro_Return_Value' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Target_Array, CallFunc_Filter_Target_Has_Aggro_Output_TargetArray) == 0x000090, "Member 'MonsterBPLibrary_C_Get_Target_Array::CallFunc_Filter_Target_Has_Aggro_Output_TargetArray' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Target_Array, CallFunc_IsValid_ReturnValue_1) == 0x0000A0, "Member 'MonsterBPLibrary_C_Get_Target_Array::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Target_Array, CallFunc_Filter_Target_Has_Aggro_Return_Value_1) == 0x0000A1, "Member 'MonsterBPLibrary_C_Get_Target_Array::CallFunc_Filter_Target_Has_Aggro_Return_Value_1' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Target_Array, CallFunc_Filter_Target_Has_Aggro_Output_TargetArray_1) == 0x0000A8, "Member 'MonsterBPLibrary_C_Get_Target_Array::CallFunc_Filter_Target_Has_Aggro_Output_TargetArray_1' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Target_Array, CallFunc_Filter_Target_Has_Aggro_Return_Value_2) == 0x0000B8, "Member 'MonsterBPLibrary_C_Get_Target_Array::CallFunc_Filter_Target_Has_Aggro_Return_Value_2' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Target_Array, CallFunc_Filter_Target_Has_Aggro_Output_TargetArray_2) == 0x0000C0, "Member 'MonsterBPLibrary_C_Get_Target_Array::CallFunc_Filter_Target_Has_Aggro_Output_TargetArray_2' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Target_Array, CallFunc_Array_Length_ReturnValue) == 0x0000D0, "Member 'MonsterBPLibrary_C_Get_Target_Array::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Target_Array, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x0000D4, "Member 'MonsterBPLibrary_C_Get_Target_Array::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Target_Array, CallFunc_Filter_Target_Has_Aggro_Return_Value_3) == 0x0000D5, "Member 'MonsterBPLibrary_C_Get_Target_Array::CallFunc_Filter_Target_Has_Aggro_Return_Value_3' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Target_Array, CallFunc_Filter_Target_Has_Aggro_Output_TargetArray_3) == 0x0000D8, "Member 'MonsterBPLibrary_C_Get_Target_Array::CallFunc_Filter_Target_Has_Aggro_Output_TargetArray_3' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Target_Array, CallFunc_Array_Length_ReturnValue_1) == 0x0000E8, "Member 'MonsterBPLibrary_C_Get_Target_Array::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Target_Array, CallFunc_GreaterEqual_IntInt_ReturnValue_1) == 0x0000EC, "Member 'MonsterBPLibrary_C_Get_Target_Array::CallFunc_GreaterEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Target_Array, CallFunc_GetAllTargetArray_ReturnValue) == 0x0000ED, "Member 'MonsterBPLibrary_C_Get_Target_Array::CallFunc_GetAllTargetArray_ReturnValue' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Target_Array, CallFunc_GetAllTargetArray_ReturnValue_1) == 0x0000EE, "Member 'MonsterBPLibrary_C_Get_Target_Array::CallFunc_GetAllTargetArray_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Target_Array, CallFunc_GetSightTargetArray_ReturnValue) == 0x0000EF, "Member 'MonsterBPLibrary_C_Get_Target_Array::CallFunc_GetSightTargetArray_ReturnValue' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Target_Array, CallFunc_GetHearingTargetArray_ReturnValue) == 0x0000F0, "Member 'MonsterBPLibrary_C_Get_Target_Array::CallFunc_GetHearingTargetArray_ReturnValue' has a wrong offset!");
static_assert(offsetof(MonsterBPLibrary_C_Get_Target_Array, CallFunc_GetDamageTargetArray_ReturnValue) == 0x0000F1, "Member 'MonsterBPLibrary_C_Get_Target_Array::CallFunc_GetDamageTargetArray_ReturnValue' has a wrong offset!");

}

