#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_SkeletonGuardman_Common

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "BP_Skeleton_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_SkeletonGuardman_Common.BP_SkeletonGuardman_Common_C
// 0x0060 (0x1440 - 0x13E0)
class ABP_SkeletonGuardman_Common_C : public ABP_Skeleton_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_SkeletonGuardman_Common_C;       // 0x13D8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBP_DCHitBox_C*                         BP_DCHitBox_Foot_L;                                // 0x13E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_DCHitBox_C*                         BP_DCHitBox_Foot_R;                                // 0x13E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_DCHitBox_C*                         BP_DCHitBox_Upper_Leg_L;                           // 0x13F0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_DCHitBox_C*                         BP_DCHitBox_Upper_Leg_R;                           // 0x13F8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_DCHitBox_C*                         BP_DCHitBox_Down_Leg_L;                            // 0x1400(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_DCHitBox_C*                         BP_DCHitBox_Down_Leg_R;                            // 0x1408(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_DCHitBox_C*                         BP_DCHitBox_Body;                                  // 0x1410(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_DCHitBox_C*                         BP_DCHitBox_Head;                                  // 0x1418(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class ABP_SkeletonGuardmanShield_C*           GuardmanShieldActor;                               // 0x1420(0x0008)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          CounterAttackOnCooltime;                           // 0x1428(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4698[0x7];                                     // 0x1429(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 Shield_Class;                                      // 0x1430(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class ABP_SkeletonGuardmanShield_Nightmare_C* As_BP_Skeleton_Guardman_Shield_Nightmare;          // 0x1438(0x0008)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_SkeletonGuardman_Common(int32 EntryPoint);
	void InteractFound(class AActor* Interacter, class UPrimitiveComponent* InteractPart);
	void InteractLost(class AActor* Interacter);
	void OnAsyncInitialized();
	void OnStuckByShield(class ADCCharacterBase* InInstigator, class AActor* InEffectCauser);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_SkeletonGuardman_Common_C">();
	}
	static class ABP_SkeletonGuardman_Common_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_SkeletonGuardman_Common_C>();
	}
};
static_assert(alignof(ABP_SkeletonGuardman_Common_C) == 0x000010, "Wrong alignment on ABP_SkeletonGuardman_Common_C");
static_assert(sizeof(ABP_SkeletonGuardman_Common_C) == 0x001440, "Wrong size on ABP_SkeletonGuardman_Common_C");
static_assert(offsetof(ABP_SkeletonGuardman_Common_C, UberGraphFrame_BP_SkeletonGuardman_Common_C) == 0x0013D8, "Member 'ABP_SkeletonGuardman_Common_C::UberGraphFrame_BP_SkeletonGuardman_Common_C' has a wrong offset!");
static_assert(offsetof(ABP_SkeletonGuardman_Common_C, BP_DCHitBox_Foot_L) == 0x0013E0, "Member 'ABP_SkeletonGuardman_Common_C::BP_DCHitBox_Foot_L' has a wrong offset!");
static_assert(offsetof(ABP_SkeletonGuardman_Common_C, BP_DCHitBox_Foot_R) == 0x0013E8, "Member 'ABP_SkeletonGuardman_Common_C::BP_DCHitBox_Foot_R' has a wrong offset!");
static_assert(offsetof(ABP_SkeletonGuardman_Common_C, BP_DCHitBox_Upper_Leg_L) == 0x0013F0, "Member 'ABP_SkeletonGuardman_Common_C::BP_DCHitBox_Upper_Leg_L' has a wrong offset!");
static_assert(offsetof(ABP_SkeletonGuardman_Common_C, BP_DCHitBox_Upper_Leg_R) == 0x0013F8, "Member 'ABP_SkeletonGuardman_Common_C::BP_DCHitBox_Upper_Leg_R' has a wrong offset!");
static_assert(offsetof(ABP_SkeletonGuardman_Common_C, BP_DCHitBox_Down_Leg_L) == 0x001400, "Member 'ABP_SkeletonGuardman_Common_C::BP_DCHitBox_Down_Leg_L' has a wrong offset!");
static_assert(offsetof(ABP_SkeletonGuardman_Common_C, BP_DCHitBox_Down_Leg_R) == 0x001408, "Member 'ABP_SkeletonGuardman_Common_C::BP_DCHitBox_Down_Leg_R' has a wrong offset!");
static_assert(offsetof(ABP_SkeletonGuardman_Common_C, BP_DCHitBox_Body) == 0x001410, "Member 'ABP_SkeletonGuardman_Common_C::BP_DCHitBox_Body' has a wrong offset!");
static_assert(offsetof(ABP_SkeletonGuardman_Common_C, BP_DCHitBox_Head) == 0x001418, "Member 'ABP_SkeletonGuardman_Common_C::BP_DCHitBox_Head' has a wrong offset!");
static_assert(offsetof(ABP_SkeletonGuardman_Common_C, GuardmanShieldActor) == 0x001420, "Member 'ABP_SkeletonGuardman_Common_C::GuardmanShieldActor' has a wrong offset!");
static_assert(offsetof(ABP_SkeletonGuardman_Common_C, CounterAttackOnCooltime) == 0x001428, "Member 'ABP_SkeletonGuardman_Common_C::CounterAttackOnCooltime' has a wrong offset!");
static_assert(offsetof(ABP_SkeletonGuardman_Common_C, Shield_Class) == 0x001430, "Member 'ABP_SkeletonGuardman_Common_C::Shield_Class' has a wrong offset!");
static_assert(offsetof(ABP_SkeletonGuardman_Common_C, As_BP_Skeleton_Guardman_Shield_Nightmare) == 0x001438, "Member 'ABP_SkeletonGuardman_Common_C::As_BP_Skeleton_Guardman_Shield_Nightmare' has a wrong offset!");

}

