#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_FrostSkeletonAxeman_Attack_Loop

#include "Basic.hpp"

#include "AIModule_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function GA_FrostSkeletonAxeman_Attack_Loop.GA_FrostSkeletonAxeman_Attack_Loop_C.AbilityActivated
// 0x00B0 (0x00B0 - 0x0000)
struct GA_FrostSkeletonAxeman_Attack_Loop_C_AbilityActivated final
{
public:
	struct FGameplayEventData                     TriggerEventData;                                  // 0x0000(0x00B0)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(GA_FrostSkeletonAxeman_Attack_Loop_C_AbilityActivated) == 0x000008, "Wrong alignment on GA_FrostSkeletonAxeman_Attack_Loop_C_AbilityActivated");
static_assert(sizeof(GA_FrostSkeletonAxeman_Attack_Loop_C_AbilityActivated) == 0x0000B0, "Wrong size on GA_FrostSkeletonAxeman_Attack_Loop_C_AbilityActivated");
static_assert(offsetof(GA_FrostSkeletonAxeman_Attack_Loop_C_AbilityActivated, TriggerEventData) == 0x000000, "Member 'GA_FrostSkeletonAxeman_Attack_Loop_C_AbilityActivated::TriggerEventData' has a wrong offset!");

// Function GA_FrostSkeletonAxeman_Attack_Loop.GA_FrostSkeletonAxeman_Attack_Loop_C.ExecuteUbergraph_GA_FrostSkeletonAxeman_Attack_Loop
// 0x01E8 (0x01E8 - 0x0000)
struct GA_FrostSkeletonAxeman_Attack_Loop_C_ExecuteUbergraph_GA_FrostSkeletonAxeman_Attack_Loop final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPathFollowingResult                          K2Node_CustomEvent_MovementResult;                 // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D8F[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(EPathFollowingResult MovementResult)> K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EPathFollowingResult                          Temp_byte_Variable;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D90[0x3];                                     // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(EPathFollowingResult MovementResult)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x001C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D91[0x4];                                     // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayEventData                     K2Node_Event_TriggerEventData;                     // 0x0030(0x00B0)(ConstParm)
	class AActor*                                 CallFunc_GetAvatarActorFromActorInfo_ReturnValue;  // 0x00E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AAIController*                          CallFunc_GetAIController_ReturnValue;              // 0x00E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetAvatarActorFromActorInfo_ReturnValue_1; // 0x00F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_2;            // 0x00F8(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_DCMonsterBaseWithOptions_C*         K2Node_DynamicCast_AsBP_DCMonster_Base_with_Options; // 0x0108(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D92[0x7];                                     // 0x0111(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetAvatarActorFromActorInfo_ReturnValue_2; // 0x0118(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_DCMonsterBaseWithOptions_C*         K2Node_DynamicCast_AsBP_DCMonster_Base_with_Options_1; // 0x0120(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D93[0x7];                                     // 0x0129(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetAvatarActorFromActorInfo_ReturnValue_3; // 0x0130(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_RandomFloatInRange_ReturnValue;           // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_3;            // 0x0140(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0150(0x0008)(NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetAvatarActorFromActorInfo_ReturnValue_4; // 0x0158(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bWasCancelled;                        // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D94[0x7];                                     // 0x0169(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue_1;        // 0x0170(0x0008)(NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_RandomFloatInRange_ReturnValue_1;         // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Get_Enemies_In_Range_And_Angle_From_Actor_Result; // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D95[0x7];                                     // 0x0181(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ADCCharacterBase*>               CallFunc_Get_Enemies_In_Range_And_Angle_From_Actor_DCCharacterBase; // 0x0188(0x0010)(ReferenceParm)
	bool                                          CallFunc_Get_Enemies_In_Range_And_Angle_From_Actor_Result_1; // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D96[0x7];                                     // 0x0199(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ADCCharacterBase*>               CallFunc_Get_Enemies_In_Range_And_Angle_From_Actor_DCCharacterBase_1; // 0x01A0(0x0010)(ReferenceParm)
	class AActor*                                 CallFunc_GetAvatarActorFromActorInfo_ReturnValue_5; // 0x01B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AAIController*                          CallFunc_GetAIController_ReturnValue_1;            // 0x01B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x01C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPathFollowingResult                          K2Node_CustomEvent_MovementResult_1;               // 0x01C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetBBTargetActorToCharacterBase_Result;   // 0x01C2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D97[0x5];                                     // 0x01C3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class ADCCharacterBase*                       CallFunc_GetBBTargetActorToCharacterBase_As_DCCharacter_Base; // 0x01C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAIAsyncTaskBlueprintProxy*             CallFunc_CreateMoveToProxyObject_ReturnValue;      // 0x01D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x01D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D98[0x3];                                     // 0x01D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_K2_SetTimerDelegate_Time_ImplicitCast;    // 0x01DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_K2_SetTimerDelegate_Time_ImplicitCast_1;  // 0x01E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_FrostSkeletonAxeman_Attack_Loop_C_ExecuteUbergraph_GA_FrostSkeletonAxeman_Attack_Loop) == 0x000008, "Wrong alignment on GA_FrostSkeletonAxeman_Attack_Loop_C_ExecuteUbergraph_GA_FrostSkeletonAxeman_Attack_Loop");
static_assert(sizeof(GA_FrostSkeletonAxeman_Attack_Loop_C_ExecuteUbergraph_GA_FrostSkeletonAxeman_Attack_Loop) == 0x0001E8, "Wrong size on GA_FrostSkeletonAxeman_Attack_Loop_C_ExecuteUbergraph_GA_FrostSkeletonAxeman_Attack_Loop");
static_assert(offsetof(GA_FrostSkeletonAxeman_Attack_Loop_C_ExecuteUbergraph_GA_FrostSkeletonAxeman_Attack_Loop, EntryPoint) == 0x000000, "Member 'GA_FrostSkeletonAxeman_Attack_Loop_C_ExecuteUbergraph_GA_FrostSkeletonAxeman_Attack_Loop::EntryPoint' has a wrong offset!");
static_assert(offsetof(GA_FrostSkeletonAxeman_Attack_Loop_C_ExecuteUbergraph_GA_FrostSkeletonAxeman_Attack_Loop, K2Node_CustomEvent_MovementResult) == 0x000004, "Member 'GA_FrostSkeletonAxeman_Attack_Loop_C_ExecuteUbergraph_GA_FrostSkeletonAxeman_Attack_Loop::K2Node_CustomEvent_MovementResult' has a wrong offset!");
static_assert(offsetof(GA_FrostSkeletonAxeman_Attack_Loop_C_ExecuteUbergraph_GA_FrostSkeletonAxeman_Attack_Loop, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'GA_FrostSkeletonAxeman_Attack_Loop_C_ExecuteUbergraph_GA_FrostSkeletonAxeman_Attack_Loop::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(GA_FrostSkeletonAxeman_Attack_Loop_C_ExecuteUbergraph_GA_FrostSkeletonAxeman_Attack_Loop, Temp_byte_Variable) == 0x000018, "Member 'GA_FrostSkeletonAxeman_Attack_Loop_C_ExecuteUbergraph_GA_FrostSkeletonAxeman_Attack_Loop::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(GA_FrostSkeletonAxeman_Attack_Loop_C_ExecuteUbergraph_GA_FrostSkeletonAxeman_Attack_Loop, K2Node_CreateDelegate_OutputDelegate_1) == 0x00001C, "Member 'GA_FrostSkeletonAxeman_Attack_Loop_C_ExecuteUbergraph_GA_FrostSkeletonAxeman_Attack_Loop::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(GA_FrostSkeletonAxeman_Attack_Loop_C_ExecuteUbergraph_GA_FrostSkeletonAxeman_Attack_Loop, K2Node_Event_TriggerEventData) == 0x000030, "Member 'GA_FrostSkeletonAxeman_Attack_Loop_C_ExecuteUbergraph_GA_FrostSkeletonAxeman_Attack_Loop::K2Node_Event_TriggerEventData' has a wrong offset!");
static_assert(offsetof(GA_FrostSkeletonAxeman_Attack_Loop_C_ExecuteUbergraph_GA_FrostSkeletonAxeman_Attack_Loop, CallFunc_GetAvatarActorFromActorInfo_ReturnValue) == 0x0000E0, "Member 'GA_FrostSkeletonAxeman_Attack_Loop_C_ExecuteUbergraph_GA_FrostSkeletonAxeman_Attack_Loop::CallFunc_GetAvatarActorFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_FrostSkeletonAxeman_Attack_Loop_C_ExecuteUbergraph_GA_FrostSkeletonAxeman_Attack_Loop, CallFunc_GetAIController_ReturnValue) == 0x0000E8, "Member 'GA_FrostSkeletonAxeman_Attack_Loop_C_ExecuteUbergraph_GA_FrostSkeletonAxeman_Attack_Loop::CallFunc_GetAIController_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_FrostSkeletonAxeman_Attack_Loop_C_ExecuteUbergraph_GA_FrostSkeletonAxeman_Attack_Loop, CallFunc_GetAvatarActorFromActorInfo_ReturnValue_1) == 0x0000F0, "Member 'GA_FrostSkeletonAxeman_Attack_Loop_C_ExecuteUbergraph_GA_FrostSkeletonAxeman_Attack_Loop::CallFunc_GetAvatarActorFromActorInfo_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_FrostSkeletonAxeman_Attack_Loop_C_ExecuteUbergraph_GA_FrostSkeletonAxeman_Attack_Loop, K2Node_CreateDelegate_OutputDelegate_2) == 0x0000F8, "Member 'GA_FrostSkeletonAxeman_Attack_Loop_C_ExecuteUbergraph_GA_FrostSkeletonAxeman_Attack_Loop::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(GA_FrostSkeletonAxeman_Attack_Loop_C_ExecuteUbergraph_GA_FrostSkeletonAxeman_Attack_Loop, K2Node_DynamicCast_AsBP_DCMonster_Base_with_Options) == 0x000108, "Member 'GA_FrostSkeletonAxeman_Attack_Loop_C_ExecuteUbergraph_GA_FrostSkeletonAxeman_Attack_Loop::K2Node_DynamicCast_AsBP_DCMonster_Base_with_Options' has a wrong offset!");
static_assert(offsetof(GA_FrostSkeletonAxeman_Attack_Loop_C_ExecuteUbergraph_GA_FrostSkeletonAxeman_Attack_Loop, K2Node_DynamicCast_bSuccess) == 0x000110, "Member 'GA_FrostSkeletonAxeman_Attack_Loop_C_ExecuteUbergraph_GA_FrostSkeletonAxeman_Attack_Loop::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GA_FrostSkeletonAxeman_Attack_Loop_C_ExecuteUbergraph_GA_FrostSkeletonAxeman_Attack_Loop, CallFunc_GetAvatarActorFromActorInfo_ReturnValue_2) == 0x000118, "Member 'GA_FrostSkeletonAxeman_Attack_Loop_C_ExecuteUbergraph_GA_FrostSkeletonAxeman_Attack_Loop::CallFunc_GetAvatarActorFromActorInfo_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GA_FrostSkeletonAxeman_Attack_Loop_C_ExecuteUbergraph_GA_FrostSkeletonAxeman_Attack_Loop, K2Node_DynamicCast_AsBP_DCMonster_Base_with_Options_1) == 0x000120, "Member 'GA_FrostSkeletonAxeman_Attack_Loop_C_ExecuteUbergraph_GA_FrostSkeletonAxeman_Attack_Loop::K2Node_DynamicCast_AsBP_DCMonster_Base_with_Options_1' has a wrong offset!");
static_assert(offsetof(GA_FrostSkeletonAxeman_Attack_Loop_C_ExecuteUbergraph_GA_FrostSkeletonAxeman_Attack_Loop, K2Node_DynamicCast_bSuccess_1) == 0x000128, "Member 'GA_FrostSkeletonAxeman_Attack_Loop_C_ExecuteUbergraph_GA_FrostSkeletonAxeman_Attack_Loop::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(GA_FrostSkeletonAxeman_Attack_Loop_C_ExecuteUbergraph_GA_FrostSkeletonAxeman_Attack_Loop, CallFunc_GetAvatarActorFromActorInfo_ReturnValue_3) == 0x000130, "Member 'GA_FrostSkeletonAxeman_Attack_Loop_C_ExecuteUbergraph_GA_FrostSkeletonAxeman_Attack_Loop::CallFunc_GetAvatarActorFromActorInfo_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(GA_FrostSkeletonAxeman_Attack_Loop_C_ExecuteUbergraph_GA_FrostSkeletonAxeman_Attack_Loop, CallFunc_RandomFloatInRange_ReturnValue) == 0x000138, "Member 'GA_FrostSkeletonAxeman_Attack_Loop_C_ExecuteUbergraph_GA_FrostSkeletonAxeman_Attack_Loop::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_FrostSkeletonAxeman_Attack_Loop_C_ExecuteUbergraph_GA_FrostSkeletonAxeman_Attack_Loop, K2Node_CreateDelegate_OutputDelegate_3) == 0x000140, "Member 'GA_FrostSkeletonAxeman_Attack_Loop_C_ExecuteUbergraph_GA_FrostSkeletonAxeman_Attack_Loop::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(GA_FrostSkeletonAxeman_Attack_Loop_C_ExecuteUbergraph_GA_FrostSkeletonAxeman_Attack_Loop, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000150, "Member 'GA_FrostSkeletonAxeman_Attack_Loop_C_ExecuteUbergraph_GA_FrostSkeletonAxeman_Attack_Loop::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_FrostSkeletonAxeman_Attack_Loop_C_ExecuteUbergraph_GA_FrostSkeletonAxeman_Attack_Loop, CallFunc_GetAvatarActorFromActorInfo_ReturnValue_4) == 0x000158, "Member 'GA_FrostSkeletonAxeman_Attack_Loop_C_ExecuteUbergraph_GA_FrostSkeletonAxeman_Attack_Loop::CallFunc_GetAvatarActorFromActorInfo_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(GA_FrostSkeletonAxeman_Attack_Loop_C_ExecuteUbergraph_GA_FrostSkeletonAxeman_Attack_Loop, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x000160, "Member 'GA_FrostSkeletonAxeman_Attack_Loop_C_ExecuteUbergraph_GA_FrostSkeletonAxeman_Attack_Loop::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_FrostSkeletonAxeman_Attack_Loop_C_ExecuteUbergraph_GA_FrostSkeletonAxeman_Attack_Loop, K2Node_Event_bWasCancelled) == 0x000168, "Member 'GA_FrostSkeletonAxeman_Attack_Loop_C_ExecuteUbergraph_GA_FrostSkeletonAxeman_Attack_Loop::K2Node_Event_bWasCancelled' has a wrong offset!");
static_assert(offsetof(GA_FrostSkeletonAxeman_Attack_Loop_C_ExecuteUbergraph_GA_FrostSkeletonAxeman_Attack_Loop, CallFunc_K2_SetTimerDelegate_ReturnValue_1) == 0x000170, "Member 'GA_FrostSkeletonAxeman_Attack_Loop_C_ExecuteUbergraph_GA_FrostSkeletonAxeman_Attack_Loop::CallFunc_K2_SetTimerDelegate_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_FrostSkeletonAxeman_Attack_Loop_C_ExecuteUbergraph_GA_FrostSkeletonAxeman_Attack_Loop, CallFunc_RandomFloatInRange_ReturnValue_1) == 0x000178, "Member 'GA_FrostSkeletonAxeman_Attack_Loop_C_ExecuteUbergraph_GA_FrostSkeletonAxeman_Attack_Loop::CallFunc_RandomFloatInRange_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_FrostSkeletonAxeman_Attack_Loop_C_ExecuteUbergraph_GA_FrostSkeletonAxeman_Attack_Loop, CallFunc_Get_Enemies_In_Range_And_Angle_From_Actor_Result) == 0x000180, "Member 'GA_FrostSkeletonAxeman_Attack_Loop_C_ExecuteUbergraph_GA_FrostSkeletonAxeman_Attack_Loop::CallFunc_Get_Enemies_In_Range_And_Angle_From_Actor_Result' has a wrong offset!");
static_assert(offsetof(GA_FrostSkeletonAxeman_Attack_Loop_C_ExecuteUbergraph_GA_FrostSkeletonAxeman_Attack_Loop, CallFunc_Get_Enemies_In_Range_And_Angle_From_Actor_DCCharacterBase) == 0x000188, "Member 'GA_FrostSkeletonAxeman_Attack_Loop_C_ExecuteUbergraph_GA_FrostSkeletonAxeman_Attack_Loop::CallFunc_Get_Enemies_In_Range_And_Angle_From_Actor_DCCharacterBase' has a wrong offset!");
static_assert(offsetof(GA_FrostSkeletonAxeman_Attack_Loop_C_ExecuteUbergraph_GA_FrostSkeletonAxeman_Attack_Loop, CallFunc_Get_Enemies_In_Range_And_Angle_From_Actor_Result_1) == 0x000198, "Member 'GA_FrostSkeletonAxeman_Attack_Loop_C_ExecuteUbergraph_GA_FrostSkeletonAxeman_Attack_Loop::CallFunc_Get_Enemies_In_Range_And_Angle_From_Actor_Result_1' has a wrong offset!");
static_assert(offsetof(GA_FrostSkeletonAxeman_Attack_Loop_C_ExecuteUbergraph_GA_FrostSkeletonAxeman_Attack_Loop, CallFunc_Get_Enemies_In_Range_And_Angle_From_Actor_DCCharacterBase_1) == 0x0001A0, "Member 'GA_FrostSkeletonAxeman_Attack_Loop_C_ExecuteUbergraph_GA_FrostSkeletonAxeman_Attack_Loop::CallFunc_Get_Enemies_In_Range_And_Angle_From_Actor_DCCharacterBase_1' has a wrong offset!");
static_assert(offsetof(GA_FrostSkeletonAxeman_Attack_Loop_C_ExecuteUbergraph_GA_FrostSkeletonAxeman_Attack_Loop, CallFunc_GetAvatarActorFromActorInfo_ReturnValue_5) == 0x0001B0, "Member 'GA_FrostSkeletonAxeman_Attack_Loop_C_ExecuteUbergraph_GA_FrostSkeletonAxeman_Attack_Loop::CallFunc_GetAvatarActorFromActorInfo_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(GA_FrostSkeletonAxeman_Attack_Loop_C_ExecuteUbergraph_GA_FrostSkeletonAxeman_Attack_Loop, CallFunc_GetAIController_ReturnValue_1) == 0x0001B8, "Member 'GA_FrostSkeletonAxeman_Attack_Loop_C_ExecuteUbergraph_GA_FrostSkeletonAxeman_Attack_Loop::CallFunc_GetAIController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_FrostSkeletonAxeman_Attack_Loop_C_ExecuteUbergraph_GA_FrostSkeletonAxeman_Attack_Loop, CallFunc_IsValid_ReturnValue) == 0x0001C0, "Member 'GA_FrostSkeletonAxeman_Attack_Loop_C_ExecuteUbergraph_GA_FrostSkeletonAxeman_Attack_Loop::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_FrostSkeletonAxeman_Attack_Loop_C_ExecuteUbergraph_GA_FrostSkeletonAxeman_Attack_Loop, K2Node_CustomEvent_MovementResult_1) == 0x0001C1, "Member 'GA_FrostSkeletonAxeman_Attack_Loop_C_ExecuteUbergraph_GA_FrostSkeletonAxeman_Attack_Loop::K2Node_CustomEvent_MovementResult_1' has a wrong offset!");
static_assert(offsetof(GA_FrostSkeletonAxeman_Attack_Loop_C_ExecuteUbergraph_GA_FrostSkeletonAxeman_Attack_Loop, CallFunc_GetBBTargetActorToCharacterBase_Result) == 0x0001C2, "Member 'GA_FrostSkeletonAxeman_Attack_Loop_C_ExecuteUbergraph_GA_FrostSkeletonAxeman_Attack_Loop::CallFunc_GetBBTargetActorToCharacterBase_Result' has a wrong offset!");
static_assert(offsetof(GA_FrostSkeletonAxeman_Attack_Loop_C_ExecuteUbergraph_GA_FrostSkeletonAxeman_Attack_Loop, CallFunc_GetBBTargetActorToCharacterBase_As_DCCharacter_Base) == 0x0001C8, "Member 'GA_FrostSkeletonAxeman_Attack_Loop_C_ExecuteUbergraph_GA_FrostSkeletonAxeman_Attack_Loop::CallFunc_GetBBTargetActorToCharacterBase_As_DCCharacter_Base' has a wrong offset!");
static_assert(offsetof(GA_FrostSkeletonAxeman_Attack_Loop_C_ExecuteUbergraph_GA_FrostSkeletonAxeman_Attack_Loop, CallFunc_CreateMoveToProxyObject_ReturnValue) == 0x0001D0, "Member 'GA_FrostSkeletonAxeman_Attack_Loop_C_ExecuteUbergraph_GA_FrostSkeletonAxeman_Attack_Loop::CallFunc_CreateMoveToProxyObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_FrostSkeletonAxeman_Attack_Loop_C_ExecuteUbergraph_GA_FrostSkeletonAxeman_Attack_Loop, CallFunc_IsValid_ReturnValue_1) == 0x0001D8, "Member 'GA_FrostSkeletonAxeman_Attack_Loop_C_ExecuteUbergraph_GA_FrostSkeletonAxeman_Attack_Loop::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_FrostSkeletonAxeman_Attack_Loop_C_ExecuteUbergraph_GA_FrostSkeletonAxeman_Attack_Loop, CallFunc_K2_SetTimerDelegate_Time_ImplicitCast) == 0x0001DC, "Member 'GA_FrostSkeletonAxeman_Attack_Loop_C_ExecuteUbergraph_GA_FrostSkeletonAxeman_Attack_Loop::CallFunc_K2_SetTimerDelegate_Time_ImplicitCast' has a wrong offset!");
static_assert(offsetof(GA_FrostSkeletonAxeman_Attack_Loop_C_ExecuteUbergraph_GA_FrostSkeletonAxeman_Attack_Loop, CallFunc_K2_SetTimerDelegate_Time_ImplicitCast_1) == 0x0001E0, "Member 'GA_FrostSkeletonAxeman_Attack_Loop_C_ExecuteUbergraph_GA_FrostSkeletonAxeman_Attack_Loop::CallFunc_K2_SetTimerDelegate_Time_ImplicitCast_1' has a wrong offset!");

// Function GA_FrostSkeletonAxeman_Attack_Loop.GA_FrostSkeletonAxeman_Attack_Loop_C.K2_OnEndAbility
// 0x0001 (0x0001 - 0x0000)
struct GA_FrostSkeletonAxeman_Attack_Loop_C_K2_OnEndAbility final
{
public:
	bool                                          bWasCancelled;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_FrostSkeletonAxeman_Attack_Loop_C_K2_OnEndAbility) == 0x000001, "Wrong alignment on GA_FrostSkeletonAxeman_Attack_Loop_C_K2_OnEndAbility");
static_assert(sizeof(GA_FrostSkeletonAxeman_Attack_Loop_C_K2_OnEndAbility) == 0x000001, "Wrong size on GA_FrostSkeletonAxeman_Attack_Loop_C_K2_OnEndAbility");
static_assert(offsetof(GA_FrostSkeletonAxeman_Attack_Loop_C_K2_OnEndAbility, bWasCancelled) == 0x000000, "Member 'GA_FrostSkeletonAxeman_Attack_Loop_C_K2_OnEndAbility::bWasCancelled' has a wrong offset!");

// Function GA_FrostSkeletonAxeman_Attack_Loop.GA_FrostSkeletonAxeman_Attack_Loop_C.OnFail_5A0683BB47E6E427DD5FACA7C2DD4CF8
// 0x0001 (0x0001 - 0x0000)
struct GA_FrostSkeletonAxeman_Attack_Loop_C_OnFail_5A0683BB47E6E427DD5FACA7C2DD4CF8 final
{
public:
	EPathFollowingResult                          MovementResult;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_FrostSkeletonAxeman_Attack_Loop_C_OnFail_5A0683BB47E6E427DD5FACA7C2DD4CF8) == 0x000001, "Wrong alignment on GA_FrostSkeletonAxeman_Attack_Loop_C_OnFail_5A0683BB47E6E427DD5FACA7C2DD4CF8");
static_assert(sizeof(GA_FrostSkeletonAxeman_Attack_Loop_C_OnFail_5A0683BB47E6E427DD5FACA7C2DD4CF8) == 0x000001, "Wrong size on GA_FrostSkeletonAxeman_Attack_Loop_C_OnFail_5A0683BB47E6E427DD5FACA7C2DD4CF8");
static_assert(offsetof(GA_FrostSkeletonAxeman_Attack_Loop_C_OnFail_5A0683BB47E6E427DD5FACA7C2DD4CF8, MovementResult) == 0x000000, "Member 'GA_FrostSkeletonAxeman_Attack_Loop_C_OnFail_5A0683BB47E6E427DD5FACA7C2DD4CF8::MovementResult' has a wrong offset!");

// Function GA_FrostSkeletonAxeman_Attack_Loop.GA_FrostSkeletonAxeman_Attack_Loop_C.OnSuccess_5A0683BB47E6E427DD5FACA7C2DD4CF8
// 0x0001 (0x0001 - 0x0000)
struct GA_FrostSkeletonAxeman_Attack_Loop_C_OnSuccess_5A0683BB47E6E427DD5FACA7C2DD4CF8 final
{
public:
	EPathFollowingResult                          MovementResult;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_FrostSkeletonAxeman_Attack_Loop_C_OnSuccess_5A0683BB47E6E427DD5FACA7C2DD4CF8) == 0x000001, "Wrong alignment on GA_FrostSkeletonAxeman_Attack_Loop_C_OnSuccess_5A0683BB47E6E427DD5FACA7C2DD4CF8");
static_assert(sizeof(GA_FrostSkeletonAxeman_Attack_Loop_C_OnSuccess_5A0683BB47E6E427DD5FACA7C2DD4CF8) == 0x000001, "Wrong size on GA_FrostSkeletonAxeman_Attack_Loop_C_OnSuccess_5A0683BB47E6E427DD5FACA7C2DD4CF8");
static_assert(offsetof(GA_FrostSkeletonAxeman_Attack_Loop_C_OnSuccess_5A0683BB47E6E427DD5FACA7C2DD4CF8, MovementResult) == 0x000000, "Member 'GA_FrostSkeletonAxeman_Attack_Loop_C_OnSuccess_5A0683BB47E6E427DD5FACA7C2DD4CF8::MovementResult' has a wrong offset!");

}

