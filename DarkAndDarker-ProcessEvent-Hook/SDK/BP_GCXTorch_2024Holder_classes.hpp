#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_GCXTorch_2024Holder

#include "Basic.hpp"

#include "BP_TorchHolder_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_GCXTorch_2024Holder.BP_GCXTorch_2024Holder_C
// 0x0018 (0x05C0 - 0x05A8)
class ABP_GCXTorch_2024Holder_C final : public ABP_TorchHolder_C
{
public:
	float                                         H;                                                 // 0x05A8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_437B[0x4];                                     // 0x05AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        ColorSpeed;                                        // 0x05B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         S;                                                 // 0x05B8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_GCXTorch_2024Holder_C">();
	}
	static class ABP_GCXTorch_2024Holder_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_GCXTorch_2024Holder_C>();
	}
};
static_assert(alignof(ABP_GCXTorch_2024Holder_C) == 0x000008, "Wrong alignment on ABP_GCXTorch_2024Holder_C");
static_assert(sizeof(ABP_GCXTorch_2024Holder_C) == 0x0005C0, "Wrong size on ABP_GCXTorch_2024Holder_C");
static_assert(offsetof(ABP_GCXTorch_2024Holder_C, H) == 0x0005A8, "Member 'ABP_GCXTorch_2024Holder_C::H' has a wrong offset!");
static_assert(offsetof(ABP_GCXTorch_2024Holder_C, ColorSpeed) == 0x0005B0, "Member 'ABP_GCXTorch_2024Holder_C::ColorSpeed' has a wrong offset!");
static_assert(offsetof(ABP_GCXTorch_2024Holder_C, S) == 0x0005B8, "Member 'ABP_GCXTorch_2024Holder_C::S' has a wrong offset!");

}

