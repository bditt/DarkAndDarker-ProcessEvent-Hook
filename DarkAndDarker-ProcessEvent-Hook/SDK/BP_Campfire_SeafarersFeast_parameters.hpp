#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Campfire_SeafarersFeast

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"


namespace SDK::Params
{

// Function BP_Campfire_SeafarersFeast.BP_Campfire_SeafarersFeast_C.ExecuteUbergraph_BP_Campfire_SeafarersFeast
// 0x0008 (0x0008 - 0x0000)
struct BP_Campfire_SeafarersFeast_C_ExecuteUbergraph_BP_Campfire_SeafarersFeast final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsServer_ReturnValue;                     // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Campfire_SeafarersFeast_C_ExecuteUbergraph_BP_Campfire_SeafarersFeast) == 0x000004, "Wrong alignment on BP_Campfire_SeafarersFeast_C_ExecuteUbergraph_BP_Campfire_SeafarersFeast");
static_assert(sizeof(BP_Campfire_SeafarersFeast_C_ExecuteUbergraph_BP_Campfire_SeafarersFeast) == 0x000008, "Wrong size on BP_Campfire_SeafarersFeast_C_ExecuteUbergraph_BP_Campfire_SeafarersFeast");
static_assert(offsetof(BP_Campfire_SeafarersFeast_C_ExecuteUbergraph_BP_Campfire_SeafarersFeast, EntryPoint) == 0x000000, "Member 'BP_Campfire_SeafarersFeast_C_ExecuteUbergraph_BP_Campfire_SeafarersFeast::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_Campfire_SeafarersFeast_C_ExecuteUbergraph_BP_Campfire_SeafarersFeast, CallFunc_IsServer_ReturnValue) == 0x000004, "Member 'BP_Campfire_SeafarersFeast_C_ExecuteUbergraph_BP_Campfire_SeafarersFeast::CallFunc_IsServer_ReturnValue' has a wrong offset!");

// Function BP_Campfire_SeafarersFeast.BP_Campfire_SeafarersFeast_C.InteractTargetInfoName
// 0x0018 (0x0018 - 0x0000)
struct BP_Campfire_SeafarersFeast_C_InteractTargetInfoName final
{
public:
	class FText                                   Param_Name;                                        // 0x0000(0x0018)(Parm, OutParm)
};
static_assert(alignof(BP_Campfire_SeafarersFeast_C_InteractTargetInfoName) == 0x000008, "Wrong alignment on BP_Campfire_SeafarersFeast_C_InteractTargetInfoName");
static_assert(sizeof(BP_Campfire_SeafarersFeast_C_InteractTargetInfoName) == 0x000018, "Wrong size on BP_Campfire_SeafarersFeast_C_InteractTargetInfoName");
static_assert(offsetof(BP_Campfire_SeafarersFeast_C_InteractTargetInfoName, Param_Name) == 0x000000, "Member 'BP_Campfire_SeafarersFeast_C_InteractTargetInfoName::Param_Name' has a wrong offset!");

// Function BP_Campfire_SeafarersFeast.BP_Campfire_SeafarersFeast_C.InteractTargetInfoRarity
// 0x0008 (0x0008 - 0x0000)
struct BP_Campfire_SeafarersFeast_C_InteractTargetInfoRarity final
{
public:
	struct FGameplayTag                           RarityTag;                                         // 0x0000(0x0008)(Parm, OutParm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Campfire_SeafarersFeast_C_InteractTargetInfoRarity) == 0x000004, "Wrong alignment on BP_Campfire_SeafarersFeast_C_InteractTargetInfoRarity");
static_assert(sizeof(BP_Campfire_SeafarersFeast_C_InteractTargetInfoRarity) == 0x000008, "Wrong size on BP_Campfire_SeafarersFeast_C_InteractTargetInfoRarity");
static_assert(offsetof(BP_Campfire_SeafarersFeast_C_InteractTargetInfoRarity, RarityTag) == 0x000000, "Member 'BP_Campfire_SeafarersFeast_C_InteractTargetInfoRarity::RarityTag' has a wrong offset!");

}

