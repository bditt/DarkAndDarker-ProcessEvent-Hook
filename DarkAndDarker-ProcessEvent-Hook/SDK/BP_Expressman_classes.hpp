#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Expressman

#include "Basic.hpp"

#include "DungeonCrawler_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Expressman.BP_Expressman_C
// 0x0020 (0x0E80 - 0x0E60)
class ABP_Expressman_C final : public ADCNPCExpressman
{
public:
	class UNiagaraComponent*                      FXS_Fire_OilLantern_Util;                          // 0x0E60(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPointLightComponent*                   PointLight;                                        // 0x0E68(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPointLightComponent*                   PointLightFire;                                    // 0x0E70(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Expressman_C">();
	}
	static class ABP_Expressman_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_Expressman_C>();
	}
};
static_assert(alignof(ABP_Expressman_C) == 0x000010, "Wrong alignment on ABP_Expressman_C");
static_assert(sizeof(ABP_Expressman_C) == 0x000E80, "Wrong size on ABP_Expressman_C");
static_assert(offsetof(ABP_Expressman_C, FXS_Fire_OilLantern_Util) == 0x000E60, "Member 'ABP_Expressman_C::FXS_Fire_OilLantern_Util' has a wrong offset!");
static_assert(offsetof(ABP_Expressman_C, PointLight) == 0x000E68, "Member 'ABP_Expressman_C::PointLight' has a wrong offset!");
static_assert(offsetof(ABP_Expressman_C, PointLightFire) == 0x000E70, "Member 'ABP_Expressman_C::PointLightFire' has a wrong offset!");

}

