#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BTT_GetTargetNonPlayable

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "DungeonCrawler_classes.hpp"
#include "AIModule_structs.hpp"
#include "E_NonPlayableTarget_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BTT_GetTargetNonPlayable.BTT_GetTargetNonPlayable_C
// 0x0028 (0x00D0 - 0x00A8)
class UBTT_GetTargetNonPlayable_C final : public UBTT_BlueprintBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x00A8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	TArray<class AActor*>                         Out_Actors;                                        // 0x00B0(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	class UClass*                                 Actor_Class_Filter;                                // 0x00C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x00C8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BTT_GetTargetNonPlayable(int32 EntryPoint);
	void OnTaskFinished(class AAIController* OwnerController, class APawn* ControlledPawn, EBTNodeResult TaskResult);
	void ReceiveExecuteAI(class AAIController* OwnerController, class APawn* ControlledPawn);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BTT_GetTargetNonPlayable_C">();
	}
	static class UBTT_GetTargetNonPlayable_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBTT_GetTargetNonPlayable_C>();
	}
};
static_assert(alignof(UBTT_GetTargetNonPlayable_C) == 0x000008, "Wrong alignment on UBTT_GetTargetNonPlayable_C");
static_assert(sizeof(UBTT_GetTargetNonPlayable_C) == 0x0000D0, "Wrong size on UBTT_GetTargetNonPlayable_C");
static_assert(offsetof(UBTT_GetTargetNonPlayable_C, UberGraphFrame) == 0x0000A8, "Member 'UBTT_GetTargetNonPlayable_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBTT_GetTargetNonPlayable_C, Out_Actors) == 0x0000B0, "Member 'UBTT_GetTargetNonPlayable_C::Out_Actors' has a wrong offset!");
static_assert(offsetof(UBTT_GetTargetNonPlayable_C, Actor_Class_Filter) == 0x0000C0, "Member 'UBTT_GetTargetNonPlayable_C::Actor_Class_Filter' has a wrong offset!");
static_assert(offsetof(UBTT_GetTargetNonPlayable_C, Result) == 0x0000C8, "Member 'UBTT_GetTargetNonPlayable_C::Result' has a wrong offset!");

}

