#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ABP_ExpressmanOtto

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "AnimGraphRuntime_structs.hpp"
#include "E_Otto_StanceType_structs.hpp"
#include "DungeonCrawler_classes.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass ABP_ExpressmanOtto.ABP_ExpressmanOtto_C
// 0x07A0 (0x0CD0 - 0x0530)
class UABP_ExpressmanOtto_C final : public UDCMonsterAnimInstanceBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0530(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_PropertyAccess;             // 0x0538(0x0008)()
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_Base;                       // 0x0540(0x0008)()
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x0548(0x0020)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_2;                  // 0x0568(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_1;                  // 0x0590(0x0028)()
	struct FAnimNode_RandomPlayer                 AnimGraphNode_RandomPlayer;                        // 0x05B8(0x0078)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_4;                       // 0x0630(0x0020)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult;                    // 0x0650(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_1;                    // 0x0678(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_3;                       // 0x06C0(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x06E0(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_2;                       // 0x0728(0x0020)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine_2;                      // 0x0748(0x00C8)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_1;                       // 0x0810(0x0020)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine_1;                      // 0x0830(0x00C8)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult;                         // 0x08F8(0x0020)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine;                        // 0x0918(0x00C8)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot;                                // 0x09E0(0x0048)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_1;                        // 0x0A28(0x0128)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace;               // 0x0B50(0x0020)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace;               // 0x0B70(0x0020)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone;                          // 0x0B90(0x0128)()
	E_Otto_StanceType                             Stance;                                            // 0x0CB8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          SleepStance;                                       // 0x0CB9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          StandStance;                                       // 0x0CBA(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          SitStance;                                         // 0x0CBB(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          LieStance;                                         // 0x0CBC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IdleTranistion;                                    // 0x0CBD(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_598E[0x2];                                     // 0x0CBE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        HeadTransformAlphaValue;                           // 0x0CC0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void Added_3A76CD49470AE79249B5AB80A626BD47();
	void Added_C0507A6545537D90A88D42AAF986EE13();
	void Added_DFADACBE42AF861541B357A3996D4960();
	void Added_FB3753E04B54BF16DEA049858E01C2EB();
	void AnimGraph(struct FPoseLink* Param_AnimGraph);
	void AnimNotify_BeginIdleDelay();
	void AnimNotify_EndIdleAnimation();
	void BlueprintInitializeAnimation();
	void BlueprintThreadSafeUpdateAnimation(float DeltaTime);
	void ExecuteUbergraph_ABP_ExpressmanOtto(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ABP_ExpressmanOtto_C">();
	}
	static class UABP_ExpressmanOtto_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UABP_ExpressmanOtto_C>();
	}
};
static_assert(alignof(UABP_ExpressmanOtto_C) == 0x000010, "Wrong alignment on UABP_ExpressmanOtto_C");
static_assert(sizeof(UABP_ExpressmanOtto_C) == 0x000CD0, "Wrong size on UABP_ExpressmanOtto_C");
static_assert(offsetof(UABP_ExpressmanOtto_C, UberGraphFrame) == 0x000530, "Member 'UABP_ExpressmanOtto_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UABP_ExpressmanOtto_C, AnimBlueprintExtension_PropertyAccess) == 0x000538, "Member 'UABP_ExpressmanOtto_C::AnimBlueprintExtension_PropertyAccess' has a wrong offset!");
static_assert(offsetof(UABP_ExpressmanOtto_C, AnimBlueprintExtension_Base) == 0x000540, "Member 'UABP_ExpressmanOtto_C::AnimBlueprintExtension_Base' has a wrong offset!");
static_assert(offsetof(UABP_ExpressmanOtto_C, AnimGraphNode_Root) == 0x000548, "Member 'UABP_ExpressmanOtto_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UABP_ExpressmanOtto_C, AnimGraphNode_TransitionResult_2) == 0x000568, "Member 'UABP_ExpressmanOtto_C::AnimGraphNode_TransitionResult_2' has a wrong offset!");
static_assert(offsetof(UABP_ExpressmanOtto_C, AnimGraphNode_TransitionResult_1) == 0x000590, "Member 'UABP_ExpressmanOtto_C::AnimGraphNode_TransitionResult_1' has a wrong offset!");
static_assert(offsetof(UABP_ExpressmanOtto_C, AnimGraphNode_RandomPlayer) == 0x0005B8, "Member 'UABP_ExpressmanOtto_C::AnimGraphNode_RandomPlayer' has a wrong offset!");
static_assert(offsetof(UABP_ExpressmanOtto_C, AnimGraphNode_StateResult_4) == 0x000630, "Member 'UABP_ExpressmanOtto_C::AnimGraphNode_StateResult_4' has a wrong offset!");
static_assert(offsetof(UABP_ExpressmanOtto_C, AnimGraphNode_TransitionResult) == 0x000650, "Member 'UABP_ExpressmanOtto_C::AnimGraphNode_TransitionResult' has a wrong offset!");
static_assert(offsetof(UABP_ExpressmanOtto_C, AnimGraphNode_SequencePlayer_1) == 0x000678, "Member 'UABP_ExpressmanOtto_C::AnimGraphNode_SequencePlayer_1' has a wrong offset!");
static_assert(offsetof(UABP_ExpressmanOtto_C, AnimGraphNode_StateResult_3) == 0x0006C0, "Member 'UABP_ExpressmanOtto_C::AnimGraphNode_StateResult_3' has a wrong offset!");
static_assert(offsetof(UABP_ExpressmanOtto_C, AnimGraphNode_SequencePlayer) == 0x0006E0, "Member 'UABP_ExpressmanOtto_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(UABP_ExpressmanOtto_C, AnimGraphNode_StateResult_2) == 0x000728, "Member 'UABP_ExpressmanOtto_C::AnimGraphNode_StateResult_2' has a wrong offset!");
static_assert(offsetof(UABP_ExpressmanOtto_C, AnimGraphNode_StateMachine_2) == 0x000748, "Member 'UABP_ExpressmanOtto_C::AnimGraphNode_StateMachine_2' has a wrong offset!");
static_assert(offsetof(UABP_ExpressmanOtto_C, AnimGraphNode_StateResult_1) == 0x000810, "Member 'UABP_ExpressmanOtto_C::AnimGraphNode_StateResult_1' has a wrong offset!");
static_assert(offsetof(UABP_ExpressmanOtto_C, AnimGraphNode_StateMachine_1) == 0x000830, "Member 'UABP_ExpressmanOtto_C::AnimGraphNode_StateMachine_1' has a wrong offset!");
static_assert(offsetof(UABP_ExpressmanOtto_C, AnimGraphNode_StateResult) == 0x0008F8, "Member 'UABP_ExpressmanOtto_C::AnimGraphNode_StateResult' has a wrong offset!");
static_assert(offsetof(UABP_ExpressmanOtto_C, AnimGraphNode_StateMachine) == 0x000918, "Member 'UABP_ExpressmanOtto_C::AnimGraphNode_StateMachine' has a wrong offset!");
static_assert(offsetof(UABP_ExpressmanOtto_C, AnimGraphNode_Slot) == 0x0009E0, "Member 'UABP_ExpressmanOtto_C::AnimGraphNode_Slot' has a wrong offset!");
static_assert(offsetof(UABP_ExpressmanOtto_C, AnimGraphNode_ModifyBone_1) == 0x000A28, "Member 'UABP_ExpressmanOtto_C::AnimGraphNode_ModifyBone_1' has a wrong offset!");
static_assert(offsetof(UABP_ExpressmanOtto_C, AnimGraphNode_LocalToComponentSpace) == 0x000B50, "Member 'UABP_ExpressmanOtto_C::AnimGraphNode_LocalToComponentSpace' has a wrong offset!");
static_assert(offsetof(UABP_ExpressmanOtto_C, AnimGraphNode_ComponentToLocalSpace) == 0x000B70, "Member 'UABP_ExpressmanOtto_C::AnimGraphNode_ComponentToLocalSpace' has a wrong offset!");
static_assert(offsetof(UABP_ExpressmanOtto_C, AnimGraphNode_ModifyBone) == 0x000B90, "Member 'UABP_ExpressmanOtto_C::AnimGraphNode_ModifyBone' has a wrong offset!");
static_assert(offsetof(UABP_ExpressmanOtto_C, Stance) == 0x000CB8, "Member 'UABP_ExpressmanOtto_C::Stance' has a wrong offset!");
static_assert(offsetof(UABP_ExpressmanOtto_C, SleepStance) == 0x000CB9, "Member 'UABP_ExpressmanOtto_C::SleepStance' has a wrong offset!");
static_assert(offsetof(UABP_ExpressmanOtto_C, StandStance) == 0x000CBA, "Member 'UABP_ExpressmanOtto_C::StandStance' has a wrong offset!");
static_assert(offsetof(UABP_ExpressmanOtto_C, SitStance) == 0x000CBB, "Member 'UABP_ExpressmanOtto_C::SitStance' has a wrong offset!");
static_assert(offsetof(UABP_ExpressmanOtto_C, LieStance) == 0x000CBC, "Member 'UABP_ExpressmanOtto_C::LieStance' has a wrong offset!");
static_assert(offsetof(UABP_ExpressmanOtto_C, IdleTranistion) == 0x000CBD, "Member 'UABP_ExpressmanOtto_C::IdleTranistion' has a wrong offset!");
static_assert(offsetof(UABP_ExpressmanOtto_C, HeadTransformAlphaValue) == 0x000CC0, "Member 'UABP_ExpressmanOtto_C::HeadTransformAlphaValue' has a wrong offset!");

}

