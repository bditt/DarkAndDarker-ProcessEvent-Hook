#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_FrozenGhost

#include "Basic.hpp"

#include "BP_FrozenGhost_classes.hpp"
#include "BP_FrozenGhost_parameters.hpp"


namespace SDK
{

// Function BP_FrozenGhost.BP_FrozenGhost_C.ChangeFXState
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    New_State                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UNiagaraComponent*                Niagara_System_Component                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void ABP_FrozenGhost_C::ChangeFXState(bool New_State, class UNiagaraComponent* Niagara_System_Component)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FrozenGhost_C", "ChangeFXState");

	Params::BP_FrozenGhost_C_ChangeFXState Parms{};

	Parms.New_State = New_State;
	Parms.Niagara_System_Component = Niagara_System_Component;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_FrozenGhost.BP_FrozenGhost_C.ChangeFXStateOnTagUpdate
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UNiagaraComponent*                Niagara_Component                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// struct FGameplayTag                     In_Gameplay_Tag                                        (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// int32                                   In_Count                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_FrozenGhost_C::ChangeFXStateOnTagUpdate(class UNiagaraComponent* Niagara_Component, const struct FGameplayTag& In_Gameplay_Tag, int32 In_Count)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FrozenGhost_C", "ChangeFXStateOnTagUpdate");

	Params::BP_FrozenGhost_C_ChangeFXStateOnTagUpdate Parms{};

	Parms.Niagara_Component = Niagara_Component;
	Parms.In_Gameplay_Tag = std::move(In_Gameplay_Tag);
	Parms.In_Count = In_Count;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_FrozenGhost.BP_FrozenGhost_C.EventReceived_E0BD796B4E82B57E77C3C9A43F09021B
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGameplayEventData               Payload                                                (BlueprintVisible, BlueprintReadOnly, Parm)

void ABP_FrozenGhost_C::EventReceived_E0BD796B4E82B57E77C3C9A43F09021B(const struct FGameplayEventData& Payload)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FrozenGhost_C", "EventReceived_E0BD796B4E82B57E77C3C9A43F09021B");

	Params::BP_FrozenGhost_C_EventReceived_E0BD796B4E82B57E77C3C9A43F09021B Parms{};

	Parms.Payload = std::move(Payload);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_FrozenGhost.BP_FrozenGhost_C.ExecuteUbergraph_BP_FrozenGhost
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_FrozenGhost_C::ExecuteUbergraph_BP_FrozenGhost(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FrozenGhost_C", "ExecuteUbergraph_BP_FrozenGhost");

	Params::BP_FrozenGhost_C_ExecuteUbergraph_BP_FrozenGhost Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_FrozenGhost.BP_FrozenGhost_C.GameplayTagUpdated
// (Event, Protected, BlueprintEvent)
// Parameters:
// struct FGameplayTag                     InGameplayTag                                          (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// int32                                   InCount                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_FrozenGhost_C::GameplayTagUpdated(const struct FGameplayTag& InGameplayTag, int32 InCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FrozenGhost_C", "GameplayTagUpdated");

	Params::BP_FrozenGhost_C_GameplayTagUpdated Parms{};

	Parms.InGameplayTag = std::move(InGameplayTag);
	Parms.InCount = InCount;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_FrozenGhost.BP_FrozenGhost_C.OnFMsgGASAttributeNotifyBlueprint
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// struct FMsgGASAttributeNotify           InMsg                                                  (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)

void ABP_FrozenGhost_C::OnFMsgGASAttributeNotifyBlueprint(const struct FMsgGASAttributeNotify& InMsg)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FrozenGhost_C", "OnFMsgGASAttributeNotifyBlueprint");

	Params::BP_FrozenGhost_C_OnFMsgGASAttributeNotifyBlueprint Parms{};

	Parms.InMsg = std::move(InMsg);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_FrozenGhost.BP_FrozenGhost_C.Overlap in
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// int32                                   OtherBodyIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bFromSweep                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FHitResult                       SweepResult                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void ABP_FrozenGhost_C::Overlap_in(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FrozenGhost_C", "Overlap in");

	Params::BP_FrozenGhost_C_Overlap_in Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;
	Parms.bFromSweep = bFromSweep;
	Parms.SweepResult = std::move(SweepResult);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_FrozenGhost.BP_FrozenGhost_C.Overlap Out
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// int32                                   OtherBodyIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_FrozenGhost_C::Overlap_Out(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FrozenGhost_C", "Overlap Out");

	Params::BP_FrozenGhost_C_Overlap_Out Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_FrozenGhost.BP_FrozenGhost_C.Phase Count  Reset
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_FrozenGhost_C::Phase_Count__Reset()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FrozenGhost_C", "Phase Count  Reset");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_FrozenGhost.BP_FrozenGhost_C.Phase Count Function
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_FrozenGhost_C::Phase_Count_Function()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FrozenGhost_C", "Phase Count Function");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_FrozenGhost.BP_FrozenGhost_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_FrozenGhost_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FrozenGhost_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_FrozenGhost.BP_FrozenGhost_C.UserConstructionScript
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ABP_FrozenGhost_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FrozenGhost_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}

}

