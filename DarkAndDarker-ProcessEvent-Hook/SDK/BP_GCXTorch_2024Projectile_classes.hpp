#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_GCXTorch_2024Projectile

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "BP_TorchProjectileBase_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_GCXTorch_2024Projectile.BP_GCXTorch_2024Projectile_C
// 0x0020 (0x07F0 - 0x07D0)
class ABP_GCXTorch_2024Projectile_C final : public ABP_TorchProjectileBase_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_GCXTorch_2024Projectile_C;       // 0x07C8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UStaticMeshComponent*                   TwitchTorchDecalDummy;                             // 0x07D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         H;                                                 // 0x07D8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         S;                                                 // 0x07DC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        ColorSpeed;                                        // 0x07E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_GCXTorch_2024Projectile(int32 EntryPoint);
	void ReceiveTick(float DeltaSeconds);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_GCXTorch_2024Projectile_C">();
	}
	static class ABP_GCXTorch_2024Projectile_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_GCXTorch_2024Projectile_C>();
	}
};
static_assert(alignof(ABP_GCXTorch_2024Projectile_C) == 0x000010, "Wrong alignment on ABP_GCXTorch_2024Projectile_C");
static_assert(sizeof(ABP_GCXTorch_2024Projectile_C) == 0x0007F0, "Wrong size on ABP_GCXTorch_2024Projectile_C");
static_assert(offsetof(ABP_GCXTorch_2024Projectile_C, UberGraphFrame_BP_GCXTorch_2024Projectile_C) == 0x0007C8, "Member 'ABP_GCXTorch_2024Projectile_C::UberGraphFrame_BP_GCXTorch_2024Projectile_C' has a wrong offset!");
static_assert(offsetof(ABP_GCXTorch_2024Projectile_C, TwitchTorchDecalDummy) == 0x0007D0, "Member 'ABP_GCXTorch_2024Projectile_C::TwitchTorchDecalDummy' has a wrong offset!");
static_assert(offsetof(ABP_GCXTorch_2024Projectile_C, H) == 0x0007D8, "Member 'ABP_GCXTorch_2024Projectile_C::H' has a wrong offset!");
static_assert(offsetof(ABP_GCXTorch_2024Projectile_C, S) == 0x0007DC, "Member 'ABP_GCXTorch_2024Projectile_C::S' has a wrong offset!");
static_assert(offsetof(ABP_GCXTorch_2024Projectile_C, ColorSpeed) == 0x0007E0, "Member 'ABP_GCXTorch_2024Projectile_C::ColorSpeed' has a wrong offset!");

}

