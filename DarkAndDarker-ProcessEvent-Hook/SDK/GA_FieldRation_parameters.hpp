#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_FieldRation

#include "Basic.hpp"

#include "GameplayAbilities_structs.hpp"
#include "GameplayTags_structs.hpp"


namespace SDK::Params
{

// Function GA_FieldRation.GA_FieldRation_C.AbilityActivated
// 0x00B0 (0x00B0 - 0x0000)
struct GA_FieldRation_C_AbilityActivated final
{
public:
	struct FGameplayEventData                     TriggerEventData;                                  // 0x0000(0x00B0)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(GA_FieldRation_C_AbilityActivated) == 0x000008, "Wrong alignment on GA_FieldRation_C_AbilityActivated");
static_assert(sizeof(GA_FieldRation_C_AbilityActivated) == 0x0000B0, "Wrong size on GA_FieldRation_C_AbilityActivated");
static_assert(offsetof(GA_FieldRation_C_AbilityActivated, TriggerEventData) == 0x000000, "Member 'GA_FieldRation_C_AbilityActivated::TriggerEventData' has a wrong offset!");

// Function GA_FieldRation.GA_FieldRation_C.ExecuteUbergraph_GA_FieldRation
// 0x01B0 (0x01B0 - 0x0000)
struct GA_FieldRation_C_ExecuteUbergraph_GA_FieldRation final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_Event_SkillTag;                             // 0x0004(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_Event_CooldownTag;                          // 0x000C(0x0008)(NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5712[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetAvatarActorFromActorInfo_ReturnValue;  // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEventData                     K2Node_Event_TriggerEventData;                     // 0x0020(0x00B0)(ConstParm)
	class USceneComponent*                        CallFunc_K2_GetRootComponent_ReturnValue;          // 0x00D0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 CallFunc_MakeGameplayCueParameters_ReturnValue;    // 0x00D8(0x00D8)(ContainsInstancedReference)
};
static_assert(alignof(GA_FieldRation_C_ExecuteUbergraph_GA_FieldRation) == 0x000008, "Wrong alignment on GA_FieldRation_C_ExecuteUbergraph_GA_FieldRation");
static_assert(sizeof(GA_FieldRation_C_ExecuteUbergraph_GA_FieldRation) == 0x0001B0, "Wrong size on GA_FieldRation_C_ExecuteUbergraph_GA_FieldRation");
static_assert(offsetof(GA_FieldRation_C_ExecuteUbergraph_GA_FieldRation, EntryPoint) == 0x000000, "Member 'GA_FieldRation_C_ExecuteUbergraph_GA_FieldRation::EntryPoint' has a wrong offset!");
static_assert(offsetof(GA_FieldRation_C_ExecuteUbergraph_GA_FieldRation, K2Node_Event_SkillTag) == 0x000004, "Member 'GA_FieldRation_C_ExecuteUbergraph_GA_FieldRation::K2Node_Event_SkillTag' has a wrong offset!");
static_assert(offsetof(GA_FieldRation_C_ExecuteUbergraph_GA_FieldRation, K2Node_Event_CooldownTag) == 0x00000C, "Member 'GA_FieldRation_C_ExecuteUbergraph_GA_FieldRation::K2Node_Event_CooldownTag' has a wrong offset!");
static_assert(offsetof(GA_FieldRation_C_ExecuteUbergraph_GA_FieldRation, CallFunc_GetAvatarActorFromActorInfo_ReturnValue) == 0x000018, "Member 'GA_FieldRation_C_ExecuteUbergraph_GA_FieldRation::CallFunc_GetAvatarActorFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_FieldRation_C_ExecuteUbergraph_GA_FieldRation, K2Node_Event_TriggerEventData) == 0x000020, "Member 'GA_FieldRation_C_ExecuteUbergraph_GA_FieldRation::K2Node_Event_TriggerEventData' has a wrong offset!");
static_assert(offsetof(GA_FieldRation_C_ExecuteUbergraph_GA_FieldRation, CallFunc_K2_GetRootComponent_ReturnValue) == 0x0000D0, "Member 'GA_FieldRation_C_ExecuteUbergraph_GA_FieldRation::CallFunc_K2_GetRootComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_FieldRation_C_ExecuteUbergraph_GA_FieldRation, CallFunc_MakeGameplayCueParameters_ReturnValue) == 0x0000D8, "Member 'GA_FieldRation_C_ExecuteUbergraph_GA_FieldRation::CallFunc_MakeGameplayCueParameters_ReturnValue' has a wrong offset!");

// Function GA_FieldRation.GA_FieldRation_C.ServerOnSkillActivate
// 0x0010 (0x0010 - 0x0000)
struct GA_FieldRation_C_ServerOnSkillActivate final
{
public:
	struct FGameplayTag                           SkillTag;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           CooldownTag;                                       // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_FieldRation_C_ServerOnSkillActivate) == 0x000004, "Wrong alignment on GA_FieldRation_C_ServerOnSkillActivate");
static_assert(sizeof(GA_FieldRation_C_ServerOnSkillActivate) == 0x000010, "Wrong size on GA_FieldRation_C_ServerOnSkillActivate");
static_assert(offsetof(GA_FieldRation_C_ServerOnSkillActivate, SkillTag) == 0x000000, "Member 'GA_FieldRation_C_ServerOnSkillActivate::SkillTag' has a wrong offset!");
static_assert(offsetof(GA_FieldRation_C_ServerOnSkillActivate, CooldownTag) == 0x000008, "Member 'GA_FieldRation_C_ServerOnSkillActivate::CooldownTag' has a wrong offset!");

}

