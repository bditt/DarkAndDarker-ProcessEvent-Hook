#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ABP_UndeadKnight

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "AnimGraphRuntime_structs.hpp"
#include "DungeonCrawler_classes.hpp"
#include "ABP_UndeadKnight_structs.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass ABP_UndeadKnight.ABP_UndeadKnight_C
// 0x0CE0 (0x1210 - 0x0530)
class UABP_UndeadKnight_C final : public UDCMonsterAnimInstanceBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0530(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct ABP_UndeadKnight::FAnimBlueprintGeneratedMutableData __AnimBlueprintMutables;                           // 0x0538(0x000C)(HasGetValueTypeHash)
	uint8                                         Pad_5211[0x4];                                     // 0x0544(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_PropertyAccess;             // 0x0548(0x0008)()
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_Base;                       // 0x0550(0x0008)()
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x0558(0x0020)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_6;                  // 0x0578(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_5;                  // 0x05A0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_4;                  // 0x05C8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_3;                  // 0x05F0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_2;                  // 0x0618(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_6;                     // 0x0640(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_4;                    // 0x0668(0x0048)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_5;                     // 0x06B0(0x0028)()
	struct FAnimNode_ApplyAdditive                AnimGraphNode_ApplyAdditive_3;                     // 0x06D8(0x00C8)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend_1;                  // 0x07A0(0x00F0)()
	struct FAnimNode_ApplyAdditive                AnimGraphNode_ApplyAdditive_2;                     // 0x0890(0x00C8)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_4;                     // 0x0958(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_3;                    // 0x0980(0x0048)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_1;                   // 0x09C8(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_4;                       // 0x0A10(0x0020)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_3;                     // 0x0A30(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_2;                    // 0x0A58(0x0048)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_2;                     // 0x0AA0(0x0028)()
	struct FAnimNode_ApplyAdditive                AnimGraphNode_ApplyAdditive_1;                     // 0x0AC8(0x00C8)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend;                    // 0x0B90(0x00F0)()
	struct FAnimNode_ApplyAdditive                AnimGraphNode_ApplyAdditive;                       // 0x0C80(0x00C8)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_1;                     // 0x0D48(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_1;                    // 0x0D70(0x0048)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool;                     // 0x0DB8(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_3;                       // 0x0E00(0x0020)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose;                       // 0x0E20(0x0028)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_2;                       // 0x0E48(0x0020)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine_1;                      // 0x0E68(0x00C8)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_1;                  // 0x0F30(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult;                    // 0x0F58(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x0F80(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_1;                       // 0x0FC8(0x0020)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer;                    // 0x0FE8(0x0070)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult;                         // 0x1058(0x0020)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine;                        // 0x1078(0x00C8)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose;                      // 0x1140(0x0080)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot;                                // 0x11C0(0x0048)()
	float                                         Direction;                                         // 0x1208(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          GuardMode;                                         // 0x120C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void AnimGraph(struct FPoseLink* Param_AnimGraph);
	void BlueprintInitializeAnimation();
	void ExecuteUbergraph_ABP_UndeadKnight(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ABP_UndeadKnight_C">();
	}
	static class UABP_UndeadKnight_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UABP_UndeadKnight_C>();
	}
};
static_assert(alignof(UABP_UndeadKnight_C) == 0x000010, "Wrong alignment on UABP_UndeadKnight_C");
static_assert(sizeof(UABP_UndeadKnight_C) == 0x001210, "Wrong size on UABP_UndeadKnight_C");
static_assert(offsetof(UABP_UndeadKnight_C, UberGraphFrame) == 0x000530, "Member 'UABP_UndeadKnight_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UABP_UndeadKnight_C, __AnimBlueprintMutables) == 0x000538, "Member 'UABP_UndeadKnight_C::__AnimBlueprintMutables' has a wrong offset!");
static_assert(offsetof(UABP_UndeadKnight_C, AnimBlueprintExtension_PropertyAccess) == 0x000548, "Member 'UABP_UndeadKnight_C::AnimBlueprintExtension_PropertyAccess' has a wrong offset!");
static_assert(offsetof(UABP_UndeadKnight_C, AnimBlueprintExtension_Base) == 0x000550, "Member 'UABP_UndeadKnight_C::AnimBlueprintExtension_Base' has a wrong offset!");
static_assert(offsetof(UABP_UndeadKnight_C, AnimGraphNode_Root) == 0x000558, "Member 'UABP_UndeadKnight_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UABP_UndeadKnight_C, AnimGraphNode_TransitionResult_6) == 0x000578, "Member 'UABP_UndeadKnight_C::AnimGraphNode_TransitionResult_6' has a wrong offset!");
static_assert(offsetof(UABP_UndeadKnight_C, AnimGraphNode_TransitionResult_5) == 0x0005A0, "Member 'UABP_UndeadKnight_C::AnimGraphNode_TransitionResult_5' has a wrong offset!");
static_assert(offsetof(UABP_UndeadKnight_C, AnimGraphNode_TransitionResult_4) == 0x0005C8, "Member 'UABP_UndeadKnight_C::AnimGraphNode_TransitionResult_4' has a wrong offset!");
static_assert(offsetof(UABP_UndeadKnight_C, AnimGraphNode_TransitionResult_3) == 0x0005F0, "Member 'UABP_UndeadKnight_C::AnimGraphNode_TransitionResult_3' has a wrong offset!");
static_assert(offsetof(UABP_UndeadKnight_C, AnimGraphNode_TransitionResult_2) == 0x000618, "Member 'UABP_UndeadKnight_C::AnimGraphNode_TransitionResult_2' has a wrong offset!");
static_assert(offsetof(UABP_UndeadKnight_C, AnimGraphNode_UseCachedPose_6) == 0x000640, "Member 'UABP_UndeadKnight_C::AnimGraphNode_UseCachedPose_6' has a wrong offset!");
static_assert(offsetof(UABP_UndeadKnight_C, AnimGraphNode_SequencePlayer_4) == 0x000668, "Member 'UABP_UndeadKnight_C::AnimGraphNode_SequencePlayer_4' has a wrong offset!");
static_assert(offsetof(UABP_UndeadKnight_C, AnimGraphNode_UseCachedPose_5) == 0x0006B0, "Member 'UABP_UndeadKnight_C::AnimGraphNode_UseCachedPose_5' has a wrong offset!");
static_assert(offsetof(UABP_UndeadKnight_C, AnimGraphNode_ApplyAdditive_3) == 0x0006D8, "Member 'UABP_UndeadKnight_C::AnimGraphNode_ApplyAdditive_3' has a wrong offset!");
static_assert(offsetof(UABP_UndeadKnight_C, AnimGraphNode_LayeredBoneBlend_1) == 0x0007A0, "Member 'UABP_UndeadKnight_C::AnimGraphNode_LayeredBoneBlend_1' has a wrong offset!");
static_assert(offsetof(UABP_UndeadKnight_C, AnimGraphNode_ApplyAdditive_2) == 0x000890, "Member 'UABP_UndeadKnight_C::AnimGraphNode_ApplyAdditive_2' has a wrong offset!");
static_assert(offsetof(UABP_UndeadKnight_C, AnimGraphNode_UseCachedPose_4) == 0x000958, "Member 'UABP_UndeadKnight_C::AnimGraphNode_UseCachedPose_4' has a wrong offset!");
static_assert(offsetof(UABP_UndeadKnight_C, AnimGraphNode_SequencePlayer_3) == 0x000980, "Member 'UABP_UndeadKnight_C::AnimGraphNode_SequencePlayer_3' has a wrong offset!");
static_assert(offsetof(UABP_UndeadKnight_C, AnimGraphNode_BlendListByBool_1) == 0x0009C8, "Member 'UABP_UndeadKnight_C::AnimGraphNode_BlendListByBool_1' has a wrong offset!");
static_assert(offsetof(UABP_UndeadKnight_C, AnimGraphNode_StateResult_4) == 0x000A10, "Member 'UABP_UndeadKnight_C::AnimGraphNode_StateResult_4' has a wrong offset!");
static_assert(offsetof(UABP_UndeadKnight_C, AnimGraphNode_UseCachedPose_3) == 0x000A30, "Member 'UABP_UndeadKnight_C::AnimGraphNode_UseCachedPose_3' has a wrong offset!");
static_assert(offsetof(UABP_UndeadKnight_C, AnimGraphNode_SequencePlayer_2) == 0x000A58, "Member 'UABP_UndeadKnight_C::AnimGraphNode_SequencePlayer_2' has a wrong offset!");
static_assert(offsetof(UABP_UndeadKnight_C, AnimGraphNode_UseCachedPose_2) == 0x000AA0, "Member 'UABP_UndeadKnight_C::AnimGraphNode_UseCachedPose_2' has a wrong offset!");
static_assert(offsetof(UABP_UndeadKnight_C, AnimGraphNode_ApplyAdditive_1) == 0x000AC8, "Member 'UABP_UndeadKnight_C::AnimGraphNode_ApplyAdditive_1' has a wrong offset!");
static_assert(offsetof(UABP_UndeadKnight_C, AnimGraphNode_LayeredBoneBlend) == 0x000B90, "Member 'UABP_UndeadKnight_C::AnimGraphNode_LayeredBoneBlend' has a wrong offset!");
static_assert(offsetof(UABP_UndeadKnight_C, AnimGraphNode_ApplyAdditive) == 0x000C80, "Member 'UABP_UndeadKnight_C::AnimGraphNode_ApplyAdditive' has a wrong offset!");
static_assert(offsetof(UABP_UndeadKnight_C, AnimGraphNode_UseCachedPose_1) == 0x000D48, "Member 'UABP_UndeadKnight_C::AnimGraphNode_UseCachedPose_1' has a wrong offset!");
static_assert(offsetof(UABP_UndeadKnight_C, AnimGraphNode_SequencePlayer_1) == 0x000D70, "Member 'UABP_UndeadKnight_C::AnimGraphNode_SequencePlayer_1' has a wrong offset!");
static_assert(offsetof(UABP_UndeadKnight_C, AnimGraphNode_BlendListByBool) == 0x000DB8, "Member 'UABP_UndeadKnight_C::AnimGraphNode_BlendListByBool' has a wrong offset!");
static_assert(offsetof(UABP_UndeadKnight_C, AnimGraphNode_StateResult_3) == 0x000E00, "Member 'UABP_UndeadKnight_C::AnimGraphNode_StateResult_3' has a wrong offset!");
static_assert(offsetof(UABP_UndeadKnight_C, AnimGraphNode_UseCachedPose) == 0x000E20, "Member 'UABP_UndeadKnight_C::AnimGraphNode_UseCachedPose' has a wrong offset!");
static_assert(offsetof(UABP_UndeadKnight_C, AnimGraphNode_StateResult_2) == 0x000E48, "Member 'UABP_UndeadKnight_C::AnimGraphNode_StateResult_2' has a wrong offset!");
static_assert(offsetof(UABP_UndeadKnight_C, AnimGraphNode_StateMachine_1) == 0x000E68, "Member 'UABP_UndeadKnight_C::AnimGraphNode_StateMachine_1' has a wrong offset!");
static_assert(offsetof(UABP_UndeadKnight_C, AnimGraphNode_TransitionResult_1) == 0x000F30, "Member 'UABP_UndeadKnight_C::AnimGraphNode_TransitionResult_1' has a wrong offset!");
static_assert(offsetof(UABP_UndeadKnight_C, AnimGraphNode_TransitionResult) == 0x000F58, "Member 'UABP_UndeadKnight_C::AnimGraphNode_TransitionResult' has a wrong offset!");
static_assert(offsetof(UABP_UndeadKnight_C, AnimGraphNode_SequencePlayer) == 0x000F80, "Member 'UABP_UndeadKnight_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(UABP_UndeadKnight_C, AnimGraphNode_StateResult_1) == 0x000FC8, "Member 'UABP_UndeadKnight_C::AnimGraphNode_StateResult_1' has a wrong offset!");
static_assert(offsetof(UABP_UndeadKnight_C, AnimGraphNode_BlendSpacePlayer) == 0x000FE8, "Member 'UABP_UndeadKnight_C::AnimGraphNode_BlendSpacePlayer' has a wrong offset!");
static_assert(offsetof(UABP_UndeadKnight_C, AnimGraphNode_StateResult) == 0x001058, "Member 'UABP_UndeadKnight_C::AnimGraphNode_StateResult' has a wrong offset!");
static_assert(offsetof(UABP_UndeadKnight_C, AnimGraphNode_StateMachine) == 0x001078, "Member 'UABP_UndeadKnight_C::AnimGraphNode_StateMachine' has a wrong offset!");
static_assert(offsetof(UABP_UndeadKnight_C, AnimGraphNode_SaveCachedPose) == 0x001140, "Member 'UABP_UndeadKnight_C::AnimGraphNode_SaveCachedPose' has a wrong offset!");
static_assert(offsetof(UABP_UndeadKnight_C, AnimGraphNode_Slot) == 0x0011C0, "Member 'UABP_UndeadKnight_C::AnimGraphNode_Slot' has a wrong offset!");
static_assert(offsetof(UABP_UndeadKnight_C, Direction) == 0x001208, "Member 'UABP_UndeadKnight_C::Direction' has a wrong offset!");
static_assert(offsetof(UABP_UndeadKnight_C, GuardMode) == 0x00120C, "Member 'UABP_UndeadKnight_C::GuardMode' has a wrong offset!");

}

