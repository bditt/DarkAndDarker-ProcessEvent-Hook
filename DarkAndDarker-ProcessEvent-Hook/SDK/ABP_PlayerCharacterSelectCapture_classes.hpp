#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ABP_PlayerCharacterSelectCapture

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "ABP_PlayerCharacterSelectCapture_structs.hpp"
#include "AnimGraphRuntime_structs.hpp"
#include "DungeonCrawler_structs.hpp"
#include "DungeonCrawler_classes.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass ABP_PlayerCharacterSelectCapture.ABP_PlayerCharacterSelectCapture_C
// 0x16C0 (0x1D20 - 0x0660)
class UABP_PlayerCharacterSelectCapture_C final : public UDCPlayerCharacterAnimInstanceBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0660(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct ABP_PlayerCharacterSelectCapture::FAnimBlueprintGeneratedMutableData __AnimBlueprintMutables;                           // 0x0668(0x000A)(HasGetValueTypeHash)
	uint8                                         Pad_3D69[0x6];                                     // 0x0672(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_PropertyAccess;             // 0x0678(0x0008)()
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_Base;                       // 0x0680(0x0008)()
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x0688(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_5;                    // 0x06A8(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_7;                       // 0x06F0(0x0020)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine_4;                      // 0x0710(0x00C8)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_4;                    // 0x07D8(0x0080)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_6;                     // 0x0858(0x0028)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend_1;                  // 0x0880(0x00F0)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_8;                   // 0x0970(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_4;                    // 0x09B8(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_6;                       // 0x0A00(0x0020)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine_3;                      // 0x0A20(0x00C8)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_3;                    // 0x0AE8(0x0080)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_1;                        // 0x0B68(0x0128)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_5;                     // 0x0C90(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_4;                     // 0x0CB8(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_3;                     // 0x0CE0(0x0028)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_2;                    // 0x0D08(0x0080)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_3;                  // 0x0D88(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_2;                  // 0x0DB0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_1;                  // 0x0DD8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult;                    // 0x0E00(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_3;                    // 0x0E28(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_5;                       // 0x0E70(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_2;                    // 0x0E90(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_4;                       // 0x0ED8(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_1;                    // 0x0EF8(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_3;                       // 0x0F40(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x0F60(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_2;                       // 0x0FA8(0x0020)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine_2;                      // 0x0FC8(0x00C8)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend;                    // 0x1090(0x00F0)()
	struct FAnimNode_RandomPlayer                 AnimGraphNode_RandomPlayer_6;                      // 0x1180(0x0078)()
	struct FAnimNode_RandomPlayer                 AnimGraphNode_RandomPlayer_5;                      // 0x11F8(0x0078)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_7;                   // 0x1270(0x0048)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_6;                   // 0x12B8(0x0048)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_5;                   // 0x1300(0x0048)()
	struct FAnimNode_RandomPlayer                 AnimGraphNode_RandomPlayer_4;                      // 0x1348(0x0078)()
	struct FAnimNode_RandomPlayer                 AnimGraphNode_RandomPlayer_3;                      // 0x13C0(0x0078)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_4;                   // 0x1438(0x0048)()
	struct FAnimNode_RandomPlayer                 AnimGraphNode_RandomPlayer_2;                      // 0x1480(0x0078)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_3;                   // 0x14F8(0x0048)()
	struct FAnimNode_RandomPlayer                 AnimGraphNode_RandomPlayer_1;                      // 0x1540(0x0078)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_2;                   // 0x15B8(0x0048)()
	struct FAnimNode_RandomPlayer                 AnimGraphNode_RandomPlayer;                        // 0x1600(0x0078)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_1;                       // 0x1678(0x0020)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine_1;                      // 0x1698(0x00C8)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_1;                    // 0x1760(0x0080)()
	struct FDCAnimNode_CharSkinModBone            DCAnimGraphNode_CharSkinModBone;                   // 0x17E0(0x00F8)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_1;             // 0x18D8(0x0020)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_2;                     // 0x18F8(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_1;                     // 0x1920(0x0028)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_1;                   // 0x1948(0x0048)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_1;             // 0x1990(0x0020)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult;                         // 0x19B0(0x0020)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine;                        // 0x19D0(0x00C8)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose;                      // 0x1A98(0x0080)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose;                       // 0x1B18(0x0028)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace;               // 0x1B40(0x0020)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace;               // 0x1B60(0x0020)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool;                     // 0x1B80(0x0048)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone;                          // 0x1BC8(0x0128)()
	class UAnimSequenceBase*                      ItemStandIdleAnimation;                            // 0x1CF0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UAnimSequenceBase*                      SecondItemStandIdleAnimation;                      // 0x1CF8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          bSecondaryItemSet;                                 // 0x1D00(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bPrimaryItemSet;                                   // 0x1D01(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bTwoHandedItemSet;                                 // 0x1D02(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsWomanHead;                                      // 0x1D03(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsOrcHead;                                        // 0x1D04(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsWomanElfHead;                                   // 0x1D05(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsLizardmanHead;                                  // 0x1D06(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D6A[0x1];                                     // 0x1D07(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        SetAlwaysFloatOne;                                 // 0x1D08(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsLycanHead;                                      // 0x1D10(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsFelidPantherManHead;                            // 0x1D11(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsFelidianCatWomanHead;                           // 0x1D12(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void OnChangedStandIdle(class UAnimSequence* Param_ItemStandIdleAnimation, const struct FGameplayTag& ItemHandType, const struct FGameplayTag& ItemSlotType);
	void ExecuteUbergraph_ABP_PlayerCharacterSelectCapture(int32 EntryPoint);
	void BlueprintThreadSafeUpdateAnimation(float DeltaTime);
	void AnimGraph(struct FPoseLink* Param_AnimGraph);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ABP_PlayerCharacterSelectCapture_C">();
	}
	static class UABP_PlayerCharacterSelectCapture_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UABP_PlayerCharacterSelectCapture_C>();
	}
};
static_assert(alignof(UABP_PlayerCharacterSelectCapture_C) == 0x000010, "Wrong alignment on UABP_PlayerCharacterSelectCapture_C");
static_assert(sizeof(UABP_PlayerCharacterSelectCapture_C) == 0x001D20, "Wrong size on UABP_PlayerCharacterSelectCapture_C");
static_assert(offsetof(UABP_PlayerCharacterSelectCapture_C, UberGraphFrame) == 0x000660, "Member 'UABP_PlayerCharacterSelectCapture_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UABP_PlayerCharacterSelectCapture_C, __AnimBlueprintMutables) == 0x000668, "Member 'UABP_PlayerCharacterSelectCapture_C::__AnimBlueprintMutables' has a wrong offset!");
static_assert(offsetof(UABP_PlayerCharacterSelectCapture_C, AnimBlueprintExtension_PropertyAccess) == 0x000678, "Member 'UABP_PlayerCharacterSelectCapture_C::AnimBlueprintExtension_PropertyAccess' has a wrong offset!");
static_assert(offsetof(UABP_PlayerCharacterSelectCapture_C, AnimBlueprintExtension_Base) == 0x000680, "Member 'UABP_PlayerCharacterSelectCapture_C::AnimBlueprintExtension_Base' has a wrong offset!");
static_assert(offsetof(UABP_PlayerCharacterSelectCapture_C, AnimGraphNode_Root) == 0x000688, "Member 'UABP_PlayerCharacterSelectCapture_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UABP_PlayerCharacterSelectCapture_C, AnimGraphNode_SequencePlayer_5) == 0x0006A8, "Member 'UABP_PlayerCharacterSelectCapture_C::AnimGraphNode_SequencePlayer_5' has a wrong offset!");
static_assert(offsetof(UABP_PlayerCharacterSelectCapture_C, AnimGraphNode_StateResult_7) == 0x0006F0, "Member 'UABP_PlayerCharacterSelectCapture_C::AnimGraphNode_StateResult_7' has a wrong offset!");
static_assert(offsetof(UABP_PlayerCharacterSelectCapture_C, AnimGraphNode_StateMachine_4) == 0x000710, "Member 'UABP_PlayerCharacterSelectCapture_C::AnimGraphNode_StateMachine_4' has a wrong offset!");
static_assert(offsetof(UABP_PlayerCharacterSelectCapture_C, AnimGraphNode_SaveCachedPose_4) == 0x0007D8, "Member 'UABP_PlayerCharacterSelectCapture_C::AnimGraphNode_SaveCachedPose_4' has a wrong offset!");
static_assert(offsetof(UABP_PlayerCharacterSelectCapture_C, AnimGraphNode_UseCachedPose_6) == 0x000858, "Member 'UABP_PlayerCharacterSelectCapture_C::AnimGraphNode_UseCachedPose_6' has a wrong offset!");
static_assert(offsetof(UABP_PlayerCharacterSelectCapture_C, AnimGraphNode_LayeredBoneBlend_1) == 0x000880, "Member 'UABP_PlayerCharacterSelectCapture_C::AnimGraphNode_LayeredBoneBlend_1' has a wrong offset!");
static_assert(offsetof(UABP_PlayerCharacterSelectCapture_C, AnimGraphNode_BlendListByBool_8) == 0x000970, "Member 'UABP_PlayerCharacterSelectCapture_C::AnimGraphNode_BlendListByBool_8' has a wrong offset!");
static_assert(offsetof(UABP_PlayerCharacterSelectCapture_C, AnimGraphNode_SequencePlayer_4) == 0x0009B8, "Member 'UABP_PlayerCharacterSelectCapture_C::AnimGraphNode_SequencePlayer_4' has a wrong offset!");
static_assert(offsetof(UABP_PlayerCharacterSelectCapture_C, AnimGraphNode_StateResult_6) == 0x000A00, "Member 'UABP_PlayerCharacterSelectCapture_C::AnimGraphNode_StateResult_6' has a wrong offset!");
static_assert(offsetof(UABP_PlayerCharacterSelectCapture_C, AnimGraphNode_StateMachine_3) == 0x000A20, "Member 'UABP_PlayerCharacterSelectCapture_C::AnimGraphNode_StateMachine_3' has a wrong offset!");
static_assert(offsetof(UABP_PlayerCharacterSelectCapture_C, AnimGraphNode_SaveCachedPose_3) == 0x000AE8, "Member 'UABP_PlayerCharacterSelectCapture_C::AnimGraphNode_SaveCachedPose_3' has a wrong offset!");
static_assert(offsetof(UABP_PlayerCharacterSelectCapture_C, AnimGraphNode_ModifyBone_1) == 0x000B68, "Member 'UABP_PlayerCharacterSelectCapture_C::AnimGraphNode_ModifyBone_1' has a wrong offset!");
static_assert(offsetof(UABP_PlayerCharacterSelectCapture_C, AnimGraphNode_UseCachedPose_5) == 0x000C90, "Member 'UABP_PlayerCharacterSelectCapture_C::AnimGraphNode_UseCachedPose_5' has a wrong offset!");
static_assert(offsetof(UABP_PlayerCharacterSelectCapture_C, AnimGraphNode_UseCachedPose_4) == 0x000CB8, "Member 'UABP_PlayerCharacterSelectCapture_C::AnimGraphNode_UseCachedPose_4' has a wrong offset!");
static_assert(offsetof(UABP_PlayerCharacterSelectCapture_C, AnimGraphNode_UseCachedPose_3) == 0x000CE0, "Member 'UABP_PlayerCharacterSelectCapture_C::AnimGraphNode_UseCachedPose_3' has a wrong offset!");
static_assert(offsetof(UABP_PlayerCharacterSelectCapture_C, AnimGraphNode_SaveCachedPose_2) == 0x000D08, "Member 'UABP_PlayerCharacterSelectCapture_C::AnimGraphNode_SaveCachedPose_2' has a wrong offset!");
static_assert(offsetof(UABP_PlayerCharacterSelectCapture_C, AnimGraphNode_TransitionResult_3) == 0x000D88, "Member 'UABP_PlayerCharacterSelectCapture_C::AnimGraphNode_TransitionResult_3' has a wrong offset!");
static_assert(offsetof(UABP_PlayerCharacterSelectCapture_C, AnimGraphNode_TransitionResult_2) == 0x000DB0, "Member 'UABP_PlayerCharacterSelectCapture_C::AnimGraphNode_TransitionResult_2' has a wrong offset!");
static_assert(offsetof(UABP_PlayerCharacterSelectCapture_C, AnimGraphNode_TransitionResult_1) == 0x000DD8, "Member 'UABP_PlayerCharacterSelectCapture_C::AnimGraphNode_TransitionResult_1' has a wrong offset!");
static_assert(offsetof(UABP_PlayerCharacterSelectCapture_C, AnimGraphNode_TransitionResult) == 0x000E00, "Member 'UABP_PlayerCharacterSelectCapture_C::AnimGraphNode_TransitionResult' has a wrong offset!");
static_assert(offsetof(UABP_PlayerCharacterSelectCapture_C, AnimGraphNode_SequencePlayer_3) == 0x000E28, "Member 'UABP_PlayerCharacterSelectCapture_C::AnimGraphNode_SequencePlayer_3' has a wrong offset!");
static_assert(offsetof(UABP_PlayerCharacterSelectCapture_C, AnimGraphNode_StateResult_5) == 0x000E70, "Member 'UABP_PlayerCharacterSelectCapture_C::AnimGraphNode_StateResult_5' has a wrong offset!");
static_assert(offsetof(UABP_PlayerCharacterSelectCapture_C, AnimGraphNode_SequencePlayer_2) == 0x000E90, "Member 'UABP_PlayerCharacterSelectCapture_C::AnimGraphNode_SequencePlayer_2' has a wrong offset!");
static_assert(offsetof(UABP_PlayerCharacterSelectCapture_C, AnimGraphNode_StateResult_4) == 0x000ED8, "Member 'UABP_PlayerCharacterSelectCapture_C::AnimGraphNode_StateResult_4' has a wrong offset!");
static_assert(offsetof(UABP_PlayerCharacterSelectCapture_C, AnimGraphNode_SequencePlayer_1) == 0x000EF8, "Member 'UABP_PlayerCharacterSelectCapture_C::AnimGraphNode_SequencePlayer_1' has a wrong offset!");
static_assert(offsetof(UABP_PlayerCharacterSelectCapture_C, AnimGraphNode_StateResult_3) == 0x000F40, "Member 'UABP_PlayerCharacterSelectCapture_C::AnimGraphNode_StateResult_3' has a wrong offset!");
static_assert(offsetof(UABP_PlayerCharacterSelectCapture_C, AnimGraphNode_SequencePlayer) == 0x000F60, "Member 'UABP_PlayerCharacterSelectCapture_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(UABP_PlayerCharacterSelectCapture_C, AnimGraphNode_StateResult_2) == 0x000FA8, "Member 'UABP_PlayerCharacterSelectCapture_C::AnimGraphNode_StateResult_2' has a wrong offset!");
static_assert(offsetof(UABP_PlayerCharacterSelectCapture_C, AnimGraphNode_StateMachine_2) == 0x000FC8, "Member 'UABP_PlayerCharacterSelectCapture_C::AnimGraphNode_StateMachine_2' has a wrong offset!");
static_assert(offsetof(UABP_PlayerCharacterSelectCapture_C, AnimGraphNode_LayeredBoneBlend) == 0x001090, "Member 'UABP_PlayerCharacterSelectCapture_C::AnimGraphNode_LayeredBoneBlend' has a wrong offset!");
static_assert(offsetof(UABP_PlayerCharacterSelectCapture_C, AnimGraphNode_RandomPlayer_6) == 0x001180, "Member 'UABP_PlayerCharacterSelectCapture_C::AnimGraphNode_RandomPlayer_6' has a wrong offset!");
static_assert(offsetof(UABP_PlayerCharacterSelectCapture_C, AnimGraphNode_RandomPlayer_5) == 0x0011F8, "Member 'UABP_PlayerCharacterSelectCapture_C::AnimGraphNode_RandomPlayer_5' has a wrong offset!");
static_assert(offsetof(UABP_PlayerCharacterSelectCapture_C, AnimGraphNode_BlendListByBool_7) == 0x001270, "Member 'UABP_PlayerCharacterSelectCapture_C::AnimGraphNode_BlendListByBool_7' has a wrong offset!");
static_assert(offsetof(UABP_PlayerCharacterSelectCapture_C, AnimGraphNode_BlendListByBool_6) == 0x0012B8, "Member 'UABP_PlayerCharacterSelectCapture_C::AnimGraphNode_BlendListByBool_6' has a wrong offset!");
static_assert(offsetof(UABP_PlayerCharacterSelectCapture_C, AnimGraphNode_BlendListByBool_5) == 0x001300, "Member 'UABP_PlayerCharacterSelectCapture_C::AnimGraphNode_BlendListByBool_5' has a wrong offset!");
static_assert(offsetof(UABP_PlayerCharacterSelectCapture_C, AnimGraphNode_RandomPlayer_4) == 0x001348, "Member 'UABP_PlayerCharacterSelectCapture_C::AnimGraphNode_RandomPlayer_4' has a wrong offset!");
static_assert(offsetof(UABP_PlayerCharacterSelectCapture_C, AnimGraphNode_RandomPlayer_3) == 0x0013C0, "Member 'UABP_PlayerCharacterSelectCapture_C::AnimGraphNode_RandomPlayer_3' has a wrong offset!");
static_assert(offsetof(UABP_PlayerCharacterSelectCapture_C, AnimGraphNode_BlendListByBool_4) == 0x001438, "Member 'UABP_PlayerCharacterSelectCapture_C::AnimGraphNode_BlendListByBool_4' has a wrong offset!");
static_assert(offsetof(UABP_PlayerCharacterSelectCapture_C, AnimGraphNode_RandomPlayer_2) == 0x001480, "Member 'UABP_PlayerCharacterSelectCapture_C::AnimGraphNode_RandomPlayer_2' has a wrong offset!");
static_assert(offsetof(UABP_PlayerCharacterSelectCapture_C, AnimGraphNode_BlendListByBool_3) == 0x0014F8, "Member 'UABP_PlayerCharacterSelectCapture_C::AnimGraphNode_BlendListByBool_3' has a wrong offset!");
static_assert(offsetof(UABP_PlayerCharacterSelectCapture_C, AnimGraphNode_RandomPlayer_1) == 0x001540, "Member 'UABP_PlayerCharacterSelectCapture_C::AnimGraphNode_RandomPlayer_1' has a wrong offset!");
static_assert(offsetof(UABP_PlayerCharacterSelectCapture_C, AnimGraphNode_BlendListByBool_2) == 0x0015B8, "Member 'UABP_PlayerCharacterSelectCapture_C::AnimGraphNode_BlendListByBool_2' has a wrong offset!");
static_assert(offsetof(UABP_PlayerCharacterSelectCapture_C, AnimGraphNode_RandomPlayer) == 0x001600, "Member 'UABP_PlayerCharacterSelectCapture_C::AnimGraphNode_RandomPlayer' has a wrong offset!");
static_assert(offsetof(UABP_PlayerCharacterSelectCapture_C, AnimGraphNode_StateResult_1) == 0x001678, "Member 'UABP_PlayerCharacterSelectCapture_C::AnimGraphNode_StateResult_1' has a wrong offset!");
static_assert(offsetof(UABP_PlayerCharacterSelectCapture_C, AnimGraphNode_StateMachine_1) == 0x001698, "Member 'UABP_PlayerCharacterSelectCapture_C::AnimGraphNode_StateMachine_1' has a wrong offset!");
static_assert(offsetof(UABP_PlayerCharacterSelectCapture_C, AnimGraphNode_SaveCachedPose_1) == 0x001760, "Member 'UABP_PlayerCharacterSelectCapture_C::AnimGraphNode_SaveCachedPose_1' has a wrong offset!");
static_assert(offsetof(UABP_PlayerCharacterSelectCapture_C, DCAnimGraphNode_CharSkinModBone) == 0x0017E0, "Member 'UABP_PlayerCharacterSelectCapture_C::DCAnimGraphNode_CharSkinModBone' has a wrong offset!");
static_assert(offsetof(UABP_PlayerCharacterSelectCapture_C, AnimGraphNode_ComponentToLocalSpace_1) == 0x0018D8, "Member 'UABP_PlayerCharacterSelectCapture_C::AnimGraphNode_ComponentToLocalSpace_1' has a wrong offset!");
static_assert(offsetof(UABP_PlayerCharacterSelectCapture_C, AnimGraphNode_UseCachedPose_2) == 0x0018F8, "Member 'UABP_PlayerCharacterSelectCapture_C::AnimGraphNode_UseCachedPose_2' has a wrong offset!");
static_assert(offsetof(UABP_PlayerCharacterSelectCapture_C, AnimGraphNode_UseCachedPose_1) == 0x001920, "Member 'UABP_PlayerCharacterSelectCapture_C::AnimGraphNode_UseCachedPose_1' has a wrong offset!");
static_assert(offsetof(UABP_PlayerCharacterSelectCapture_C, AnimGraphNode_BlendListByBool_1) == 0x001948, "Member 'UABP_PlayerCharacterSelectCapture_C::AnimGraphNode_BlendListByBool_1' has a wrong offset!");
static_assert(offsetof(UABP_PlayerCharacterSelectCapture_C, AnimGraphNode_LocalToComponentSpace_1) == 0x001990, "Member 'UABP_PlayerCharacterSelectCapture_C::AnimGraphNode_LocalToComponentSpace_1' has a wrong offset!");
static_assert(offsetof(UABP_PlayerCharacterSelectCapture_C, AnimGraphNode_StateResult) == 0x0019B0, "Member 'UABP_PlayerCharacterSelectCapture_C::AnimGraphNode_StateResult' has a wrong offset!");
static_assert(offsetof(UABP_PlayerCharacterSelectCapture_C, AnimGraphNode_StateMachine) == 0x0019D0, "Member 'UABP_PlayerCharacterSelectCapture_C::AnimGraphNode_StateMachine' has a wrong offset!");
static_assert(offsetof(UABP_PlayerCharacterSelectCapture_C, AnimGraphNode_SaveCachedPose) == 0x001A98, "Member 'UABP_PlayerCharacterSelectCapture_C::AnimGraphNode_SaveCachedPose' has a wrong offset!");
static_assert(offsetof(UABP_PlayerCharacterSelectCapture_C, AnimGraphNode_UseCachedPose) == 0x001B18, "Member 'UABP_PlayerCharacterSelectCapture_C::AnimGraphNode_UseCachedPose' has a wrong offset!");
static_assert(offsetof(UABP_PlayerCharacterSelectCapture_C, AnimGraphNode_LocalToComponentSpace) == 0x001B40, "Member 'UABP_PlayerCharacterSelectCapture_C::AnimGraphNode_LocalToComponentSpace' has a wrong offset!");
static_assert(offsetof(UABP_PlayerCharacterSelectCapture_C, AnimGraphNode_ComponentToLocalSpace) == 0x001B60, "Member 'UABP_PlayerCharacterSelectCapture_C::AnimGraphNode_ComponentToLocalSpace' has a wrong offset!");
static_assert(offsetof(UABP_PlayerCharacterSelectCapture_C, AnimGraphNode_BlendListByBool) == 0x001B80, "Member 'UABP_PlayerCharacterSelectCapture_C::AnimGraphNode_BlendListByBool' has a wrong offset!");
static_assert(offsetof(UABP_PlayerCharacterSelectCapture_C, AnimGraphNode_ModifyBone) == 0x001BC8, "Member 'UABP_PlayerCharacterSelectCapture_C::AnimGraphNode_ModifyBone' has a wrong offset!");
static_assert(offsetof(UABP_PlayerCharacterSelectCapture_C, ItemStandIdleAnimation) == 0x001CF0, "Member 'UABP_PlayerCharacterSelectCapture_C::ItemStandIdleAnimation' has a wrong offset!");
static_assert(offsetof(UABP_PlayerCharacterSelectCapture_C, SecondItemStandIdleAnimation) == 0x001CF8, "Member 'UABP_PlayerCharacterSelectCapture_C::SecondItemStandIdleAnimation' has a wrong offset!");
static_assert(offsetof(UABP_PlayerCharacterSelectCapture_C, bSecondaryItemSet) == 0x001D00, "Member 'UABP_PlayerCharacterSelectCapture_C::bSecondaryItemSet' has a wrong offset!");
static_assert(offsetof(UABP_PlayerCharacterSelectCapture_C, bPrimaryItemSet) == 0x001D01, "Member 'UABP_PlayerCharacterSelectCapture_C::bPrimaryItemSet' has a wrong offset!");
static_assert(offsetof(UABP_PlayerCharacterSelectCapture_C, bTwoHandedItemSet) == 0x001D02, "Member 'UABP_PlayerCharacterSelectCapture_C::bTwoHandedItemSet' has a wrong offset!");
static_assert(offsetof(UABP_PlayerCharacterSelectCapture_C, bIsWomanHead) == 0x001D03, "Member 'UABP_PlayerCharacterSelectCapture_C::bIsWomanHead' has a wrong offset!");
static_assert(offsetof(UABP_PlayerCharacterSelectCapture_C, bIsOrcHead) == 0x001D04, "Member 'UABP_PlayerCharacterSelectCapture_C::bIsOrcHead' has a wrong offset!");
static_assert(offsetof(UABP_PlayerCharacterSelectCapture_C, bIsWomanElfHead) == 0x001D05, "Member 'UABP_PlayerCharacterSelectCapture_C::bIsWomanElfHead' has a wrong offset!");
static_assert(offsetof(UABP_PlayerCharacterSelectCapture_C, bIsLizardmanHead) == 0x001D06, "Member 'UABP_PlayerCharacterSelectCapture_C::bIsLizardmanHead' has a wrong offset!");
static_assert(offsetof(UABP_PlayerCharacterSelectCapture_C, SetAlwaysFloatOne) == 0x001D08, "Member 'UABP_PlayerCharacterSelectCapture_C::SetAlwaysFloatOne' has a wrong offset!");
static_assert(offsetof(UABP_PlayerCharacterSelectCapture_C, bIsLycanHead) == 0x001D10, "Member 'UABP_PlayerCharacterSelectCapture_C::bIsLycanHead' has a wrong offset!");
static_assert(offsetof(UABP_PlayerCharacterSelectCapture_C, bIsFelidPantherManHead) == 0x001D11, "Member 'UABP_PlayerCharacterSelectCapture_C::bIsFelidPantherManHead' has a wrong offset!");
static_assert(offsetof(UABP_PlayerCharacterSelectCapture_C, bIsFelidianCatWomanHead) == 0x001D12, "Member 'UABP_PlayerCharacterSelectCapture_C::bIsFelidianCatWomanHead' has a wrong offset!");

}

