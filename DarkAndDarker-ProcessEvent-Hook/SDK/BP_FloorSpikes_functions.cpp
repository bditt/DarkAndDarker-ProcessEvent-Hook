#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_FloorSpikes

#include "Basic.hpp"

#include "BP_FloorSpikes_classes.hpp"
#include "BP_FloorSpikes_parameters.hpp"


namespace SDK
{

// Function BP_FloorSpikes.BP_FloorSpikes_C.BndEvt__BP_FloorSpikeTrap_ActiveBox_K2Node_ComponentBoundEvent_4_ComponentBeginOverlapSignature__DelegateSignature
// (HasOutParams, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// int32                                   OtherBodyIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bFromSweep                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FHitResult                       SweepResult                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void ABP_FloorSpikes_C::BndEvt__BP_FloorSpikeTrap_ActiveBox_K2Node_ComponentBoundEvent_4_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FloorSpikes_C", "BndEvt__BP_FloorSpikeTrap_ActiveBox_K2Node_ComponentBoundEvent_4_ComponentBeginOverlapSignature__DelegateSignature");

	Params::BP_FloorSpikes_C_BndEvt__BP_FloorSpikeTrap_ActiveBox_K2Node_ComponentBoundEvent_4_ComponentBeginOverlapSignature__DelegateSignature Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;
	Parms.bFromSweep = bFromSweep;
	Parms.SweepResult = std::move(SweepResult);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_FloorSpikes.BP_FloorSpikes_C.EventFMsgSoundEvent
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FMsgSoundEvent                   Msg                                                    (BlueprintVisible, BlueprintReadOnly, Parm)

void ABP_FloorSpikes_C::EventFMsgSoundEvent(const struct FMsgSoundEvent& Msg)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FloorSpikes_C", "EventFMsgSoundEvent");

	Params::BP_FloorSpikes_C_EventFMsgSoundEvent Parms{};

	Parms.Msg = std::move(Msg);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_FloorSpikes.BP_FloorSpikes_C.ExecuteUbergraph_BP_FloorSpikes
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_FloorSpikes_C::ExecuteUbergraph_BP_FloorSpikes(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FloorSpikes_C", "ExecuteUbergraph_BP_FloorSpikes");

	Params::BP_FloorSpikes_C_ExecuteUbergraph_BP_FloorSpikes Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_FloorSpikes.BP_FloorSpikes_C.GameplayTagUpdated
// (Event, Protected, BlueprintEvent)
// Parameters:
// struct FGameplayTag                     InGameplayTag                                          (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// int32                                   InCount                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_FloorSpikes_C::GameplayTagUpdated(const struct FGameplayTag& InGameplayTag, int32 InCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FloorSpikes_C", "GameplayTagUpdated");

	Params::BP_FloorSpikes_C_GameplayTagUpdated Parms{};

	Parms.InGameplayTag = std::move(InGameplayTag);
	Parms.InCount = InCount;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_FloorSpikes.BP_FloorSpikes_C.InteractSucceed
// (Event, Protected, BlueprintEvent)
// Parameters:
// class AActor*                           Interacter                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FGameplayTag                     StateTag                                               (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// struct FGameplayTag                     TriggerTag                                             (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// struct FHitResult                       HitResult                                              (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void ABP_FloorSpikes_C::InteractSucceed(class AActor* Interacter, const struct FGameplayTag& StateTag, const struct FGameplayTag& TriggerTag, const struct FHitResult& HitResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FloorSpikes_C", "InteractSucceed");

	Params::BP_FloorSpikes_C_InteractSucceed Parms{};

	Parms.Interacter = Interacter;
	Parms.StateTag = std::move(StateTag);
	Parms.TriggerTag = std::move(TriggerTag);
	Parms.HitResult = std::move(HitResult);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_FloorSpikes.BP_FloorSpikes_C.OnMessageReceived_6C1E7AB946EFC9996E4677A2C7074582
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UMsgBaseNode*                     ProxyObject                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_FloorSpikes_C::OnMessageReceived_6C1E7AB946EFC9996E4677A2C7074582(class UMsgBaseNode* ProxyObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FloorSpikes_C", "OnMessageReceived_6C1E7AB946EFC9996E4677A2C7074582");

	Params::BP_FloorSpikes_C_OnMessageReceived_6C1E7AB946EFC9996E4677A2C7074582 Parms{};

	Parms.ProxyObject = ProxyObject;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_FloorSpikes.BP_FloorSpikes_C.ReceivePreInitializeComponents
// (Event, Protected, BlueprintEvent)

void ABP_FloorSpikes_C::ReceivePreInitializeComponents()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FloorSpikes_C", "ReceivePreInitializeComponents");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_FloorSpikes.BP_FloorSpikes_C.SetAbilityTriggerTag
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGameplayTag                     New_Trigger_Tag                                        (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_FloorSpikes_C::SetAbilityTriggerTag(const struct FGameplayTag& New_Trigger_Tag, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FloorSpikes_C", "SetAbilityTriggerTag");

	Params::BP_FloorSpikes_C_SetAbilityTriggerTag Parms{};

	Parms.New_Trigger_Tag = std::move(New_Trigger_Tag);

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}

}

