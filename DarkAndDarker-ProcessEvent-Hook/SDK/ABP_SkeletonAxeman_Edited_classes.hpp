#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ABP_SkeletonAxeman_Edited

#include "Basic.hpp"

#include "ABP_SkeletonAxeman_Edited_structs.hpp"
#include "Engine_structs.hpp"
#include "AnimGraphRuntime_structs.hpp"
#include "DungeonCrawler_classes.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass ABP_SkeletonAxeman_Edited.ABP_SkeletonAxeman_Edited_C
// 0x11F0 (0x1720 - 0x0530)
class UABP_SkeletonAxeman_Edited_C final : public UDCMonsterAnimInstanceBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0530(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct ABP_SkeletonAxeman_Edited::FAnimBlueprintGeneratedMutableData __AnimBlueprintMutables;                           // 0x0538(0x000C)(HasGetValueTypeHash)
	uint8                                         Pad_38AA[0x4];                                     // 0x0544(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_PropertyAccess;             // 0x0548(0x0008)()
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_Base;                       // 0x0550(0x0008)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot;                                // 0x0558(0x0048)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_10;                 // 0x05A0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_9;                  // 0x05C8(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_4;                    // 0x05F0(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_5;                       // 0x0638(0x0020)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer;                    // 0x0658(0x0070)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_4;                       // 0x06C8(0x0020)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine_1;                      // 0x06E8(0x00C8)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose;                      // 0x07B0(0x0080)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_8;                  // 0x0830(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_7;                  // 0x0858(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_6;                  // 0x0880(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_5;                  // 0x08A8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_4;                  // 0x08D0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_3;                  // 0x08F8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_2;                  // 0x0920(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_1;                  // 0x0948(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult;                    // 0x0970(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_7;                     // 0x0998(0x0028)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_3;                       // 0x09C0(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_3;                    // 0x09E0(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_2;                    // 0x0A28(0x0048)()
	struct FAnimNode_ApplyAdditive                AnimGraphNode_ApplyAdditive_3;                     // 0x0A70(0x00C8)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_6;                     // 0x0B38(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_5;                     // 0x0B60(0x0028)()
	struct FAnimNode_ApplyAdditive                AnimGraphNode_ApplyAdditive_2;                     // 0x0B88(0x00C8)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_1;                   // 0x0C50(0x0048)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_4;                     // 0x0C98(0x0028)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend_1;                  // 0x0CC0(0x00F0)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_2;                       // 0x0DB0(0x0020)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_3;                     // 0x0DD0(0x0028)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_1;                       // 0x0DF8(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_1;                    // 0x0E18(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x0E60(0x0048)()
	struct FAnimNode_ApplyAdditive                AnimGraphNode_ApplyAdditive_1;                     // 0x0EA8(0x00C8)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_2;                     // 0x0F70(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_1;                     // 0x0F98(0x0028)()
	struct FAnimNode_ApplyAdditive                AnimGraphNode_ApplyAdditive;                       // 0x0FC0(0x00C8)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool;                     // 0x1088(0x0048)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose;                       // 0x10D0(0x0028)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend;                    // 0x10F8(0x00F0)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult;                         // 0x11E8(0x0020)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine;                        // 0x1208(0x00C8)()
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x12D0(0x0020)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace;               // 0x12F0(0x0020)()
	struct FAnimNode_LegIK                        AnimGraphNode_LegIK_1;                             // 0x1310(0x00F8)()
	struct FAnimNode_LegIK                        AnimGraphNode_LegIK;                               // 0x1408(0x00F8)()
	struct FAnimNode_CopyBone                     AnimGraphNode_CopyBone_1;                          // 0x1500(0x00F0)()
	struct FAnimNode_CopyBone                     AnimGraphNode_CopyBone;                            // 0x15F0(0x00F0)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace;               // 0x16E0(0x0020)()
	bool                                          Should_Play_Hit_Start_Reaction;                    // 0x1700(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_38AB[0x7];                                     // 0x1701(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        IKHandRWeight;                                     // 0x1708(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        IKHandLWeaponPosition;                             // 0x1710(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void AnimGraph(struct FPoseLink* Param_AnimGraph);
	void BlueprintThreadSafeUpdateAnimation(float DeltaTime);
	void ExecuteUbergraph_ABP_SkeletonAxeman_Edited(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ABP_SkeletonAxeman_Edited_C">();
	}
	static class UABP_SkeletonAxeman_Edited_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UABP_SkeletonAxeman_Edited_C>();
	}
};
static_assert(alignof(UABP_SkeletonAxeman_Edited_C) == 0x000010, "Wrong alignment on UABP_SkeletonAxeman_Edited_C");
static_assert(sizeof(UABP_SkeletonAxeman_Edited_C) == 0x001720, "Wrong size on UABP_SkeletonAxeman_Edited_C");
static_assert(offsetof(UABP_SkeletonAxeman_Edited_C, UberGraphFrame) == 0x000530, "Member 'UABP_SkeletonAxeman_Edited_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UABP_SkeletonAxeman_Edited_C, __AnimBlueprintMutables) == 0x000538, "Member 'UABP_SkeletonAxeman_Edited_C::__AnimBlueprintMutables' has a wrong offset!");
static_assert(offsetof(UABP_SkeletonAxeman_Edited_C, AnimBlueprintExtension_PropertyAccess) == 0x000548, "Member 'UABP_SkeletonAxeman_Edited_C::AnimBlueprintExtension_PropertyAccess' has a wrong offset!");
static_assert(offsetof(UABP_SkeletonAxeman_Edited_C, AnimBlueprintExtension_Base) == 0x000550, "Member 'UABP_SkeletonAxeman_Edited_C::AnimBlueprintExtension_Base' has a wrong offset!");
static_assert(offsetof(UABP_SkeletonAxeman_Edited_C, AnimGraphNode_Slot) == 0x000558, "Member 'UABP_SkeletonAxeman_Edited_C::AnimGraphNode_Slot' has a wrong offset!");
static_assert(offsetof(UABP_SkeletonAxeman_Edited_C, AnimGraphNode_TransitionResult_10) == 0x0005A0, "Member 'UABP_SkeletonAxeman_Edited_C::AnimGraphNode_TransitionResult_10' has a wrong offset!");
static_assert(offsetof(UABP_SkeletonAxeman_Edited_C, AnimGraphNode_TransitionResult_9) == 0x0005C8, "Member 'UABP_SkeletonAxeman_Edited_C::AnimGraphNode_TransitionResult_9' has a wrong offset!");
static_assert(offsetof(UABP_SkeletonAxeman_Edited_C, AnimGraphNode_SequencePlayer_4) == 0x0005F0, "Member 'UABP_SkeletonAxeman_Edited_C::AnimGraphNode_SequencePlayer_4' has a wrong offset!");
static_assert(offsetof(UABP_SkeletonAxeman_Edited_C, AnimGraphNode_StateResult_5) == 0x000638, "Member 'UABP_SkeletonAxeman_Edited_C::AnimGraphNode_StateResult_5' has a wrong offset!");
static_assert(offsetof(UABP_SkeletonAxeman_Edited_C, AnimGraphNode_BlendSpacePlayer) == 0x000658, "Member 'UABP_SkeletonAxeman_Edited_C::AnimGraphNode_BlendSpacePlayer' has a wrong offset!");
static_assert(offsetof(UABP_SkeletonAxeman_Edited_C, AnimGraphNode_StateResult_4) == 0x0006C8, "Member 'UABP_SkeletonAxeman_Edited_C::AnimGraphNode_StateResult_4' has a wrong offset!");
static_assert(offsetof(UABP_SkeletonAxeman_Edited_C, AnimGraphNode_StateMachine_1) == 0x0006E8, "Member 'UABP_SkeletonAxeman_Edited_C::AnimGraphNode_StateMachine_1' has a wrong offset!");
static_assert(offsetof(UABP_SkeletonAxeman_Edited_C, AnimGraphNode_SaveCachedPose) == 0x0007B0, "Member 'UABP_SkeletonAxeman_Edited_C::AnimGraphNode_SaveCachedPose' has a wrong offset!");
static_assert(offsetof(UABP_SkeletonAxeman_Edited_C, AnimGraphNode_TransitionResult_8) == 0x000830, "Member 'UABP_SkeletonAxeman_Edited_C::AnimGraphNode_TransitionResult_8' has a wrong offset!");
static_assert(offsetof(UABP_SkeletonAxeman_Edited_C, AnimGraphNode_TransitionResult_7) == 0x000858, "Member 'UABP_SkeletonAxeman_Edited_C::AnimGraphNode_TransitionResult_7' has a wrong offset!");
static_assert(offsetof(UABP_SkeletonAxeman_Edited_C, AnimGraphNode_TransitionResult_6) == 0x000880, "Member 'UABP_SkeletonAxeman_Edited_C::AnimGraphNode_TransitionResult_6' has a wrong offset!");
static_assert(offsetof(UABP_SkeletonAxeman_Edited_C, AnimGraphNode_TransitionResult_5) == 0x0008A8, "Member 'UABP_SkeletonAxeman_Edited_C::AnimGraphNode_TransitionResult_5' has a wrong offset!");
static_assert(offsetof(UABP_SkeletonAxeman_Edited_C, AnimGraphNode_TransitionResult_4) == 0x0008D0, "Member 'UABP_SkeletonAxeman_Edited_C::AnimGraphNode_TransitionResult_4' has a wrong offset!");
static_assert(offsetof(UABP_SkeletonAxeman_Edited_C, AnimGraphNode_TransitionResult_3) == 0x0008F8, "Member 'UABP_SkeletonAxeman_Edited_C::AnimGraphNode_TransitionResult_3' has a wrong offset!");
static_assert(offsetof(UABP_SkeletonAxeman_Edited_C, AnimGraphNode_TransitionResult_2) == 0x000920, "Member 'UABP_SkeletonAxeman_Edited_C::AnimGraphNode_TransitionResult_2' has a wrong offset!");
static_assert(offsetof(UABP_SkeletonAxeman_Edited_C, AnimGraphNode_TransitionResult_1) == 0x000948, "Member 'UABP_SkeletonAxeman_Edited_C::AnimGraphNode_TransitionResult_1' has a wrong offset!");
static_assert(offsetof(UABP_SkeletonAxeman_Edited_C, AnimGraphNode_TransitionResult) == 0x000970, "Member 'UABP_SkeletonAxeman_Edited_C::AnimGraphNode_TransitionResult' has a wrong offset!");
static_assert(offsetof(UABP_SkeletonAxeman_Edited_C, AnimGraphNode_UseCachedPose_7) == 0x000998, "Member 'UABP_SkeletonAxeman_Edited_C::AnimGraphNode_UseCachedPose_7' has a wrong offset!");
static_assert(offsetof(UABP_SkeletonAxeman_Edited_C, AnimGraphNode_StateResult_3) == 0x0009C0, "Member 'UABP_SkeletonAxeman_Edited_C::AnimGraphNode_StateResult_3' has a wrong offset!");
static_assert(offsetof(UABP_SkeletonAxeman_Edited_C, AnimGraphNode_SequencePlayer_3) == 0x0009E0, "Member 'UABP_SkeletonAxeman_Edited_C::AnimGraphNode_SequencePlayer_3' has a wrong offset!");
static_assert(offsetof(UABP_SkeletonAxeman_Edited_C, AnimGraphNode_SequencePlayer_2) == 0x000A28, "Member 'UABP_SkeletonAxeman_Edited_C::AnimGraphNode_SequencePlayer_2' has a wrong offset!");
static_assert(offsetof(UABP_SkeletonAxeman_Edited_C, AnimGraphNode_ApplyAdditive_3) == 0x000A70, "Member 'UABP_SkeletonAxeman_Edited_C::AnimGraphNode_ApplyAdditive_3' has a wrong offset!");
static_assert(offsetof(UABP_SkeletonAxeman_Edited_C, AnimGraphNode_UseCachedPose_6) == 0x000B38, "Member 'UABP_SkeletonAxeman_Edited_C::AnimGraphNode_UseCachedPose_6' has a wrong offset!");
static_assert(offsetof(UABP_SkeletonAxeman_Edited_C, AnimGraphNode_UseCachedPose_5) == 0x000B60, "Member 'UABP_SkeletonAxeman_Edited_C::AnimGraphNode_UseCachedPose_5' has a wrong offset!");
static_assert(offsetof(UABP_SkeletonAxeman_Edited_C, AnimGraphNode_ApplyAdditive_2) == 0x000B88, "Member 'UABP_SkeletonAxeman_Edited_C::AnimGraphNode_ApplyAdditive_2' has a wrong offset!");
static_assert(offsetof(UABP_SkeletonAxeman_Edited_C, AnimGraphNode_BlendListByBool_1) == 0x000C50, "Member 'UABP_SkeletonAxeman_Edited_C::AnimGraphNode_BlendListByBool_1' has a wrong offset!");
static_assert(offsetof(UABP_SkeletonAxeman_Edited_C, AnimGraphNode_UseCachedPose_4) == 0x000C98, "Member 'UABP_SkeletonAxeman_Edited_C::AnimGraphNode_UseCachedPose_4' has a wrong offset!");
static_assert(offsetof(UABP_SkeletonAxeman_Edited_C, AnimGraphNode_LayeredBoneBlend_1) == 0x000CC0, "Member 'UABP_SkeletonAxeman_Edited_C::AnimGraphNode_LayeredBoneBlend_1' has a wrong offset!");
static_assert(offsetof(UABP_SkeletonAxeman_Edited_C, AnimGraphNode_StateResult_2) == 0x000DB0, "Member 'UABP_SkeletonAxeman_Edited_C::AnimGraphNode_StateResult_2' has a wrong offset!");
static_assert(offsetof(UABP_SkeletonAxeman_Edited_C, AnimGraphNode_UseCachedPose_3) == 0x000DD0, "Member 'UABP_SkeletonAxeman_Edited_C::AnimGraphNode_UseCachedPose_3' has a wrong offset!");
static_assert(offsetof(UABP_SkeletonAxeman_Edited_C, AnimGraphNode_StateResult_1) == 0x000DF8, "Member 'UABP_SkeletonAxeman_Edited_C::AnimGraphNode_StateResult_1' has a wrong offset!");
static_assert(offsetof(UABP_SkeletonAxeman_Edited_C, AnimGraphNode_SequencePlayer_1) == 0x000E18, "Member 'UABP_SkeletonAxeman_Edited_C::AnimGraphNode_SequencePlayer_1' has a wrong offset!");
static_assert(offsetof(UABP_SkeletonAxeman_Edited_C, AnimGraphNode_SequencePlayer) == 0x000E60, "Member 'UABP_SkeletonAxeman_Edited_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(UABP_SkeletonAxeman_Edited_C, AnimGraphNode_ApplyAdditive_1) == 0x000EA8, "Member 'UABP_SkeletonAxeman_Edited_C::AnimGraphNode_ApplyAdditive_1' has a wrong offset!");
static_assert(offsetof(UABP_SkeletonAxeman_Edited_C, AnimGraphNode_UseCachedPose_2) == 0x000F70, "Member 'UABP_SkeletonAxeman_Edited_C::AnimGraphNode_UseCachedPose_2' has a wrong offset!");
static_assert(offsetof(UABP_SkeletonAxeman_Edited_C, AnimGraphNode_UseCachedPose_1) == 0x000F98, "Member 'UABP_SkeletonAxeman_Edited_C::AnimGraphNode_UseCachedPose_1' has a wrong offset!");
static_assert(offsetof(UABP_SkeletonAxeman_Edited_C, AnimGraphNode_ApplyAdditive) == 0x000FC0, "Member 'UABP_SkeletonAxeman_Edited_C::AnimGraphNode_ApplyAdditive' has a wrong offset!");
static_assert(offsetof(UABP_SkeletonAxeman_Edited_C, AnimGraphNode_BlendListByBool) == 0x001088, "Member 'UABP_SkeletonAxeman_Edited_C::AnimGraphNode_BlendListByBool' has a wrong offset!");
static_assert(offsetof(UABP_SkeletonAxeman_Edited_C, AnimGraphNode_UseCachedPose) == 0x0010D0, "Member 'UABP_SkeletonAxeman_Edited_C::AnimGraphNode_UseCachedPose' has a wrong offset!");
static_assert(offsetof(UABP_SkeletonAxeman_Edited_C, AnimGraphNode_LayeredBoneBlend) == 0x0010F8, "Member 'UABP_SkeletonAxeman_Edited_C::AnimGraphNode_LayeredBoneBlend' has a wrong offset!");
static_assert(offsetof(UABP_SkeletonAxeman_Edited_C, AnimGraphNode_StateResult) == 0x0011E8, "Member 'UABP_SkeletonAxeman_Edited_C::AnimGraphNode_StateResult' has a wrong offset!");
static_assert(offsetof(UABP_SkeletonAxeman_Edited_C, AnimGraphNode_StateMachine) == 0x001208, "Member 'UABP_SkeletonAxeman_Edited_C::AnimGraphNode_StateMachine' has a wrong offset!");
static_assert(offsetof(UABP_SkeletonAxeman_Edited_C, AnimGraphNode_Root) == 0x0012D0, "Member 'UABP_SkeletonAxeman_Edited_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UABP_SkeletonAxeman_Edited_C, AnimGraphNode_ComponentToLocalSpace) == 0x0012F0, "Member 'UABP_SkeletonAxeman_Edited_C::AnimGraphNode_ComponentToLocalSpace' has a wrong offset!");
static_assert(offsetof(UABP_SkeletonAxeman_Edited_C, AnimGraphNode_LegIK_1) == 0x001310, "Member 'UABP_SkeletonAxeman_Edited_C::AnimGraphNode_LegIK_1' has a wrong offset!");
static_assert(offsetof(UABP_SkeletonAxeman_Edited_C, AnimGraphNode_LegIK) == 0x001408, "Member 'UABP_SkeletonAxeman_Edited_C::AnimGraphNode_LegIK' has a wrong offset!");
static_assert(offsetof(UABP_SkeletonAxeman_Edited_C, AnimGraphNode_CopyBone_1) == 0x001500, "Member 'UABP_SkeletonAxeman_Edited_C::AnimGraphNode_CopyBone_1' has a wrong offset!");
static_assert(offsetof(UABP_SkeletonAxeman_Edited_C, AnimGraphNode_CopyBone) == 0x0015F0, "Member 'UABP_SkeletonAxeman_Edited_C::AnimGraphNode_CopyBone' has a wrong offset!");
static_assert(offsetof(UABP_SkeletonAxeman_Edited_C, AnimGraphNode_LocalToComponentSpace) == 0x0016E0, "Member 'UABP_SkeletonAxeman_Edited_C::AnimGraphNode_LocalToComponentSpace' has a wrong offset!");
static_assert(offsetof(UABP_SkeletonAxeman_Edited_C, Should_Play_Hit_Start_Reaction) == 0x001700, "Member 'UABP_SkeletonAxeman_Edited_C::Should_Play_Hit_Start_Reaction' has a wrong offset!");
static_assert(offsetof(UABP_SkeletonAxeman_Edited_C, IKHandRWeight) == 0x001708, "Member 'UABP_SkeletonAxeman_Edited_C::IKHandRWeight' has a wrong offset!");
static_assert(offsetof(UABP_SkeletonAxeman_Edited_C, IKHandLWeaponPosition) == 0x001710, "Member 'UABP_SkeletonAxeman_Edited_C::IKHandLWeaponPosition' has a wrong offset!");

}

