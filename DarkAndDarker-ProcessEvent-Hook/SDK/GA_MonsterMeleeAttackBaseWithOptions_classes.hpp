#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_MonsterMeleeAttackBaseWithOptions

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "E_TargetType_structs.hpp"
#include "DungeonCrawler_structs.hpp"
#include "DungeonCrawler_classes.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass GA_MonsterMeleeAttackBaseWithOptions.GA_MonsterMeleeAttackBaseWithOptions_C
// 0x00B0 (0x0720 - 0x0670)
class UGA_MonsterMeleeAttackBaseWithOptions_C : public UGA_MonsterMeleeAttackBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0670(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	TArray<E_TargetType>                          Control_Point;                                     // 0x0678(0x0010)(Edit, BlueprintVisible)
	TArray<double>                                Angle;                                             // 0x0688(0x0010)(Edit, BlueprintVisible)
	TArray<double>                                Distance;                                          // 0x0698(0x0010)(Edit, BlueprintVisible)
	TArray<double>                                DashSpeed;                                         // 0x06A8(0x0010)(Edit, BlueprintVisible)
	class ADCCharacterBase*                       CasterPawn;                                        // 0x06B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class ADCCharacterBase*                       TargetPawn;                                        // 0x06C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	int32                                         Index_GA_MonsterMeleeAttackBaseWithOptions_C;      // 0x06C8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4332[0x4];                                     // 0x06CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAbilityTask*                           MovementTask;                                      // 0x06D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	double                                        RotationSpeed;                                     // 0x06D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Without_Pitch;                                     // 0x06E0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4333[0x3];                                     // 0x06E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           EndTagSignal;                                      // 0x06E4(0x0008)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Gameplay_Tag;                                      // 0x06EC(0x0008)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash)
	EHitBoxType                                   Hit_Box;                                           // 0x06F4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4334[0x3];                                     // 0x06F5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UDCAT_RotateToActor*                    RotateTask;                                        // 0x06F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ResultLocation;                                    // 0x0700(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Teleport;                                          // 0x0718(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          WithoutRoll;                                       // 0x0719(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void AbilityActivated(const struct FGameplayEventData& TriggerEventData);
	void EventReceived_95DCC296493E3A36038DED83D7616167(const struct FGameplayEventData& Payload);
	void EventReceived_B16E8F464CD39A7D82CF9CAD51B75D82(const struct FGameplayTag& EventTag, const struct FGameplayEventData& EventData);
	void ExecuteUbergraph_GA_MonsterMeleeAttackBaseWithOptions(int32 EntryPoint);
	void GetAvailableLocation(const struct FVector& DestLocation, bool* Result, struct FVector* Location);
	void GetBBTargetActor(bool* Result, class UObject** Return_Value);
	void GetBBTargetActorToCharacterBase(bool* Result, class ADCCharacterBase** As_DCCharacter_Base);
	void GetBBTargetActorToMonsterBase(bool* Result, class ABP_DCMonsterBaseWithOptions_C** DCMonsterBaseWithOptions);
	void GetSignal();
	void K2_OnEndAbility(bool bWasCancelled);
	void OnFinish_237210C047AC334B6F6EFAB48C3790F4(bool IsArrivedDestLocation);
	void OnFinish_73831B584F90FE2D55D4F7B95AFEE710(bool IsArrivedDestLocation);
	void StartRotate_Event();
	void StopRotate_Event();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GA_MonsterMeleeAttackBaseWithOptions_C">();
	}
	static class UGA_MonsterMeleeAttackBaseWithOptions_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGA_MonsterMeleeAttackBaseWithOptions_C>();
	}
};
static_assert(alignof(UGA_MonsterMeleeAttackBaseWithOptions_C) == 0x000008, "Wrong alignment on UGA_MonsterMeleeAttackBaseWithOptions_C");
static_assert(sizeof(UGA_MonsterMeleeAttackBaseWithOptions_C) == 0x000720, "Wrong size on UGA_MonsterMeleeAttackBaseWithOptions_C");
static_assert(offsetof(UGA_MonsterMeleeAttackBaseWithOptions_C, UberGraphFrame) == 0x000670, "Member 'UGA_MonsterMeleeAttackBaseWithOptions_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UGA_MonsterMeleeAttackBaseWithOptions_C, Control_Point) == 0x000678, "Member 'UGA_MonsterMeleeAttackBaseWithOptions_C::Control_Point' has a wrong offset!");
static_assert(offsetof(UGA_MonsterMeleeAttackBaseWithOptions_C, Angle) == 0x000688, "Member 'UGA_MonsterMeleeAttackBaseWithOptions_C::Angle' has a wrong offset!");
static_assert(offsetof(UGA_MonsterMeleeAttackBaseWithOptions_C, Distance) == 0x000698, "Member 'UGA_MonsterMeleeAttackBaseWithOptions_C::Distance' has a wrong offset!");
static_assert(offsetof(UGA_MonsterMeleeAttackBaseWithOptions_C, DashSpeed) == 0x0006A8, "Member 'UGA_MonsterMeleeAttackBaseWithOptions_C::DashSpeed' has a wrong offset!");
static_assert(offsetof(UGA_MonsterMeleeAttackBaseWithOptions_C, CasterPawn) == 0x0006B8, "Member 'UGA_MonsterMeleeAttackBaseWithOptions_C::CasterPawn' has a wrong offset!");
static_assert(offsetof(UGA_MonsterMeleeAttackBaseWithOptions_C, TargetPawn) == 0x0006C0, "Member 'UGA_MonsterMeleeAttackBaseWithOptions_C::TargetPawn' has a wrong offset!");
static_assert(offsetof(UGA_MonsterMeleeAttackBaseWithOptions_C, Index_GA_MonsterMeleeAttackBaseWithOptions_C) == 0x0006C8, "Member 'UGA_MonsterMeleeAttackBaseWithOptions_C::Index_GA_MonsterMeleeAttackBaseWithOptions_C' has a wrong offset!");
static_assert(offsetof(UGA_MonsterMeleeAttackBaseWithOptions_C, MovementTask) == 0x0006D0, "Member 'UGA_MonsterMeleeAttackBaseWithOptions_C::MovementTask' has a wrong offset!");
static_assert(offsetof(UGA_MonsterMeleeAttackBaseWithOptions_C, RotationSpeed) == 0x0006D8, "Member 'UGA_MonsterMeleeAttackBaseWithOptions_C::RotationSpeed' has a wrong offset!");
static_assert(offsetof(UGA_MonsterMeleeAttackBaseWithOptions_C, Without_Pitch) == 0x0006E0, "Member 'UGA_MonsterMeleeAttackBaseWithOptions_C::Without_Pitch' has a wrong offset!");
static_assert(offsetof(UGA_MonsterMeleeAttackBaseWithOptions_C, EndTagSignal) == 0x0006E4, "Member 'UGA_MonsterMeleeAttackBaseWithOptions_C::EndTagSignal' has a wrong offset!");
static_assert(offsetof(UGA_MonsterMeleeAttackBaseWithOptions_C, Gameplay_Tag) == 0x0006EC, "Member 'UGA_MonsterMeleeAttackBaseWithOptions_C::Gameplay_Tag' has a wrong offset!");
static_assert(offsetof(UGA_MonsterMeleeAttackBaseWithOptions_C, Hit_Box) == 0x0006F4, "Member 'UGA_MonsterMeleeAttackBaseWithOptions_C::Hit_Box' has a wrong offset!");
static_assert(offsetof(UGA_MonsterMeleeAttackBaseWithOptions_C, RotateTask) == 0x0006F8, "Member 'UGA_MonsterMeleeAttackBaseWithOptions_C::RotateTask' has a wrong offset!");
static_assert(offsetof(UGA_MonsterMeleeAttackBaseWithOptions_C, ResultLocation) == 0x000700, "Member 'UGA_MonsterMeleeAttackBaseWithOptions_C::ResultLocation' has a wrong offset!");
static_assert(offsetof(UGA_MonsterMeleeAttackBaseWithOptions_C, Teleport) == 0x000718, "Member 'UGA_MonsterMeleeAttackBaseWithOptions_C::Teleport' has a wrong offset!");
static_assert(offsetof(UGA_MonsterMeleeAttackBaseWithOptions_C, WithoutRoll) == 0x000719, "Member 'UGA_MonsterMeleeAttackBaseWithOptions_C::WithoutRoll' has a wrong offset!");

}

