#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ABP_Slime

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "AnimGraphRuntime_structs.hpp"
#include "ABP_Slime_structs.hpp"
#include "DungeonCrawler_classes.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass ABP_Slime.ABP_Slime_C
// 0x07A0 (0x0CD0 - 0x0530)
class UABP_Slime_C final : public UDCMonsterAnimInstanceBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0530(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct ABP_Slime::FAnimBlueprintGeneratedMutableData __AnimBlueprintMutables;                           // 0x0538(0x0008)(HasGetValueTypeHash)
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_PropertyAccess;             // 0x0540(0x0008)()
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_Base;                       // 0x0548(0x0008)()
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x0550(0x0020)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot;                                // 0x0570(0x0048)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_6;                  // 0x05B8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_5;                  // 0x05E0(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_2;                    // 0x0608(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_4;                       // 0x0650(0x0020)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer;                    // 0x0670(0x0070)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_3;                       // 0x06E0(0x0020)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine_1;                      // 0x0700(0x00C8)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_4;                  // 0x07C8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_3;                  // 0x07F0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_2;                  // 0x0818(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_1;                  // 0x0840(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult;                    // 0x0868(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_1;                    // 0x0890(0x0048)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_2;                     // 0x08D8(0x0028)()
	struct FAnimNode_ApplyAdditive                AnimGraphNode_ApplyAdditive_1;                     // 0x0900(0x00C8)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_2;                       // 0x09C8(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x09E8(0x0048)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_1;                     // 0x0A30(0x0028)()
	struct FAnimNode_ApplyAdditive                AnimGraphNode_ApplyAdditive;                       // 0x0A58(0x00C8)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_1;                       // 0x0B20(0x0020)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose;                       // 0x0B40(0x0028)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult;                         // 0x0B68(0x0020)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine;                        // 0x0B88(0x00C8)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose;                      // 0x0C50(0x0080)()

public:
	void AnimGraph(struct FPoseLink* Param_AnimGraph);
	void ExecuteUbergraph_ABP_Slime(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ABP_Slime_C">();
	}
	static class UABP_Slime_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UABP_Slime_C>();
	}
};
static_assert(alignof(UABP_Slime_C) == 0x000010, "Wrong alignment on UABP_Slime_C");
static_assert(sizeof(UABP_Slime_C) == 0x000CD0, "Wrong size on UABP_Slime_C");
static_assert(offsetof(UABP_Slime_C, UberGraphFrame) == 0x000530, "Member 'UABP_Slime_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UABP_Slime_C, __AnimBlueprintMutables) == 0x000538, "Member 'UABP_Slime_C::__AnimBlueprintMutables' has a wrong offset!");
static_assert(offsetof(UABP_Slime_C, AnimBlueprintExtension_PropertyAccess) == 0x000540, "Member 'UABP_Slime_C::AnimBlueprintExtension_PropertyAccess' has a wrong offset!");
static_assert(offsetof(UABP_Slime_C, AnimBlueprintExtension_Base) == 0x000548, "Member 'UABP_Slime_C::AnimBlueprintExtension_Base' has a wrong offset!");
static_assert(offsetof(UABP_Slime_C, AnimGraphNode_Root) == 0x000550, "Member 'UABP_Slime_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UABP_Slime_C, AnimGraphNode_Slot) == 0x000570, "Member 'UABP_Slime_C::AnimGraphNode_Slot' has a wrong offset!");
static_assert(offsetof(UABP_Slime_C, AnimGraphNode_TransitionResult_6) == 0x0005B8, "Member 'UABP_Slime_C::AnimGraphNode_TransitionResult_6' has a wrong offset!");
static_assert(offsetof(UABP_Slime_C, AnimGraphNode_TransitionResult_5) == 0x0005E0, "Member 'UABP_Slime_C::AnimGraphNode_TransitionResult_5' has a wrong offset!");
static_assert(offsetof(UABP_Slime_C, AnimGraphNode_SequencePlayer_2) == 0x000608, "Member 'UABP_Slime_C::AnimGraphNode_SequencePlayer_2' has a wrong offset!");
static_assert(offsetof(UABP_Slime_C, AnimGraphNode_StateResult_4) == 0x000650, "Member 'UABP_Slime_C::AnimGraphNode_StateResult_4' has a wrong offset!");
static_assert(offsetof(UABP_Slime_C, AnimGraphNode_BlendSpacePlayer) == 0x000670, "Member 'UABP_Slime_C::AnimGraphNode_BlendSpacePlayer' has a wrong offset!");
static_assert(offsetof(UABP_Slime_C, AnimGraphNode_StateResult_3) == 0x0006E0, "Member 'UABP_Slime_C::AnimGraphNode_StateResult_3' has a wrong offset!");
static_assert(offsetof(UABP_Slime_C, AnimGraphNode_StateMachine_1) == 0x000700, "Member 'UABP_Slime_C::AnimGraphNode_StateMachine_1' has a wrong offset!");
static_assert(offsetof(UABP_Slime_C, AnimGraphNode_TransitionResult_4) == 0x0007C8, "Member 'UABP_Slime_C::AnimGraphNode_TransitionResult_4' has a wrong offset!");
static_assert(offsetof(UABP_Slime_C, AnimGraphNode_TransitionResult_3) == 0x0007F0, "Member 'UABP_Slime_C::AnimGraphNode_TransitionResult_3' has a wrong offset!");
static_assert(offsetof(UABP_Slime_C, AnimGraphNode_TransitionResult_2) == 0x000818, "Member 'UABP_Slime_C::AnimGraphNode_TransitionResult_2' has a wrong offset!");
static_assert(offsetof(UABP_Slime_C, AnimGraphNode_TransitionResult_1) == 0x000840, "Member 'UABP_Slime_C::AnimGraphNode_TransitionResult_1' has a wrong offset!");
static_assert(offsetof(UABP_Slime_C, AnimGraphNode_TransitionResult) == 0x000868, "Member 'UABP_Slime_C::AnimGraphNode_TransitionResult' has a wrong offset!");
static_assert(offsetof(UABP_Slime_C, AnimGraphNode_SequencePlayer_1) == 0x000890, "Member 'UABP_Slime_C::AnimGraphNode_SequencePlayer_1' has a wrong offset!");
static_assert(offsetof(UABP_Slime_C, AnimGraphNode_UseCachedPose_2) == 0x0008D8, "Member 'UABP_Slime_C::AnimGraphNode_UseCachedPose_2' has a wrong offset!");
static_assert(offsetof(UABP_Slime_C, AnimGraphNode_ApplyAdditive_1) == 0x000900, "Member 'UABP_Slime_C::AnimGraphNode_ApplyAdditive_1' has a wrong offset!");
static_assert(offsetof(UABP_Slime_C, AnimGraphNode_StateResult_2) == 0x0009C8, "Member 'UABP_Slime_C::AnimGraphNode_StateResult_2' has a wrong offset!");
static_assert(offsetof(UABP_Slime_C, AnimGraphNode_SequencePlayer) == 0x0009E8, "Member 'UABP_Slime_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(UABP_Slime_C, AnimGraphNode_UseCachedPose_1) == 0x000A30, "Member 'UABP_Slime_C::AnimGraphNode_UseCachedPose_1' has a wrong offset!");
static_assert(offsetof(UABP_Slime_C, AnimGraphNode_ApplyAdditive) == 0x000A58, "Member 'UABP_Slime_C::AnimGraphNode_ApplyAdditive' has a wrong offset!");
static_assert(offsetof(UABP_Slime_C, AnimGraphNode_StateResult_1) == 0x000B20, "Member 'UABP_Slime_C::AnimGraphNode_StateResult_1' has a wrong offset!");
static_assert(offsetof(UABP_Slime_C, AnimGraphNode_UseCachedPose) == 0x000B40, "Member 'UABP_Slime_C::AnimGraphNode_UseCachedPose' has a wrong offset!");
static_assert(offsetof(UABP_Slime_C, AnimGraphNode_StateResult) == 0x000B68, "Member 'UABP_Slime_C::AnimGraphNode_StateResult' has a wrong offset!");
static_assert(offsetof(UABP_Slime_C, AnimGraphNode_StateMachine) == 0x000B88, "Member 'UABP_Slime_C::AnimGraphNode_StateMachine' has a wrong offset!");
static_assert(offsetof(UABP_Slime_C, AnimGraphNode_SaveCachedPose) == 0x000C50, "Member 'UABP_Slime_C::AnimGraphNode_SaveCachedPose' has a wrong offset!");

}

