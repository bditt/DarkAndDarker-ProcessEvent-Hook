#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_LivingStatue_JumpAttack

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "GA_PlayMontageAndWaitForEventBase_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass GA_LivingStatue_JumpAttack.GA_LivingStatue_JumpAttack_C
// 0x0190 (0x0808 - 0x0678)
class UGA_LivingStatue_JumpAttack_C final : public UGA_PlayMontageAndWaitForEventBase_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_GA_LivingStatue_JumpAttack_C;       // 0x0678(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class ABP_LivingStatue_C*                     As_BP_Living_Statue;                               // 0x0680(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class ADCCharacterBase*                       Target_Enemy;                                      // 0x0688(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEventData                     Trigger_Event_Data;                                // 0x0690(0x00B0)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UDCAT_WaitForGameplayEvents*            Wait_Events_Async_Task;                            // 0x0740(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           Do_Dash_TimerHandle;                               // 0x0748(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           Move_Fail_TimerHandle;                             // 0x0750(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	TArray<ECollisionChannel>                     Mesh_Collision_Response_Channels;                  // 0x0758(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FVector                                Goal_Location;                                     // 0x0768(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Start_Location;                                    // 0x0780(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FActiveGameplayEffectHandle>    Buff_MoveSpeed_EffectHandle;                       // 0x0798(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FVector                                Last_Location;                                     // 0x07A8(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Direction;                                         // 0x07C0(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Caster_Bottom_Location;                            // 0x07D8(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           Check_Land_TimerHandle;                            // 0x07F0(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	double                                        Last_Y_Angle;                                      // 0x07F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bLocked;                                           // 0x0800(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void AbilityActivated(const struct FGameplayEventData& TriggerEventData);
	void Check_Land();
	void Check_MoveFail();
	void Do_Damage();
	void Do_Dash();
	void EventReceived_D6E741314858777E4FE1D7BFC544B635(const struct FGameplayTag& EventTag, const struct FGameplayEventData& EventData);
	void ExecuteUbergraph_GA_LivingStatue_JumpAttack(int32 EntryPoint);
	struct FVector Get_Direction();
	double Get_Input_Power();
	void K2_OnEndAbility(bool bWasCancelled);
	void Set_Land();
	void Start_Dash();
	void Stop_Dash();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GA_LivingStatue_JumpAttack_C">();
	}
	static class UGA_LivingStatue_JumpAttack_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGA_LivingStatue_JumpAttack_C>();
	}
};
static_assert(alignof(UGA_LivingStatue_JumpAttack_C) == 0x000008, "Wrong alignment on UGA_LivingStatue_JumpAttack_C");
static_assert(sizeof(UGA_LivingStatue_JumpAttack_C) == 0x000808, "Wrong size on UGA_LivingStatue_JumpAttack_C");
static_assert(offsetof(UGA_LivingStatue_JumpAttack_C, UberGraphFrame_GA_LivingStatue_JumpAttack_C) == 0x000678, "Member 'UGA_LivingStatue_JumpAttack_C::UberGraphFrame_GA_LivingStatue_JumpAttack_C' has a wrong offset!");
static_assert(offsetof(UGA_LivingStatue_JumpAttack_C, As_BP_Living_Statue) == 0x000680, "Member 'UGA_LivingStatue_JumpAttack_C::As_BP_Living_Statue' has a wrong offset!");
static_assert(offsetof(UGA_LivingStatue_JumpAttack_C, Target_Enemy) == 0x000688, "Member 'UGA_LivingStatue_JumpAttack_C::Target_Enemy' has a wrong offset!");
static_assert(offsetof(UGA_LivingStatue_JumpAttack_C, Trigger_Event_Data) == 0x000690, "Member 'UGA_LivingStatue_JumpAttack_C::Trigger_Event_Data' has a wrong offset!");
static_assert(offsetof(UGA_LivingStatue_JumpAttack_C, Wait_Events_Async_Task) == 0x000740, "Member 'UGA_LivingStatue_JumpAttack_C::Wait_Events_Async_Task' has a wrong offset!");
static_assert(offsetof(UGA_LivingStatue_JumpAttack_C, Do_Dash_TimerHandle) == 0x000748, "Member 'UGA_LivingStatue_JumpAttack_C::Do_Dash_TimerHandle' has a wrong offset!");
static_assert(offsetof(UGA_LivingStatue_JumpAttack_C, Move_Fail_TimerHandle) == 0x000750, "Member 'UGA_LivingStatue_JumpAttack_C::Move_Fail_TimerHandle' has a wrong offset!");
static_assert(offsetof(UGA_LivingStatue_JumpAttack_C, Mesh_Collision_Response_Channels) == 0x000758, "Member 'UGA_LivingStatue_JumpAttack_C::Mesh_Collision_Response_Channels' has a wrong offset!");
static_assert(offsetof(UGA_LivingStatue_JumpAttack_C, Goal_Location) == 0x000768, "Member 'UGA_LivingStatue_JumpAttack_C::Goal_Location' has a wrong offset!");
static_assert(offsetof(UGA_LivingStatue_JumpAttack_C, Start_Location) == 0x000780, "Member 'UGA_LivingStatue_JumpAttack_C::Start_Location' has a wrong offset!");
static_assert(offsetof(UGA_LivingStatue_JumpAttack_C, Buff_MoveSpeed_EffectHandle) == 0x000798, "Member 'UGA_LivingStatue_JumpAttack_C::Buff_MoveSpeed_EffectHandle' has a wrong offset!");
static_assert(offsetof(UGA_LivingStatue_JumpAttack_C, Last_Location) == 0x0007A8, "Member 'UGA_LivingStatue_JumpAttack_C::Last_Location' has a wrong offset!");
static_assert(offsetof(UGA_LivingStatue_JumpAttack_C, Direction) == 0x0007C0, "Member 'UGA_LivingStatue_JumpAttack_C::Direction' has a wrong offset!");
static_assert(offsetof(UGA_LivingStatue_JumpAttack_C, Caster_Bottom_Location) == 0x0007D8, "Member 'UGA_LivingStatue_JumpAttack_C::Caster_Bottom_Location' has a wrong offset!");
static_assert(offsetof(UGA_LivingStatue_JumpAttack_C, Check_Land_TimerHandle) == 0x0007F0, "Member 'UGA_LivingStatue_JumpAttack_C::Check_Land_TimerHandle' has a wrong offset!");
static_assert(offsetof(UGA_LivingStatue_JumpAttack_C, Last_Y_Angle) == 0x0007F8, "Member 'UGA_LivingStatue_JumpAttack_C::Last_Y_Angle' has a wrong offset!");
static_assert(offsetof(UGA_LivingStatue_JumpAttack_C, bLocked) == 0x000800, "Member 'UGA_LivingStatue_JumpAttack_C::bLocked' has a wrong offset!");

}

