#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Portcullis

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "BP_DoorBase_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Portcullis.BP_Portcullis_C
// 0x0020 (0x0508 - 0x04E8)
class ABP_Portcullis_C final : public ABP_DoorBase_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_Portcullis_C;                    // 0x04E8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UArrowComponent*                        Arrow;                                             // 0x04F0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	bool                                          bUseHeightCulling;                                 // 0x04F8(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5BA0[0x7];                                     // 0x04F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CullingHeightZ;                                    // 0x0500(0x0008)(Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_Portcullis(int32 EntryPoint);
	void ReceiveBeginPlay();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Portcullis_C">();
	}
	static class ABP_Portcullis_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_Portcullis_C>();
	}
};
static_assert(alignof(ABP_Portcullis_C) == 0x000008, "Wrong alignment on ABP_Portcullis_C");
static_assert(sizeof(ABP_Portcullis_C) == 0x000508, "Wrong size on ABP_Portcullis_C");
static_assert(offsetof(ABP_Portcullis_C, UberGraphFrame_BP_Portcullis_C) == 0x0004E8, "Member 'ABP_Portcullis_C::UberGraphFrame_BP_Portcullis_C' has a wrong offset!");
static_assert(offsetof(ABP_Portcullis_C, Arrow) == 0x0004F0, "Member 'ABP_Portcullis_C::Arrow' has a wrong offset!");
static_assert(offsetof(ABP_Portcullis_C, bUseHeightCulling) == 0x0004F8, "Member 'ABP_Portcullis_C::bUseHeightCulling' has a wrong offset!");
static_assert(offsetof(ABP_Portcullis_C, CullingHeightZ) == 0x000500, "Member 'ABP_Portcullis_C::CullingHeightZ' has a wrong offset!");

}

