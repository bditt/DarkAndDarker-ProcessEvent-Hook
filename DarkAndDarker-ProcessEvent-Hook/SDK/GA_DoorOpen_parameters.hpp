#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_DoorOpen

#include "Basic.hpp"

#include "DungeonCrawler_structs.hpp"


namespace SDK::Params
{

// Function GA_DoorOpen.GA_DoorOpen_C.ExecuteUbergraph_GA_DoorOpen
// 0x0108 (0x0108 - 0x0000)
struct GA_DoorOpen_C_ExecuteUbergraph_GA_DoorOpen final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3451[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FObjectLinkRequestEvent                K2Node_MakeStruct_ObjectLinkRequestEvent;          // 0x0008(0x00D0)()
	bool                                          K2Node_Event_bWasCancelled;                        // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3452[0x7];                                     // 0x00D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetAvatarActorFromActorInfo_ReturnValue;  // 0x00E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_DoorBase_C*                         K2Node_DynamicCast_AsBP_Door_Base;                 // 0x00E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3453[0x7];                                     // 0x00F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FObjectLinkResponeEvent>        CallFunc_RequestToLinkers_ReturnValue;             // 0x00F8(0x0010)(ReferenceParm)
};
static_assert(alignof(GA_DoorOpen_C_ExecuteUbergraph_GA_DoorOpen) == 0x000008, "Wrong alignment on GA_DoorOpen_C_ExecuteUbergraph_GA_DoorOpen");
static_assert(sizeof(GA_DoorOpen_C_ExecuteUbergraph_GA_DoorOpen) == 0x000108, "Wrong size on GA_DoorOpen_C_ExecuteUbergraph_GA_DoorOpen");
static_assert(offsetof(GA_DoorOpen_C_ExecuteUbergraph_GA_DoorOpen, EntryPoint) == 0x000000, "Member 'GA_DoorOpen_C_ExecuteUbergraph_GA_DoorOpen::EntryPoint' has a wrong offset!");
static_assert(offsetof(GA_DoorOpen_C_ExecuteUbergraph_GA_DoorOpen, K2Node_MakeStruct_ObjectLinkRequestEvent) == 0x000008, "Member 'GA_DoorOpen_C_ExecuteUbergraph_GA_DoorOpen::K2Node_MakeStruct_ObjectLinkRequestEvent' has a wrong offset!");
static_assert(offsetof(GA_DoorOpen_C_ExecuteUbergraph_GA_DoorOpen, K2Node_Event_bWasCancelled) == 0x0000D8, "Member 'GA_DoorOpen_C_ExecuteUbergraph_GA_DoorOpen::K2Node_Event_bWasCancelled' has a wrong offset!");
static_assert(offsetof(GA_DoorOpen_C_ExecuteUbergraph_GA_DoorOpen, CallFunc_GetAvatarActorFromActorInfo_ReturnValue) == 0x0000E0, "Member 'GA_DoorOpen_C_ExecuteUbergraph_GA_DoorOpen::CallFunc_GetAvatarActorFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_DoorOpen_C_ExecuteUbergraph_GA_DoorOpen, K2Node_DynamicCast_AsBP_Door_Base) == 0x0000E8, "Member 'GA_DoorOpen_C_ExecuteUbergraph_GA_DoorOpen::K2Node_DynamicCast_AsBP_Door_Base' has a wrong offset!");
static_assert(offsetof(GA_DoorOpen_C_ExecuteUbergraph_GA_DoorOpen, K2Node_DynamicCast_bSuccess) == 0x0000F0, "Member 'GA_DoorOpen_C_ExecuteUbergraph_GA_DoorOpen::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GA_DoorOpen_C_ExecuteUbergraph_GA_DoorOpen, CallFunc_RequestToLinkers_ReturnValue) == 0x0000F8, "Member 'GA_DoorOpen_C_ExecuteUbergraph_GA_DoorOpen::CallFunc_RequestToLinkers_ReturnValue' has a wrong offset!");

// Function GA_DoorOpen.GA_DoorOpen_C.K2_OnEndAbility
// 0x0001 (0x0001 - 0x0000)
struct GA_DoorOpen_C_K2_OnEndAbility final
{
public:
	bool                                          bWasCancelled;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_DoorOpen_C_K2_OnEndAbility) == 0x000001, "Wrong alignment on GA_DoorOpen_C_K2_OnEndAbility");
static_assert(sizeof(GA_DoorOpen_C_K2_OnEndAbility) == 0x000001, "Wrong size on GA_DoorOpen_C_K2_OnEndAbility");
static_assert(offsetof(GA_DoorOpen_C_K2_OnEndAbility, bWasCancelled) == 0x000000, "Member 'GA_DoorOpen_C_K2_OnEndAbility::bWasCancelled' has a wrong offset!");

}

