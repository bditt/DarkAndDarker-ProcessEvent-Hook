#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ABP_GoblinArcher

#include "Basic.hpp"

#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function ABP_GoblinArcher.ABP_GoblinArcher_C.AnimGraph
// 0x0010 (0x0010 - 0x0000)
struct ABP_GoblinArcher_C_AnimGraph final
{
public:
	struct FPoseLink                              Param_AnimGraph;                                   // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(ABP_GoblinArcher_C_AnimGraph) == 0x000008, "Wrong alignment on ABP_GoblinArcher_C_AnimGraph");
static_assert(sizeof(ABP_GoblinArcher_C_AnimGraph) == 0x000010, "Wrong size on ABP_GoblinArcher_C_AnimGraph");
static_assert(offsetof(ABP_GoblinArcher_C_AnimGraph, Param_AnimGraph) == 0x000000, "Member 'ABP_GoblinArcher_C_AnimGraph::Param_AnimGraph' has a wrong offset!");

// Function ABP_GoblinArcher.ABP_GoblinArcher_C.BlueprintThreadSafeUpdateAnimation
// 0x0018 (0x0018 - 0x0000)
struct ABP_GoblinArcher_C_BlueprintThreadSafeUpdateAnimation final
{
public:
	float                                         DeltaTime;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCurveValue_ReturnValue;                // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F5D[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast;      // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_GoblinArcher_C_BlueprintThreadSafeUpdateAnimation) == 0x000008, "Wrong alignment on ABP_GoblinArcher_C_BlueprintThreadSafeUpdateAnimation");
static_assert(sizeof(ABP_GoblinArcher_C_BlueprintThreadSafeUpdateAnimation) == 0x000018, "Wrong size on ABP_GoblinArcher_C_BlueprintThreadSafeUpdateAnimation");
static_assert(offsetof(ABP_GoblinArcher_C_BlueprintThreadSafeUpdateAnimation, DeltaTime) == 0x000000, "Member 'ABP_GoblinArcher_C_BlueprintThreadSafeUpdateAnimation::DeltaTime' has a wrong offset!");
static_assert(offsetof(ABP_GoblinArcher_C_BlueprintThreadSafeUpdateAnimation, CallFunc_GetCurveValue_ReturnValue) == 0x000004, "Member 'ABP_GoblinArcher_C_BlueprintThreadSafeUpdateAnimation::CallFunc_GetCurveValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_GoblinArcher_C_BlueprintThreadSafeUpdateAnimation, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000008, "Member 'ABP_GoblinArcher_C_BlueprintThreadSafeUpdateAnimation::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_GoblinArcher_C_BlueprintThreadSafeUpdateAnimation, CallFunc_Greater_DoubleDouble_A_ImplicitCast) == 0x000010, "Member 'ABP_GoblinArcher_C_BlueprintThreadSafeUpdateAnimation::CallFunc_Greater_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function ABP_GoblinArcher.ABP_GoblinArcher_C.ExecuteUbergraph_ABP_GoblinArcher
// 0x0030 (0x0030 - 0x0000)
struct ABP_GoblinArcher_C_ExecuteUbergraph_ABP_GoblinArcher final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F5E[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_TryGetPawnOwner_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_GoblinArcher_C*                     K2Node_DynamicCast_AsBP_Goblin_Archer;             // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F5F[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_GoblinArcher_C*                     K2Node_DynamicCast_AsBP_Goblin_Archer_1;           // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_GoblinArcher_C_ExecuteUbergraph_ABP_GoblinArcher) == 0x000008, "Wrong alignment on ABP_GoblinArcher_C_ExecuteUbergraph_ABP_GoblinArcher");
static_assert(sizeof(ABP_GoblinArcher_C_ExecuteUbergraph_ABP_GoblinArcher) == 0x000030, "Wrong size on ABP_GoblinArcher_C_ExecuteUbergraph_ABP_GoblinArcher");
static_assert(offsetof(ABP_GoblinArcher_C_ExecuteUbergraph_ABP_GoblinArcher, EntryPoint) == 0x000000, "Member 'ABP_GoblinArcher_C_ExecuteUbergraph_ABP_GoblinArcher::EntryPoint' has a wrong offset!");
static_assert(offsetof(ABP_GoblinArcher_C_ExecuteUbergraph_ABP_GoblinArcher, CallFunc_TryGetPawnOwner_ReturnValue) == 0x000008, "Member 'ABP_GoblinArcher_C_ExecuteUbergraph_ABP_GoblinArcher::CallFunc_TryGetPawnOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_GoblinArcher_C_ExecuteUbergraph_ABP_GoblinArcher, K2Node_DynamicCast_AsBP_Goblin_Archer) == 0x000010, "Member 'ABP_GoblinArcher_C_ExecuteUbergraph_ABP_GoblinArcher::K2Node_DynamicCast_AsBP_Goblin_Archer' has a wrong offset!");
static_assert(offsetof(ABP_GoblinArcher_C_ExecuteUbergraph_ABP_GoblinArcher, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'ABP_GoblinArcher_C_ExecuteUbergraph_ABP_GoblinArcher::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ABP_GoblinArcher_C_ExecuteUbergraph_ABP_GoblinArcher, K2Node_DynamicCast_AsBP_Goblin_Archer_1) == 0x000020, "Member 'ABP_GoblinArcher_C_ExecuteUbergraph_ABP_GoblinArcher::K2Node_DynamicCast_AsBP_Goblin_Archer_1' has a wrong offset!");
static_assert(offsetof(ABP_GoblinArcher_C_ExecuteUbergraph_ABP_GoblinArcher, K2Node_DynamicCast_bSuccess_1) == 0x000028, "Member 'ABP_GoblinArcher_C_ExecuteUbergraph_ABP_GoblinArcher::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

}

