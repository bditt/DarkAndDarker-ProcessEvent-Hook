#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_FrostImp_IceMineProjectile

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "AkAudio_structs.hpp"


namespace SDK::Params
{

// Function BP_FrostImp_IceMineProjectile.BP_FrostImp_IceMineProjectile_C.ExecuteUbergraph_BP_FrostImp_IceMineProjectile
// 0x0270 (0x0270 - 0x0000)
struct BP_FrostImp_IceMineProjectile_C_ExecuteUbergraph_BP_FrostImp_IceMineProjectile final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable;                            // 0x0004(0x0010)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable_1;                          // 0x0014(0x0010)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_437C[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_Event_Hit;                                  // 0x0028(0x00E8)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          K2Node_Event_bIsAttached;                          // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_437D[0xF];                                     // 0x0111(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             K2Node_Event_ActorPrevTickTransform;               // 0x0120(0x0060)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0181(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_437E[0x2];                                     // 0x0182(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0184(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_437F[0x4];                                     // 0x018C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0190(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x01A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x01C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x01D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x01F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x01F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0200(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0208(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x0210(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0218(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x021C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0220(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4380[0x4];                                     // 0x0224(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0228(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0240(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_PostAkEvent_ReturnValue;                  // 0x0258(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_Event_InGameplayTag;                        // 0x025C(0x0008)(ConstParm, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_InCount;                              // 0x0264(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEndPlayReason                                K2Node_Event_EndPlayReason;                        // 0x0268(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0269(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_MatchesTag_ReturnValue;                   // 0x026A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4381[0x1];                                     // 0x026B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_PostAkEvent_ReturnValue_1;                // 0x026C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FrostImp_IceMineProjectile_C_ExecuteUbergraph_BP_FrostImp_IceMineProjectile) == 0x000010, "Wrong alignment on BP_FrostImp_IceMineProjectile_C_ExecuteUbergraph_BP_FrostImp_IceMineProjectile");
static_assert(sizeof(BP_FrostImp_IceMineProjectile_C_ExecuteUbergraph_BP_FrostImp_IceMineProjectile) == 0x000270, "Wrong size on BP_FrostImp_IceMineProjectile_C_ExecuteUbergraph_BP_FrostImp_IceMineProjectile");
static_assert(offsetof(BP_FrostImp_IceMineProjectile_C_ExecuteUbergraph_BP_FrostImp_IceMineProjectile, EntryPoint) == 0x000000, "Member 'BP_FrostImp_IceMineProjectile_C_ExecuteUbergraph_BP_FrostImp_IceMineProjectile::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_FrostImp_IceMineProjectile_C_ExecuteUbergraph_BP_FrostImp_IceMineProjectile, Temp_delegate_Variable) == 0x000004, "Member 'BP_FrostImp_IceMineProjectile_C_ExecuteUbergraph_BP_FrostImp_IceMineProjectile::Temp_delegate_Variable' has a wrong offset!");
static_assert(offsetof(BP_FrostImp_IceMineProjectile_C_ExecuteUbergraph_BP_FrostImp_IceMineProjectile, Temp_delegate_Variable_1) == 0x000014, "Member 'BP_FrostImp_IceMineProjectile_C_ExecuteUbergraph_BP_FrostImp_IceMineProjectile::Temp_delegate_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_FrostImp_IceMineProjectile_C_ExecuteUbergraph_BP_FrostImp_IceMineProjectile, K2Node_Event_Hit) == 0x000028, "Member 'BP_FrostImp_IceMineProjectile_C_ExecuteUbergraph_BP_FrostImp_IceMineProjectile::K2Node_Event_Hit' has a wrong offset!");
static_assert(offsetof(BP_FrostImp_IceMineProjectile_C_ExecuteUbergraph_BP_FrostImp_IceMineProjectile, K2Node_Event_bIsAttached) == 0x000110, "Member 'BP_FrostImp_IceMineProjectile_C_ExecuteUbergraph_BP_FrostImp_IceMineProjectile::K2Node_Event_bIsAttached' has a wrong offset!");
static_assert(offsetof(BP_FrostImp_IceMineProjectile_C_ExecuteUbergraph_BP_FrostImp_IceMineProjectile, K2Node_Event_ActorPrevTickTransform) == 0x000120, "Member 'BP_FrostImp_IceMineProjectile_C_ExecuteUbergraph_BP_FrostImp_IceMineProjectile::K2Node_Event_ActorPrevTickTransform' has a wrong offset!");
static_assert(offsetof(BP_FrostImp_IceMineProjectile_C_ExecuteUbergraph_BP_FrostImp_IceMineProjectile, CallFunc_BreakHitResult_bBlockingHit) == 0x000180, "Member 'BP_FrostImp_IceMineProjectile_C_ExecuteUbergraph_BP_FrostImp_IceMineProjectile::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_FrostImp_IceMineProjectile_C_ExecuteUbergraph_BP_FrostImp_IceMineProjectile, CallFunc_BreakHitResult_bInitialOverlap) == 0x000181, "Member 'BP_FrostImp_IceMineProjectile_C_ExecuteUbergraph_BP_FrostImp_IceMineProjectile::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_FrostImp_IceMineProjectile_C_ExecuteUbergraph_BP_FrostImp_IceMineProjectile, CallFunc_BreakHitResult_Time) == 0x000184, "Member 'BP_FrostImp_IceMineProjectile_C_ExecuteUbergraph_BP_FrostImp_IceMineProjectile::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_FrostImp_IceMineProjectile_C_ExecuteUbergraph_BP_FrostImp_IceMineProjectile, CallFunc_BreakHitResult_Distance) == 0x000188, "Member 'BP_FrostImp_IceMineProjectile_C_ExecuteUbergraph_BP_FrostImp_IceMineProjectile::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_FrostImp_IceMineProjectile_C_ExecuteUbergraph_BP_FrostImp_IceMineProjectile, CallFunc_BreakHitResult_Location) == 0x000190, "Member 'BP_FrostImp_IceMineProjectile_C_ExecuteUbergraph_BP_FrostImp_IceMineProjectile::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_FrostImp_IceMineProjectile_C_ExecuteUbergraph_BP_FrostImp_IceMineProjectile, CallFunc_BreakHitResult_ImpactPoint) == 0x0001A8, "Member 'BP_FrostImp_IceMineProjectile_C_ExecuteUbergraph_BP_FrostImp_IceMineProjectile::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_FrostImp_IceMineProjectile_C_ExecuteUbergraph_BP_FrostImp_IceMineProjectile, CallFunc_BreakHitResult_Normal) == 0x0001C0, "Member 'BP_FrostImp_IceMineProjectile_C_ExecuteUbergraph_BP_FrostImp_IceMineProjectile::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_FrostImp_IceMineProjectile_C_ExecuteUbergraph_BP_FrostImp_IceMineProjectile, CallFunc_BreakHitResult_ImpactNormal) == 0x0001D8, "Member 'BP_FrostImp_IceMineProjectile_C_ExecuteUbergraph_BP_FrostImp_IceMineProjectile::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_FrostImp_IceMineProjectile_C_ExecuteUbergraph_BP_FrostImp_IceMineProjectile, CallFunc_BreakHitResult_PhysMat) == 0x0001F0, "Member 'BP_FrostImp_IceMineProjectile_C_ExecuteUbergraph_BP_FrostImp_IceMineProjectile::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_FrostImp_IceMineProjectile_C_ExecuteUbergraph_BP_FrostImp_IceMineProjectile, CallFunc_BreakHitResult_HitActor) == 0x0001F8, "Member 'BP_FrostImp_IceMineProjectile_C_ExecuteUbergraph_BP_FrostImp_IceMineProjectile::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_FrostImp_IceMineProjectile_C_ExecuteUbergraph_BP_FrostImp_IceMineProjectile, CallFunc_BreakHitResult_HitComponent) == 0x000200, "Member 'BP_FrostImp_IceMineProjectile_C_ExecuteUbergraph_BP_FrostImp_IceMineProjectile::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_FrostImp_IceMineProjectile_C_ExecuteUbergraph_BP_FrostImp_IceMineProjectile, CallFunc_BreakHitResult_HitBoneName) == 0x000208, "Member 'BP_FrostImp_IceMineProjectile_C_ExecuteUbergraph_BP_FrostImp_IceMineProjectile::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_FrostImp_IceMineProjectile_C_ExecuteUbergraph_BP_FrostImp_IceMineProjectile, CallFunc_BreakHitResult_BoneName) == 0x000210, "Member 'BP_FrostImp_IceMineProjectile_C_ExecuteUbergraph_BP_FrostImp_IceMineProjectile::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(BP_FrostImp_IceMineProjectile_C_ExecuteUbergraph_BP_FrostImp_IceMineProjectile, CallFunc_BreakHitResult_HitItem) == 0x000218, "Member 'BP_FrostImp_IceMineProjectile_C_ExecuteUbergraph_BP_FrostImp_IceMineProjectile::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_FrostImp_IceMineProjectile_C_ExecuteUbergraph_BP_FrostImp_IceMineProjectile, CallFunc_BreakHitResult_ElementIndex) == 0x00021C, "Member 'BP_FrostImp_IceMineProjectile_C_ExecuteUbergraph_BP_FrostImp_IceMineProjectile::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(BP_FrostImp_IceMineProjectile_C_ExecuteUbergraph_BP_FrostImp_IceMineProjectile, CallFunc_BreakHitResult_FaceIndex) == 0x000220, "Member 'BP_FrostImp_IceMineProjectile_C_ExecuteUbergraph_BP_FrostImp_IceMineProjectile::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_FrostImp_IceMineProjectile_C_ExecuteUbergraph_BP_FrostImp_IceMineProjectile, CallFunc_BreakHitResult_TraceStart) == 0x000228, "Member 'BP_FrostImp_IceMineProjectile_C_ExecuteUbergraph_BP_FrostImp_IceMineProjectile::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_FrostImp_IceMineProjectile_C_ExecuteUbergraph_BP_FrostImp_IceMineProjectile, CallFunc_BreakHitResult_TraceEnd) == 0x000240, "Member 'BP_FrostImp_IceMineProjectile_C_ExecuteUbergraph_BP_FrostImp_IceMineProjectile::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_FrostImp_IceMineProjectile_C_ExecuteUbergraph_BP_FrostImp_IceMineProjectile, CallFunc_PostAkEvent_ReturnValue) == 0x000258, "Member 'BP_FrostImp_IceMineProjectile_C_ExecuteUbergraph_BP_FrostImp_IceMineProjectile::CallFunc_PostAkEvent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FrostImp_IceMineProjectile_C_ExecuteUbergraph_BP_FrostImp_IceMineProjectile, K2Node_Event_InGameplayTag) == 0x00025C, "Member 'BP_FrostImp_IceMineProjectile_C_ExecuteUbergraph_BP_FrostImp_IceMineProjectile::K2Node_Event_InGameplayTag' has a wrong offset!");
static_assert(offsetof(BP_FrostImp_IceMineProjectile_C_ExecuteUbergraph_BP_FrostImp_IceMineProjectile, K2Node_Event_InCount) == 0x000264, "Member 'BP_FrostImp_IceMineProjectile_C_ExecuteUbergraph_BP_FrostImp_IceMineProjectile::K2Node_Event_InCount' has a wrong offset!");
static_assert(offsetof(BP_FrostImp_IceMineProjectile_C_ExecuteUbergraph_BP_FrostImp_IceMineProjectile, K2Node_Event_EndPlayReason) == 0x000268, "Member 'BP_FrostImp_IceMineProjectile_C_ExecuteUbergraph_BP_FrostImp_IceMineProjectile::K2Node_Event_EndPlayReason' has a wrong offset!");
static_assert(offsetof(BP_FrostImp_IceMineProjectile_C_ExecuteUbergraph_BP_FrostImp_IceMineProjectile, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000269, "Member 'BP_FrostImp_IceMineProjectile_C_ExecuteUbergraph_BP_FrostImp_IceMineProjectile::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FrostImp_IceMineProjectile_C_ExecuteUbergraph_BP_FrostImp_IceMineProjectile, CallFunc_MatchesTag_ReturnValue) == 0x00026A, "Member 'BP_FrostImp_IceMineProjectile_C_ExecuteUbergraph_BP_FrostImp_IceMineProjectile::CallFunc_MatchesTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FrostImp_IceMineProjectile_C_ExecuteUbergraph_BP_FrostImp_IceMineProjectile, CallFunc_PostAkEvent_ReturnValue_1) == 0x00026C, "Member 'BP_FrostImp_IceMineProjectile_C_ExecuteUbergraph_BP_FrostImp_IceMineProjectile::CallFunc_PostAkEvent_ReturnValue_1' has a wrong offset!");

// Function BP_FrostImp_IceMineProjectile.BP_FrostImp_IceMineProjectile_C.GameplayTagUpdated
// 0x000C (0x000C - 0x0000)
struct BP_FrostImp_IceMineProjectile_C_GameplayTagUpdated final
{
public:
	struct FGameplayTag                           InGameplayTag;                                     // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	int32                                         InCount;                                           // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FrostImp_IceMineProjectile_C_GameplayTagUpdated) == 0x000004, "Wrong alignment on BP_FrostImp_IceMineProjectile_C_GameplayTagUpdated");
static_assert(sizeof(BP_FrostImp_IceMineProjectile_C_GameplayTagUpdated) == 0x00000C, "Wrong size on BP_FrostImp_IceMineProjectile_C_GameplayTagUpdated");
static_assert(offsetof(BP_FrostImp_IceMineProjectile_C_GameplayTagUpdated, InGameplayTag) == 0x000000, "Member 'BP_FrostImp_IceMineProjectile_C_GameplayTagUpdated::InGameplayTag' has a wrong offset!");
static_assert(offsetof(BP_FrostImp_IceMineProjectile_C_GameplayTagUpdated, InCount) == 0x000008, "Member 'BP_FrostImp_IceMineProjectile_C_GameplayTagUpdated::InCount' has a wrong offset!");

// Function BP_FrostImp_IceMineProjectile.BP_FrostImp_IceMineProjectile_C.ProjectileHit
// 0x0150 (0x0150 - 0x0000)
struct BP_FrostImp_IceMineProjectile_C_ProjectileHit final
{
public:
	struct FHitResult                             Hit;                                               // 0x0000(0x00E8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          bIsAttached;                                       // 0x00E8(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4382[0x7];                                     // 0x00E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             ActorPrevTickTransform;                            // 0x00F0(0x0060)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FrostImp_IceMineProjectile_C_ProjectileHit) == 0x000010, "Wrong alignment on BP_FrostImp_IceMineProjectile_C_ProjectileHit");
static_assert(sizeof(BP_FrostImp_IceMineProjectile_C_ProjectileHit) == 0x000150, "Wrong size on BP_FrostImp_IceMineProjectile_C_ProjectileHit");
static_assert(offsetof(BP_FrostImp_IceMineProjectile_C_ProjectileHit, Hit) == 0x000000, "Member 'BP_FrostImp_IceMineProjectile_C_ProjectileHit::Hit' has a wrong offset!");
static_assert(offsetof(BP_FrostImp_IceMineProjectile_C_ProjectileHit, bIsAttached) == 0x0000E8, "Member 'BP_FrostImp_IceMineProjectile_C_ProjectileHit::bIsAttached' has a wrong offset!");
static_assert(offsetof(BP_FrostImp_IceMineProjectile_C_ProjectileHit, ActorPrevTickTransform) == 0x0000F0, "Member 'BP_FrostImp_IceMineProjectile_C_ProjectileHit::ActorPrevTickTransform' has a wrong offset!");

// Function BP_FrostImp_IceMineProjectile.BP_FrostImp_IceMineProjectile_C.ReceiveEndPlay
// 0x0001 (0x0001 - 0x0000)
struct BP_FrostImp_IceMineProjectile_C_ReceiveEndPlay final
{
public:
	EEndPlayReason                                EndPlayReason;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FrostImp_IceMineProjectile_C_ReceiveEndPlay) == 0x000001, "Wrong alignment on BP_FrostImp_IceMineProjectile_C_ReceiveEndPlay");
static_assert(sizeof(BP_FrostImp_IceMineProjectile_C_ReceiveEndPlay) == 0x000001, "Wrong size on BP_FrostImp_IceMineProjectile_C_ReceiveEndPlay");
static_assert(offsetof(BP_FrostImp_IceMineProjectile_C_ReceiveEndPlay, EndPlayReason) == 0x000000, "Member 'BP_FrostImp_IceMineProjectile_C_ReceiveEndPlay::EndPlayReason' has a wrong offset!");

}

