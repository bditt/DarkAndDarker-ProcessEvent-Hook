#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_DCMonsterBase

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "DungeonCrawler_classes.hpp"
#include "CoreUObject_structs.hpp"
#include "AkAudio_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_DCMonsterBase.BP_DCMonsterBase_C
// 0x0040 (0x0E40 - 0x0E00)
class ABP_DCMonsterBase_C : public ADCMonsterBase
{
public:
	uint8                                         Pad_3599[0x8];                                     // 0x0DF8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0E00(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UDCGameSpawnableComponent*              DCGameSpawnable;                                   // 0x0E08(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UDCAkComponent*                         DCAk;                                              // 0x0E10(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UInteractableTargetComponent*           InteractableTarget;                                // 0x0E18(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UItemRandomGenerateComponent*           ItemRandomGenerate;                                // 0x0E20(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        AudibleDistance;                                   // 0x0E28(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FPrimaryAssetId>                InteractSettingArray;                              // 0x0E30(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void BndEvt__BP_DCMonsterBase_ItemRandomGenerate_K2Node_ComponentBoundEvent_0_ItemGenerationFinishedSignature__DelegateSignature(TArray<struct FItemData>& ResultItems);
	void EventFMsgSoundEvent(const struct FMsgSoundEvent& Msg);
	void ExecuteUbergraph_BP_DCMonsterBase(int32 EntryPoint);
	void InteractSucceed(class AActor* Interacter, const struct FGameplayTag& StateTag, const struct FGameplayTag& TriggerTag, const struct FHitResult& HitResult);
	void OnMessageReceived_BD0C56DE4311A2D9C82D2C927A275C83(class UMsgBaseNode* ProxyObject);
	void ReceiveBeginPlay();
	void ReceivePreInitializeComponents();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_DCMonsterBase_C">();
	}
	static class ABP_DCMonsterBase_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_DCMonsterBase_C>();
	}
};
static_assert(alignof(ABP_DCMonsterBase_C) == 0x000010, "Wrong alignment on ABP_DCMonsterBase_C");
static_assert(sizeof(ABP_DCMonsterBase_C) == 0x000E40, "Wrong size on ABP_DCMonsterBase_C");
static_assert(offsetof(ABP_DCMonsterBase_C, UberGraphFrame) == 0x000E00, "Member 'ABP_DCMonsterBase_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_DCMonsterBase_C, DCGameSpawnable) == 0x000E08, "Member 'ABP_DCMonsterBase_C::DCGameSpawnable' has a wrong offset!");
static_assert(offsetof(ABP_DCMonsterBase_C, DCAk) == 0x000E10, "Member 'ABP_DCMonsterBase_C::DCAk' has a wrong offset!");
static_assert(offsetof(ABP_DCMonsterBase_C, InteractableTarget) == 0x000E18, "Member 'ABP_DCMonsterBase_C::InteractableTarget' has a wrong offset!");
static_assert(offsetof(ABP_DCMonsterBase_C, ItemRandomGenerate) == 0x000E20, "Member 'ABP_DCMonsterBase_C::ItemRandomGenerate' has a wrong offset!");
static_assert(offsetof(ABP_DCMonsterBase_C, AudibleDistance) == 0x000E28, "Member 'ABP_DCMonsterBase_C::AudibleDistance' has a wrong offset!");
static_assert(offsetof(ABP_DCMonsterBase_C, InteractSettingArray) == 0x000E30, "Member 'ABP_DCMonsterBase_C::InteractSettingArray' has a wrong offset!");

}

