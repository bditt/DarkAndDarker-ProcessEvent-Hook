#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_PlayerGuardBase

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"
#include "GameplayAbilities_structs.hpp"


namespace SDK::Params
{

// Function GA_PlayerGuardBase.GA_PlayerGuardBase_C.AbilityActivated
// 0x00B0 (0x00B0 - 0x0000)
struct GA_PlayerGuardBase_C_AbilityActivated final
{
public:
	struct FGameplayEventData                     TriggerEventData;                                  // 0x0000(0x00B0)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(GA_PlayerGuardBase_C_AbilityActivated) == 0x000008, "Wrong alignment on GA_PlayerGuardBase_C_AbilityActivated");
static_assert(sizeof(GA_PlayerGuardBase_C_AbilityActivated) == 0x0000B0, "Wrong size on GA_PlayerGuardBase_C_AbilityActivated");
static_assert(offsetof(GA_PlayerGuardBase_C_AbilityActivated, TriggerEventData) == 0x000000, "Member 'GA_PlayerGuardBase_C_AbilityActivated::TriggerEventData' has a wrong offset!");

// Function GA_PlayerGuardBase.GA_PlayerGuardBase_C.ExecuteUbergraph_GA_PlayerGuardBase
// 0x01D0 (0x01D0 - 0x0000)
struct GA_PlayerGuardBase_C_ExecuteUbergraph_GA_PlayerGuardBase final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0014(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_Event_EventTag;                             // 0x0024(0x0008)(NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_45CB[0x4];                                     // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayEventData                     K2Node_Event_EventData;                            // 0x0030(0x00B0)()
	struct FGameplayEventData                     K2Node_Event_TriggerEventData;                     // 0x00E0(0x00B0)(ConstParm)
	bool                                          GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess;   // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_45CC[0x7];                                     // 0x0191(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAbilitySystemComponent*                CallFunc_GetAbilitySystemComponentFromActorInfo_ReturnValue; // 0x0198(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue;          // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_45CD[0x7];                                     // 0x01A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasMatchingGameplayTag_self_CastInput;    // 0x01A8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue;       // 0x01B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_45CE[0x7];                                     // 0x01B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UDCAT_WaitForInputAction*               CallFunc_WaitForInputAction_ReturnValue;           // 0x01C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x01C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_PlayerGuardBase_C_ExecuteUbergraph_GA_PlayerGuardBase) == 0x000008, "Wrong alignment on GA_PlayerGuardBase_C_ExecuteUbergraph_GA_PlayerGuardBase");
static_assert(sizeof(GA_PlayerGuardBase_C_ExecuteUbergraph_GA_PlayerGuardBase) == 0x0001D0, "Wrong size on GA_PlayerGuardBase_C_ExecuteUbergraph_GA_PlayerGuardBase");
static_assert(offsetof(GA_PlayerGuardBase_C_ExecuteUbergraph_GA_PlayerGuardBase, EntryPoint) == 0x000000, "Member 'GA_PlayerGuardBase_C_ExecuteUbergraph_GA_PlayerGuardBase::EntryPoint' has a wrong offset!");
static_assert(offsetof(GA_PlayerGuardBase_C_ExecuteUbergraph_GA_PlayerGuardBase, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'GA_PlayerGuardBase_C_ExecuteUbergraph_GA_PlayerGuardBase::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(GA_PlayerGuardBase_C_ExecuteUbergraph_GA_PlayerGuardBase, K2Node_CreateDelegate_OutputDelegate_1) == 0x000014, "Member 'GA_PlayerGuardBase_C_ExecuteUbergraph_GA_PlayerGuardBase::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(GA_PlayerGuardBase_C_ExecuteUbergraph_GA_PlayerGuardBase, K2Node_Event_EventTag) == 0x000024, "Member 'GA_PlayerGuardBase_C_ExecuteUbergraph_GA_PlayerGuardBase::K2Node_Event_EventTag' has a wrong offset!");
static_assert(offsetof(GA_PlayerGuardBase_C_ExecuteUbergraph_GA_PlayerGuardBase, K2Node_Event_EventData) == 0x000030, "Member 'GA_PlayerGuardBase_C_ExecuteUbergraph_GA_PlayerGuardBase::K2Node_Event_EventData' has a wrong offset!");
static_assert(offsetof(GA_PlayerGuardBase_C_ExecuteUbergraph_GA_PlayerGuardBase, K2Node_Event_TriggerEventData) == 0x0000E0, "Member 'GA_PlayerGuardBase_C_ExecuteUbergraph_GA_PlayerGuardBase::K2Node_Event_TriggerEventData' has a wrong offset!");
static_assert(offsetof(GA_PlayerGuardBase_C_ExecuteUbergraph_GA_PlayerGuardBase, GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess) == 0x000190, "Member 'GA_PlayerGuardBase_C_ExecuteUbergraph_GA_PlayerGuardBase::GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess' has a wrong offset!");
static_assert(offsetof(GA_PlayerGuardBase_C_ExecuteUbergraph_GA_PlayerGuardBase, CallFunc_GetAbilitySystemComponentFromActorInfo_ReturnValue) == 0x000198, "Member 'GA_PlayerGuardBase_C_ExecuteUbergraph_GA_PlayerGuardBase::CallFunc_GetAbilitySystemComponentFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_PlayerGuardBase_C_ExecuteUbergraph_GA_PlayerGuardBase, CallFunc_IsLocallyControlled_ReturnValue) == 0x0001A0, "Member 'GA_PlayerGuardBase_C_ExecuteUbergraph_GA_PlayerGuardBase::CallFunc_IsLocallyControlled_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_PlayerGuardBase_C_ExecuteUbergraph_GA_PlayerGuardBase, CallFunc_HasMatchingGameplayTag_self_CastInput) == 0x0001A8, "Member 'GA_PlayerGuardBase_C_ExecuteUbergraph_GA_PlayerGuardBase::CallFunc_HasMatchingGameplayTag_self_CastInput' has a wrong offset!");
static_assert(offsetof(GA_PlayerGuardBase_C_ExecuteUbergraph_GA_PlayerGuardBase, CallFunc_HasMatchingGameplayTag_ReturnValue) == 0x0001B8, "Member 'GA_PlayerGuardBase_C_ExecuteUbergraph_GA_PlayerGuardBase::CallFunc_HasMatchingGameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_PlayerGuardBase_C_ExecuteUbergraph_GA_PlayerGuardBase, CallFunc_WaitForInputAction_ReturnValue) == 0x0001C0, "Member 'GA_PlayerGuardBase_C_ExecuteUbergraph_GA_PlayerGuardBase::CallFunc_WaitForInputAction_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_PlayerGuardBase_C_ExecuteUbergraph_GA_PlayerGuardBase, CallFunc_IsValid_ReturnValue) == 0x0001C8, "Member 'GA_PlayerGuardBase_C_ExecuteUbergraph_GA_PlayerGuardBase::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function GA_PlayerGuardBase.GA_PlayerGuardBase_C.ReceivedEvent
// 0x00B8 (0x00B8 - 0x0000)
struct GA_PlayerGuardBase_C_ReceivedEvent final
{
public:
	struct FGameplayTag                           EventTag;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEventData                     EventData;                                         // 0x0008(0x00B0)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(GA_PlayerGuardBase_C_ReceivedEvent) == 0x000008, "Wrong alignment on GA_PlayerGuardBase_C_ReceivedEvent");
static_assert(sizeof(GA_PlayerGuardBase_C_ReceivedEvent) == 0x0000B8, "Wrong size on GA_PlayerGuardBase_C_ReceivedEvent");
static_assert(offsetof(GA_PlayerGuardBase_C_ReceivedEvent, EventTag) == 0x000000, "Member 'GA_PlayerGuardBase_C_ReceivedEvent::EventTag' has a wrong offset!");
static_assert(offsetof(GA_PlayerGuardBase_C_ReceivedEvent, EventData) == 0x000008, "Member 'GA_PlayerGuardBase_C_ReceivedEvent::EventData' has a wrong offset!");

}

