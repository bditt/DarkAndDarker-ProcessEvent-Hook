#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_FrostImp_Teleport

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "E_Direction_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "GA_PlayMontageAndWaitForEventBase_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass GA_FrostImp_Teleport.GA_FrostImp_Teleport_C
// 0x00F0 (0x0768 - 0x0678)
class UGA_FrostImp_Teleport_C final : public UGA_PlayMontageAndWaitForEventBase_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_GA_FrostImp_Teleport_C;             // 0x0678(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FGameplayEventData                     Trigger_Event_Data;                                // 0x0680(0x00B0)(Edit, BlueprintVisible, DisableEditOnInstance)
	class AActor*                                 Target;                                            // 0x0730(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class ABP_FrostImp_Common_C*                  As_BP_IceImp;                                      // 0x0738(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           Teleport_Timer_Handle;                             // 0x0740(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Target_Location;                                   // 0x0748(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Direction                                   Direction;                                         // 0x0760(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_384F[0x3];                                     // 0x0761(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Loop_Count;                                        // 0x0764(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void AbilityActivated(const struct FGameplayEventData& TriggerEventData);
	void EventReceived_ADCB400246DB4880FB2989819DE91EBF(const struct FGameplayEventData& Payload);
	void ExecuteUbergraph_GA_FrostImp_Teleport(int32 EntryPoint);
	void Get_XY_Location(const struct FVector& Origin);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GA_FrostImp_Teleport_C">();
	}
	static class UGA_FrostImp_Teleport_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGA_FrostImp_Teleport_C>();
	}
};
static_assert(alignof(UGA_FrostImp_Teleport_C) == 0x000008, "Wrong alignment on UGA_FrostImp_Teleport_C");
static_assert(sizeof(UGA_FrostImp_Teleport_C) == 0x000768, "Wrong size on UGA_FrostImp_Teleport_C");
static_assert(offsetof(UGA_FrostImp_Teleport_C, UberGraphFrame_GA_FrostImp_Teleport_C) == 0x000678, "Member 'UGA_FrostImp_Teleport_C::UberGraphFrame_GA_FrostImp_Teleport_C' has a wrong offset!");
static_assert(offsetof(UGA_FrostImp_Teleport_C, Trigger_Event_Data) == 0x000680, "Member 'UGA_FrostImp_Teleport_C::Trigger_Event_Data' has a wrong offset!");
static_assert(offsetof(UGA_FrostImp_Teleport_C, Target) == 0x000730, "Member 'UGA_FrostImp_Teleport_C::Target' has a wrong offset!");
static_assert(offsetof(UGA_FrostImp_Teleport_C, As_BP_IceImp) == 0x000738, "Member 'UGA_FrostImp_Teleport_C::As_BP_IceImp' has a wrong offset!");
static_assert(offsetof(UGA_FrostImp_Teleport_C, Teleport_Timer_Handle) == 0x000740, "Member 'UGA_FrostImp_Teleport_C::Teleport_Timer_Handle' has a wrong offset!");
static_assert(offsetof(UGA_FrostImp_Teleport_C, Target_Location) == 0x000748, "Member 'UGA_FrostImp_Teleport_C::Target_Location' has a wrong offset!");
static_assert(offsetof(UGA_FrostImp_Teleport_C, Direction) == 0x000760, "Member 'UGA_FrostImp_Teleport_C::Direction' has a wrong offset!");
static_assert(offsetof(UGA_FrostImp_Teleport_C, Loop_Count) == 0x000764, "Member 'UGA_FrostImp_Teleport_C::Loop_Count' has a wrong offset!");

}

