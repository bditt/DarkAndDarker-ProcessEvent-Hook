#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_ItemInstallPassiveBase

#include "Basic.hpp"

#include "GA_StoppablePassive_classes.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass GA_ItemInstallPassiveBase.GA_ItemInstallPassiveBase_C
// 0x0028 (0x05F0 - 0x05C8)
class UGA_ItemInstallPassiveBase_C : public UGA_StoppablePassive_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x05C8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UClass*                                 ReticleActorClass;                                 // 0x05D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UAbilityTask_WaitTargetData*            WaitTargetDataTask;                                // 0x05D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FPrimaryAssetId                        ConstantAssetId;                                   // 0x05E0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void Cancelled_4B7FDAA9405950C400722898D559C59E(const struct FGameplayAbilityTargetDataHandle& Data);
	void EventReceived_85952FD14FE8538A2FA00EA4FDA1DE72(const struct FGameplayTag& EventTag, const struct FGameplayEventData& EventData);
	void ExecuteUbergraph_GA_ItemInstallPassiveBase(int32 EntryPoint);
	void K2_ActivateAbilityFromEvent(const struct FGameplayEventData& EventData);
	void OnPassiveStart();
	void OnPassiveStop();
	void ValidData_4B7FDAA9405950C400722898D559C59E(const struct FGameplayAbilityTargetDataHandle& Data);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GA_ItemInstallPassiveBase_C">();
	}
	static class UGA_ItemInstallPassiveBase_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGA_ItemInstallPassiveBase_C>();
	}
};
static_assert(alignof(UGA_ItemInstallPassiveBase_C) == 0x000008, "Wrong alignment on UGA_ItemInstallPassiveBase_C");
static_assert(sizeof(UGA_ItemInstallPassiveBase_C) == 0x0005F0, "Wrong size on UGA_ItemInstallPassiveBase_C");
static_assert(offsetof(UGA_ItemInstallPassiveBase_C, UberGraphFrame) == 0x0005C8, "Member 'UGA_ItemInstallPassiveBase_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UGA_ItemInstallPassiveBase_C, ReticleActorClass) == 0x0005D0, "Member 'UGA_ItemInstallPassiveBase_C::ReticleActorClass' has a wrong offset!");
static_assert(offsetof(UGA_ItemInstallPassiveBase_C, WaitTargetDataTask) == 0x0005D8, "Member 'UGA_ItemInstallPassiveBase_C::WaitTargetDataTask' has a wrong offset!");
static_assert(offsetof(UGA_ItemInstallPassiveBase_C, ConstantAssetId) == 0x0005E0, "Member 'UGA_ItemInstallPassiveBase_C::ConstantAssetId' has a wrong offset!");

}

