#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_Hide

#include "Basic.hpp"

#include "GA_PlayerSkillInstantAndWaitForEnd_classes.hpp"
#include "Engine_structs.hpp"
#include "GameplayTags_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass GA_Hide.GA_Hide_C
// 0x0058 (0x0738 - 0x06E0)
class UGA_Hide_C final : public UGA_PlayerSkillInstantAndWaitForEnd_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x06E0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class FText                                   LightSourceMSG;                                    // 0x06E8(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FGameplayTag                           Tag_to_Check;                                      // 0x0700(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class FText                                   InLightAreaMessage;                                // 0x0708(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FGameplayTag                           LightSourceEquippedStateTag;                       // 0x0720(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           InLightAreaStateTag;                               // 0x0728(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	int32                                         Steps;                                             // 0x0730(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void AbilityActivated(const struct FGameplayEventData& TriggerEventData);
	void Added_1ED887114F55437A29F67D82626B5D70();
	void Added_40502DB04EA0EDBB14D55C912E356636();
	void Added_6006FEFF4AFD4D44772019B0CAD4EAAD();
	void EventReceived_4E31C2814B584A132D94CB837DF6501D(const struct FGameplayEventData& Payload);
	void ExecuteUbergraph_GA_Hide(int32 EntryPoint);
	void K2_OnEndAbility(bool bWasCancelled);
	void OnFootStep();
	void OnOverlap_89D325EA430B144B1755DAB1351C7ED8(const struct FGameplayAbilityTargetDataHandle& TargetData);
	void ServerOnSkillActivate(const struct FGameplayTag& SkillTag, const struct FGameplayTag& CooldownTag);

	bool K2_CanActivateAbility(const struct FGameplayAbilityActorInfo& ActorInfo, const struct FGameplayAbilitySpecHandle& Handle, struct FGameplayTagContainer* RelevantTags) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GA_Hide_C">();
	}
	static class UGA_Hide_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGA_Hide_C>();
	}
};
static_assert(alignof(UGA_Hide_C) == 0x000008, "Wrong alignment on UGA_Hide_C");
static_assert(sizeof(UGA_Hide_C) == 0x000738, "Wrong size on UGA_Hide_C");
static_assert(offsetof(UGA_Hide_C, UberGraphFrame) == 0x0006E0, "Member 'UGA_Hide_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UGA_Hide_C, LightSourceMSG) == 0x0006E8, "Member 'UGA_Hide_C::LightSourceMSG' has a wrong offset!");
static_assert(offsetof(UGA_Hide_C, Tag_to_Check) == 0x000700, "Member 'UGA_Hide_C::Tag_to_Check' has a wrong offset!");
static_assert(offsetof(UGA_Hide_C, InLightAreaMessage) == 0x000708, "Member 'UGA_Hide_C::InLightAreaMessage' has a wrong offset!");
static_assert(offsetof(UGA_Hide_C, LightSourceEquippedStateTag) == 0x000720, "Member 'UGA_Hide_C::LightSourceEquippedStateTag' has a wrong offset!");
static_assert(offsetof(UGA_Hide_C, InLightAreaStateTag) == 0x000728, "Member 'UGA_Hide_C::InLightAreaStateTag' has a wrong offset!");
static_assert(offsetof(UGA_Hide_C, Steps) == 0x000730, "Member 'UGA_Hide_C::Steps' has a wrong offset!");

}

