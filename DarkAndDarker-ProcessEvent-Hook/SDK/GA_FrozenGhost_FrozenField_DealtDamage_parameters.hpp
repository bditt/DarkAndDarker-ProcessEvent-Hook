#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_FrozenGhost_FrozenField_DealtDamage

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"
#include "GameplayAbilities_structs.hpp"


namespace SDK::Params
{

// Function GA_FrozenGhost_FrozenField_DealtDamage.GA_FrozenGhost_FrozenField_DealtDamage_C.Apply GameplayEffect
// 0x01B0 (0x01B0 - 0x0000)
struct GA_FrozenGhost_FrozenField_DealtDamage_C_Apply_GameplayEffect final
{
public:
	TArray<struct FGameplayTag>                   Apply_Effect_Tags;                                 // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class ADCCharacterBase*                       Target;                                            // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           CallFunc_Array_Get_Item_1;                         // 0x0020(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayEventData                     K2Node_MakeStruct_GameplayEventData;               // 0x0028(0x00B0)()
	TArray<struct FActiveGameplayEffectHandle>    CallFunc_ApplyPremadeSpecArray_ReturnValue;        // 0x00D8(0x0010)(ReferenceParm)
	bool                                          CallFunc_Remove_Target_Out_Remove_Target_Out;      // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C36[0x7];                                     // 0x00E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayEventData                     K2Node_MakeStruct_GameplayEventData_1;             // 0x00F0(0x00B0)()
	TArray<struct FActiveGameplayEffectHandle>    CallFunc_ApplyPremadeSpecArray_ReturnValue_1;      // 0x01A0(0x0010)(ReferenceParm)
};
static_assert(alignof(GA_FrozenGhost_FrozenField_DealtDamage_C_Apply_GameplayEffect) == 0x000008, "Wrong alignment on GA_FrozenGhost_FrozenField_DealtDamage_C_Apply_GameplayEffect");
static_assert(sizeof(GA_FrozenGhost_FrozenField_DealtDamage_C_Apply_GameplayEffect) == 0x0001B0, "Wrong size on GA_FrozenGhost_FrozenField_DealtDamage_C_Apply_GameplayEffect");
static_assert(offsetof(GA_FrozenGhost_FrozenField_DealtDamage_C_Apply_GameplayEffect, Apply_Effect_Tags) == 0x000000, "Member 'GA_FrozenGhost_FrozenField_DealtDamage_C_Apply_GameplayEffect::Apply_Effect_Tags' has a wrong offset!");
static_assert(offsetof(GA_FrozenGhost_FrozenField_DealtDamage_C_Apply_GameplayEffect, Target) == 0x000010, "Member 'GA_FrozenGhost_FrozenField_DealtDamage_C_Apply_GameplayEffect::Target' has a wrong offset!");
static_assert(offsetof(GA_FrozenGhost_FrozenField_DealtDamage_C_Apply_GameplayEffect, CallFunc_Array_Get_Item) == 0x000018, "Member 'GA_FrozenGhost_FrozenField_DealtDamage_C_Apply_GameplayEffect::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(GA_FrozenGhost_FrozenField_DealtDamage_C_Apply_GameplayEffect, CallFunc_Array_Get_Item_1) == 0x000020, "Member 'GA_FrozenGhost_FrozenField_DealtDamage_C_Apply_GameplayEffect::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(GA_FrozenGhost_FrozenField_DealtDamage_C_Apply_GameplayEffect, K2Node_MakeStruct_GameplayEventData) == 0x000028, "Member 'GA_FrozenGhost_FrozenField_DealtDamage_C_Apply_GameplayEffect::K2Node_MakeStruct_GameplayEventData' has a wrong offset!");
static_assert(offsetof(GA_FrozenGhost_FrozenField_DealtDamage_C_Apply_GameplayEffect, CallFunc_ApplyPremadeSpecArray_ReturnValue) == 0x0000D8, "Member 'GA_FrozenGhost_FrozenField_DealtDamage_C_Apply_GameplayEffect::CallFunc_ApplyPremadeSpecArray_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_FrozenGhost_FrozenField_DealtDamage_C_Apply_GameplayEffect, CallFunc_Remove_Target_Out_Remove_Target_Out) == 0x0000E8, "Member 'GA_FrozenGhost_FrozenField_DealtDamage_C_Apply_GameplayEffect::CallFunc_Remove_Target_Out_Remove_Target_Out' has a wrong offset!");
static_assert(offsetof(GA_FrozenGhost_FrozenField_DealtDamage_C_Apply_GameplayEffect, K2Node_MakeStruct_GameplayEventData_1) == 0x0000F0, "Member 'GA_FrozenGhost_FrozenField_DealtDamage_C_Apply_GameplayEffect::K2Node_MakeStruct_GameplayEventData_1' has a wrong offset!");
static_assert(offsetof(GA_FrozenGhost_FrozenField_DealtDamage_C_Apply_GameplayEffect, CallFunc_ApplyPremadeSpecArray_ReturnValue_1) == 0x0001A0, "Member 'GA_FrozenGhost_FrozenField_DealtDamage_C_Apply_GameplayEffect::CallFunc_ApplyPremadeSpecArray_ReturnValue_1' has a wrong offset!");

// Function GA_FrozenGhost_FrozenField_DealtDamage.GA_FrozenGhost_FrozenField_DealtDamage_C.ExecuteUbergraph_GA_FrozenGhost_FrozenField_DealtDamage
// 0x0188 (0x0188 - 0x0000)
struct GA_FrozenGhost_FrozenField_DealtDamage_C_ExecuteUbergraph_GA_FrozenGhost_FrozenField_DealtDamage final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C37[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayEventData                     K2Node_MakeStruct_GameplayEventData;               // 0x0008(0x00B0)()
	int32                                         CallFunc_GetGameplayEffectCount_ReturnValue;       // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x00BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C38[0x3];                                     // 0x00BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasMatchingGameplayTag_self_CastInput;    // 0x00C0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue;       // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C39[0x7];                                     // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayEventData                     K2Node_MakeStruct_GameplayEventData_1;             // 0x00D8(0x00B0)()
};
static_assert(alignof(GA_FrozenGhost_FrozenField_DealtDamage_C_ExecuteUbergraph_GA_FrozenGhost_FrozenField_DealtDamage) == 0x000008, "Wrong alignment on GA_FrozenGhost_FrozenField_DealtDamage_C_ExecuteUbergraph_GA_FrozenGhost_FrozenField_DealtDamage");
static_assert(sizeof(GA_FrozenGhost_FrozenField_DealtDamage_C_ExecuteUbergraph_GA_FrozenGhost_FrozenField_DealtDamage) == 0x000188, "Wrong size on GA_FrozenGhost_FrozenField_DealtDamage_C_ExecuteUbergraph_GA_FrozenGhost_FrozenField_DealtDamage");
static_assert(offsetof(GA_FrozenGhost_FrozenField_DealtDamage_C_ExecuteUbergraph_GA_FrozenGhost_FrozenField_DealtDamage, EntryPoint) == 0x000000, "Member 'GA_FrozenGhost_FrozenField_DealtDamage_C_ExecuteUbergraph_GA_FrozenGhost_FrozenField_DealtDamage::EntryPoint' has a wrong offset!");
static_assert(offsetof(GA_FrozenGhost_FrozenField_DealtDamage_C_ExecuteUbergraph_GA_FrozenGhost_FrozenField_DealtDamage, K2Node_MakeStruct_GameplayEventData) == 0x000008, "Member 'GA_FrozenGhost_FrozenField_DealtDamage_C_ExecuteUbergraph_GA_FrozenGhost_FrozenField_DealtDamage::K2Node_MakeStruct_GameplayEventData' has a wrong offset!");
static_assert(offsetof(GA_FrozenGhost_FrozenField_DealtDamage_C_ExecuteUbergraph_GA_FrozenGhost_FrozenField_DealtDamage, CallFunc_GetGameplayEffectCount_ReturnValue) == 0x0000B8, "Member 'GA_FrozenGhost_FrozenField_DealtDamage_C_ExecuteUbergraph_GA_FrozenGhost_FrozenField_DealtDamage::CallFunc_GetGameplayEffectCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_FrozenGhost_FrozenField_DealtDamage_C_ExecuteUbergraph_GA_FrozenGhost_FrozenField_DealtDamage, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x0000BC, "Member 'GA_FrozenGhost_FrozenField_DealtDamage_C_ExecuteUbergraph_GA_FrozenGhost_FrozenField_DealtDamage::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_FrozenGhost_FrozenField_DealtDamage_C_ExecuteUbergraph_GA_FrozenGhost_FrozenField_DealtDamage, CallFunc_HasMatchingGameplayTag_self_CastInput) == 0x0000C0, "Member 'GA_FrozenGhost_FrozenField_DealtDamage_C_ExecuteUbergraph_GA_FrozenGhost_FrozenField_DealtDamage::CallFunc_HasMatchingGameplayTag_self_CastInput' has a wrong offset!");
static_assert(offsetof(GA_FrozenGhost_FrozenField_DealtDamage_C_ExecuteUbergraph_GA_FrozenGhost_FrozenField_DealtDamage, CallFunc_HasMatchingGameplayTag_ReturnValue) == 0x0000D0, "Member 'GA_FrozenGhost_FrozenField_DealtDamage_C_ExecuteUbergraph_GA_FrozenGhost_FrozenField_DealtDamage::CallFunc_HasMatchingGameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_FrozenGhost_FrozenField_DealtDamage_C_ExecuteUbergraph_GA_FrozenGhost_FrozenField_DealtDamage, K2Node_MakeStruct_GameplayEventData_1) == 0x0000D8, "Member 'GA_FrozenGhost_FrozenField_DealtDamage_C_ExecuteUbergraph_GA_FrozenGhost_FrozenField_DealtDamage::K2Node_MakeStruct_GameplayEventData_1' has a wrong offset!");

// Function GA_FrozenGhost_FrozenField_DealtDamage.GA_FrozenGhost_FrozenField_DealtDamage_C.Remove Target Out
// 0x0001 (0x0001 - 0x0000)
struct GA_FrozenGhost_FrozenField_DealtDamage_C_Remove_Target_Out final
{
public:
	bool                                          Param_Remove_Target_Out;                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_FrozenGhost_FrozenField_DealtDamage_C_Remove_Target_Out) == 0x000001, "Wrong alignment on GA_FrozenGhost_FrozenField_DealtDamage_C_Remove_Target_Out");
static_assert(sizeof(GA_FrozenGhost_FrozenField_DealtDamage_C_Remove_Target_Out) == 0x000001, "Wrong size on GA_FrozenGhost_FrozenField_DealtDamage_C_Remove_Target_Out");
static_assert(offsetof(GA_FrozenGhost_FrozenField_DealtDamage_C_Remove_Target_Out, Param_Remove_Target_Out) == 0x000000, "Member 'GA_FrozenGhost_FrozenField_DealtDamage_C_Remove_Target_Out::Param_Remove_Target_Out' has a wrong offset!");

}

