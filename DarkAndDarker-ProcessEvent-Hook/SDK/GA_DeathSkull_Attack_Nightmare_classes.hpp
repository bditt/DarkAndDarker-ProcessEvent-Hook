#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_DeathSkull_Attack_Nightmare

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "DungeonCrawler_classes.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass GA_DeathSkull_Attack_Nightmare.GA_DeathSkull_Attack_Nightmare_C
// 0x0090 (0x0700 - 0x0670)
class UGA_DeathSkull_Attack_Nightmare_C final : public UGA_MonsterMeleeAttackBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0670(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FTimerHandle                           LookTarget_TimerHandle;                            // 0x0678(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           Rush_TimerHandle;                                  // 0x0680(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class ABP_DeathSkull_Common_C*                As_BP_Death_Skull;                                 // 0x0688(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class ADCCharacterBase*                       BB_Target_Actor;                                   // 0x0690(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	ECollisionResponse                            New_Response;                                      // 0x0698(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4AA0[0x7];                                     // 0x0699(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        AttackDistance;                                    // 0x06A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CheckDestLocation;                                 // 0x06A8(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                AttackDir;                                         // 0x06C0(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        RemainDistance;                                    // 0x06D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        HeightCorrection;                                  // 0x06E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        PenetrateRange;                                    // 0x06E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        OnAttackTime;                                      // 0x06F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Attack_Phase;                                      // 0x06F8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void AbilityActivated(const struct FGameplayEventData& TriggerEventData);
	void Attack();
	void ExecuteUbergraph_GA_DeathSkull_Attack_Nightmare(int32 EntryPoint);
	void Find_Target_Position();
	void K2_OnEndAbility(bool bWasCancelled);
	void LookTarget();
	void Move();
	void OnFinish_A04CDA7F4680AB1B5DF9E2AC7BE8E563();
	void OnFinish_E635967A42A02C013C809A85943B8E54();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GA_DeathSkull_Attack_Nightmare_C">();
	}
	static class UGA_DeathSkull_Attack_Nightmare_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGA_DeathSkull_Attack_Nightmare_C>();
	}
};
static_assert(alignof(UGA_DeathSkull_Attack_Nightmare_C) == 0x000008, "Wrong alignment on UGA_DeathSkull_Attack_Nightmare_C");
static_assert(sizeof(UGA_DeathSkull_Attack_Nightmare_C) == 0x000700, "Wrong size on UGA_DeathSkull_Attack_Nightmare_C");
static_assert(offsetof(UGA_DeathSkull_Attack_Nightmare_C, UberGraphFrame) == 0x000670, "Member 'UGA_DeathSkull_Attack_Nightmare_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UGA_DeathSkull_Attack_Nightmare_C, LookTarget_TimerHandle) == 0x000678, "Member 'UGA_DeathSkull_Attack_Nightmare_C::LookTarget_TimerHandle' has a wrong offset!");
static_assert(offsetof(UGA_DeathSkull_Attack_Nightmare_C, Rush_TimerHandle) == 0x000680, "Member 'UGA_DeathSkull_Attack_Nightmare_C::Rush_TimerHandle' has a wrong offset!");
static_assert(offsetof(UGA_DeathSkull_Attack_Nightmare_C, As_BP_Death_Skull) == 0x000688, "Member 'UGA_DeathSkull_Attack_Nightmare_C::As_BP_Death_Skull' has a wrong offset!");
static_assert(offsetof(UGA_DeathSkull_Attack_Nightmare_C, BB_Target_Actor) == 0x000690, "Member 'UGA_DeathSkull_Attack_Nightmare_C::BB_Target_Actor' has a wrong offset!");
static_assert(offsetof(UGA_DeathSkull_Attack_Nightmare_C, New_Response) == 0x000698, "Member 'UGA_DeathSkull_Attack_Nightmare_C::New_Response' has a wrong offset!");
static_assert(offsetof(UGA_DeathSkull_Attack_Nightmare_C, AttackDistance) == 0x0006A0, "Member 'UGA_DeathSkull_Attack_Nightmare_C::AttackDistance' has a wrong offset!");
static_assert(offsetof(UGA_DeathSkull_Attack_Nightmare_C, CheckDestLocation) == 0x0006A8, "Member 'UGA_DeathSkull_Attack_Nightmare_C::CheckDestLocation' has a wrong offset!");
static_assert(offsetof(UGA_DeathSkull_Attack_Nightmare_C, AttackDir) == 0x0006C0, "Member 'UGA_DeathSkull_Attack_Nightmare_C::AttackDir' has a wrong offset!");
static_assert(offsetof(UGA_DeathSkull_Attack_Nightmare_C, RemainDistance) == 0x0006D8, "Member 'UGA_DeathSkull_Attack_Nightmare_C::RemainDistance' has a wrong offset!");
static_assert(offsetof(UGA_DeathSkull_Attack_Nightmare_C, HeightCorrection) == 0x0006E0, "Member 'UGA_DeathSkull_Attack_Nightmare_C::HeightCorrection' has a wrong offset!");
static_assert(offsetof(UGA_DeathSkull_Attack_Nightmare_C, PenetrateRange) == 0x0006E8, "Member 'UGA_DeathSkull_Attack_Nightmare_C::PenetrateRange' has a wrong offset!");
static_assert(offsetof(UGA_DeathSkull_Attack_Nightmare_C, OnAttackTime) == 0x0006F0, "Member 'UGA_DeathSkull_Attack_Nightmare_C::OnAttackTime' has a wrong offset!");
static_assert(offsetof(UGA_DeathSkull_Attack_Nightmare_C, Attack_Phase) == 0x0006F8, "Member 'UGA_DeathSkull_Attack_Nightmare_C::Attack_Phase' has a wrong offset!");

}

