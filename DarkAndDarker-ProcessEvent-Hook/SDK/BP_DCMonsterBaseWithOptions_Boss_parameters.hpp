#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_DCMonsterBaseWithOptions_Boss

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "GameplayAbilities_structs.hpp"


namespace SDK::Params
{

// Function BP_DCMonsterBaseWithOptions_Boss.BP_DCMonsterBaseWithOptions_Boss_C.Check Mode Change
// 0x0030 (0x0030 - 0x0000)
struct BP_DCMonsterBaseWithOptions_Boss_C_Check_Mode_Change final
{
public:
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Get_And_Compare_To_BlackBoard_Mode_Result; // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Get_And_Compare_To_BlackBoard_Mode_Result_1; // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_40CF[0x1];                                     // 0x0003(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Get_Number_Of_Active_Players_In_Combat_Area_Number_Of_Players; // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_40D0[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Get_Number_Of_Active_Players_In_Recognition_Area_Number_Of_Players; // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_MakeLiteralName_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_40D1[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBlackboardComponent*                   CallFunc_GetBlackboard_ReturnValue;                // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValueAsEnum_ReturnValue;               // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DCMonsterBaseWithOptions_Boss_C_Check_Mode_Change) == 0x000008, "Wrong alignment on BP_DCMonsterBaseWithOptions_Boss_C_Check_Mode_Change");
static_assert(sizeof(BP_DCMonsterBaseWithOptions_Boss_C_Check_Mode_Change) == 0x000030, "Wrong size on BP_DCMonsterBaseWithOptions_Boss_C_Check_Mode_Change");
static_assert(offsetof(BP_DCMonsterBaseWithOptions_Boss_C_Check_Mode_Change, CallFunc_HasAuthority_ReturnValue) == 0x000000, "Member 'BP_DCMonsterBaseWithOptions_Boss_C_Check_Mode_Change::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DCMonsterBaseWithOptions_Boss_C_Check_Mode_Change, CallFunc_Get_And_Compare_To_BlackBoard_Mode_Result) == 0x000001, "Member 'BP_DCMonsterBaseWithOptions_Boss_C_Check_Mode_Change::CallFunc_Get_And_Compare_To_BlackBoard_Mode_Result' has a wrong offset!");
static_assert(offsetof(BP_DCMonsterBaseWithOptions_Boss_C_Check_Mode_Change, CallFunc_Get_And_Compare_To_BlackBoard_Mode_Result_1) == 0x000002, "Member 'BP_DCMonsterBaseWithOptions_Boss_C_Check_Mode_Change::CallFunc_Get_And_Compare_To_BlackBoard_Mode_Result_1' has a wrong offset!");
static_assert(offsetof(BP_DCMonsterBaseWithOptions_Boss_C_Check_Mode_Change, CallFunc_Get_Number_Of_Active_Players_In_Combat_Area_Number_Of_Players) == 0x000004, "Member 'BP_DCMonsterBaseWithOptions_Boss_C_Check_Mode_Change::CallFunc_Get_Number_Of_Active_Players_In_Combat_Area_Number_Of_Players' has a wrong offset!");
static_assert(offsetof(BP_DCMonsterBaseWithOptions_Boss_C_Check_Mode_Change, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000008, "Member 'BP_DCMonsterBaseWithOptions_Boss_C_Check_Mode_Change::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DCMonsterBaseWithOptions_Boss_C_Check_Mode_Change, CallFunc_Get_Number_Of_Active_Players_In_Recognition_Area_Number_Of_Players) == 0x00000C, "Member 'BP_DCMonsterBaseWithOptions_Boss_C_Check_Mode_Change::CallFunc_Get_Number_Of_Active_Players_In_Recognition_Area_Number_Of_Players' has a wrong offset!");
static_assert(offsetof(BP_DCMonsterBaseWithOptions_Boss_C_Check_Mode_Change, CallFunc_MakeLiteralName_ReturnValue) == 0x000010, "Member 'BP_DCMonsterBaseWithOptions_Boss_C_Check_Mode_Change::CallFunc_MakeLiteralName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DCMonsterBaseWithOptions_Boss_C_Check_Mode_Change, CallFunc_Greater_IntInt_ReturnValue) == 0x000018, "Member 'BP_DCMonsterBaseWithOptions_Boss_C_Check_Mode_Change::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DCMonsterBaseWithOptions_Boss_C_Check_Mode_Change, CallFunc_GetBlackboard_ReturnValue) == 0x000020, "Member 'BP_DCMonsterBaseWithOptions_Boss_C_Check_Mode_Change::CallFunc_GetBlackboard_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DCMonsterBaseWithOptions_Boss_C_Check_Mode_Change, CallFunc_GetValueAsEnum_ReturnValue) == 0x000028, "Member 'BP_DCMonsterBaseWithOptions_Boss_C_Check_Mode_Change::CallFunc_GetValueAsEnum_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DCMonsterBaseWithOptions_Boss_C_Check_Mode_Change, CallFunc_GetValidValue_ReturnValue) == 0x000029, "Member 'BP_DCMonsterBaseWithOptions_Boss_C_Check_Mode_Change::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DCMonsterBaseWithOptions_Boss_C_Check_Mode_Change, K2Node_SwitchEnum_CmpSuccess) == 0x00002A, "Member 'BP_DCMonsterBaseWithOptions_Boss_C_Check_Mode_Change::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function BP_DCMonsterBaseWithOptions_Boss.BP_DCMonsterBaseWithOptions_Boss_C.ExecuteUbergraph_BP_DCMonsterBaseWithOptions_Boss
// 0x0028 (0x0028 - 0x0000)
struct BP_DCMonsterBaseWithOptions_Boss_C_ExecuteUbergraph_BP_DCMonsterBaseWithOptions_Boss final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_Event_InGameplayTag;                        // 0x0004(0x0008)(ConstParm, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_InCount;                              // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess;   // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess_1; // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_40D2[0x5];                                     // 0x0013(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimer_ReturnValue;                  // 0x0018(0x0008)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Get_Number_Of_Active_Players_In_Recognition_Area_Number_Of_Players; // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DCMonsterBaseWithOptions_Boss_C_ExecuteUbergraph_BP_DCMonsterBaseWithOptions_Boss) == 0x000008, "Wrong alignment on BP_DCMonsterBaseWithOptions_Boss_C_ExecuteUbergraph_BP_DCMonsterBaseWithOptions_Boss");
static_assert(sizeof(BP_DCMonsterBaseWithOptions_Boss_C_ExecuteUbergraph_BP_DCMonsterBaseWithOptions_Boss) == 0x000028, "Wrong size on BP_DCMonsterBaseWithOptions_Boss_C_ExecuteUbergraph_BP_DCMonsterBaseWithOptions_Boss");
static_assert(offsetof(BP_DCMonsterBaseWithOptions_Boss_C_ExecuteUbergraph_BP_DCMonsterBaseWithOptions_Boss, EntryPoint) == 0x000000, "Member 'BP_DCMonsterBaseWithOptions_Boss_C_ExecuteUbergraph_BP_DCMonsterBaseWithOptions_Boss::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_DCMonsterBaseWithOptions_Boss_C_ExecuteUbergraph_BP_DCMonsterBaseWithOptions_Boss, K2Node_Event_InGameplayTag) == 0x000004, "Member 'BP_DCMonsterBaseWithOptions_Boss_C_ExecuteUbergraph_BP_DCMonsterBaseWithOptions_Boss::K2Node_Event_InGameplayTag' has a wrong offset!");
static_assert(offsetof(BP_DCMonsterBaseWithOptions_Boss_C_ExecuteUbergraph_BP_DCMonsterBaseWithOptions_Boss, K2Node_Event_InCount) == 0x00000C, "Member 'BP_DCMonsterBaseWithOptions_Boss_C_ExecuteUbergraph_BP_DCMonsterBaseWithOptions_Boss::K2Node_Event_InCount' has a wrong offset!");
static_assert(offsetof(BP_DCMonsterBaseWithOptions_Boss_C_ExecuteUbergraph_BP_DCMonsterBaseWithOptions_Boss, CallFunc_Greater_IntInt_ReturnValue) == 0x000010, "Member 'BP_DCMonsterBaseWithOptions_Boss_C_ExecuteUbergraph_BP_DCMonsterBaseWithOptions_Boss::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DCMonsterBaseWithOptions_Boss_C_ExecuteUbergraph_BP_DCMonsterBaseWithOptions_Boss, GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess) == 0x000011, "Member 'BP_DCMonsterBaseWithOptions_Boss_C_ExecuteUbergraph_BP_DCMonsterBaseWithOptions_Boss::GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_DCMonsterBaseWithOptions_Boss_C_ExecuteUbergraph_BP_DCMonsterBaseWithOptions_Boss, GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess_1) == 0x000012, "Member 'BP_DCMonsterBaseWithOptions_Boss_C_ExecuteUbergraph_BP_DCMonsterBaseWithOptions_Boss::GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_DCMonsterBaseWithOptions_Boss_C_ExecuteUbergraph_BP_DCMonsterBaseWithOptions_Boss, CallFunc_K2_SetTimer_ReturnValue) == 0x000018, "Member 'BP_DCMonsterBaseWithOptions_Boss_C_ExecuteUbergraph_BP_DCMonsterBaseWithOptions_Boss::CallFunc_K2_SetTimer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DCMonsterBaseWithOptions_Boss_C_ExecuteUbergraph_BP_DCMonsterBaseWithOptions_Boss, CallFunc_Get_Number_Of_Active_Players_In_Recognition_Area_Number_Of_Players) == 0x000020, "Member 'BP_DCMonsterBaseWithOptions_Boss_C_ExecuteUbergraph_BP_DCMonsterBaseWithOptions_Boss::CallFunc_Get_Number_Of_Active_Players_In_Recognition_Area_Number_Of_Players' has a wrong offset!");
static_assert(offsetof(BP_DCMonsterBaseWithOptions_Boss_C_ExecuteUbergraph_BP_DCMonsterBaseWithOptions_Boss, CallFunc_Greater_IntInt_ReturnValue_1) == 0x000024, "Member 'BP_DCMonsterBaseWithOptions_Boss_C_ExecuteUbergraph_BP_DCMonsterBaseWithOptions_Boss::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");

// Function BP_DCMonsterBaseWithOptions_Boss.BP_DCMonsterBaseWithOptions_Boss_C.GameplayTagUpdated
// 0x000C (0x000C - 0x0000)
struct BP_DCMonsterBaseWithOptions_Boss_C_GameplayTagUpdated final
{
public:
	struct FGameplayTag                           InGameplayTag;                                     // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	int32                                         InCount;                                           // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DCMonsterBaseWithOptions_Boss_C_GameplayTagUpdated) == 0x000004, "Wrong alignment on BP_DCMonsterBaseWithOptions_Boss_C_GameplayTagUpdated");
static_assert(sizeof(BP_DCMonsterBaseWithOptions_Boss_C_GameplayTagUpdated) == 0x00000C, "Wrong size on BP_DCMonsterBaseWithOptions_Boss_C_GameplayTagUpdated");
static_assert(offsetof(BP_DCMonsterBaseWithOptions_Boss_C_GameplayTagUpdated, InGameplayTag) == 0x000000, "Member 'BP_DCMonsterBaseWithOptions_Boss_C_GameplayTagUpdated::InGameplayTag' has a wrong offset!");
static_assert(offsetof(BP_DCMonsterBaseWithOptions_Boss_C_GameplayTagUpdated, InCount) == 0x000008, "Member 'BP_DCMonsterBaseWithOptions_Boss_C_GameplayTagUpdated::InCount' has a wrong offset!");

// Function BP_DCMonsterBaseWithOptions_Boss.BP_DCMonsterBaseWithOptions_Boss_C.Trigger In Overlap NPT Area
// 0x0138 (0x0138 - 0x0000)
struct BP_DCMonsterBaseWithOptions_Boss_C_Trigger_In_Overlap_NPT_Area final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_40D3[0x3];                                     // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x00E8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	TArray<struct FPrimaryAssetId>                K2Node_MakeArray_Array;                            // 0x0108(0x0010)(ConstParm, ReferenceParm)
	class APavisePropBase*                        K2Node_DynamicCast_AsPavise_Prop_Base;             // 0x0118(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_40D4[0x7];                                     // 0x0121(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FActiveGameplayEffectHandle>    CallFunc_ApplyGameplayEffectByIds_ReturnValue;     // 0x0128(0x0010)(ReferenceParm)
};
static_assert(alignof(BP_DCMonsterBaseWithOptions_Boss_C_Trigger_In_Overlap_NPT_Area) == 0x000008, "Wrong alignment on BP_DCMonsterBaseWithOptions_Boss_C_Trigger_In_Overlap_NPT_Area");
static_assert(sizeof(BP_DCMonsterBaseWithOptions_Boss_C_Trigger_In_Overlap_NPT_Area) == 0x000138, "Wrong size on BP_DCMonsterBaseWithOptions_Boss_C_Trigger_In_Overlap_NPT_Area");
static_assert(offsetof(BP_DCMonsterBaseWithOptions_Boss_C_Trigger_In_Overlap_NPT_Area, OverlappedComponent) == 0x000000, "Member 'BP_DCMonsterBaseWithOptions_Boss_C_Trigger_In_Overlap_NPT_Area::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_DCMonsterBaseWithOptions_Boss_C_Trigger_In_Overlap_NPT_Area, OtherActor) == 0x000008, "Member 'BP_DCMonsterBaseWithOptions_Boss_C_Trigger_In_Overlap_NPT_Area::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_DCMonsterBaseWithOptions_Boss_C_Trigger_In_Overlap_NPT_Area, OtherComp) == 0x000010, "Member 'BP_DCMonsterBaseWithOptions_Boss_C_Trigger_In_Overlap_NPT_Area::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_DCMonsterBaseWithOptions_Boss_C_Trigger_In_Overlap_NPT_Area, OtherBodyIndex) == 0x000018, "Member 'BP_DCMonsterBaseWithOptions_Boss_C_Trigger_In_Overlap_NPT_Area::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_DCMonsterBaseWithOptions_Boss_C_Trigger_In_Overlap_NPT_Area, bFromSweep) == 0x00001C, "Member 'BP_DCMonsterBaseWithOptions_Boss_C_Trigger_In_Overlap_NPT_Area::bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_DCMonsterBaseWithOptions_Boss_C_Trigger_In_Overlap_NPT_Area, SweepResult) == 0x000020, "Member 'BP_DCMonsterBaseWithOptions_Boss_C_Trigger_In_Overlap_NPT_Area::SweepResult' has a wrong offset!");
static_assert(offsetof(BP_DCMonsterBaseWithOptions_Boss_C_Trigger_In_Overlap_NPT_Area, K2Node_MakeArray_Array) == 0x000108, "Member 'BP_DCMonsterBaseWithOptions_Boss_C_Trigger_In_Overlap_NPT_Area::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_DCMonsterBaseWithOptions_Boss_C_Trigger_In_Overlap_NPT_Area, K2Node_DynamicCast_AsPavise_Prop_Base) == 0x000118, "Member 'BP_DCMonsterBaseWithOptions_Boss_C_Trigger_In_Overlap_NPT_Area::K2Node_DynamicCast_AsPavise_Prop_Base' has a wrong offset!");
static_assert(offsetof(BP_DCMonsterBaseWithOptions_Boss_C_Trigger_In_Overlap_NPT_Area, K2Node_DynamicCast_bSuccess) == 0x000120, "Member 'BP_DCMonsterBaseWithOptions_Boss_C_Trigger_In_Overlap_NPT_Area::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_DCMonsterBaseWithOptions_Boss_C_Trigger_In_Overlap_NPT_Area, CallFunc_ApplyGameplayEffectByIds_ReturnValue) == 0x000128, "Member 'BP_DCMonsterBaseWithOptions_Boss_C_Trigger_In_Overlap_NPT_Area::CallFunc_ApplyGameplayEffectByIds_ReturnValue' has a wrong offset!");

}

