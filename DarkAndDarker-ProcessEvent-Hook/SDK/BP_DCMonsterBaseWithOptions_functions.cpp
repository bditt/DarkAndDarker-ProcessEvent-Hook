#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_DCMonsterBaseWithOptions

#include "Basic.hpp"

#include "BP_DCMonsterBaseWithOptions_classes.hpp"
#include "BP_DCMonsterBaseWithOptions_parameters.hpp"


namespace SDK
{

// Function BP_DCMonsterBaseWithOptions.BP_DCMonsterBaseWithOptions_C.Add DelayDeath
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_DCMonsterBaseWithOptions_C::Add_DelayDeath()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DCMonsterBaseWithOptions_C", "Add DelayDeath");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DCMonsterBaseWithOptions.BP_DCMonsterBaseWithOptions_C.Apply Damage Immune
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_DCMonsterBaseWithOptions_C::Apply_Damage_Immune()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DCMonsterBaseWithOptions_C", "Apply Damage Immune");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DCMonsterBaseWithOptions.BP_DCMonsterBaseWithOptions_C.Area Overlap Check Event Bind
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_DCMonsterBaseWithOptions_C::Area_Overlap_Check_Event_Bind()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DCMonsterBaseWithOptions_C", "Area Overlap Check Event Bind");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DCMonsterBaseWithOptions.BP_DCMonsterBaseWithOptions_C.BndEvt__BP_DCMonsterBaseWithOptions_Impactable_K2Node_ComponentBoundEvent_0_ImpactEnduranceExhausted__DelegateSignature
// (BlueprintEvent)
// Parameters:
// float                                   ExhaustedTime                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TSubclassOf<class UGameplayEffect>      GameplayEffectClass                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
// struct FDCGameplayEffectContext         EffectContext                                          (BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference)

void ABP_DCMonsterBaseWithOptions_C::BndEvt__BP_DCMonsterBaseWithOptions_Impactable_K2Node_ComponentBoundEvent_0_ImpactEnduranceExhausted__DelegateSignature(float ExhaustedTime, TSubclassOf<class UGameplayEffect> GameplayEffectClass, const struct FDCGameplayEffectContext& EffectContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DCMonsterBaseWithOptions_C", "BndEvt__BP_DCMonsterBaseWithOptions_Impactable_K2Node_ComponentBoundEvent_0_ImpactEnduranceExhausted__DelegateSignature");

	Params::BP_DCMonsterBaseWithOptions_C_BndEvt__BP_DCMonsterBaseWithOptions_Impactable_K2Node_ComponentBoundEvent_0_ImpactEnduranceExhausted__DelegateSignature Parms{};

	Parms.ExhaustedTime = ExhaustedTime;
	Parms.GameplayEffectClass = GameplayEffectClass;
	Parms.EffectContext = std::move(EffectContext);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DCMonsterBaseWithOptions.BP_DCMonsterBaseWithOptions_C.BndEvt__BP_Lich_DCGameObjectLink_K2Node_ComponentBoundEvent_3_DCGameObjectLinkComponentUMsgGameLinkerRequest__DelegateSignature
// (HasOutParams, BlueprintEvent)
// Parameters:
// struct FObjectLinkRequestEvent          RecvEvent                                              (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// class UObjectLinkMetaDataBlueprint*     SendEventParam                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_DCMonsterBaseWithOptions_C::BndEvt__BP_Lich_DCGameObjectLink_K2Node_ComponentBoundEvent_3_DCGameObjectLinkComponentUMsgGameLinkerRequest__DelegateSignature(const struct FObjectLinkRequestEvent& RecvEvent, class UObjectLinkMetaDataBlueprint* SendEventParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DCMonsterBaseWithOptions_C", "BndEvt__BP_Lich_DCGameObjectLink_K2Node_ComponentBoundEvent_3_DCGameObjectLinkComponentUMsgGameLinkerRequest__DelegateSignature");

	Params::BP_DCMonsterBaseWithOptions_C_BndEvt__BP_Lich_DCGameObjectLink_K2Node_ComponentBoundEvent_3_DCGameObjectLinkComponentUMsgGameLinkerRequest__DelegateSignature Parms{};

	Parms.RecvEvent = std::move(RecvEvent);
	Parms.SendEventParam = SendEventParam;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DCMonsterBaseWithOptions.BP_DCMonsterBaseWithOptions_C.Check Combat To Comeback
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_DCMonsterBaseWithOptions_C::Check_Combat_To_Comeback()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DCMonsterBaseWithOptions_C", "Check Combat To Comeback");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DCMonsterBaseWithOptions.BP_DCMonsterBaseWithOptions_C.Check Peace To Combat
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_DCMonsterBaseWithOptions_C::Check_Peace_To_Combat()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DCMonsterBaseWithOptions_C", "Check Peace To Combat");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DCMonsterBaseWithOptions.BP_DCMonsterBaseWithOptions_C.Combat Activated
// (BlueprintCallable, BlueprintEvent)

void ABP_DCMonsterBaseWithOptions_C::Combat_Activated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DCMonsterBaseWithOptions_C", "Combat Activated");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DCMonsterBaseWithOptions.BP_DCMonsterBaseWithOptions_C.Combat Activated Event Dispatcher__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void ABP_DCMonsterBaseWithOptions_C::Combat_Activated_Event_Dispatcher__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DCMonsterBaseWithOptions_C", "Combat Activated Event Dispatcher__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DCMonsterBaseWithOptions.BP_DCMonsterBaseWithOptions_C.Comeback Activated
// (BlueprintCallable, BlueprintEvent)

void ABP_DCMonsterBaseWithOptions_C::Comeback_Activated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DCMonsterBaseWithOptions_C", "Comeback Activated");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DCMonsterBaseWithOptions.BP_DCMonsterBaseWithOptions_C.Comeback Activated Event Dispatcher__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void ABP_DCMonsterBaseWithOptions_C::Comeback_Activated_Event_Dispatcher__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DCMonsterBaseWithOptions_C", "Comeback Activated Event Dispatcher__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DCMonsterBaseWithOptions.BP_DCMonsterBaseWithOptions_C.Comeback Event End
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Arrived_SpawnLocation                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_DCMonsterBaseWithOptions_C::Comeback_Event_End(bool Arrived_SpawnLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DCMonsterBaseWithOptions_C", "Comeback Event End");

	Params::BP_DCMonsterBaseWithOptions_C_Comeback_Event_End Parms{};

	Parms.Arrived_SpawnLocation = Arrived_SpawnLocation;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DCMonsterBaseWithOptions.BP_DCMonsterBaseWithOptions_C.Comeback Event Start
// (BlueprintCallable, BlueprintEvent)

void ABP_DCMonsterBaseWithOptions_C::Comeback_Event_Start()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DCMonsterBaseWithOptions_C", "Comeback Event Start");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DCMonsterBaseWithOptions.BP_DCMonsterBaseWithOptions_C.Dash To Location
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Target_Location                                        (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Dash_Time                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Distance                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_DCMonsterBaseWithOptions_C::Dash_To_Location(const struct FVector& Target_Location, double Dash_Time, double Distance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DCMonsterBaseWithOptions_C", "Dash To Location");

	Params::BP_DCMonsterBaseWithOptions_C_Dash_To_Location Parms{};

	Parms.Target_Location = std::move(Target_Location);
	Parms.Dash_Time = Dash_Time;
	Parms.Distance = Distance;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DCMonsterBaseWithOptions.BP_DCMonsterBaseWithOptions_C.Dash To Target
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Target_Actor                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// float                                   Dash_Time                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Distance                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_DCMonsterBaseWithOptions_C::Dash_To_Target(class AActor* Target_Actor, float Dash_Time, double Distance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DCMonsterBaseWithOptions_C", "Dash To Target");

	Params::BP_DCMonsterBaseWithOptions_C_Dash_To_Target Parms{};

	Parms.Target_Actor = Target_Actor;
	Parms.Dash_Time = Dash_Time;
	Parms.Distance = Distance;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DCMonsterBaseWithOptions.BP_DCMonsterBaseWithOptions_C.Do Dash
// (BlueprintCallable, BlueprintEvent)

void ABP_DCMonsterBaseWithOptions_C::Do_Dash()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DCMonsterBaseWithOptions_C", "Do Dash");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DCMonsterBaseWithOptions.BP_DCMonsterBaseWithOptions_C.Do DelayDeath Function
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_DCMonsterBaseWithOptions_C::Do_DelayDeath_Function()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DCMonsterBaseWithOptions_C", "Do DelayDeath Function");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DCMonsterBaseWithOptions.BP_DCMonsterBaseWithOptions_C.EventReceived_F9902F9D42CFF61C17D51EB8BC686108
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGameplayEventData               Payload                                                (BlueprintVisible, BlueprintReadOnly, Parm)

void ABP_DCMonsterBaseWithOptions_C::EventReceived_F9902F9D42CFF61C17D51EB8BC686108(const struct FGameplayEventData& Payload)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DCMonsterBaseWithOptions_C", "EventReceived_F9902F9D42CFF61C17D51EB8BC686108");

	Params::BP_DCMonsterBaseWithOptions_C_EventReceived_F9902F9D42CFF61C17D51EB8BC686108 Parms{};

	Parms.Payload = std::move(Payload);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DCMonsterBaseWithOptions.BP_DCMonsterBaseWithOptions_C.ExecuteUbergraph_BP_DCMonsterBaseWithOptions
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_DCMonsterBaseWithOptions_C::ExecuteUbergraph_BP_DCMonsterBaseWithOptions(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DCMonsterBaseWithOptions_C", "ExecuteUbergraph_BP_DCMonsterBaseWithOptions");

	Params::BP_DCMonsterBaseWithOptions_C_ExecuteUbergraph_BP_DCMonsterBaseWithOptions Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DCMonsterBaseWithOptions.BP_DCMonsterBaseWithOptions_C.GameplayTagUpdated
// (Event, Protected, BlueprintEvent)
// Parameters:
// struct FGameplayTag                     InGameplayTag                                          (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// int32                                   InCount                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_DCMonsterBaseWithOptions_C::GameplayTagUpdated(const struct FGameplayTag& InGameplayTag, int32 InCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DCMonsterBaseWithOptions_C", "GameplayTagUpdated");

	Params::BP_DCMonsterBaseWithOptions_C_GameplayTagUpdated Parms{};

	Parms.InGameplayTag = std::move(InGameplayTag);
	Parms.InCount = InCount;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DCMonsterBaseWithOptions.BP_DCMonsterBaseWithOptions_C.GetBBTargetActor
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          Return_Value                                           (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_DCMonsterBaseWithOptions_C::GetBBTargetActor(bool* Result, class UObject** Return_Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DCMonsterBaseWithOptions_C", "GetBBTargetActor");

	Params::BP_DCMonsterBaseWithOptions_C_GetBBTargetActor Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;

	if (Return_Value != nullptr)
		*Return_Value = Parms.Return_Value;
}


// Function BP_DCMonsterBaseWithOptions.BP_DCMonsterBaseWithOptions_C.GetBBTargetActorToCharacterBase
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ADCCharacterBase*                 As_DCCharacter_Base                                    (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_DCMonsterBaseWithOptions_C::GetBBTargetActorToCharacterBase(bool* Result, class ADCCharacterBase** As_DCCharacter_Base)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DCMonsterBaseWithOptions_C", "GetBBTargetActorToCharacterBase");

	Params::BP_DCMonsterBaseWithOptions_C_GetBBTargetActorToCharacterBase Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;

	if (As_DCCharacter_Base != nullptr)
		*As_DCCharacter_Base = Parms.As_DCCharacter_Base;
}


// Function BP_DCMonsterBaseWithOptions.BP_DCMonsterBaseWithOptions_C.GetBBTargetActorToMonsterBase
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ABP_DCMonsterBaseWithOptions_C*   DCMonsterBaseWithOptions                               (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_DCMonsterBaseWithOptions_C::GetBBTargetActorToMonsterBase(bool* Result, class ABP_DCMonsterBaseWithOptions_C** DCMonsterBaseWithOptions)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DCMonsterBaseWithOptions_C", "GetBBTargetActorToMonsterBase");

	Params::BP_DCMonsterBaseWithOptions_C_GetBBTargetActorToMonsterBase Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;

	if (DCMonsterBaseWithOptions != nullptr)
		*DCMonsterBaseWithOptions = Parms.DCMonsterBaseWithOptions;
}


// Function BP_DCMonsterBaseWithOptions.BP_DCMonsterBaseWithOptions_C.GetLinkedMonsters
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FObjectLinkRequestEvent          Recv_Event                                             (BlueprintVisible, BlueprintReadOnly, Parm)
// class UObjectLinkMetaDataBlueprint*     Send_Event_Param                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_DCMonsterBaseWithOptions_C::GetLinkedMonsters(const struct FObjectLinkRequestEvent& Recv_Event, class UObjectLinkMetaDataBlueprint* Send_Event_Param)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DCMonsterBaseWithOptions_C", "GetLinkedMonsters");

	Params::BP_DCMonsterBaseWithOptions_C_GetLinkedMonsters Parms{};

	Parms.Recv_Event = std::move(Recv_Event);
	Parms.Send_Event_Param = Send_Event_Param;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DCMonsterBaseWithOptions.BP_DCMonsterBaseWithOptions_C.IgnoreSignalFromMe
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UDCGameObjectLinkComponent*       DCGame_Link_Object                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// struct FObjectLinkRequestEvent          Recv_Event                                             (BlueprintVisible, BlueprintReadOnly, Parm)
// class UObjectLinkMetaDataBlueprint*     Send_Event_Param                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_DCMonsterBaseWithOptions_C::IgnoreSignalFromMe(class UDCGameObjectLinkComponent* DCGame_Link_Object, const struct FObjectLinkRequestEvent& Recv_Event, class UObjectLinkMetaDataBlueprint* Send_Event_Param, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DCMonsterBaseWithOptions_C", "IgnoreSignalFromMe");

	Params::BP_DCMonsterBaseWithOptions_C_IgnoreSignalFromMe Parms{};

	Parms.DCGame_Link_Object = DCGame_Link_Object;
	Parms.Recv_Event = std::move(Recv_Event);
	Parms.Send_Event_Param = Send_Event_Param;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function BP_DCMonsterBaseWithOptions.BP_DCMonsterBaseWithOptions_C.LinkEventBase
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UDCGameObjectLinkComponent*       DCGame_Link_Object                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// struct FObjectLinkRequestEvent          Recv_Event                                             (BlueprintVisible, BlueprintReadOnly, Parm)
// class UObjectLinkMetaDataBlueprint*     Send_Event_Param                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_DCMonsterBaseWithOptions_C::LinkEventBase(class UDCGameObjectLinkComponent* DCGame_Link_Object, const struct FObjectLinkRequestEvent& Recv_Event, class UObjectLinkMetaDataBlueprint* Send_Event_Param, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DCMonsterBaseWithOptions_C", "LinkEventBase");

	Params::BP_DCMonsterBaseWithOptions_C_LinkEventBase Parms{};

	Parms.DCGame_Link_Object = DCGame_Link_Object;
	Parms.Recv_Event = std::move(Recv_Event);
	Parms.Send_Event_Param = Send_Event_Param;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function BP_DCMonsterBaseWithOptions.BP_DCMonsterBaseWithOptions_C.Move Fail Timeout
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_DCMonsterBaseWithOptions_C::Move_Fail_Timeout()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DCMonsterBaseWithOptions_C", "Move Fail Timeout");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DCMonsterBaseWithOptions.BP_DCMonsterBaseWithOptions_C.OnApplied_227A852046B3B9DACFFBA5ABA7D2A95E
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Source                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FGameplayEffectSpecHandle        SpecHandle                                             (BlueprintVisible, BlueprintReadOnly, Parm)
// struct FActiveGameplayEffectHandle      ActiveHandle                                           (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)

void ABP_DCMonsterBaseWithOptions_C::OnApplied_227A852046B3B9DACFFBA5ABA7D2A95E(class AActor* Source, const struct FGameplayEffectSpecHandle& SpecHandle, const struct FActiveGameplayEffectHandle& ActiveHandle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DCMonsterBaseWithOptions_C", "OnApplied_227A852046B3B9DACFFBA5ABA7D2A95E");

	Params::BP_DCMonsterBaseWithOptions_C_OnApplied_227A852046B3B9DACFFBA5ABA7D2A95E Parms{};

	Parms.Source = Source;
	Parms.SpecHandle = std::move(SpecHandle);
	Parms.ActiveHandle = std::move(ActiveHandle);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DCMonsterBaseWithOptions.BP_DCMonsterBaseWithOptions_C.OnAsyncInitialized
// (Event, Protected, BlueprintEvent)

void ABP_DCMonsterBaseWithOptions_C::OnAsyncInitialized()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DCMonsterBaseWithOptions_C", "OnAsyncInitialized");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DCMonsterBaseWithOptions.BP_DCMonsterBaseWithOptions_C.OnBeforeDeath
// (Event, Protected, BlueprintEvent)

void ABP_DCMonsterBaseWithOptions_C::OnBeforeDeath()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DCMonsterBaseWithOptions_C", "OnBeforeDeath");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DCMonsterBaseWithOptions.BP_DCMonsterBaseWithOptions_C.OnFail_21CEDD05472CF8AA4A07758D48F80F14
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// EPathFollowingResult                    MovementResult                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_DCMonsterBaseWithOptions_C::OnFail_21CEDD05472CF8AA4A07758D48F80F14(EPathFollowingResult MovementResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DCMonsterBaseWithOptions_C", "OnFail_21CEDD05472CF8AA4A07758D48F80F14");

	Params::BP_DCMonsterBaseWithOptions_C_OnFail_21CEDD05472CF8AA4A07758D48F80F14 Parms{};

	Parms.MovementResult = MovementResult;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DCMonsterBaseWithOptions.BP_DCMonsterBaseWithOptions_C.OnFail_801A2F7E484A71F27AD0278F8B82FB99
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// EPathFollowingResult                    MovementResult                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_DCMonsterBaseWithOptions_C::OnFail_801A2F7E484A71F27AD0278F8B82FB99(EPathFollowingResult MovementResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DCMonsterBaseWithOptions_C", "OnFail_801A2F7E484A71F27AD0278F8B82FB99");

	Params::BP_DCMonsterBaseWithOptions_C_OnFail_801A2F7E484A71F27AD0278F8B82FB99 Parms{};

	Parms.MovementResult = MovementResult;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DCMonsterBaseWithOptions.BP_DCMonsterBaseWithOptions_C.OnFMsgGASAttributeNotifyBlueprint
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// struct FMsgGASAttributeNotify           InMsg                                                  (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)

void ABP_DCMonsterBaseWithOptions_C::OnFMsgGASAttributeNotifyBlueprint(const struct FMsgGASAttributeNotify& InMsg)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DCMonsterBaseWithOptions_C", "OnFMsgGASAttributeNotifyBlueprint");

	Params::BP_DCMonsterBaseWithOptions_C_OnFMsgGASAttributeNotifyBlueprint Parms{};

	Parms.InMsg = std::move(InMsg);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DCMonsterBaseWithOptions.BP_DCMonsterBaseWithOptions_C.OnNewTarget
// (Event, Public, BlueprintEvent)
// Parameters:
// class ADCCharacterBase*                 InTarget                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_DCMonsterBaseWithOptions_C::OnNewTarget(class ADCCharacterBase* InTarget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DCMonsterBaseWithOptions_C", "OnNewTarget");

	Params::BP_DCMonsterBaseWithOptions_C_OnNewTarget Parms{};

	Parms.InTarget = InTarget;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DCMonsterBaseWithOptions.BP_DCMonsterBaseWithOptions_C.OnRep_Blackboard TargetActor
// (BlueprintCallable, BlueprintEvent)

void ABP_DCMonsterBaseWithOptions_C::OnRep_Blackboard_TargetActor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DCMonsterBaseWithOptions_C", "OnRep_Blackboard TargetActor");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DCMonsterBaseWithOptions.BP_DCMonsterBaseWithOptions_C.Off
// (BlueprintCallable, BlueprintEvent)

void ABP_DCMonsterBaseWithOptions_C::Func_Off()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DCMonsterBaseWithOptions_C", "Off");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DCMonsterBaseWithOptions.BP_DCMonsterBaseWithOptions_C.OnRep_Spawn Event Dipatcher
// (BlueprintCallable, BlueprintEvent)

void ABP_DCMonsterBaseWithOptions_C::OnRep_Spawn_Event_Dipatcher()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DCMonsterBaseWithOptions_C", "OnRep_Spawn Event Dipatcher");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DCMonsterBaseWithOptions.BP_DCMonsterBaseWithOptions_C.OnRep_Summon Event Transform
// (BlueprintCallable, BlueprintEvent)

void ABP_DCMonsterBaseWithOptions_C::OnRep_Summon_Event_Transform()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DCMonsterBaseWithOptions_C", "OnRep_Summon Event Transform");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DCMonsterBaseWithOptions.BP_DCMonsterBaseWithOptions_C.OnRep_Summon Monster
// (BlueprintCallable, BlueprintEvent)

void ABP_DCMonsterBaseWithOptions_C::OnRep_Summon_Monster()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DCMonsterBaseWithOptions_C", "OnRep_Summon Monster");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DCMonsterBaseWithOptions.BP_DCMonsterBaseWithOptions_C.OnRep_Summonee
// (BlueprintCallable, BlueprintEvent)

void ABP_DCMonsterBaseWithOptions_C::OnRep_Summonee()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DCMonsterBaseWithOptions_C", "OnRep_Summonee");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DCMonsterBaseWithOptions.BP_DCMonsterBaseWithOptions_C.OnSetAI
// (Event, Protected, BlueprintEvent)

void ABP_DCMonsterBaseWithOptions_C::OnSetAI()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DCMonsterBaseWithOptions_C", "OnSetAI");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DCMonsterBaseWithOptions.BP_DCMonsterBaseWithOptions_C.OnSuccess_21CEDD05472CF8AA4A07758D48F80F14
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// EPathFollowingResult                    MovementResult                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_DCMonsterBaseWithOptions_C::OnSuccess_21CEDD05472CF8AA4A07758D48F80F14(EPathFollowingResult MovementResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DCMonsterBaseWithOptions_C", "OnSuccess_21CEDD05472CF8AA4A07758D48F80F14");

	Params::BP_DCMonsterBaseWithOptions_C_OnSuccess_21CEDD05472CF8AA4A07758D48F80F14 Parms{};

	Parms.MovementResult = MovementResult;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DCMonsterBaseWithOptions.BP_DCMonsterBaseWithOptions_C.OnSuccess_801A2F7E484A71F27AD0278F8B82FB99
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// EPathFollowingResult                    MovementResult                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_DCMonsterBaseWithOptions_C::OnSuccess_801A2F7E484A71F27AD0278F8B82FB99(EPathFollowingResult MovementResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DCMonsterBaseWithOptions_C", "OnSuccess_801A2F7E484A71F27AD0278F8B82FB99");

	Params::BP_DCMonsterBaseWithOptions_C_OnSuccess_801A2F7E484A71F27AD0278F8B82FB99 Parms{};

	Parms.MovementResult = MovementResult;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DCMonsterBaseWithOptions.BP_DCMonsterBaseWithOptions_C.Peace Activated
// (BlueprintCallable, BlueprintEvent)

void ABP_DCMonsterBaseWithOptions_C::Peace_Activated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DCMonsterBaseWithOptions_C", "Peace Activated");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DCMonsterBaseWithOptions.BP_DCMonsterBaseWithOptions_C.Peace Activated Event Dispatcher__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void ABP_DCMonsterBaseWithOptions_C::Peace_Activated_Event_Dispatcher__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DCMonsterBaseWithOptions_C", "Peace Activated Event Dispatcher__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DCMonsterBaseWithOptions.BP_DCMonsterBaseWithOptions_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_DCMonsterBaseWithOptions_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DCMonsterBaseWithOptions_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DCMonsterBaseWithOptions.BP_DCMonsterBaseWithOptions_C.Remove Damage Immune
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_DCMonsterBaseWithOptions_C::Remove_Damage_Immune()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DCMonsterBaseWithOptions_C", "Remove Damage Immune");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DCMonsterBaseWithOptions.BP_DCMonsterBaseWithOptions_C.Removed_79DC362441B88BCE54376582AF9184CE
// (BlueprintCallable, BlueprintEvent)

void ABP_DCMonsterBaseWithOptions_C::Removed_79DC362441B88BCE54376582AF9184CE()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DCMonsterBaseWithOptions_C", "Removed_79DC362441B88BCE54376582AF9184CE");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DCMonsterBaseWithOptions.BP_DCMonsterBaseWithOptions_C.Removed_CE0B13EA482C4B99CB7832A70FAC7611
// (BlueprintCallable, BlueprintEvent)

void ABP_DCMonsterBaseWithOptions_C::Removed_CE0B13EA482C4B99CB7832A70FAC7611()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DCMonsterBaseWithOptions_C", "Removed_CE0B13EA482C4B99CB7832A70FAC7611");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DCMonsterBaseWithOptions.BP_DCMonsterBaseWithOptions_C.SetActivityArea
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_DCMonsterBaseWithOptions_C::SetActivityArea()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DCMonsterBaseWithOptions_C", "SetActivityArea");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DCMonsterBaseWithOptions.BP_DCMonsterBaseWithOptions_C.Spawn Box for Area Check
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_DCMonsterBaseWithOptions_C::Spawn_Box_for_Area_Check()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DCMonsterBaseWithOptions_C", "Spawn Box for Area Check");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DCMonsterBaseWithOptions.BP_DCMonsterBaseWithOptions_C.Spawn Event Dipatcher__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void ABP_DCMonsterBaseWithOptions_C::Spawn_Event_Dipatcher__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DCMonsterBaseWithOptions_C", "Spawn Event Dipatcher__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DCMonsterBaseWithOptions.BP_DCMonsterBaseWithOptions_C.Stop DelayDeath
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_DCMonsterBaseWithOptions_C::Stop_DelayDeath()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DCMonsterBaseWithOptions_C", "Stop DelayDeath");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DCMonsterBaseWithOptions.BP_DCMonsterBaseWithOptions_C.Stop To Dash
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_DCMonsterBaseWithOptions_C::Stop_To_Dash()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DCMonsterBaseWithOptions_C", "Stop To Dash");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DCMonsterBaseWithOptions.BP_DCMonsterBaseWithOptions_C.Summon Slave
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FTransform                       SpawnTransform                                         (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FPrimaryAssetId                  Param_MonsterId                                        (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash)
// class ADCMonsterBase*                   Target_Summonee                                        (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// TArray<class ADCMonsterBase*>           Summonees                                              (Parm, OutParm)

void ABP_DCMonsterBaseWithOptions_C::Summon_Slave(const struct FTransform& SpawnTransform, const struct FPrimaryAssetId& Param_MonsterId, class ADCMonsterBase** Target_Summonee, TArray<class ADCMonsterBase*>* Summonees)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DCMonsterBaseWithOptions_C", "Summon Slave");

	Params::BP_DCMonsterBaseWithOptions_C_Summon_Slave Parms{};

	Parms.SpawnTransform = std::move(SpawnTransform);
	Parms.Param_MonsterId = std::move(Param_MonsterId);

	UObject::ProcessEvent(Func, &Parms);

	if (Target_Summonee != nullptr)
		*Target_Summonee = Parms.Target_Summonee;

	if (Summonees != nullptr)
		*Summonees = std::move(Parms.Summonees);
}


// Function BP_DCMonsterBaseWithOptions.BP_DCMonsterBaseWithOptions_C.Trigger In Combat Area
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           OverlappedActor                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_DCMonsterBaseWithOptions_C::Trigger_In_Combat_Area(class AActor* OverlappedActor, class AActor* OtherActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DCMonsterBaseWithOptions_C", "Trigger In Combat Area");

	Params::BP_DCMonsterBaseWithOptions_C_Trigger_In_Combat_Area Parms{};

	Parms.OverlappedActor = OverlappedActor;
	Parms.OtherActor = OtherActor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DCMonsterBaseWithOptions.BP_DCMonsterBaseWithOptions_C.Trigger In Overlap NPT Area
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// int32                                   OtherBodyIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bFromSweep                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FHitResult                       SweepResult                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void ABP_DCMonsterBaseWithOptions_C::Trigger_In_Overlap_NPT_Area(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DCMonsterBaseWithOptions_C", "Trigger In Overlap NPT Area");

	Params::BP_DCMonsterBaseWithOptions_C_Trigger_In_Overlap_NPT_Area Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;
	Parms.bFromSweep = bFromSweep;
	Parms.SweepResult = std::move(SweepResult);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DCMonsterBaseWithOptions.BP_DCMonsterBaseWithOptions_C.Trigger In Recog Area
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           OverlappedActor                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_DCMonsterBaseWithOptions_C::Trigger_In_Recog_Area(class AActor* OverlappedActor, class AActor* OtherActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DCMonsterBaseWithOptions_C", "Trigger In Recog Area");

	Params::BP_DCMonsterBaseWithOptions_C_Trigger_In_Recog_Area Parms{};

	Parms.OverlappedActor = OverlappedActor;
	Parms.OtherActor = OtherActor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DCMonsterBaseWithOptions.BP_DCMonsterBaseWithOptions_C.Trigger Out Combat Area
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           OverlappedActor                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_DCMonsterBaseWithOptions_C::Trigger_Out_Combat_Area(class AActor* OverlappedActor, class AActor* OtherActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DCMonsterBaseWithOptions_C", "Trigger Out Combat Area");

	Params::BP_DCMonsterBaseWithOptions_C_Trigger_Out_Combat_Area Parms{};

	Parms.OverlappedActor = OverlappedActor;
	Parms.OtherActor = OtherActor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DCMonsterBaseWithOptions.BP_DCMonsterBaseWithOptions_C.Trigger Out Overlap NPT Area
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// int32                                   OtherBodyIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_DCMonsterBaseWithOptions_C::Trigger_Out_Overlap_NPT_Area(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DCMonsterBaseWithOptions_C", "Trigger Out Overlap NPT Area");

	Params::BP_DCMonsterBaseWithOptions_C_Trigger_Out_Overlap_NPT_Area Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DCMonsterBaseWithOptions.BP_DCMonsterBaseWithOptions_C.Trigger Out Recog Area
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           OverlappedActor                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_DCMonsterBaseWithOptions_C::Trigger_Out_Recog_Area(class AActor* OverlappedActor, class AActor* OtherActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DCMonsterBaseWithOptions_C", "Trigger Out Recog Area");

	Params::BP_DCMonsterBaseWithOptions_C_Trigger_Out_Recog_Area Parms{};

	Parms.OverlappedActor = OverlappedActor;
	Parms.OtherActor = OtherActor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DCMonsterBaseWithOptions.BP_DCMonsterBaseWithOptions_C.UserConstructionScript
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ABP_DCMonsterBaseWithOptions_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DCMonsterBaseWithOptions_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}

}

