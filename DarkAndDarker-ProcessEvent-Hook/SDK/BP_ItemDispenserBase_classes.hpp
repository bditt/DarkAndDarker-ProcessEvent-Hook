#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ItemDispenserBase

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "BP_StatueBase_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_ItemDispenserBase.BP_ItemDispenserBase_C
// 0x0028 (0x04E0 - 0x04B8)
class ABP_ItemDispenserBase_C : public ABP_StatueBase_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_ItemDispenserBase_C;             // 0x04B8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UItemRandomGenerateComponent*           ItemRandomGenerate;                                // 0x04C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsOverlapped;                                     // 0x04C8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5AF3[0x7];                                     // 0x04C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        ReactivationTime;                                  // 0x04D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Target;                                            // 0x04D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void BndEvt__BP_Statue_ATM_ItemRandomGenerate_K2Node_ComponentBoundEvent_2_ItemGenerationFinishedSignature__DelegateSignature(TArray<struct FItemData>& ResultItems);
	void ExecuteUbergraph_BP_ItemDispenserBase(int32 EntryPoint);
	void GameplayTagUpdated(const struct FGameplayTag& InGameplayTag, int32 InCount);
	void InteractSucceed(class AActor* Interacter, const struct FGameplayTag& StateTag, const struct FGameplayTag& TriggerTag, const struct FHitResult& HitResult);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_ItemDispenserBase_C">();
	}
	static class ABP_ItemDispenserBase_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_ItemDispenserBase_C>();
	}
};
static_assert(alignof(ABP_ItemDispenserBase_C) == 0x000008, "Wrong alignment on ABP_ItemDispenserBase_C");
static_assert(sizeof(ABP_ItemDispenserBase_C) == 0x0004E0, "Wrong size on ABP_ItemDispenserBase_C");
static_assert(offsetof(ABP_ItemDispenserBase_C, UberGraphFrame_BP_ItemDispenserBase_C) == 0x0004B8, "Member 'ABP_ItemDispenserBase_C::UberGraphFrame_BP_ItemDispenserBase_C' has a wrong offset!");
static_assert(offsetof(ABP_ItemDispenserBase_C, ItemRandomGenerate) == 0x0004C0, "Member 'ABP_ItemDispenserBase_C::ItemRandomGenerate' has a wrong offset!");
static_assert(offsetof(ABP_ItemDispenserBase_C, bIsOverlapped) == 0x0004C8, "Member 'ABP_ItemDispenserBase_C::bIsOverlapped' has a wrong offset!");
static_assert(offsetof(ABP_ItemDispenserBase_C, ReactivationTime) == 0x0004D0, "Member 'ABP_ItemDispenserBase_C::ReactivationTime' has a wrong offset!");
static_assert(offsetof(ABP_ItemDispenserBase_C, Target) == 0x0004D8, "Member 'ABP_ItemDispenserBase_C::Target' has a wrong offset!");

}

