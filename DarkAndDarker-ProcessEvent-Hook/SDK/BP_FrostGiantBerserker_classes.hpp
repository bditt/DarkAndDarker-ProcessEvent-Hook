#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_FrostGiantBerserker

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "BP_Character_Randomizer_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_FrostGiantBerserker.BP_FrostGiantBerserker_C
// 0x02E0 (0x17B0 - 0x14D0)
class ABP_FrostGiantBerserker_C : public ABP_Character_Randomizer_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_FrostGiantBerserker_C;           // 0x14D0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBP_DCHitBox_C*                         BP_DCHitBox9;                                      // 0x14D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_DCHitBox_C*                         BP_DCHitBox8;                                      // 0x14E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_DCHitBox_C*                         BP_DCHitBox7;                                      // 0x14E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_DCHitBox_C*                         BP_DCHitBox6;                                      // 0x14F0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_DCHitBox_C*                         BP_DCHitBox5;                                      // 0x14F8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_DCHitBox_C*                         BP_DCHitBox4;                                      // 0x1500(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_DCHitBox_C*                         BP_DCHitBox3;                                      // 0x1508(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_DCHitBox_C*                         BP_DCHitBox2;                                      // 0x1510(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_DCHitBox_C*                         BP_DCHitBox1;                                      // 0x1518(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_DCHitBox_C*                         BP_DCHitBox;                                       // 0x1520(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TMap<int32, class UMaterialInterface*>        Mesh01_Elite01_Material_Interface;                 // 0x1528(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMap<int32, class UMaterialInterface*>        Mesh01_Elite02_Material_Interface;                 // 0x1578(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMap<int32, class UMaterialInterface*>        Mesh01_Elite03_Material_Interface;                 // 0x15C8(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMap<int32, class UMaterialInterface*>        Mesh01_Elite04_Material_Interface;                 // 0x1618(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMap<int32, class UMaterialInterface*>        Mesh02_Elite01_Material_Interface;                 // 0x1668(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMap<int32, class UMaterialInterface*>        Mesh02_Elite02_Material_Interface;                 // 0x16B8(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMap<int32, class UMaterialInterface*>        Mesh02_Elite03_Material_Interface;                 // 0x1708(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMap<int32, class UMaterialInterface*>        Mesh02_Elite04_Material_Interface;                 // 0x1758(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          Step;                                              // 0x17A8(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_FrostGiantBerserker(int32 EntryPoint);
	void Randomize();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_FrostGiantBerserker_C">();
	}
	static class ABP_FrostGiantBerserker_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_FrostGiantBerserker_C>();
	}
};
static_assert(alignof(ABP_FrostGiantBerserker_C) == 0x000010, "Wrong alignment on ABP_FrostGiantBerserker_C");
static_assert(sizeof(ABP_FrostGiantBerserker_C) == 0x0017B0, "Wrong size on ABP_FrostGiantBerserker_C");
static_assert(offsetof(ABP_FrostGiantBerserker_C, UberGraphFrame_BP_FrostGiantBerserker_C) == 0x0014D0, "Member 'ABP_FrostGiantBerserker_C::UberGraphFrame_BP_FrostGiantBerserker_C' has a wrong offset!");
static_assert(offsetof(ABP_FrostGiantBerserker_C, BP_DCHitBox9) == 0x0014D8, "Member 'ABP_FrostGiantBerserker_C::BP_DCHitBox9' has a wrong offset!");
static_assert(offsetof(ABP_FrostGiantBerserker_C, BP_DCHitBox8) == 0x0014E0, "Member 'ABP_FrostGiantBerserker_C::BP_DCHitBox8' has a wrong offset!");
static_assert(offsetof(ABP_FrostGiantBerserker_C, BP_DCHitBox7) == 0x0014E8, "Member 'ABP_FrostGiantBerserker_C::BP_DCHitBox7' has a wrong offset!");
static_assert(offsetof(ABP_FrostGiantBerserker_C, BP_DCHitBox6) == 0x0014F0, "Member 'ABP_FrostGiantBerserker_C::BP_DCHitBox6' has a wrong offset!");
static_assert(offsetof(ABP_FrostGiantBerserker_C, BP_DCHitBox5) == 0x0014F8, "Member 'ABP_FrostGiantBerserker_C::BP_DCHitBox5' has a wrong offset!");
static_assert(offsetof(ABP_FrostGiantBerserker_C, BP_DCHitBox4) == 0x001500, "Member 'ABP_FrostGiantBerserker_C::BP_DCHitBox4' has a wrong offset!");
static_assert(offsetof(ABP_FrostGiantBerserker_C, BP_DCHitBox3) == 0x001508, "Member 'ABP_FrostGiantBerserker_C::BP_DCHitBox3' has a wrong offset!");
static_assert(offsetof(ABP_FrostGiantBerserker_C, BP_DCHitBox2) == 0x001510, "Member 'ABP_FrostGiantBerserker_C::BP_DCHitBox2' has a wrong offset!");
static_assert(offsetof(ABP_FrostGiantBerserker_C, BP_DCHitBox1) == 0x001518, "Member 'ABP_FrostGiantBerserker_C::BP_DCHitBox1' has a wrong offset!");
static_assert(offsetof(ABP_FrostGiantBerserker_C, BP_DCHitBox) == 0x001520, "Member 'ABP_FrostGiantBerserker_C::BP_DCHitBox' has a wrong offset!");
static_assert(offsetof(ABP_FrostGiantBerserker_C, Mesh01_Elite01_Material_Interface) == 0x001528, "Member 'ABP_FrostGiantBerserker_C::Mesh01_Elite01_Material_Interface' has a wrong offset!");
static_assert(offsetof(ABP_FrostGiantBerserker_C, Mesh01_Elite02_Material_Interface) == 0x001578, "Member 'ABP_FrostGiantBerserker_C::Mesh01_Elite02_Material_Interface' has a wrong offset!");
static_assert(offsetof(ABP_FrostGiantBerserker_C, Mesh01_Elite03_Material_Interface) == 0x0015C8, "Member 'ABP_FrostGiantBerserker_C::Mesh01_Elite03_Material_Interface' has a wrong offset!");
static_assert(offsetof(ABP_FrostGiantBerserker_C, Mesh01_Elite04_Material_Interface) == 0x001618, "Member 'ABP_FrostGiantBerserker_C::Mesh01_Elite04_Material_Interface' has a wrong offset!");
static_assert(offsetof(ABP_FrostGiantBerserker_C, Mesh02_Elite01_Material_Interface) == 0x001668, "Member 'ABP_FrostGiantBerserker_C::Mesh02_Elite01_Material_Interface' has a wrong offset!");
static_assert(offsetof(ABP_FrostGiantBerserker_C, Mesh02_Elite02_Material_Interface) == 0x0016B8, "Member 'ABP_FrostGiantBerserker_C::Mesh02_Elite02_Material_Interface' has a wrong offset!");
static_assert(offsetof(ABP_FrostGiantBerserker_C, Mesh02_Elite03_Material_Interface) == 0x001708, "Member 'ABP_FrostGiantBerserker_C::Mesh02_Elite03_Material_Interface' has a wrong offset!");
static_assert(offsetof(ABP_FrostGiantBerserker_C, Mesh02_Elite04_Material_Interface) == 0x001758, "Member 'ABP_FrostGiantBerserker_C::Mesh02_Elite04_Material_Interface' has a wrong offset!");
static_assert(offsetof(ABP_FrostGiantBerserker_C, Step) == 0x0017A8, "Member 'ABP_FrostGiantBerserker_C::Step' has a wrong offset!");

}

