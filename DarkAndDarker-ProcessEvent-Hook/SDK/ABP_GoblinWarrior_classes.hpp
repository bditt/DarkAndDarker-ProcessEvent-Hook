#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ABP_GoblinWarrior

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "AnimGraphRuntime_structs.hpp"
#include "ABP_GoblinWarrior_structs.hpp"
#include "DungeonCrawler_classes.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass ABP_GoblinWarrior.ABP_GoblinWarrior_C
// 0x13D0 (0x1900 - 0x0530)
class UABP_GoblinWarrior_C final : public UDCMonsterAnimInstanceBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0530(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct ABP_GoblinWarrior::FAnimBlueprintGeneratedMutableData __AnimBlueprintMutables;                           // 0x0538(0x0010)(HasGetValueTypeHash)
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_PropertyAccess;             // 0x0548(0x0008)()
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_Base;                       // 0x0550(0x0008)()
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x0558(0x0020)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot;                                // 0x0578(0x0048)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_20;                 // 0x05C0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_19;                 // 0x05E8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_18;                 // 0x0610(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_17;                 // 0x0638(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_16;                 // 0x0660(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_15;                 // 0x0688(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_6;                    // 0x06B0(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_8;                       // 0x06F8(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_5;                    // 0x0718(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_7;                       // 0x0760(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_4;                    // 0x0780(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_6;                       // 0x07C8(0x0020)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_14;                 // 0x07E8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_13;                 // 0x0810(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_12;                 // 0x0838(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_11;                 // 0x0860(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_10;                 // 0x0888(0x0028)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_1;                  // 0x08B0(0x0070)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_5;                       // 0x0920(0x0020)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer;                    // 0x0940(0x0070)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_4;                       // 0x09B0(0x0020)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine_2;                      // 0x09D0(0x00C8)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_3;                       // 0x0A98(0x0020)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine_1;                      // 0x0AB8(0x00C8)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose;                      // 0x0B80(0x0080)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_9;                  // 0x0C00(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_8;                  // 0x0C28(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_7;                  // 0x0C50(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_6;                  // 0x0C78(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_5;                  // 0x0CA0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_4;                  // 0x0CC8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_3;                  // 0x0CF0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_2;                  // 0x0D18(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_1;                  // 0x0D40(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult;                    // 0x0D68(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_3;                    // 0x0D90(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_2;                    // 0x0DD8(0x0048)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_6;                     // 0x0E20(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_5;                     // 0x0E48(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_4;                     // 0x0E70(0x0028)()
	struct FAnimNode_ApplyAdditive                AnimGraphNode_ApplyAdditive_3;                     // 0x0E98(0x00C8)()
	struct FAnimNode_ApplyAdditive                AnimGraphNode_ApplyAdditive_2;                     // 0x0F60(0x00C8)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_1;             // 0x1028(0x0020)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_1;             // 0x1048(0x0020)()
	struct FAnimNode_LegIK                        AnimGraphNode_LegIK_1;                             // 0x1068(0x00F8)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_1;                   // 0x1160(0x0048)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend_1;                  // 0x11A8(0x00F0)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_2;                       // 0x1298(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_1;                    // 0x12B8(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x1300(0x0048)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_3;                     // 0x1348(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_2;                     // 0x1370(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_1;                     // 0x1398(0x0028)()
	struct FAnimNode_ApplyAdditive                AnimGraphNode_ApplyAdditive_1;                     // 0x13C0(0x00C8)()
	struct FAnimNode_ApplyAdditive                AnimGraphNode_ApplyAdditive;                       // 0x1488(0x00C8)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace;               // 0x1550(0x0020)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace;               // 0x1570(0x0020)()
	struct FAnimNode_LegIK                        AnimGraphNode_LegIK;                               // 0x1590(0x00F8)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool;                     // 0x1688(0x0048)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend;                    // 0x16D0(0x00F0)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_1;                       // 0x17C0(0x0020)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose;                       // 0x17E0(0x0028)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult;                         // 0x1808(0x0020)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine;                        // 0x1828(0x00C8)()
	int32                                         Deadbody_Index;                                    // 0x18F0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsDeadbody1;                                      // 0x18F4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsDeadbody2;                                      // 0x18F5(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsDeadbody3;                                      // 0x18F6(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          GuardRun;                                          // 0x18F7(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsDeathCurveLarge;                                // 0x18F8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void AnimGraph(struct FPoseLink* Param_AnimGraph);
	void BlueprintThreadSafeUpdateAnimation(float DeltaTime);
	void ExecuteUbergraph_ABP_GoblinWarrior(int32 EntryPoint);
	void OnRep_Deadbody_Index();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ABP_GoblinWarrior_C">();
	}
	static class UABP_GoblinWarrior_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UABP_GoblinWarrior_C>();
	}
};
static_assert(alignof(UABP_GoblinWarrior_C) == 0x000010, "Wrong alignment on UABP_GoblinWarrior_C");
static_assert(sizeof(UABP_GoblinWarrior_C) == 0x001900, "Wrong size on UABP_GoblinWarrior_C");
static_assert(offsetof(UABP_GoblinWarrior_C, UberGraphFrame) == 0x000530, "Member 'UABP_GoblinWarrior_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UABP_GoblinWarrior_C, __AnimBlueprintMutables) == 0x000538, "Member 'UABP_GoblinWarrior_C::__AnimBlueprintMutables' has a wrong offset!");
static_assert(offsetof(UABP_GoblinWarrior_C, AnimBlueprintExtension_PropertyAccess) == 0x000548, "Member 'UABP_GoblinWarrior_C::AnimBlueprintExtension_PropertyAccess' has a wrong offset!");
static_assert(offsetof(UABP_GoblinWarrior_C, AnimBlueprintExtension_Base) == 0x000550, "Member 'UABP_GoblinWarrior_C::AnimBlueprintExtension_Base' has a wrong offset!");
static_assert(offsetof(UABP_GoblinWarrior_C, AnimGraphNode_Root) == 0x000558, "Member 'UABP_GoblinWarrior_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UABP_GoblinWarrior_C, AnimGraphNode_Slot) == 0x000578, "Member 'UABP_GoblinWarrior_C::AnimGraphNode_Slot' has a wrong offset!");
static_assert(offsetof(UABP_GoblinWarrior_C, AnimGraphNode_TransitionResult_20) == 0x0005C0, "Member 'UABP_GoblinWarrior_C::AnimGraphNode_TransitionResult_20' has a wrong offset!");
static_assert(offsetof(UABP_GoblinWarrior_C, AnimGraphNode_TransitionResult_19) == 0x0005E8, "Member 'UABP_GoblinWarrior_C::AnimGraphNode_TransitionResult_19' has a wrong offset!");
static_assert(offsetof(UABP_GoblinWarrior_C, AnimGraphNode_TransitionResult_18) == 0x000610, "Member 'UABP_GoblinWarrior_C::AnimGraphNode_TransitionResult_18' has a wrong offset!");
static_assert(offsetof(UABP_GoblinWarrior_C, AnimGraphNode_TransitionResult_17) == 0x000638, "Member 'UABP_GoblinWarrior_C::AnimGraphNode_TransitionResult_17' has a wrong offset!");
static_assert(offsetof(UABP_GoblinWarrior_C, AnimGraphNode_TransitionResult_16) == 0x000660, "Member 'UABP_GoblinWarrior_C::AnimGraphNode_TransitionResult_16' has a wrong offset!");
static_assert(offsetof(UABP_GoblinWarrior_C, AnimGraphNode_TransitionResult_15) == 0x000688, "Member 'UABP_GoblinWarrior_C::AnimGraphNode_TransitionResult_15' has a wrong offset!");
static_assert(offsetof(UABP_GoblinWarrior_C, AnimGraphNode_SequencePlayer_6) == 0x0006B0, "Member 'UABP_GoblinWarrior_C::AnimGraphNode_SequencePlayer_6' has a wrong offset!");
static_assert(offsetof(UABP_GoblinWarrior_C, AnimGraphNode_StateResult_8) == 0x0006F8, "Member 'UABP_GoblinWarrior_C::AnimGraphNode_StateResult_8' has a wrong offset!");
static_assert(offsetof(UABP_GoblinWarrior_C, AnimGraphNode_SequencePlayer_5) == 0x000718, "Member 'UABP_GoblinWarrior_C::AnimGraphNode_SequencePlayer_5' has a wrong offset!");
static_assert(offsetof(UABP_GoblinWarrior_C, AnimGraphNode_StateResult_7) == 0x000760, "Member 'UABP_GoblinWarrior_C::AnimGraphNode_StateResult_7' has a wrong offset!");
static_assert(offsetof(UABP_GoblinWarrior_C, AnimGraphNode_SequencePlayer_4) == 0x000780, "Member 'UABP_GoblinWarrior_C::AnimGraphNode_SequencePlayer_4' has a wrong offset!");
static_assert(offsetof(UABP_GoblinWarrior_C, AnimGraphNode_StateResult_6) == 0x0007C8, "Member 'UABP_GoblinWarrior_C::AnimGraphNode_StateResult_6' has a wrong offset!");
static_assert(offsetof(UABP_GoblinWarrior_C, AnimGraphNode_TransitionResult_14) == 0x0007E8, "Member 'UABP_GoblinWarrior_C::AnimGraphNode_TransitionResult_14' has a wrong offset!");
static_assert(offsetof(UABP_GoblinWarrior_C, AnimGraphNode_TransitionResult_13) == 0x000810, "Member 'UABP_GoblinWarrior_C::AnimGraphNode_TransitionResult_13' has a wrong offset!");
static_assert(offsetof(UABP_GoblinWarrior_C, AnimGraphNode_TransitionResult_12) == 0x000838, "Member 'UABP_GoblinWarrior_C::AnimGraphNode_TransitionResult_12' has a wrong offset!");
static_assert(offsetof(UABP_GoblinWarrior_C, AnimGraphNode_TransitionResult_11) == 0x000860, "Member 'UABP_GoblinWarrior_C::AnimGraphNode_TransitionResult_11' has a wrong offset!");
static_assert(offsetof(UABP_GoblinWarrior_C, AnimGraphNode_TransitionResult_10) == 0x000888, "Member 'UABP_GoblinWarrior_C::AnimGraphNode_TransitionResult_10' has a wrong offset!");
static_assert(offsetof(UABP_GoblinWarrior_C, AnimGraphNode_BlendSpacePlayer_1) == 0x0008B0, "Member 'UABP_GoblinWarrior_C::AnimGraphNode_BlendSpacePlayer_1' has a wrong offset!");
static_assert(offsetof(UABP_GoblinWarrior_C, AnimGraphNode_StateResult_5) == 0x000920, "Member 'UABP_GoblinWarrior_C::AnimGraphNode_StateResult_5' has a wrong offset!");
static_assert(offsetof(UABP_GoblinWarrior_C, AnimGraphNode_BlendSpacePlayer) == 0x000940, "Member 'UABP_GoblinWarrior_C::AnimGraphNode_BlendSpacePlayer' has a wrong offset!");
static_assert(offsetof(UABP_GoblinWarrior_C, AnimGraphNode_StateResult_4) == 0x0009B0, "Member 'UABP_GoblinWarrior_C::AnimGraphNode_StateResult_4' has a wrong offset!");
static_assert(offsetof(UABP_GoblinWarrior_C, AnimGraphNode_StateMachine_2) == 0x0009D0, "Member 'UABP_GoblinWarrior_C::AnimGraphNode_StateMachine_2' has a wrong offset!");
static_assert(offsetof(UABP_GoblinWarrior_C, AnimGraphNode_StateResult_3) == 0x000A98, "Member 'UABP_GoblinWarrior_C::AnimGraphNode_StateResult_3' has a wrong offset!");
static_assert(offsetof(UABP_GoblinWarrior_C, AnimGraphNode_StateMachine_1) == 0x000AB8, "Member 'UABP_GoblinWarrior_C::AnimGraphNode_StateMachine_1' has a wrong offset!");
static_assert(offsetof(UABP_GoblinWarrior_C, AnimGraphNode_SaveCachedPose) == 0x000B80, "Member 'UABP_GoblinWarrior_C::AnimGraphNode_SaveCachedPose' has a wrong offset!");
static_assert(offsetof(UABP_GoblinWarrior_C, AnimGraphNode_TransitionResult_9) == 0x000C00, "Member 'UABP_GoblinWarrior_C::AnimGraphNode_TransitionResult_9' has a wrong offset!");
static_assert(offsetof(UABP_GoblinWarrior_C, AnimGraphNode_TransitionResult_8) == 0x000C28, "Member 'UABP_GoblinWarrior_C::AnimGraphNode_TransitionResult_8' has a wrong offset!");
static_assert(offsetof(UABP_GoblinWarrior_C, AnimGraphNode_TransitionResult_7) == 0x000C50, "Member 'UABP_GoblinWarrior_C::AnimGraphNode_TransitionResult_7' has a wrong offset!");
static_assert(offsetof(UABP_GoblinWarrior_C, AnimGraphNode_TransitionResult_6) == 0x000C78, "Member 'UABP_GoblinWarrior_C::AnimGraphNode_TransitionResult_6' has a wrong offset!");
static_assert(offsetof(UABP_GoblinWarrior_C, AnimGraphNode_TransitionResult_5) == 0x000CA0, "Member 'UABP_GoblinWarrior_C::AnimGraphNode_TransitionResult_5' has a wrong offset!");
static_assert(offsetof(UABP_GoblinWarrior_C, AnimGraphNode_TransitionResult_4) == 0x000CC8, "Member 'UABP_GoblinWarrior_C::AnimGraphNode_TransitionResult_4' has a wrong offset!");
static_assert(offsetof(UABP_GoblinWarrior_C, AnimGraphNode_TransitionResult_3) == 0x000CF0, "Member 'UABP_GoblinWarrior_C::AnimGraphNode_TransitionResult_3' has a wrong offset!");
static_assert(offsetof(UABP_GoblinWarrior_C, AnimGraphNode_TransitionResult_2) == 0x000D18, "Member 'UABP_GoblinWarrior_C::AnimGraphNode_TransitionResult_2' has a wrong offset!");
static_assert(offsetof(UABP_GoblinWarrior_C, AnimGraphNode_TransitionResult_1) == 0x000D40, "Member 'UABP_GoblinWarrior_C::AnimGraphNode_TransitionResult_1' has a wrong offset!");
static_assert(offsetof(UABP_GoblinWarrior_C, AnimGraphNode_TransitionResult) == 0x000D68, "Member 'UABP_GoblinWarrior_C::AnimGraphNode_TransitionResult' has a wrong offset!");
static_assert(offsetof(UABP_GoblinWarrior_C, AnimGraphNode_SequencePlayer_3) == 0x000D90, "Member 'UABP_GoblinWarrior_C::AnimGraphNode_SequencePlayer_3' has a wrong offset!");
static_assert(offsetof(UABP_GoblinWarrior_C, AnimGraphNode_SequencePlayer_2) == 0x000DD8, "Member 'UABP_GoblinWarrior_C::AnimGraphNode_SequencePlayer_2' has a wrong offset!");
static_assert(offsetof(UABP_GoblinWarrior_C, AnimGraphNode_UseCachedPose_6) == 0x000E20, "Member 'UABP_GoblinWarrior_C::AnimGraphNode_UseCachedPose_6' has a wrong offset!");
static_assert(offsetof(UABP_GoblinWarrior_C, AnimGraphNode_UseCachedPose_5) == 0x000E48, "Member 'UABP_GoblinWarrior_C::AnimGraphNode_UseCachedPose_5' has a wrong offset!");
static_assert(offsetof(UABP_GoblinWarrior_C, AnimGraphNode_UseCachedPose_4) == 0x000E70, "Member 'UABP_GoblinWarrior_C::AnimGraphNode_UseCachedPose_4' has a wrong offset!");
static_assert(offsetof(UABP_GoblinWarrior_C, AnimGraphNode_ApplyAdditive_3) == 0x000E98, "Member 'UABP_GoblinWarrior_C::AnimGraphNode_ApplyAdditive_3' has a wrong offset!");
static_assert(offsetof(UABP_GoblinWarrior_C, AnimGraphNode_ApplyAdditive_2) == 0x000F60, "Member 'UABP_GoblinWarrior_C::AnimGraphNode_ApplyAdditive_2' has a wrong offset!");
static_assert(offsetof(UABP_GoblinWarrior_C, AnimGraphNode_ComponentToLocalSpace_1) == 0x001028, "Member 'UABP_GoblinWarrior_C::AnimGraphNode_ComponentToLocalSpace_1' has a wrong offset!");
static_assert(offsetof(UABP_GoblinWarrior_C, AnimGraphNode_LocalToComponentSpace_1) == 0x001048, "Member 'UABP_GoblinWarrior_C::AnimGraphNode_LocalToComponentSpace_1' has a wrong offset!");
static_assert(offsetof(UABP_GoblinWarrior_C, AnimGraphNode_LegIK_1) == 0x001068, "Member 'UABP_GoblinWarrior_C::AnimGraphNode_LegIK_1' has a wrong offset!");
static_assert(offsetof(UABP_GoblinWarrior_C, AnimGraphNode_BlendListByBool_1) == 0x001160, "Member 'UABP_GoblinWarrior_C::AnimGraphNode_BlendListByBool_1' has a wrong offset!");
static_assert(offsetof(UABP_GoblinWarrior_C, AnimGraphNode_LayeredBoneBlend_1) == 0x0011A8, "Member 'UABP_GoblinWarrior_C::AnimGraphNode_LayeredBoneBlend_1' has a wrong offset!");
static_assert(offsetof(UABP_GoblinWarrior_C, AnimGraphNode_StateResult_2) == 0x001298, "Member 'UABP_GoblinWarrior_C::AnimGraphNode_StateResult_2' has a wrong offset!");
static_assert(offsetof(UABP_GoblinWarrior_C, AnimGraphNode_SequencePlayer_1) == 0x0012B8, "Member 'UABP_GoblinWarrior_C::AnimGraphNode_SequencePlayer_1' has a wrong offset!");
static_assert(offsetof(UABP_GoblinWarrior_C, AnimGraphNode_SequencePlayer) == 0x001300, "Member 'UABP_GoblinWarrior_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(UABP_GoblinWarrior_C, AnimGraphNode_UseCachedPose_3) == 0x001348, "Member 'UABP_GoblinWarrior_C::AnimGraphNode_UseCachedPose_3' has a wrong offset!");
static_assert(offsetof(UABP_GoblinWarrior_C, AnimGraphNode_UseCachedPose_2) == 0x001370, "Member 'UABP_GoblinWarrior_C::AnimGraphNode_UseCachedPose_2' has a wrong offset!");
static_assert(offsetof(UABP_GoblinWarrior_C, AnimGraphNode_UseCachedPose_1) == 0x001398, "Member 'UABP_GoblinWarrior_C::AnimGraphNode_UseCachedPose_1' has a wrong offset!");
static_assert(offsetof(UABP_GoblinWarrior_C, AnimGraphNode_ApplyAdditive_1) == 0x0013C0, "Member 'UABP_GoblinWarrior_C::AnimGraphNode_ApplyAdditive_1' has a wrong offset!");
static_assert(offsetof(UABP_GoblinWarrior_C, AnimGraphNode_ApplyAdditive) == 0x001488, "Member 'UABP_GoblinWarrior_C::AnimGraphNode_ApplyAdditive' has a wrong offset!");
static_assert(offsetof(UABP_GoblinWarrior_C, AnimGraphNode_ComponentToLocalSpace) == 0x001550, "Member 'UABP_GoblinWarrior_C::AnimGraphNode_ComponentToLocalSpace' has a wrong offset!");
static_assert(offsetof(UABP_GoblinWarrior_C, AnimGraphNode_LocalToComponentSpace) == 0x001570, "Member 'UABP_GoblinWarrior_C::AnimGraphNode_LocalToComponentSpace' has a wrong offset!");
static_assert(offsetof(UABP_GoblinWarrior_C, AnimGraphNode_LegIK) == 0x001590, "Member 'UABP_GoblinWarrior_C::AnimGraphNode_LegIK' has a wrong offset!");
static_assert(offsetof(UABP_GoblinWarrior_C, AnimGraphNode_BlendListByBool) == 0x001688, "Member 'UABP_GoblinWarrior_C::AnimGraphNode_BlendListByBool' has a wrong offset!");
static_assert(offsetof(UABP_GoblinWarrior_C, AnimGraphNode_LayeredBoneBlend) == 0x0016D0, "Member 'UABP_GoblinWarrior_C::AnimGraphNode_LayeredBoneBlend' has a wrong offset!");
static_assert(offsetof(UABP_GoblinWarrior_C, AnimGraphNode_StateResult_1) == 0x0017C0, "Member 'UABP_GoblinWarrior_C::AnimGraphNode_StateResult_1' has a wrong offset!");
static_assert(offsetof(UABP_GoblinWarrior_C, AnimGraphNode_UseCachedPose) == 0x0017E0, "Member 'UABP_GoblinWarrior_C::AnimGraphNode_UseCachedPose' has a wrong offset!");
static_assert(offsetof(UABP_GoblinWarrior_C, AnimGraphNode_StateResult) == 0x001808, "Member 'UABP_GoblinWarrior_C::AnimGraphNode_StateResult' has a wrong offset!");
static_assert(offsetof(UABP_GoblinWarrior_C, AnimGraphNode_StateMachine) == 0x001828, "Member 'UABP_GoblinWarrior_C::AnimGraphNode_StateMachine' has a wrong offset!");
static_assert(offsetof(UABP_GoblinWarrior_C, Deadbody_Index) == 0x0018F0, "Member 'UABP_GoblinWarrior_C::Deadbody_Index' has a wrong offset!");
static_assert(offsetof(UABP_GoblinWarrior_C, bIsDeadbody1) == 0x0018F4, "Member 'UABP_GoblinWarrior_C::bIsDeadbody1' has a wrong offset!");
static_assert(offsetof(UABP_GoblinWarrior_C, bIsDeadbody2) == 0x0018F5, "Member 'UABP_GoblinWarrior_C::bIsDeadbody2' has a wrong offset!");
static_assert(offsetof(UABP_GoblinWarrior_C, bIsDeadbody3) == 0x0018F6, "Member 'UABP_GoblinWarrior_C::bIsDeadbody3' has a wrong offset!");
static_assert(offsetof(UABP_GoblinWarrior_C, GuardRun) == 0x0018F7, "Member 'UABP_GoblinWarrior_C::GuardRun' has a wrong offset!");
static_assert(offsetof(UABP_GoblinWarrior_C, bIsDeathCurveLarge) == 0x0018F8, "Member 'UABP_GoblinWarrior_C::bIsDeathCurveLarge' has a wrong offset!");

}

