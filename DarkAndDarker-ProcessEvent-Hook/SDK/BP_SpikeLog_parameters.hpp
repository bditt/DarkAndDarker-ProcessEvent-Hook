#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_SpikeLog

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"
#include "DungeonCrawler_structs.hpp"


namespace SDK::Params
{

// Function BP_SpikeLog.BP_SpikeLog_C.ActiveSpikeLog
// 0x0020 (0x0020 - 0x0000)
struct BP_SpikeLog_C_ActiveSpikeLog final
{
public:
	struct FDCSpikeLogAnimationData               Param_SpikeLogAnimationData;                       // 0x0000(0x0014)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	uint8                                         Pad_5668[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_SpikeLogEjector_C*                  Param_Ejector;                                     // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SpikeLog_C_ActiveSpikeLog) == 0x000008, "Wrong alignment on BP_SpikeLog_C_ActiveSpikeLog");
static_assert(sizeof(BP_SpikeLog_C_ActiveSpikeLog) == 0x000020, "Wrong size on BP_SpikeLog_C_ActiveSpikeLog");
static_assert(offsetof(BP_SpikeLog_C_ActiveSpikeLog, Param_SpikeLogAnimationData) == 0x000000, "Member 'BP_SpikeLog_C_ActiveSpikeLog::Param_SpikeLogAnimationData' has a wrong offset!");
static_assert(offsetof(BP_SpikeLog_C_ActiveSpikeLog, Param_Ejector) == 0x000018, "Member 'BP_SpikeLog_C_ActiveSpikeLog::Param_Ejector' has a wrong offset!");

// Function BP_SpikeLog.BP_SpikeLog_C.ExecuteUbergraph_BP_SpikeLog
// 0x0058 (0x0058 - 0x0000)
struct BP_SpikeLog_C_ExecuteUbergraph_BP_SpikeLog final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_AttachToComponent_ReturnValue;         // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5669[0x2];                                     // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UABP_SpikeLog_C*                        K2Node_DynamicCast_AsABP_Spike_Log;                // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_1;               // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_AttachToComponent_ReturnValue_1;       // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_566A[0x1];                                     // 0x001B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           K2Node_Event_InGameplayTag;                        // 0x001C(0x0008)(ConstParm, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_InCount;                              // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_2;               // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess;   // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_566B[0x5];                                     // 0x002B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_VariableSet_AttackDistanceValue_ImplicitCast; // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_AttackRotationValue_ImplicitCast; // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_AttackPlayRateValue_ImplicitCast; // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_LaunchDistanceValue_ImplicitCast; // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_LaunchHeightValue_ImplicitCast; // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SpikeLog_C_ExecuteUbergraph_BP_SpikeLog) == 0x000008, "Wrong alignment on BP_SpikeLog_C_ExecuteUbergraph_BP_SpikeLog");
static_assert(sizeof(BP_SpikeLog_C_ExecuteUbergraph_BP_SpikeLog) == 0x000058, "Wrong size on BP_SpikeLog_C_ExecuteUbergraph_BP_SpikeLog");
static_assert(offsetof(BP_SpikeLog_C_ExecuteUbergraph_BP_SpikeLog, EntryPoint) == 0x000000, "Member 'BP_SpikeLog_C_ExecuteUbergraph_BP_SpikeLog::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_SpikeLog_C_ExecuteUbergraph_BP_SpikeLog, CallFunc_HasAuthority_ReturnValue) == 0x000004, "Member 'BP_SpikeLog_C_ExecuteUbergraph_BP_SpikeLog::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpikeLog_C_ExecuteUbergraph_BP_SpikeLog, CallFunc_K2_AttachToComponent_ReturnValue) == 0x000005, "Member 'BP_SpikeLog_C_ExecuteUbergraph_BP_SpikeLog::CallFunc_K2_AttachToComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpikeLog_C_ExecuteUbergraph_BP_SpikeLog, CallFunc_GetAnimInstance_ReturnValue) == 0x000008, "Member 'BP_SpikeLog_C_ExecuteUbergraph_BP_SpikeLog::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpikeLog_C_ExecuteUbergraph_BP_SpikeLog, K2Node_DynamicCast_AsABP_Spike_Log) == 0x000010, "Member 'BP_SpikeLog_C_ExecuteUbergraph_BP_SpikeLog::K2Node_DynamicCast_AsABP_Spike_Log' has a wrong offset!");
static_assert(offsetof(BP_SpikeLog_C_ExecuteUbergraph_BP_SpikeLog, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_SpikeLog_C_ExecuteUbergraph_BP_SpikeLog::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_SpikeLog_C_ExecuteUbergraph_BP_SpikeLog, CallFunc_HasAuthority_ReturnValue_1) == 0x000019, "Member 'BP_SpikeLog_C_ExecuteUbergraph_BP_SpikeLog::CallFunc_HasAuthority_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SpikeLog_C_ExecuteUbergraph_BP_SpikeLog, CallFunc_K2_AttachToComponent_ReturnValue_1) == 0x00001A, "Member 'BP_SpikeLog_C_ExecuteUbergraph_BP_SpikeLog::CallFunc_K2_AttachToComponent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SpikeLog_C_ExecuteUbergraph_BP_SpikeLog, K2Node_Event_InGameplayTag) == 0x00001C, "Member 'BP_SpikeLog_C_ExecuteUbergraph_BP_SpikeLog::K2Node_Event_InGameplayTag' has a wrong offset!");
static_assert(offsetof(BP_SpikeLog_C_ExecuteUbergraph_BP_SpikeLog, K2Node_Event_InCount) == 0x000024, "Member 'BP_SpikeLog_C_ExecuteUbergraph_BP_SpikeLog::K2Node_Event_InCount' has a wrong offset!");
static_assert(offsetof(BP_SpikeLog_C_ExecuteUbergraph_BP_SpikeLog, CallFunc_HasAuthority_ReturnValue_2) == 0x000028, "Member 'BP_SpikeLog_C_ExecuteUbergraph_BP_SpikeLog::CallFunc_HasAuthority_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SpikeLog_C_ExecuteUbergraph_BP_SpikeLog, CallFunc_Greater_IntInt_ReturnValue) == 0x000029, "Member 'BP_SpikeLog_C_ExecuteUbergraph_BP_SpikeLog::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpikeLog_C_ExecuteUbergraph_BP_SpikeLog, GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess) == 0x00002A, "Member 'BP_SpikeLog_C_ExecuteUbergraph_BP_SpikeLog::GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_SpikeLog_C_ExecuteUbergraph_BP_SpikeLog, K2Node_VariableSet_AttackDistanceValue_ImplicitCast) == 0x000030, "Member 'BP_SpikeLog_C_ExecuteUbergraph_BP_SpikeLog::K2Node_VariableSet_AttackDistanceValue_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_SpikeLog_C_ExecuteUbergraph_BP_SpikeLog, K2Node_VariableSet_AttackRotationValue_ImplicitCast) == 0x000038, "Member 'BP_SpikeLog_C_ExecuteUbergraph_BP_SpikeLog::K2Node_VariableSet_AttackRotationValue_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_SpikeLog_C_ExecuteUbergraph_BP_SpikeLog, K2Node_VariableSet_AttackPlayRateValue_ImplicitCast) == 0x000040, "Member 'BP_SpikeLog_C_ExecuteUbergraph_BP_SpikeLog::K2Node_VariableSet_AttackPlayRateValue_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_SpikeLog_C_ExecuteUbergraph_BP_SpikeLog, K2Node_VariableSet_LaunchDistanceValue_ImplicitCast) == 0x000048, "Member 'BP_SpikeLog_C_ExecuteUbergraph_BP_SpikeLog::K2Node_VariableSet_LaunchDistanceValue_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_SpikeLog_C_ExecuteUbergraph_BP_SpikeLog, K2Node_VariableSet_LaunchHeightValue_ImplicitCast) == 0x000050, "Member 'BP_SpikeLog_C_ExecuteUbergraph_BP_SpikeLog::K2Node_VariableSet_LaunchHeightValue_ImplicitCast' has a wrong offset!");

// Function BP_SpikeLog.BP_SpikeLog_C.GameplayTagUpdated
// 0x000C (0x000C - 0x0000)
struct BP_SpikeLog_C_GameplayTagUpdated final
{
public:
	struct FGameplayTag                           InGameplayTag;                                     // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	int32                                         InCount;                                           // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SpikeLog_C_GameplayTagUpdated) == 0x000004, "Wrong alignment on BP_SpikeLog_C_GameplayTagUpdated");
static_assert(sizeof(BP_SpikeLog_C_GameplayTagUpdated) == 0x00000C, "Wrong size on BP_SpikeLog_C_GameplayTagUpdated");
static_assert(offsetof(BP_SpikeLog_C_GameplayTagUpdated, InGameplayTag) == 0x000000, "Member 'BP_SpikeLog_C_GameplayTagUpdated::InGameplayTag' has a wrong offset!");
static_assert(offsetof(BP_SpikeLog_C_GameplayTagUpdated, InCount) == 0x000008, "Member 'BP_SpikeLog_C_GameplayTagUpdated::InCount' has a wrong offset!");

}

