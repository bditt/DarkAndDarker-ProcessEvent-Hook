#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_FloorSpikes

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "BP_TrapBase_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_FloorSpikes.BP_FloorSpikes_C
// 0x0058 (0x05D0 - 0x0578)
class ABP_FloorSpikes_C final : public ABP_TrapBase_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_FloorSpikes_C;                   // 0x0578(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBoxComponent*                          HitBox;                                            // 0x0580(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          ActiveBox;                                         // 0x0588(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UArrowComponent*                        Arrow;                                             // 0x0590(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        ActiveDurationTime;                                // 0x0598(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        ActiveCoolTime;                                    // 0x05A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bCanActive;                                        // 0x05A8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bShouldRetrigger;                                  // 0x05A9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5ADE[0x6];                                     // 0x05AA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  ImmuneTags;                                        // 0x05B0(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void BndEvt__BP_FloorSpikeTrap_ActiveBox_K2Node_ComponentBoundEvent_4_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void EventFMsgSoundEvent(const struct FMsgSoundEvent& Msg);
	void ExecuteUbergraph_BP_FloorSpikes(int32 EntryPoint);
	void GameplayTagUpdated(const struct FGameplayTag& InGameplayTag, int32 InCount);
	void InteractSucceed(class AActor* Interacter, const struct FGameplayTag& StateTag, const struct FGameplayTag& TriggerTag, const struct FHitResult& HitResult);
	void OnMessageReceived_6C1E7AB946EFC9996E4677A2C7074582(class UMsgBaseNode* ProxyObject);
	void ReceivePreInitializeComponents();
	void SetAbilityTriggerTag(const struct FGameplayTag& New_Trigger_Tag, bool* Result);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_FloorSpikes_C">();
	}
	static class ABP_FloorSpikes_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_FloorSpikes_C>();
	}
};
static_assert(alignof(ABP_FloorSpikes_C) == 0x000008, "Wrong alignment on ABP_FloorSpikes_C");
static_assert(sizeof(ABP_FloorSpikes_C) == 0x0005D0, "Wrong size on ABP_FloorSpikes_C");
static_assert(offsetof(ABP_FloorSpikes_C, UberGraphFrame_BP_FloorSpikes_C) == 0x000578, "Member 'ABP_FloorSpikes_C::UberGraphFrame_BP_FloorSpikes_C' has a wrong offset!");
static_assert(offsetof(ABP_FloorSpikes_C, HitBox) == 0x000580, "Member 'ABP_FloorSpikes_C::HitBox' has a wrong offset!");
static_assert(offsetof(ABP_FloorSpikes_C, ActiveBox) == 0x000588, "Member 'ABP_FloorSpikes_C::ActiveBox' has a wrong offset!");
static_assert(offsetof(ABP_FloorSpikes_C, Arrow) == 0x000590, "Member 'ABP_FloorSpikes_C::Arrow' has a wrong offset!");
static_assert(offsetof(ABP_FloorSpikes_C, ActiveDurationTime) == 0x000598, "Member 'ABP_FloorSpikes_C::ActiveDurationTime' has a wrong offset!");
static_assert(offsetof(ABP_FloorSpikes_C, ActiveCoolTime) == 0x0005A0, "Member 'ABP_FloorSpikes_C::ActiveCoolTime' has a wrong offset!");
static_assert(offsetof(ABP_FloorSpikes_C, bCanActive) == 0x0005A8, "Member 'ABP_FloorSpikes_C::bCanActive' has a wrong offset!");
static_assert(offsetof(ABP_FloorSpikes_C, bShouldRetrigger) == 0x0005A9, "Member 'ABP_FloorSpikes_C::bShouldRetrigger' has a wrong offset!");
static_assert(offsetof(ABP_FloorSpikes_C, ImmuneTags) == 0x0005B0, "Member 'ABP_FloorSpikes_C::ImmuneTags' has a wrong offset!");

}

