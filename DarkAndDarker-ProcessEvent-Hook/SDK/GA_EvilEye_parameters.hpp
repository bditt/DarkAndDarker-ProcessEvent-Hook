#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_EvilEye

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "GameplayAbilities_structs.hpp"


namespace SDK::Params
{

// Function GA_EvilEye.GA_EvilEye_C.AbilityActivated_BP
// 0x00B8 (0x00B8 - 0x0000)
struct GA_EvilEye_C_AbilityActivated_BP final
{
public:
	struct FGameplayEventData                     TriggerEventData;                                  // 0x0000(0x00B0)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm)
	bool                                          bIsSocketSightBlocked;                             // 0x00B0(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_EvilEye_C_AbilityActivated_BP) == 0x000008, "Wrong alignment on GA_EvilEye_C_AbilityActivated_BP");
static_assert(sizeof(GA_EvilEye_C_AbilityActivated_BP) == 0x0000B8, "Wrong size on GA_EvilEye_C_AbilityActivated_BP");
static_assert(offsetof(GA_EvilEye_C_AbilityActivated_BP, TriggerEventData) == 0x000000, "Member 'GA_EvilEye_C_AbilityActivated_BP::TriggerEventData' has a wrong offset!");
static_assert(offsetof(GA_EvilEye_C_AbilityActivated_BP, bIsSocketSightBlocked) == 0x0000B0, "Member 'GA_EvilEye_C_AbilityActivated_BP::bIsSocketSightBlocked' has a wrong offset!");

// Function GA_EvilEye.GA_EvilEye_C.ExecuteUbergraph_GA_EvilEye
// 0x0180 (0x0180 - 0x0000)
struct GA_EvilEye_C_ExecuteUbergraph_GA_EvilEye final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_HasAuthority_ReturnValue;              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5542[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayAbilityActorInfo              CallFunc_GetActorInfo_ReturnValue;                 // 0x0008(0x0048)(ContainsInstancedReference)
	bool                                          K2Node_Event_bWasCancelled;                        // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5543[0x7];                                     // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  K2Node_DynamicCast_As_;                            // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5544[0x7];                                     // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayAbilityActorInfo              CallFunc_GetActorInfo_ReturnValue_1;               // 0x0068(0x0048)(ContainsInstancedReference)
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x00B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEventData                     K2Node_Event_TriggerEventData;                     // 0x00B8(0x00B0)(ConstParm)
	bool                                          K2Node_Event_bIsSocketSightBlocked;                // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0169(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5545[0x6];                                     // 0x016A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_EvilEye_Summoned_C*                 K2Node_DynamicCast_AsBP_Evil_Eye_Summoned;         // 0x0170(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_EvilEye_C_ExecuteUbergraph_GA_EvilEye) == 0x000008, "Wrong alignment on GA_EvilEye_C_ExecuteUbergraph_GA_EvilEye");
static_assert(sizeof(GA_EvilEye_C_ExecuteUbergraph_GA_EvilEye) == 0x000180, "Wrong size on GA_EvilEye_C_ExecuteUbergraph_GA_EvilEye");
static_assert(offsetof(GA_EvilEye_C_ExecuteUbergraph_GA_EvilEye, EntryPoint) == 0x000000, "Member 'GA_EvilEye_C_ExecuteUbergraph_GA_EvilEye::EntryPoint' has a wrong offset!");
static_assert(offsetof(GA_EvilEye_C_ExecuteUbergraph_GA_EvilEye, CallFunc_K2_HasAuthority_ReturnValue) == 0x000004, "Member 'GA_EvilEye_C_ExecuteUbergraph_GA_EvilEye::CallFunc_K2_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_EvilEye_C_ExecuteUbergraph_GA_EvilEye, CallFunc_GetActorInfo_ReturnValue) == 0x000008, "Member 'GA_EvilEye_C_ExecuteUbergraph_GA_EvilEye::CallFunc_GetActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_EvilEye_C_ExecuteUbergraph_GA_EvilEye, K2Node_Event_bWasCancelled) == 0x000050, "Member 'GA_EvilEye_C_ExecuteUbergraph_GA_EvilEye::K2Node_Event_bWasCancelled' has a wrong offset!");
static_assert(offsetof(GA_EvilEye_C_ExecuteUbergraph_GA_EvilEye, K2Node_DynamicCast_As_) == 0x000058, "Member 'GA_EvilEye_C_ExecuteUbergraph_GA_EvilEye::K2Node_DynamicCast_As_' has a wrong offset!");
static_assert(offsetof(GA_EvilEye_C_ExecuteUbergraph_GA_EvilEye, K2Node_DynamicCast_bSuccess) == 0x000060, "Member 'GA_EvilEye_C_ExecuteUbergraph_GA_EvilEye::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GA_EvilEye_C_ExecuteUbergraph_GA_EvilEye, CallFunc_GetActorInfo_ReturnValue_1) == 0x000068, "Member 'GA_EvilEye_C_ExecuteUbergraph_GA_EvilEye::CallFunc_GetActorInfo_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_EvilEye_C_ExecuteUbergraph_GA_EvilEye, CallFunc_K2_GetPawn_ReturnValue) == 0x0000B0, "Member 'GA_EvilEye_C_ExecuteUbergraph_GA_EvilEye::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_EvilEye_C_ExecuteUbergraph_GA_EvilEye, K2Node_Event_TriggerEventData) == 0x0000B8, "Member 'GA_EvilEye_C_ExecuteUbergraph_GA_EvilEye::K2Node_Event_TriggerEventData' has a wrong offset!");
static_assert(offsetof(GA_EvilEye_C_ExecuteUbergraph_GA_EvilEye, K2Node_Event_bIsSocketSightBlocked) == 0x000168, "Member 'GA_EvilEye_C_ExecuteUbergraph_GA_EvilEye::K2Node_Event_bIsSocketSightBlocked' has a wrong offset!");
static_assert(offsetof(GA_EvilEye_C_ExecuteUbergraph_GA_EvilEye, CallFunc_IsValid_ReturnValue) == 0x000169, "Member 'GA_EvilEye_C_ExecuteUbergraph_GA_EvilEye::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_EvilEye_C_ExecuteUbergraph_GA_EvilEye, K2Node_DynamicCast_AsBP_Evil_Eye_Summoned) == 0x000170, "Member 'GA_EvilEye_C_ExecuteUbergraph_GA_EvilEye::K2Node_DynamicCast_AsBP_Evil_Eye_Summoned' has a wrong offset!");
static_assert(offsetof(GA_EvilEye_C_ExecuteUbergraph_GA_EvilEye, K2Node_DynamicCast_bSuccess_1) == 0x000178, "Member 'GA_EvilEye_C_ExecuteUbergraph_GA_EvilEye::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

// Function GA_EvilEye.GA_EvilEye_C.K2_OnEndAbility
// 0x0001 (0x0001 - 0x0000)
struct GA_EvilEye_C_K2_OnEndAbility final
{
public:
	bool                                          bWasCancelled;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_EvilEye_C_K2_OnEndAbility) == 0x000001, "Wrong alignment on GA_EvilEye_C_K2_OnEndAbility");
static_assert(sizeof(GA_EvilEye_C_K2_OnEndAbility) == 0x000001, "Wrong size on GA_EvilEye_C_K2_OnEndAbility");
static_assert(offsetof(GA_EvilEye_C_K2_OnEndAbility, bWasCancelled) == 0x000000, "Member 'GA_EvilEye_C_K2_OnEndAbility::bWasCancelled' has a wrong offset!");

// Function GA_EvilEye.GA_EvilEye_C.KillSummonedEvilEye
// 0x0058 (0x0058 - 0x0000)
struct GA_EvilEye_C_KillSummonedEvilEye final
{
public:
	TArray<struct FPrimaryAssetId>                InGameplayEffectId;                                // 0x0000(0x0010)(Edit, BlueprintVisible)
	TArray<struct FPrimaryAssetId>                K2Node_MakeArray_Array;                            // 0x0010(0x0010)(ReferenceParm)
	class ABP_EvilEye_Summoned_C*                 K2Node_DynamicCast_AsBP_Evil_Eye_Summoned;         // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5546[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasMatchingGameplayTag_self_CastInput;    // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue;       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5547[0x7];                                     // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FActiveGameplayEffectHandle>    CallFunc_ApplyGameplayEffectByIds_ReturnValue;     // 0x0048(0x0010)(ReferenceParm)
};
static_assert(alignof(GA_EvilEye_C_KillSummonedEvilEye) == 0x000008, "Wrong alignment on GA_EvilEye_C_KillSummonedEvilEye");
static_assert(sizeof(GA_EvilEye_C_KillSummonedEvilEye) == 0x000058, "Wrong size on GA_EvilEye_C_KillSummonedEvilEye");
static_assert(offsetof(GA_EvilEye_C_KillSummonedEvilEye, InGameplayEffectId) == 0x000000, "Member 'GA_EvilEye_C_KillSummonedEvilEye::InGameplayEffectId' has a wrong offset!");
static_assert(offsetof(GA_EvilEye_C_KillSummonedEvilEye, K2Node_MakeArray_Array) == 0x000010, "Member 'GA_EvilEye_C_KillSummonedEvilEye::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(GA_EvilEye_C_KillSummonedEvilEye, K2Node_DynamicCast_AsBP_Evil_Eye_Summoned) == 0x000020, "Member 'GA_EvilEye_C_KillSummonedEvilEye::K2Node_DynamicCast_AsBP_Evil_Eye_Summoned' has a wrong offset!");
static_assert(offsetof(GA_EvilEye_C_KillSummonedEvilEye, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'GA_EvilEye_C_KillSummonedEvilEye::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GA_EvilEye_C_KillSummonedEvilEye, CallFunc_HasMatchingGameplayTag_self_CastInput) == 0x000030, "Member 'GA_EvilEye_C_KillSummonedEvilEye::CallFunc_HasMatchingGameplayTag_self_CastInput' has a wrong offset!");
static_assert(offsetof(GA_EvilEye_C_KillSummonedEvilEye, CallFunc_HasMatchingGameplayTag_ReturnValue) == 0x000040, "Member 'GA_EvilEye_C_KillSummonedEvilEye::CallFunc_HasMatchingGameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_EvilEye_C_KillSummonedEvilEye, CallFunc_ApplyGameplayEffectByIds_ReturnValue) == 0x000048, "Member 'GA_EvilEye_C_KillSummonedEvilEye::CallFunc_ApplyGameplayEffectByIds_ReturnValue' has a wrong offset!");

}

