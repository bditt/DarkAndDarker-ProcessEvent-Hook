#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_DungeonExitBase

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "DungeonCrawler_structs.hpp"
#include "E_DungeonExitState_structs.hpp"
#include "BP_TriggerBase_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_DungeonExitBase.BP_DungeonExitBase_C
// 0x0050 (0x0528 - 0x04D8)
class ABP_DungeonExitBase_C : public ABP_TriggerBase_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_DungeonExitBase_C;               // 0x04D8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UDCSessionRuleComponent*                DCSessionRuleComponent;                            // 0x04E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          Box;                                               // 0x04E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        DelaySecToOpen;                                    // 0x04F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<double>                                TimeRange;                                         // 0x04F8(0x0010)(Edit, BlueprintVisible)
	int32                                         MaxPlayerCount;                                    // 0x0508(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CurPlayerCount;                                    // 0x050C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFloorRulePhase                               TriggerFloorRulePhase;                             // 0x0510(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A3B[0x3];                                     // 0x0511(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         TriggerFloorRuleIndex;                             // 0x0514(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_DungeonExitState                            ExitState;                                         // 0x0518(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A3C[0x7];                                     // 0x0519(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTagQueryData*                          ExitTagQuery;                                      // 0x0520(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

public:
	void BndEvt__BP_CaveExit_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void BndEvt__BP_DungeonExitBase_DCSessionRule_K2Node_ComponentBoundEvent_1_DCOnDeathSwarmRuleFiredDelegate__DelegateSignature(const struct FGameDeathSwarmData& InDeathSwarmData);
	void BndEvt__BP_DungeonExitBase_DCSessionRule_K2Node_ComponentBoundEvent_2_DCOnBlizzardRuleFiredDelegate__DelegateSignature(const struct FGameBlizzardData& InBlizzardData);
	void BndEvt__BP_DungeonExitBase_DCSessionRule_K2Node_ComponentBoundEvent_3_DCOnFloorRuleFiredDelegate__DelegateSignature(const struct FGameFloorRuleData& InFloorRuleData);
	void CheckExitTagQuery(class AActor* TargetActor, bool* bSucceed);
	void ExecuteUbergraph_BP_DungeonExitBase(int32 EntryPoint);
	void OnClosed();
	void OnDungeonExitOverlapped(class ADCPlayerCharacterBase* PlayerCharacter, bool* bResult);
	void OnExit(class ADCPlayerCharacterBase* PlayerCharacter);
	void OnLoopOpen(E_DungeonExitState Param_ExitState);
	void OnRep_ExitState();
	void OnTriggerOpen(E_DungeonExitState Param_ExitState);
	void OpenExit();
	void ReceiveBeginPlay();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_DungeonExitBase_C">();
	}
	static class ABP_DungeonExitBase_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_DungeonExitBase_C>();
	}
};
static_assert(alignof(ABP_DungeonExitBase_C) == 0x000008, "Wrong alignment on ABP_DungeonExitBase_C");
static_assert(sizeof(ABP_DungeonExitBase_C) == 0x000528, "Wrong size on ABP_DungeonExitBase_C");
static_assert(offsetof(ABP_DungeonExitBase_C, UberGraphFrame_BP_DungeonExitBase_C) == 0x0004D8, "Member 'ABP_DungeonExitBase_C::UberGraphFrame_BP_DungeonExitBase_C' has a wrong offset!");
static_assert(offsetof(ABP_DungeonExitBase_C, DCSessionRuleComponent) == 0x0004E0, "Member 'ABP_DungeonExitBase_C::DCSessionRuleComponent' has a wrong offset!");
static_assert(offsetof(ABP_DungeonExitBase_C, Box) == 0x0004E8, "Member 'ABP_DungeonExitBase_C::Box' has a wrong offset!");
static_assert(offsetof(ABP_DungeonExitBase_C, DelaySecToOpen) == 0x0004F0, "Member 'ABP_DungeonExitBase_C::DelaySecToOpen' has a wrong offset!");
static_assert(offsetof(ABP_DungeonExitBase_C, TimeRange) == 0x0004F8, "Member 'ABP_DungeonExitBase_C::TimeRange' has a wrong offset!");
static_assert(offsetof(ABP_DungeonExitBase_C, MaxPlayerCount) == 0x000508, "Member 'ABP_DungeonExitBase_C::MaxPlayerCount' has a wrong offset!");
static_assert(offsetof(ABP_DungeonExitBase_C, CurPlayerCount) == 0x00050C, "Member 'ABP_DungeonExitBase_C::CurPlayerCount' has a wrong offset!");
static_assert(offsetof(ABP_DungeonExitBase_C, TriggerFloorRulePhase) == 0x000510, "Member 'ABP_DungeonExitBase_C::TriggerFloorRulePhase' has a wrong offset!");
static_assert(offsetof(ABP_DungeonExitBase_C, TriggerFloorRuleIndex) == 0x000514, "Member 'ABP_DungeonExitBase_C::TriggerFloorRuleIndex' has a wrong offset!");
static_assert(offsetof(ABP_DungeonExitBase_C, ExitState) == 0x000518, "Member 'ABP_DungeonExitBase_C::ExitState' has a wrong offset!");
static_assert(offsetof(ABP_DungeonExitBase_C, ExitTagQuery) == 0x000520, "Member 'ABP_DungeonExitBase_C::ExitTagQuery' has a wrong offset!");

}

