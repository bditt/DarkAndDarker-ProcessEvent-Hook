#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_DeathSkull_Common

#include "Basic.hpp"

#include "BP_DeathSkull_Common_classes.hpp"
#include "BP_DeathSkull_Common_parameters.hpp"


namespace SDK
{

// Function BP_DeathSkull_Common.BP_DeathSkull_Common_C.Added_F10CF2AE44EF117381976A8D8A3D55AF
// (BlueprintCallable, BlueprintEvent)

void ABP_DeathSkull_Common_C::Added_F10CF2AE44EF117381976A8D8A3D55AF()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DeathSkull_Common_C", "Added_F10CF2AE44EF117381976A8D8A3D55AF");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DeathSkull_Common.BP_DeathSkull_Common_C.CheckRemainDistanceByVelocity2D
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          MoveDirection                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  DeltaTime                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  RemainDist                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  ResultDistance                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_DeathSkull_Common_C::CheckRemainDistanceByVelocity2D(const struct FVector& MoveDirection, double DeltaTime, double RemainDist, double* ResultDistance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DeathSkull_Common_C", "CheckRemainDistanceByVelocity2D");

	Params::BP_DeathSkull_Common_C_CheckRemainDistanceByVelocity2D Parms{};

	Parms.MoveDirection = std::move(MoveDirection);
	Parms.DeltaTime = DeltaTime;
	Parms.RemainDist = RemainDist;

	UObject::ProcessEvent(Func, &Parms);

	if (ResultDistance != nullptr)
		*ResultDistance = Parms.ResultDistance;
}


// Function BP_DeathSkull_Common.BP_DeathSkull_Common_C.CheckRemainDistanceByVelocity3D
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          MoveDirection                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  DeltaTime                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  RemainDist                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  ResultDistance                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_DeathSkull_Common_C::CheckRemainDistanceByVelocity3D(const struct FVector& MoveDirection, double DeltaTime, double RemainDist, double* ResultDistance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DeathSkull_Common_C", "CheckRemainDistanceByVelocity3D");

	Params::BP_DeathSkull_Common_C_CheckRemainDistanceByVelocity3D Parms{};

	Parms.MoveDirection = std::move(MoveDirection);
	Parms.DeltaTime = DeltaTime;
	Parms.RemainDist = RemainDist;

	UObject::ProcessEvent(Func, &Parms);

	if (ResultDistance != nullptr)
		*ResultDistance = Parms.ResultDistance;
}


// Function BP_DeathSkull_Common.BP_DeathSkull_Common_C.ExecuteUbergraph_BP_DeathSkull_Common
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_DeathSkull_Common_C::ExecuteUbergraph_BP_DeathSkull_Common(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DeathSkull_Common_C", "ExecuteUbergraph_BP_DeathSkull_Common");

	Params::BP_DeathSkull_Common_C_ExecuteUbergraph_BP_DeathSkull_Common Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DeathSkull_Common.BP_DeathSkull_Common_C.OnBeforeDeath
// (Event, Protected, BlueprintEvent)

void ABP_DeathSkull_Common_C::OnBeforeDeath()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DeathSkull_Common_C", "OnBeforeDeath");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DeathSkull_Common.BP_DeathSkull_Common_C.OnGlowingEyes
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    OnAttack                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_DeathSkull_Common_C::OnGlowingEyes(bool OnAttack)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DeathSkull_Common_C", "OnGlowingEyes");

	Params::BP_DeathSkull_Common_C_OnGlowingEyes Parms{};

	Parms.OnAttack = OnAttack;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DeathSkull_Common.BP_DeathSkull_Common_C.OnRep_OnDead
// (BlueprintCallable, BlueprintEvent)

void ABP_DeathSkull_Common_C::OnRep_OnDead()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DeathSkull_Common_C", "OnRep_OnDead");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DeathSkull_Common.BP_DeathSkull_Common_C.OnRep_OnRedEyes
// (BlueprintCallable, BlueprintEvent)

void ABP_DeathSkull_Common_C::OnRep_OnRedEyes()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DeathSkull_Common_C", "OnRep_OnRedEyes");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DeathSkull_Common.BP_DeathSkull_Common_C.OnSetAI
// (Event, Protected, BlueprintEvent)

void ABP_DeathSkull_Common_C::OnSetAI()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DeathSkull_Common_C", "OnSetAI");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DeathSkull_Common.BP_DeathSkull_Common_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_DeathSkull_Common_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DeathSkull_Common_C", "ReceiveTick");

	Params::BP_DeathSkull_Common_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DeathSkull_Common.BP_DeathSkull_Common_C.SetAttackByCollisionOption
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    OnAttack                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_DeathSkull_Common_C::SetAttackByCollisionOption(bool OnAttack)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DeathSkull_Common_C", "SetAttackByCollisionOption");

	Params::BP_DeathSkull_Common_C_SetAttackByCollisionOption Parms{};

	Parms.OnAttack = OnAttack;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DeathSkull_Common.BP_DeathSkull_Common_C.UpdateGlowing
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  DeltaTime                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  MaxGlowingTime                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  MinGlowingTime                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Param_GlowingScale                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_DeathSkull_Common_C::UpdateGlowing(double DeltaTime, double MaxGlowingTime, double MinGlowingTime, double Param_GlowingScale)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DeathSkull_Common_C", "UpdateGlowing");

	Params::BP_DeathSkull_Common_C_UpdateGlowing Parms{};

	Parms.DeltaTime = DeltaTime;
	Parms.MaxGlowingTime = MaxGlowingTime;
	Parms.MinGlowingTime = MinGlowingTime;
	Parms.Param_GlowingScale = Param_GlowingScale;

	UObject::ProcessEvent(Func, &Parms);
}

}

