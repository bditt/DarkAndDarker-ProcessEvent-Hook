#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_FrostImp_Teleport

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "GameplayAbilities_structs.hpp"


namespace SDK::Params
{

// Function GA_FrostImp_Teleport.GA_FrostImp_Teleport_C.AbilityActivated
// 0x00B0 (0x00B0 - 0x0000)
struct GA_FrostImp_Teleport_C_AbilityActivated final
{
public:
	struct FGameplayEventData                     TriggerEventData;                                  // 0x0000(0x00B0)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(GA_FrostImp_Teleport_C_AbilityActivated) == 0x000008, "Wrong alignment on GA_FrostImp_Teleport_C_AbilityActivated");
static_assert(sizeof(GA_FrostImp_Teleport_C_AbilityActivated) == 0x0000B0, "Wrong size on GA_FrostImp_Teleport_C_AbilityActivated");
static_assert(offsetof(GA_FrostImp_Teleport_C_AbilityActivated, TriggerEventData) == 0x000000, "Member 'GA_FrostImp_Teleport_C_AbilityActivated::TriggerEventData' has a wrong offset!");

// Function GA_FrostImp_Teleport.GA_FrostImp_Teleport_C.EventReceived_ADCB400246DB4880FB2989819DE91EBF
// 0x00B0 (0x00B0 - 0x0000)
struct GA_FrostImp_Teleport_C_EventReceived_ADCB400246DB4880FB2989819DE91EBF final
{
public:
	struct FGameplayEventData                     Payload;                                           // 0x0000(0x00B0)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(GA_FrostImp_Teleport_C_EventReceived_ADCB400246DB4880FB2989819DE91EBF) == 0x000008, "Wrong alignment on GA_FrostImp_Teleport_C_EventReceived_ADCB400246DB4880FB2989819DE91EBF");
static_assert(sizeof(GA_FrostImp_Teleport_C_EventReceived_ADCB400246DB4880FB2989819DE91EBF) == 0x0000B0, "Wrong size on GA_FrostImp_Teleport_C_EventReceived_ADCB400246DB4880FB2989819DE91EBF");
static_assert(offsetof(GA_FrostImp_Teleport_C_EventReceived_ADCB400246DB4880FB2989819DE91EBF, Payload) == 0x000000, "Member 'GA_FrostImp_Teleport_C_EventReceived_ADCB400246DB4880FB2989819DE91EBF::Payload' has a wrong offset!");

// Function GA_FrostImp_Teleport.GA_FrostImp_Teleport_C.ExecuteUbergraph_GA_FrostImp_Teleport
// 0x0598 (0x0598 - 0x0000)
struct GA_FrostImp_Teleport_C_ExecuteUbergraph_GA_FrostImp_Teleport final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3850[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayEventData                     Temp_struct_Variable;                              // 0x0008(0x00B0)()
	TDelegate<void(const struct FGameplayEventData& Payload)> K2Node_CreateDelegate_OutputDelegate;              // 0x00B8(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAbilityTask_WaitGameplayEvent*         CallFunc_WaitGameplayEvent_ReturnValue;            // 0x00C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x00D0(0x0010)(ConstParm, ReferenceParm)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3851[0x3];                                     // 0x00E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x00EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x00ED(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00EE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3852[0x1];                                     // 0x00EF(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayEventData                     K2Node_Event_TriggerEventData;                     // 0x00F0(0x00B0)(ConstParm)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3853[0x7];                                     // 0x01A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetAvatarActorFromActorInfo_ReturnValue;  // 0x01A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_FrostImp_Common_C*                  K2Node_DynamicCast_AsBP_Frost_Imp_Common;          // 0x01B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x01B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3854[0x7];                                     // 0x01B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_RandomFloatInRange_ReturnValue;           // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Get_Angle_Vector_From_Actor_Return_Valut; // 0x01C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetRandomLocationInNavigableRadius_RandomLocation; // 0x01E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_GetRandomLocationInNavigableRadius_ReturnValue; // 0x01F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3855[0x7];                                     // 0x01F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0200(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0218(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0220(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0228(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0230(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0238(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0250(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_FindLookAtRotation_ReturnValue;           // 0x0268(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_SetActorRotation_ReturnValue;          // 0x0280(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3856[0x7];                                     // 0x0281(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array;                            // 0x0288(0x0010)(ConstParm, ReferenceParm)
	double                                        CallFunc_BreakVector_X_1;                          // 0x0298(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_1;                          // 0x02A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_1;                          // 0x02A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEventData                     K2Node_CustomEvent_Payload;                        // 0x02B0(0x00B0)()
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x0360(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x0368(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetActorLocation_SweepHitResult;       // 0x0380(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorLocation_ReturnValue;          // 0x0468(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3857[0x7];                                     // 0x0469(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_2;        // 0x0470(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_SphereTraceSingleForObjects_OutHit;       // 0x0488(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_SphereTraceSingleForObjects_ReturnValue;  // 0x0570(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3858[0x7];                                     // 0x0571(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Get_Direction_Vector_Result_Vector;       // 0x0578(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomInteger_ReturnValue;                // 0x0590(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0594(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0595(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_FrostImp_Teleport_C_ExecuteUbergraph_GA_FrostImp_Teleport) == 0x000008, "Wrong alignment on GA_FrostImp_Teleport_C_ExecuteUbergraph_GA_FrostImp_Teleport");
static_assert(sizeof(GA_FrostImp_Teleport_C_ExecuteUbergraph_GA_FrostImp_Teleport) == 0x000598, "Wrong size on GA_FrostImp_Teleport_C_ExecuteUbergraph_GA_FrostImp_Teleport");
static_assert(offsetof(GA_FrostImp_Teleport_C_ExecuteUbergraph_GA_FrostImp_Teleport, EntryPoint) == 0x000000, "Member 'GA_FrostImp_Teleport_C_ExecuteUbergraph_GA_FrostImp_Teleport::EntryPoint' has a wrong offset!");
static_assert(offsetof(GA_FrostImp_Teleport_C_ExecuteUbergraph_GA_FrostImp_Teleport, Temp_struct_Variable) == 0x000008, "Member 'GA_FrostImp_Teleport_C_ExecuteUbergraph_GA_FrostImp_Teleport::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(GA_FrostImp_Teleport_C_ExecuteUbergraph_GA_FrostImp_Teleport, K2Node_CreateDelegate_OutputDelegate) == 0x0000B8, "Member 'GA_FrostImp_Teleport_C_ExecuteUbergraph_GA_FrostImp_Teleport::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(GA_FrostImp_Teleport_C_ExecuteUbergraph_GA_FrostImp_Teleport, CallFunc_WaitGameplayEvent_ReturnValue) == 0x0000C8, "Member 'GA_FrostImp_Teleport_C_ExecuteUbergraph_GA_FrostImp_Teleport::CallFunc_WaitGameplayEvent_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_FrostImp_Teleport_C_ExecuteUbergraph_GA_FrostImp_Teleport, Temp_object_Variable) == 0x0000D0, "Member 'GA_FrostImp_Teleport_C_ExecuteUbergraph_GA_FrostImp_Teleport::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(GA_FrostImp_Teleport_C_ExecuteUbergraph_GA_FrostImp_Teleport, CallFunc_IsValid_ReturnValue) == 0x0000E0, "Member 'GA_FrostImp_Teleport_C_ExecuteUbergraph_GA_FrostImp_Teleport::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_FrostImp_Teleport_C_ExecuteUbergraph_GA_FrostImp_Teleport, Temp_int_Variable) == 0x0000E4, "Member 'GA_FrostImp_Teleport_C_ExecuteUbergraph_GA_FrostImp_Teleport::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(GA_FrostImp_Teleport_C_ExecuteUbergraph_GA_FrostImp_Teleport, CallFunc_Add_IntInt_ReturnValue) == 0x0000E8, "Member 'GA_FrostImp_Teleport_C_ExecuteUbergraph_GA_FrostImp_Teleport::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_FrostImp_Teleport_C_ExecuteUbergraph_GA_FrostImp_Teleport, CallFunc_LessEqual_IntInt_ReturnValue) == 0x0000EC, "Member 'GA_FrostImp_Teleport_C_ExecuteUbergraph_GA_FrostImp_Teleport::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_FrostImp_Teleport_C_ExecuteUbergraph_GA_FrostImp_Teleport, Temp_bool_Variable) == 0x0000ED, "Member 'GA_FrostImp_Teleport_C_ExecuteUbergraph_GA_FrostImp_Teleport::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(GA_FrostImp_Teleport_C_ExecuteUbergraph_GA_FrostImp_Teleport, CallFunc_Not_PreBool_ReturnValue) == 0x0000EE, "Member 'GA_FrostImp_Teleport_C_ExecuteUbergraph_GA_FrostImp_Teleport::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_FrostImp_Teleport_C_ExecuteUbergraph_GA_FrostImp_Teleport, K2Node_Event_TriggerEventData) == 0x0000F0, "Member 'GA_FrostImp_Teleport_C_ExecuteUbergraph_GA_FrostImp_Teleport::K2Node_Event_TriggerEventData' has a wrong offset!");
static_assert(offsetof(GA_FrostImp_Teleport_C_ExecuteUbergraph_GA_FrostImp_Teleport, CallFunc_BooleanAND_ReturnValue) == 0x0001A0, "Member 'GA_FrostImp_Teleport_C_ExecuteUbergraph_GA_FrostImp_Teleport::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_FrostImp_Teleport_C_ExecuteUbergraph_GA_FrostImp_Teleport, CallFunc_GetAvatarActorFromActorInfo_ReturnValue) == 0x0001A8, "Member 'GA_FrostImp_Teleport_C_ExecuteUbergraph_GA_FrostImp_Teleport::CallFunc_GetAvatarActorFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_FrostImp_Teleport_C_ExecuteUbergraph_GA_FrostImp_Teleport, K2Node_DynamicCast_AsBP_Frost_Imp_Common) == 0x0001B0, "Member 'GA_FrostImp_Teleport_C_ExecuteUbergraph_GA_FrostImp_Teleport::K2Node_DynamicCast_AsBP_Frost_Imp_Common' has a wrong offset!");
static_assert(offsetof(GA_FrostImp_Teleport_C_ExecuteUbergraph_GA_FrostImp_Teleport, K2Node_DynamicCast_bSuccess) == 0x0001B8, "Member 'GA_FrostImp_Teleport_C_ExecuteUbergraph_GA_FrostImp_Teleport::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GA_FrostImp_Teleport_C_ExecuteUbergraph_GA_FrostImp_Teleport, CallFunc_RandomFloatInRange_ReturnValue) == 0x0001C0, "Member 'GA_FrostImp_Teleport_C_ExecuteUbergraph_GA_FrostImp_Teleport::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_FrostImp_Teleport_C_ExecuteUbergraph_GA_FrostImp_Teleport, CallFunc_Get_Angle_Vector_From_Actor_Return_Valut) == 0x0001C8, "Member 'GA_FrostImp_Teleport_C_ExecuteUbergraph_GA_FrostImp_Teleport::CallFunc_Get_Angle_Vector_From_Actor_Return_Valut' has a wrong offset!");
static_assert(offsetof(GA_FrostImp_Teleport_C_ExecuteUbergraph_GA_FrostImp_Teleport, CallFunc_K2_GetRandomLocationInNavigableRadius_RandomLocation) == 0x0001E0, "Member 'GA_FrostImp_Teleport_C_ExecuteUbergraph_GA_FrostImp_Teleport::CallFunc_K2_GetRandomLocationInNavigableRadius_RandomLocation' has a wrong offset!");
static_assert(offsetof(GA_FrostImp_Teleport_C_ExecuteUbergraph_GA_FrostImp_Teleport, CallFunc_K2_GetRandomLocationInNavigableRadius_ReturnValue) == 0x0001F8, "Member 'GA_FrostImp_Teleport_C_ExecuteUbergraph_GA_FrostImp_Teleport::CallFunc_K2_GetRandomLocationInNavigableRadius_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_FrostImp_Teleport_C_ExecuteUbergraph_GA_FrostImp_Teleport, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000200, "Member 'GA_FrostImp_Teleport_C_ExecuteUbergraph_GA_FrostImp_Teleport::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_FrostImp_Teleport_C_ExecuteUbergraph_GA_FrostImp_Teleport, CallFunc_BreakVector_X) == 0x000218, "Member 'GA_FrostImp_Teleport_C_ExecuteUbergraph_GA_FrostImp_Teleport::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(GA_FrostImp_Teleport_C_ExecuteUbergraph_GA_FrostImp_Teleport, CallFunc_BreakVector_Y) == 0x000220, "Member 'GA_FrostImp_Teleport_C_ExecuteUbergraph_GA_FrostImp_Teleport::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(GA_FrostImp_Teleport_C_ExecuteUbergraph_GA_FrostImp_Teleport, CallFunc_BreakVector_Z) == 0x000228, "Member 'GA_FrostImp_Teleport_C_ExecuteUbergraph_GA_FrostImp_Teleport::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(GA_FrostImp_Teleport_C_ExecuteUbergraph_GA_FrostImp_Teleport, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000230, "Member 'GA_FrostImp_Teleport_C_ExecuteUbergraph_GA_FrostImp_Teleport::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_FrostImp_Teleport_C_ExecuteUbergraph_GA_FrostImp_Teleport, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000238, "Member 'GA_FrostImp_Teleport_C_ExecuteUbergraph_GA_FrostImp_Teleport::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_FrostImp_Teleport_C_ExecuteUbergraph_GA_FrostImp_Teleport, CallFunc_MakeVector_ReturnValue) == 0x000250, "Member 'GA_FrostImp_Teleport_C_ExecuteUbergraph_GA_FrostImp_Teleport::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_FrostImp_Teleport_C_ExecuteUbergraph_GA_FrostImp_Teleport, CallFunc_FindLookAtRotation_ReturnValue) == 0x000268, "Member 'GA_FrostImp_Teleport_C_ExecuteUbergraph_GA_FrostImp_Teleport::CallFunc_FindLookAtRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_FrostImp_Teleport_C_ExecuteUbergraph_GA_FrostImp_Teleport, CallFunc_K2_SetActorRotation_ReturnValue) == 0x000280, "Member 'GA_FrostImp_Teleport_C_ExecuteUbergraph_GA_FrostImp_Teleport::CallFunc_K2_SetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_FrostImp_Teleport_C_ExecuteUbergraph_GA_FrostImp_Teleport, K2Node_MakeArray_Array) == 0x000288, "Member 'GA_FrostImp_Teleport_C_ExecuteUbergraph_GA_FrostImp_Teleport::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(GA_FrostImp_Teleport_C_ExecuteUbergraph_GA_FrostImp_Teleport, CallFunc_BreakVector_X_1) == 0x000298, "Member 'GA_FrostImp_Teleport_C_ExecuteUbergraph_GA_FrostImp_Teleport::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(GA_FrostImp_Teleport_C_ExecuteUbergraph_GA_FrostImp_Teleport, CallFunc_BreakVector_Y_1) == 0x0002A0, "Member 'GA_FrostImp_Teleport_C_ExecuteUbergraph_GA_FrostImp_Teleport::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(GA_FrostImp_Teleport_C_ExecuteUbergraph_GA_FrostImp_Teleport, CallFunc_BreakVector_Z_1) == 0x0002A8, "Member 'GA_FrostImp_Teleport_C_ExecuteUbergraph_GA_FrostImp_Teleport::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(GA_FrostImp_Teleport_C_ExecuteUbergraph_GA_FrostImp_Teleport, K2Node_CustomEvent_Payload) == 0x0002B0, "Member 'GA_FrostImp_Teleport_C_ExecuteUbergraph_GA_FrostImp_Teleport::K2Node_CustomEvent_Payload' has a wrong offset!");
static_assert(offsetof(GA_FrostImp_Teleport_C_ExecuteUbergraph_GA_FrostImp_Teleport, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x000360, "Member 'GA_FrostImp_Teleport_C_ExecuteUbergraph_GA_FrostImp_Teleport::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_FrostImp_Teleport_C_ExecuteUbergraph_GA_FrostImp_Teleport, CallFunc_MakeVector_ReturnValue_1) == 0x000368, "Member 'GA_FrostImp_Teleport_C_ExecuteUbergraph_GA_FrostImp_Teleport::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_FrostImp_Teleport_C_ExecuteUbergraph_GA_FrostImp_Teleport, CallFunc_K2_SetActorLocation_SweepHitResult) == 0x000380, "Member 'GA_FrostImp_Teleport_C_ExecuteUbergraph_GA_FrostImp_Teleport::CallFunc_K2_SetActorLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(GA_FrostImp_Teleport_C_ExecuteUbergraph_GA_FrostImp_Teleport, CallFunc_K2_SetActorLocation_ReturnValue) == 0x000468, "Member 'GA_FrostImp_Teleport_C_ExecuteUbergraph_GA_FrostImp_Teleport::CallFunc_K2_SetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_FrostImp_Teleport_C_ExecuteUbergraph_GA_FrostImp_Teleport, CallFunc_K2_GetActorLocation_ReturnValue_2) == 0x000470, "Member 'GA_FrostImp_Teleport_C_ExecuteUbergraph_GA_FrostImp_Teleport::CallFunc_K2_GetActorLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GA_FrostImp_Teleport_C_ExecuteUbergraph_GA_FrostImp_Teleport, CallFunc_SphereTraceSingleForObjects_OutHit) == 0x000488, "Member 'GA_FrostImp_Teleport_C_ExecuteUbergraph_GA_FrostImp_Teleport::CallFunc_SphereTraceSingleForObjects_OutHit' has a wrong offset!");
static_assert(offsetof(GA_FrostImp_Teleport_C_ExecuteUbergraph_GA_FrostImp_Teleport, CallFunc_SphereTraceSingleForObjects_ReturnValue) == 0x000570, "Member 'GA_FrostImp_Teleport_C_ExecuteUbergraph_GA_FrostImp_Teleport::CallFunc_SphereTraceSingleForObjects_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_FrostImp_Teleport_C_ExecuteUbergraph_GA_FrostImp_Teleport, CallFunc_Get_Direction_Vector_Result_Vector) == 0x000578, "Member 'GA_FrostImp_Teleport_C_ExecuteUbergraph_GA_FrostImp_Teleport::CallFunc_Get_Direction_Vector_Result_Vector' has a wrong offset!");
static_assert(offsetof(GA_FrostImp_Teleport_C_ExecuteUbergraph_GA_FrostImp_Teleport, CallFunc_RandomInteger_ReturnValue) == 0x000590, "Member 'GA_FrostImp_Teleport_C_ExecuteUbergraph_GA_FrostImp_Teleport::CallFunc_RandomInteger_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_FrostImp_Teleport_C_ExecuteUbergraph_GA_FrostImp_Teleport, K2Node_SwitchInteger_CmpSuccess) == 0x000594, "Member 'GA_FrostImp_Teleport_C_ExecuteUbergraph_GA_FrostImp_Teleport::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(GA_FrostImp_Teleport_C_ExecuteUbergraph_GA_FrostImp_Teleport, CallFunc_Less_IntInt_ReturnValue) == 0x000595, "Member 'GA_FrostImp_Teleport_C_ExecuteUbergraph_GA_FrostImp_Teleport::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function GA_FrostImp_Teleport.GA_FrostImp_Teleport_C.Get XY Location
// 0x0190 (0x0190 - 0x0000)
struct GA_FrostImp_Teleport_C_Get_XY_Location final
{
public:
	struct FVector                                Origin;                                            // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetRandomLocationInNavigableRadius_RandomLocation; // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_GetRandomLocationInNavigableRadius_ReturnValue; // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3859[0x5];                                     // 0x0033(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector_X;                            // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_385A[0x4];                                     // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0060(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x007D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_385B[0x2];                                     // 0x007E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array;                            // 0x0080(0x0010)(ConstParm, ReferenceParm)
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0090(0x0010)(ConstParm, ReferenceParm)
	struct FHitResult                             CallFunc_SphereTraceSingleForObjects_OutHit;       // 0x00A0(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_SphereTraceSingleForObjects_ReturnValue;  // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_FrostImp_Teleport_C_Get_XY_Location) == 0x000008, "Wrong alignment on GA_FrostImp_Teleport_C_Get_XY_Location");
static_assert(sizeof(GA_FrostImp_Teleport_C_Get_XY_Location) == 0x000190, "Wrong size on GA_FrostImp_Teleport_C_Get_XY_Location");
static_assert(offsetof(GA_FrostImp_Teleport_C_Get_XY_Location, Origin) == 0x000000, "Member 'GA_FrostImp_Teleport_C_Get_XY_Location::Origin' has a wrong offset!");
static_assert(offsetof(GA_FrostImp_Teleport_C_Get_XY_Location, CallFunc_K2_GetRandomLocationInNavigableRadius_RandomLocation) == 0x000018, "Member 'GA_FrostImp_Teleport_C_Get_XY_Location::CallFunc_K2_GetRandomLocationInNavigableRadius_RandomLocation' has a wrong offset!");
static_assert(offsetof(GA_FrostImp_Teleport_C_Get_XY_Location, CallFunc_K2_GetRandomLocationInNavigableRadius_ReturnValue) == 0x000030, "Member 'GA_FrostImp_Teleport_C_Get_XY_Location::CallFunc_K2_GetRandomLocationInNavigableRadius_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_FrostImp_Teleport_C_Get_XY_Location, Temp_bool_Variable) == 0x000031, "Member 'GA_FrostImp_Teleport_C_Get_XY_Location::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(GA_FrostImp_Teleport_C_Get_XY_Location, CallFunc_Not_PreBool_ReturnValue) == 0x000032, "Member 'GA_FrostImp_Teleport_C_Get_XY_Location::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_FrostImp_Teleport_C_Get_XY_Location, CallFunc_BreakVector_X) == 0x000038, "Member 'GA_FrostImp_Teleport_C_Get_XY_Location::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(GA_FrostImp_Teleport_C_Get_XY_Location, CallFunc_BreakVector_Y) == 0x000040, "Member 'GA_FrostImp_Teleport_C_Get_XY_Location::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(GA_FrostImp_Teleport_C_Get_XY_Location, CallFunc_BreakVector_Z) == 0x000048, "Member 'GA_FrostImp_Teleport_C_Get_XY_Location::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(GA_FrostImp_Teleport_C_Get_XY_Location, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000050, "Member 'GA_FrostImp_Teleport_C_Get_XY_Location::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_FrostImp_Teleport_C_Get_XY_Location, Temp_int_Variable) == 0x000058, "Member 'GA_FrostImp_Teleport_C_Get_XY_Location::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(GA_FrostImp_Teleport_C_Get_XY_Location, CallFunc_MakeVector_ReturnValue) == 0x000060, "Member 'GA_FrostImp_Teleport_C_Get_XY_Location::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_FrostImp_Teleport_C_Get_XY_Location, CallFunc_Add_IntInt_ReturnValue) == 0x000078, "Member 'GA_FrostImp_Teleport_C_Get_XY_Location::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_FrostImp_Teleport_C_Get_XY_Location, CallFunc_LessEqual_IntInt_ReturnValue) == 0x00007C, "Member 'GA_FrostImp_Teleport_C_Get_XY_Location::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_FrostImp_Teleport_C_Get_XY_Location, CallFunc_BooleanAND_ReturnValue) == 0x00007D, "Member 'GA_FrostImp_Teleport_C_Get_XY_Location::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_FrostImp_Teleport_C_Get_XY_Location, K2Node_MakeArray_Array) == 0x000080, "Member 'GA_FrostImp_Teleport_C_Get_XY_Location::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(GA_FrostImp_Teleport_C_Get_XY_Location, Temp_object_Variable) == 0x000090, "Member 'GA_FrostImp_Teleport_C_Get_XY_Location::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(GA_FrostImp_Teleport_C_Get_XY_Location, CallFunc_SphereTraceSingleForObjects_OutHit) == 0x0000A0, "Member 'GA_FrostImp_Teleport_C_Get_XY_Location::CallFunc_SphereTraceSingleForObjects_OutHit' has a wrong offset!");
static_assert(offsetof(GA_FrostImp_Teleport_C_Get_XY_Location, CallFunc_SphereTraceSingleForObjects_ReturnValue) == 0x000188, "Member 'GA_FrostImp_Teleport_C_Get_XY_Location::CallFunc_SphereTraceSingleForObjects_ReturnValue' has a wrong offset!");

}

