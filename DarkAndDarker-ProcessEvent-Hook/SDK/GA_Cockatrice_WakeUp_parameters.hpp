#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_Cockatrice_WakeUp

#include "Basic.hpp"


namespace SDK::Params
{

// Function GA_Cockatrice_WakeUp.GA_Cockatrice_WakeUp_C.ExecuteUbergraph_GA_Cockatrice_WakeUp
// 0x0018 (0x0018 - 0x0000)
struct GA_Cockatrice_WakeUp_C_ExecuteUbergraph_GA_Cockatrice_WakeUp final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A02[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetAvatarActorFromActorInfo_ReturnValue;  // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_AddGameplayTag_ReturnValue;               // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bWasCancelled;                        // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Cockatrice_WakeUp_C_ExecuteUbergraph_GA_Cockatrice_WakeUp) == 0x000008, "Wrong alignment on GA_Cockatrice_WakeUp_C_ExecuteUbergraph_GA_Cockatrice_WakeUp");
static_assert(sizeof(GA_Cockatrice_WakeUp_C_ExecuteUbergraph_GA_Cockatrice_WakeUp) == 0x000018, "Wrong size on GA_Cockatrice_WakeUp_C_ExecuteUbergraph_GA_Cockatrice_WakeUp");
static_assert(offsetof(GA_Cockatrice_WakeUp_C_ExecuteUbergraph_GA_Cockatrice_WakeUp, EntryPoint) == 0x000000, "Member 'GA_Cockatrice_WakeUp_C_ExecuteUbergraph_GA_Cockatrice_WakeUp::EntryPoint' has a wrong offset!");
static_assert(offsetof(GA_Cockatrice_WakeUp_C_ExecuteUbergraph_GA_Cockatrice_WakeUp, CallFunc_GetAvatarActorFromActorInfo_ReturnValue) == 0x000008, "Member 'GA_Cockatrice_WakeUp_C_ExecuteUbergraph_GA_Cockatrice_WakeUp::CallFunc_GetAvatarActorFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Cockatrice_WakeUp_C_ExecuteUbergraph_GA_Cockatrice_WakeUp, CallFunc_AddGameplayTag_ReturnValue) == 0x000010, "Member 'GA_Cockatrice_WakeUp_C_ExecuteUbergraph_GA_Cockatrice_WakeUp::CallFunc_AddGameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Cockatrice_WakeUp_C_ExecuteUbergraph_GA_Cockatrice_WakeUp, K2Node_Event_bWasCancelled) == 0x000011, "Member 'GA_Cockatrice_WakeUp_C_ExecuteUbergraph_GA_Cockatrice_WakeUp::K2Node_Event_bWasCancelled' has a wrong offset!");

// Function GA_Cockatrice_WakeUp.GA_Cockatrice_WakeUp_C.K2_OnEndAbility
// 0x0001 (0x0001 - 0x0000)
struct GA_Cockatrice_WakeUp_C_K2_OnEndAbility final
{
public:
	bool                                          bWasCancelled;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Cockatrice_WakeUp_C_K2_OnEndAbility) == 0x000001, "Wrong alignment on GA_Cockatrice_WakeUp_C_K2_OnEndAbility");
static_assert(sizeof(GA_Cockatrice_WakeUp_C_K2_OnEndAbility) == 0x000001, "Wrong size on GA_Cockatrice_WakeUp_C_K2_OnEndAbility");
static_assert(offsetof(GA_Cockatrice_WakeUp_C_K2_OnEndAbility, bWasCancelled) == 0x000000, "Member 'GA_Cockatrice_WakeUp_C_K2_OnEndAbility::bWasCancelled' has a wrong offset!");

}

