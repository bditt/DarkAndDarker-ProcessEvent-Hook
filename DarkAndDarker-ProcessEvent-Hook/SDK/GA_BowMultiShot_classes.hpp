#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_BowMultiShot

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "DungeonCrawler_classes.hpp"
#include "GameplayTags_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass GA_BowMultiShot.GA_BowMultiShot_C
// 0x0030 (0x0688 - 0x0658)
class UGA_BowMultiShot_C : public UGA_MultiShotBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0658(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	double                                        AngleValue;                                        // 0x0660(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                EndTraceLocation;                                  // 0x0668(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           KinesthesiaStateTag;                               // 0x0680(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void AbilityActivated(const struct FGameplayEventData& TriggerEventData);
	void CreateProjectiles(const struct FGameplayTag& EventTag, const struct FGameplayEventData& EventData, float FirePower, const struct FVector& StartLocation);
	void ExecuteUbergraph_GA_BowMultiShot(int32 EntryPoint);
	void OnSuccess_AD00B3DA4CDB4D669E483EA55702AB02(class AActor* ProjectileActor);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GA_BowMultiShot_C">();
	}
	static class UGA_BowMultiShot_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGA_BowMultiShot_C>();
	}
};
static_assert(alignof(UGA_BowMultiShot_C) == 0x000008, "Wrong alignment on UGA_BowMultiShot_C");
static_assert(sizeof(UGA_BowMultiShot_C) == 0x000688, "Wrong size on UGA_BowMultiShot_C");
static_assert(offsetof(UGA_BowMultiShot_C, UberGraphFrame) == 0x000658, "Member 'UGA_BowMultiShot_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UGA_BowMultiShot_C, AngleValue) == 0x000660, "Member 'UGA_BowMultiShot_C::AngleValue' has a wrong offset!");
static_assert(offsetof(UGA_BowMultiShot_C, EndTraceLocation) == 0x000668, "Member 'UGA_BowMultiShot_C::EndTraceLocation' has a wrong offset!");
static_assert(offsetof(UGA_BowMultiShot_C, KinesthesiaStateTag) == 0x000680, "Member 'UGA_BowMultiShot_C::KinesthesiaStateTag' has a wrong offset!");

}

