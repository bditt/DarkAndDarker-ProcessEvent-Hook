#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ABP_IceKoboldArcher

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "AnimGraphRuntime_structs.hpp"
#include "DungeonCrawler_classes.hpp"
#include "ABP_IceKoboldArcher_structs.hpp"
#include "KawaiiPhysics_structs.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass ABP_IceKoboldArcher.ABP_IceKoboldArcher_C
// 0x2940 (0x2E70 - 0x0530)
class UABP_IceKoboldArcher_C final : public UDCMonsterAnimInstanceBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0530(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct ABP_IceKoboldArcher::FAnimBlueprintGeneratedMutableData __AnimBlueprintMutables;                           // 0x0538(0x000C)(HasGetValueTypeHash)
	uint8                                         Pad_4757[0x4];                                     // 0x0544(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_PropertyAccess;             // 0x0548(0x0008)()
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_Base;                       // 0x0550(0x0008)()
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x0558(0x0020)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_10;                 // 0x0578(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_9;                  // 0x05A0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_8;                  // 0x05C8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_7;                  // 0x05F0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_6;                  // 0x0618(0x0028)()
	struct FAnimNode_ApplyAdditive                AnimGraphNode_ApplyAdditive_3;                     // 0x0640(0x00C8)()
	struct FAnimNode_ApplyAdditive                AnimGraphNode_ApplyAdditive_2;                     // 0x0708(0x00C8)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_2;             // 0x07D0(0x0020)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_2;             // 0x07F0(0x0020)()
	struct FAnimNode_LegIK                        AnimGraphNode_LegIK_1;                             // 0x0810(0x00F8)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_2;                   // 0x0908(0x0048)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend_1;                  // 0x0950(0x00F0)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_8;                     // 0x0A40(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_7;                     // 0x0A68(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_6;                     // 0x0A90(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_6;                    // 0x0AB8(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_5;                    // 0x0B00(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_6;                       // 0x0B48(0x0020)()
	struct FAnimNode_ApplyAdditive                AnimGraphNode_ApplyAdditive_1;                     // 0x0B68(0x00C8)()
	struct FAnimNode_ApplyAdditive                AnimGraphNode_ApplyAdditive;                       // 0x0C30(0x00C8)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_1;             // 0x0CF8(0x0020)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_1;             // 0x0D18(0x0020)()
	struct FAnimNode_LegIK                        AnimGraphNode_LegIK;                               // 0x0D38(0x00F8)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_1;                   // 0x0E30(0x0048)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend;                    // 0x0E78(0x00F0)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_5;                     // 0x0F68(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_4;                     // 0x0F90(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_3;                     // 0x0FB8(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_4;                    // 0x0FE0(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_3;                    // 0x1028(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_5;                       // 0x1070(0x0020)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_2;                     // 0x1090(0x0028)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_4;                       // 0x10B8(0x0020)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine_1;                      // 0x10D8(0x00C8)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_5;                  // 0x11A0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_4;                  // 0x11C8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_3;                  // 0x11F0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_2;                  // 0x1218(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_1;                  // 0x1240(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult;                    // 0x1268(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_2;                    // 0x1290(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_3;                       // 0x12D8(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_1;                    // 0x12F8(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_2;                       // 0x1340(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x1360(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_1;                       // 0x13A8(0x0020)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer;                    // 0x13C8(0x0070)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult;                         // 0x1438(0x0020)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine;                        // 0x1458(0x00C8)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot;                                // 0x1520(0x0048)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_1;                    // 0x1568(0x0080)()
	uint8                                         Pad_4758[0x8];                                     // 0x15E8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnimNode_KawaiiPhysics                AnimGraphNode_KawaiiPhysics_2;                     // 0x15F0(0x07A0)()
	struct FAnimNode_KawaiiPhysics                AnimGraphNode_KawaiiPhysics_1;                     // 0x1D90(0x07A0)()
	struct FAnimNode_KawaiiPhysics                AnimGraphNode_KawaiiPhysics;                       // 0x2530(0x07A0)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace;               // 0x2CD0(0x0020)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace;               // 0x2CF0(0x0020)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_1;                     // 0x2D10(0x0028)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose;                      // 0x2D38(0x0080)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool;                     // 0x2DB8(0x0048)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose;                       // 0x2E00(0x0028)()
	bool                                          bIsDead_1;                                         // 0x2E28(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsDead_2;                                         // 0x2E29(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsDead_3;                                         // 0x2E2A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4759[0x1];                                     // 0x2E2B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Dead;                                              // 0x2E2C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsDeathCurveLarge;                                // 0x2E30(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_475A[0x3];                                     // 0x2E31(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKawaiiPhysicsSettings                 Kawaii_Physics_Settings_Ponytail;                  // 0x2E34(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	struct FKawaiiPhysicsSettings                 Kawaii_Physics_Settings_Ear;                       // 0x2E4C(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)

public:
	void AnimGraph(struct FPoseLink* Param_AnimGraph);
	void BlueprintThreadSafeUpdateAnimation(float DeltaTime);
	void ExecuteUbergraph_ABP_IceKoboldArcher(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ABP_IceKoboldArcher_C">();
	}
	static class UABP_IceKoboldArcher_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UABP_IceKoboldArcher_C>();
	}
};
static_assert(alignof(UABP_IceKoboldArcher_C) == 0x000010, "Wrong alignment on UABP_IceKoboldArcher_C");
static_assert(sizeof(UABP_IceKoboldArcher_C) == 0x002E70, "Wrong size on UABP_IceKoboldArcher_C");
static_assert(offsetof(UABP_IceKoboldArcher_C, UberGraphFrame) == 0x000530, "Member 'UABP_IceKoboldArcher_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UABP_IceKoboldArcher_C, __AnimBlueprintMutables) == 0x000538, "Member 'UABP_IceKoboldArcher_C::__AnimBlueprintMutables' has a wrong offset!");
static_assert(offsetof(UABP_IceKoboldArcher_C, AnimBlueprintExtension_PropertyAccess) == 0x000548, "Member 'UABP_IceKoboldArcher_C::AnimBlueprintExtension_PropertyAccess' has a wrong offset!");
static_assert(offsetof(UABP_IceKoboldArcher_C, AnimBlueprintExtension_Base) == 0x000550, "Member 'UABP_IceKoboldArcher_C::AnimBlueprintExtension_Base' has a wrong offset!");
static_assert(offsetof(UABP_IceKoboldArcher_C, AnimGraphNode_Root) == 0x000558, "Member 'UABP_IceKoboldArcher_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UABP_IceKoboldArcher_C, AnimGraphNode_TransitionResult_10) == 0x000578, "Member 'UABP_IceKoboldArcher_C::AnimGraphNode_TransitionResult_10' has a wrong offset!");
static_assert(offsetof(UABP_IceKoboldArcher_C, AnimGraphNode_TransitionResult_9) == 0x0005A0, "Member 'UABP_IceKoboldArcher_C::AnimGraphNode_TransitionResult_9' has a wrong offset!");
static_assert(offsetof(UABP_IceKoboldArcher_C, AnimGraphNode_TransitionResult_8) == 0x0005C8, "Member 'UABP_IceKoboldArcher_C::AnimGraphNode_TransitionResult_8' has a wrong offset!");
static_assert(offsetof(UABP_IceKoboldArcher_C, AnimGraphNode_TransitionResult_7) == 0x0005F0, "Member 'UABP_IceKoboldArcher_C::AnimGraphNode_TransitionResult_7' has a wrong offset!");
static_assert(offsetof(UABP_IceKoboldArcher_C, AnimGraphNode_TransitionResult_6) == 0x000618, "Member 'UABP_IceKoboldArcher_C::AnimGraphNode_TransitionResult_6' has a wrong offset!");
static_assert(offsetof(UABP_IceKoboldArcher_C, AnimGraphNode_ApplyAdditive_3) == 0x000640, "Member 'UABP_IceKoboldArcher_C::AnimGraphNode_ApplyAdditive_3' has a wrong offset!");
static_assert(offsetof(UABP_IceKoboldArcher_C, AnimGraphNode_ApplyAdditive_2) == 0x000708, "Member 'UABP_IceKoboldArcher_C::AnimGraphNode_ApplyAdditive_2' has a wrong offset!");
static_assert(offsetof(UABP_IceKoboldArcher_C, AnimGraphNode_ComponentToLocalSpace_2) == 0x0007D0, "Member 'UABP_IceKoboldArcher_C::AnimGraphNode_ComponentToLocalSpace_2' has a wrong offset!");
static_assert(offsetof(UABP_IceKoboldArcher_C, AnimGraphNode_LocalToComponentSpace_2) == 0x0007F0, "Member 'UABP_IceKoboldArcher_C::AnimGraphNode_LocalToComponentSpace_2' has a wrong offset!");
static_assert(offsetof(UABP_IceKoboldArcher_C, AnimGraphNode_LegIK_1) == 0x000810, "Member 'UABP_IceKoboldArcher_C::AnimGraphNode_LegIK_1' has a wrong offset!");
static_assert(offsetof(UABP_IceKoboldArcher_C, AnimGraphNode_BlendListByBool_2) == 0x000908, "Member 'UABP_IceKoboldArcher_C::AnimGraphNode_BlendListByBool_2' has a wrong offset!");
static_assert(offsetof(UABP_IceKoboldArcher_C, AnimGraphNode_LayeredBoneBlend_1) == 0x000950, "Member 'UABP_IceKoboldArcher_C::AnimGraphNode_LayeredBoneBlend_1' has a wrong offset!");
static_assert(offsetof(UABP_IceKoboldArcher_C, AnimGraphNode_UseCachedPose_8) == 0x000A40, "Member 'UABP_IceKoboldArcher_C::AnimGraphNode_UseCachedPose_8' has a wrong offset!");
static_assert(offsetof(UABP_IceKoboldArcher_C, AnimGraphNode_UseCachedPose_7) == 0x000A68, "Member 'UABP_IceKoboldArcher_C::AnimGraphNode_UseCachedPose_7' has a wrong offset!");
static_assert(offsetof(UABP_IceKoboldArcher_C, AnimGraphNode_UseCachedPose_6) == 0x000A90, "Member 'UABP_IceKoboldArcher_C::AnimGraphNode_UseCachedPose_6' has a wrong offset!");
static_assert(offsetof(UABP_IceKoboldArcher_C, AnimGraphNode_SequencePlayer_6) == 0x000AB8, "Member 'UABP_IceKoboldArcher_C::AnimGraphNode_SequencePlayer_6' has a wrong offset!");
static_assert(offsetof(UABP_IceKoboldArcher_C, AnimGraphNode_SequencePlayer_5) == 0x000B00, "Member 'UABP_IceKoboldArcher_C::AnimGraphNode_SequencePlayer_5' has a wrong offset!");
static_assert(offsetof(UABP_IceKoboldArcher_C, AnimGraphNode_StateResult_6) == 0x000B48, "Member 'UABP_IceKoboldArcher_C::AnimGraphNode_StateResult_6' has a wrong offset!");
static_assert(offsetof(UABP_IceKoboldArcher_C, AnimGraphNode_ApplyAdditive_1) == 0x000B68, "Member 'UABP_IceKoboldArcher_C::AnimGraphNode_ApplyAdditive_1' has a wrong offset!");
static_assert(offsetof(UABP_IceKoboldArcher_C, AnimGraphNode_ApplyAdditive) == 0x000C30, "Member 'UABP_IceKoboldArcher_C::AnimGraphNode_ApplyAdditive' has a wrong offset!");
static_assert(offsetof(UABP_IceKoboldArcher_C, AnimGraphNode_ComponentToLocalSpace_1) == 0x000CF8, "Member 'UABP_IceKoboldArcher_C::AnimGraphNode_ComponentToLocalSpace_1' has a wrong offset!");
static_assert(offsetof(UABP_IceKoboldArcher_C, AnimGraphNode_LocalToComponentSpace_1) == 0x000D18, "Member 'UABP_IceKoboldArcher_C::AnimGraphNode_LocalToComponentSpace_1' has a wrong offset!");
static_assert(offsetof(UABP_IceKoboldArcher_C, AnimGraphNode_LegIK) == 0x000D38, "Member 'UABP_IceKoboldArcher_C::AnimGraphNode_LegIK' has a wrong offset!");
static_assert(offsetof(UABP_IceKoboldArcher_C, AnimGraphNode_BlendListByBool_1) == 0x000E30, "Member 'UABP_IceKoboldArcher_C::AnimGraphNode_BlendListByBool_1' has a wrong offset!");
static_assert(offsetof(UABP_IceKoboldArcher_C, AnimGraphNode_LayeredBoneBlend) == 0x000E78, "Member 'UABP_IceKoboldArcher_C::AnimGraphNode_LayeredBoneBlend' has a wrong offset!");
static_assert(offsetof(UABP_IceKoboldArcher_C, AnimGraphNode_UseCachedPose_5) == 0x000F68, "Member 'UABP_IceKoboldArcher_C::AnimGraphNode_UseCachedPose_5' has a wrong offset!");
static_assert(offsetof(UABP_IceKoboldArcher_C, AnimGraphNode_UseCachedPose_4) == 0x000F90, "Member 'UABP_IceKoboldArcher_C::AnimGraphNode_UseCachedPose_4' has a wrong offset!");
static_assert(offsetof(UABP_IceKoboldArcher_C, AnimGraphNode_UseCachedPose_3) == 0x000FB8, "Member 'UABP_IceKoboldArcher_C::AnimGraphNode_UseCachedPose_3' has a wrong offset!");
static_assert(offsetof(UABP_IceKoboldArcher_C, AnimGraphNode_SequencePlayer_4) == 0x000FE0, "Member 'UABP_IceKoboldArcher_C::AnimGraphNode_SequencePlayer_4' has a wrong offset!");
static_assert(offsetof(UABP_IceKoboldArcher_C, AnimGraphNode_SequencePlayer_3) == 0x001028, "Member 'UABP_IceKoboldArcher_C::AnimGraphNode_SequencePlayer_3' has a wrong offset!");
static_assert(offsetof(UABP_IceKoboldArcher_C, AnimGraphNode_StateResult_5) == 0x001070, "Member 'UABP_IceKoboldArcher_C::AnimGraphNode_StateResult_5' has a wrong offset!");
static_assert(offsetof(UABP_IceKoboldArcher_C, AnimGraphNode_UseCachedPose_2) == 0x001090, "Member 'UABP_IceKoboldArcher_C::AnimGraphNode_UseCachedPose_2' has a wrong offset!");
static_assert(offsetof(UABP_IceKoboldArcher_C, AnimGraphNode_StateResult_4) == 0x0010B8, "Member 'UABP_IceKoboldArcher_C::AnimGraphNode_StateResult_4' has a wrong offset!");
static_assert(offsetof(UABP_IceKoboldArcher_C, AnimGraphNode_StateMachine_1) == 0x0010D8, "Member 'UABP_IceKoboldArcher_C::AnimGraphNode_StateMachine_1' has a wrong offset!");
static_assert(offsetof(UABP_IceKoboldArcher_C, AnimGraphNode_TransitionResult_5) == 0x0011A0, "Member 'UABP_IceKoboldArcher_C::AnimGraphNode_TransitionResult_5' has a wrong offset!");
static_assert(offsetof(UABP_IceKoboldArcher_C, AnimGraphNode_TransitionResult_4) == 0x0011C8, "Member 'UABP_IceKoboldArcher_C::AnimGraphNode_TransitionResult_4' has a wrong offset!");
static_assert(offsetof(UABP_IceKoboldArcher_C, AnimGraphNode_TransitionResult_3) == 0x0011F0, "Member 'UABP_IceKoboldArcher_C::AnimGraphNode_TransitionResult_3' has a wrong offset!");
static_assert(offsetof(UABP_IceKoboldArcher_C, AnimGraphNode_TransitionResult_2) == 0x001218, "Member 'UABP_IceKoboldArcher_C::AnimGraphNode_TransitionResult_2' has a wrong offset!");
static_assert(offsetof(UABP_IceKoboldArcher_C, AnimGraphNode_TransitionResult_1) == 0x001240, "Member 'UABP_IceKoboldArcher_C::AnimGraphNode_TransitionResult_1' has a wrong offset!");
static_assert(offsetof(UABP_IceKoboldArcher_C, AnimGraphNode_TransitionResult) == 0x001268, "Member 'UABP_IceKoboldArcher_C::AnimGraphNode_TransitionResult' has a wrong offset!");
static_assert(offsetof(UABP_IceKoboldArcher_C, AnimGraphNode_SequencePlayer_2) == 0x001290, "Member 'UABP_IceKoboldArcher_C::AnimGraphNode_SequencePlayer_2' has a wrong offset!");
static_assert(offsetof(UABP_IceKoboldArcher_C, AnimGraphNode_StateResult_3) == 0x0012D8, "Member 'UABP_IceKoboldArcher_C::AnimGraphNode_StateResult_3' has a wrong offset!");
static_assert(offsetof(UABP_IceKoboldArcher_C, AnimGraphNode_SequencePlayer_1) == 0x0012F8, "Member 'UABP_IceKoboldArcher_C::AnimGraphNode_SequencePlayer_1' has a wrong offset!");
static_assert(offsetof(UABP_IceKoboldArcher_C, AnimGraphNode_StateResult_2) == 0x001340, "Member 'UABP_IceKoboldArcher_C::AnimGraphNode_StateResult_2' has a wrong offset!");
static_assert(offsetof(UABP_IceKoboldArcher_C, AnimGraphNode_SequencePlayer) == 0x001360, "Member 'UABP_IceKoboldArcher_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(UABP_IceKoboldArcher_C, AnimGraphNode_StateResult_1) == 0x0013A8, "Member 'UABP_IceKoboldArcher_C::AnimGraphNode_StateResult_1' has a wrong offset!");
static_assert(offsetof(UABP_IceKoboldArcher_C, AnimGraphNode_BlendSpacePlayer) == 0x0013C8, "Member 'UABP_IceKoboldArcher_C::AnimGraphNode_BlendSpacePlayer' has a wrong offset!");
static_assert(offsetof(UABP_IceKoboldArcher_C, AnimGraphNode_StateResult) == 0x001438, "Member 'UABP_IceKoboldArcher_C::AnimGraphNode_StateResult' has a wrong offset!");
static_assert(offsetof(UABP_IceKoboldArcher_C, AnimGraphNode_StateMachine) == 0x001458, "Member 'UABP_IceKoboldArcher_C::AnimGraphNode_StateMachine' has a wrong offset!");
static_assert(offsetof(UABP_IceKoboldArcher_C, AnimGraphNode_Slot) == 0x001520, "Member 'UABP_IceKoboldArcher_C::AnimGraphNode_Slot' has a wrong offset!");
static_assert(offsetof(UABP_IceKoboldArcher_C, AnimGraphNode_SaveCachedPose_1) == 0x001568, "Member 'UABP_IceKoboldArcher_C::AnimGraphNode_SaveCachedPose_1' has a wrong offset!");
static_assert(offsetof(UABP_IceKoboldArcher_C, AnimGraphNode_KawaiiPhysics_2) == 0x0015F0, "Member 'UABP_IceKoboldArcher_C::AnimGraphNode_KawaiiPhysics_2' has a wrong offset!");
static_assert(offsetof(UABP_IceKoboldArcher_C, AnimGraphNode_KawaiiPhysics_1) == 0x001D90, "Member 'UABP_IceKoboldArcher_C::AnimGraphNode_KawaiiPhysics_1' has a wrong offset!");
static_assert(offsetof(UABP_IceKoboldArcher_C, AnimGraphNode_KawaiiPhysics) == 0x002530, "Member 'UABP_IceKoboldArcher_C::AnimGraphNode_KawaiiPhysics' has a wrong offset!");
static_assert(offsetof(UABP_IceKoboldArcher_C, AnimGraphNode_LocalToComponentSpace) == 0x002CD0, "Member 'UABP_IceKoboldArcher_C::AnimGraphNode_LocalToComponentSpace' has a wrong offset!");
static_assert(offsetof(UABP_IceKoboldArcher_C, AnimGraphNode_ComponentToLocalSpace) == 0x002CF0, "Member 'UABP_IceKoboldArcher_C::AnimGraphNode_ComponentToLocalSpace' has a wrong offset!");
static_assert(offsetof(UABP_IceKoboldArcher_C, AnimGraphNode_UseCachedPose_1) == 0x002D10, "Member 'UABP_IceKoboldArcher_C::AnimGraphNode_UseCachedPose_1' has a wrong offset!");
static_assert(offsetof(UABP_IceKoboldArcher_C, AnimGraphNode_SaveCachedPose) == 0x002D38, "Member 'UABP_IceKoboldArcher_C::AnimGraphNode_SaveCachedPose' has a wrong offset!");
static_assert(offsetof(UABP_IceKoboldArcher_C, AnimGraphNode_BlendListByBool) == 0x002DB8, "Member 'UABP_IceKoboldArcher_C::AnimGraphNode_BlendListByBool' has a wrong offset!");
static_assert(offsetof(UABP_IceKoboldArcher_C, AnimGraphNode_UseCachedPose) == 0x002E00, "Member 'UABP_IceKoboldArcher_C::AnimGraphNode_UseCachedPose' has a wrong offset!");
static_assert(offsetof(UABP_IceKoboldArcher_C, bIsDead_1) == 0x002E28, "Member 'UABP_IceKoboldArcher_C::bIsDead_1' has a wrong offset!");
static_assert(offsetof(UABP_IceKoboldArcher_C, bIsDead_2) == 0x002E29, "Member 'UABP_IceKoboldArcher_C::bIsDead_2' has a wrong offset!");
static_assert(offsetof(UABP_IceKoboldArcher_C, bIsDead_3) == 0x002E2A, "Member 'UABP_IceKoboldArcher_C::bIsDead_3' has a wrong offset!");
static_assert(offsetof(UABP_IceKoboldArcher_C, Dead) == 0x002E2C, "Member 'UABP_IceKoboldArcher_C::Dead' has a wrong offset!");
static_assert(offsetof(UABP_IceKoboldArcher_C, bIsDeathCurveLarge) == 0x002E30, "Member 'UABP_IceKoboldArcher_C::bIsDeathCurveLarge' has a wrong offset!");
static_assert(offsetof(UABP_IceKoboldArcher_C, Kawaii_Physics_Settings_Ponytail) == 0x002E34, "Member 'UABP_IceKoboldArcher_C::Kawaii_Physics_Settings_Ponytail' has a wrong offset!");
static_assert(offsetof(UABP_IceKoboldArcher_C, Kawaii_Physics_Settings_Ear) == 0x002E4C, "Member 'UABP_IceKoboldArcher_C::Kawaii_Physics_Settings_Ear' has a wrong offset!");

}

