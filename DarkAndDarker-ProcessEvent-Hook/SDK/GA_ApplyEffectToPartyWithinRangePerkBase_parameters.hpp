#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_ApplyEffectToPartyWithinRangePerkBase

#include "Basic.hpp"

#include "GameplayAbilities_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "DungeonCrawler_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function GA_ApplyEffectToPartyWithinRangePerkBase.GA_ApplyEffectToPartyWithinRangePerkBase_C.ApplyEffect
// 0x0100 (0x0100 - 0x0000)
struct GA_ApplyEffectToPartyWithinRangePerkBase_C_ApplyEffect final
{
public:
	class ADCPlayerCharacterBase*                 Target;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          bIsApplied;                                        // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanApplyEffect_CanApply;                  // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5574[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetAvatarActorFromActorInfo_ReturnValue;  // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasMatchingGameplayTag_self_CastInput;    // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue;       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5575[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayEventData                     K2Node_MakeStruct_GameplayEventData;               // 0x0030(0x00B0)()
	TArray<struct FActiveGameplayEffectHandle>    CallFunc_ApplyEffectContainer_ReturnValue;         // 0x00E0(0x0010)(ReferenceParm)
	TArray<struct FActiveGameplayEffectHandle>    CallFunc_ApplyEffectContainer_ReturnValue_1;       // 0x00F0(0x0010)(ReferenceParm)
};
static_assert(alignof(GA_ApplyEffectToPartyWithinRangePerkBase_C_ApplyEffect) == 0x000008, "Wrong alignment on GA_ApplyEffectToPartyWithinRangePerkBase_C_ApplyEffect");
static_assert(sizeof(GA_ApplyEffectToPartyWithinRangePerkBase_C_ApplyEffect) == 0x000100, "Wrong size on GA_ApplyEffectToPartyWithinRangePerkBase_C_ApplyEffect");
static_assert(offsetof(GA_ApplyEffectToPartyWithinRangePerkBase_C_ApplyEffect, Target) == 0x000000, "Member 'GA_ApplyEffectToPartyWithinRangePerkBase_C_ApplyEffect::Target' has a wrong offset!");
static_assert(offsetof(GA_ApplyEffectToPartyWithinRangePerkBase_C_ApplyEffect, bIsApplied) == 0x000008, "Member 'GA_ApplyEffectToPartyWithinRangePerkBase_C_ApplyEffect::bIsApplied' has a wrong offset!");
static_assert(offsetof(GA_ApplyEffectToPartyWithinRangePerkBase_C_ApplyEffect, CallFunc_IsValid_ReturnValue) == 0x000009, "Member 'GA_ApplyEffectToPartyWithinRangePerkBase_C_ApplyEffect::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_ApplyEffectToPartyWithinRangePerkBase_C_ApplyEffect, CallFunc_CanApplyEffect_CanApply) == 0x00000A, "Member 'GA_ApplyEffectToPartyWithinRangePerkBase_C_ApplyEffect::CallFunc_CanApplyEffect_CanApply' has a wrong offset!");
static_assert(offsetof(GA_ApplyEffectToPartyWithinRangePerkBase_C_ApplyEffect, CallFunc_IsValid_ReturnValue_1) == 0x00000B, "Member 'GA_ApplyEffectToPartyWithinRangePerkBase_C_ApplyEffect::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_ApplyEffectToPartyWithinRangePerkBase_C_ApplyEffect, CallFunc_GetAvatarActorFromActorInfo_ReturnValue) == 0x000010, "Member 'GA_ApplyEffectToPartyWithinRangePerkBase_C_ApplyEffect::CallFunc_GetAvatarActorFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_ApplyEffectToPartyWithinRangePerkBase_C_ApplyEffect, CallFunc_HasMatchingGameplayTag_self_CastInput) == 0x000018, "Member 'GA_ApplyEffectToPartyWithinRangePerkBase_C_ApplyEffect::CallFunc_HasMatchingGameplayTag_self_CastInput' has a wrong offset!");
static_assert(offsetof(GA_ApplyEffectToPartyWithinRangePerkBase_C_ApplyEffect, CallFunc_HasMatchingGameplayTag_ReturnValue) == 0x000028, "Member 'GA_ApplyEffectToPartyWithinRangePerkBase_C_ApplyEffect::CallFunc_HasMatchingGameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_ApplyEffectToPartyWithinRangePerkBase_C_ApplyEffect, K2Node_MakeStruct_GameplayEventData) == 0x000030, "Member 'GA_ApplyEffectToPartyWithinRangePerkBase_C_ApplyEffect::K2Node_MakeStruct_GameplayEventData' has a wrong offset!");
static_assert(offsetof(GA_ApplyEffectToPartyWithinRangePerkBase_C_ApplyEffect, CallFunc_ApplyEffectContainer_ReturnValue) == 0x0000E0, "Member 'GA_ApplyEffectToPartyWithinRangePerkBase_C_ApplyEffect::CallFunc_ApplyEffectContainer_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_ApplyEffectToPartyWithinRangePerkBase_C_ApplyEffect, CallFunc_ApplyEffectContainer_ReturnValue_1) == 0x0000F0, "Member 'GA_ApplyEffectToPartyWithinRangePerkBase_C_ApplyEffect::CallFunc_ApplyEffectContainer_ReturnValue_1' has a wrong offset!");

// Function GA_ApplyEffectToPartyWithinRangePerkBase.GA_ApplyEffectToPartyWithinRangePerkBase_C.CanApplyEffect
// 0x0020 (0x0020 - 0x0000)
struct GA_ApplyEffectToPartyWithinRangePerkBase_C_CanApplyEffect final
{
public:
	class ADCCharacterBase*                       OverlapCharacter;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CanApply;                                          // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5576[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetAvatarActorFromActorInfo_ReturnValue;  // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSameTeam_ReturnValue;                   // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_ApplyEffectToPartyWithinRangePerkBase_C_CanApplyEffect) == 0x000008, "Wrong alignment on GA_ApplyEffectToPartyWithinRangePerkBase_C_CanApplyEffect");
static_assert(sizeof(GA_ApplyEffectToPartyWithinRangePerkBase_C_CanApplyEffect) == 0x000020, "Wrong size on GA_ApplyEffectToPartyWithinRangePerkBase_C_CanApplyEffect");
static_assert(offsetof(GA_ApplyEffectToPartyWithinRangePerkBase_C_CanApplyEffect, OverlapCharacter) == 0x000000, "Member 'GA_ApplyEffectToPartyWithinRangePerkBase_C_CanApplyEffect::OverlapCharacter' has a wrong offset!");
static_assert(offsetof(GA_ApplyEffectToPartyWithinRangePerkBase_C_CanApplyEffect, CanApply) == 0x000008, "Member 'GA_ApplyEffectToPartyWithinRangePerkBase_C_CanApplyEffect::CanApply' has a wrong offset!");
static_assert(offsetof(GA_ApplyEffectToPartyWithinRangePerkBase_C_CanApplyEffect, CallFunc_GetAvatarActorFromActorInfo_ReturnValue) == 0x000010, "Member 'GA_ApplyEffectToPartyWithinRangePerkBase_C_CanApplyEffect::CallFunc_GetAvatarActorFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_ApplyEffectToPartyWithinRangePerkBase_C_CanApplyEffect, CallFunc_Not_PreBool_ReturnValue) == 0x000018, "Member 'GA_ApplyEffectToPartyWithinRangePerkBase_C_CanApplyEffect::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_ApplyEffectToPartyWithinRangePerkBase_C_CanApplyEffect, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000019, "Member 'GA_ApplyEffectToPartyWithinRangePerkBase_C_CanApplyEffect::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_ApplyEffectToPartyWithinRangePerkBase_C_CanApplyEffect, CallFunc_IsSameTeam_ReturnValue) == 0x00001A, "Member 'GA_ApplyEffectToPartyWithinRangePerkBase_C_CanApplyEffect::CallFunc_IsSameTeam_ReturnValue' has a wrong offset!");

// Function GA_ApplyEffectToPartyWithinRangePerkBase.GA_ApplyEffectToPartyWithinRangePerkBase_C.CreateAndAttachCollisionToOwner
// 0x0120 (0x0120 - 0x0000)
struct GA_ApplyEffectToPartyWithinRangePerkBase_C_CreateAndAttachCollisionToOwner final
{
public:
	class USphereComponent*                       Output_Get;                                        // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetAvatarActorFromActorInfo_ReturnValue;  // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ADCPlayerCharacterBase*                 K2Node_DynamicCast_AsDCPlayer_Character_Base;      // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5577[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetSocketTransform_ReturnValue;           // 0x0020(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FDesignDataPerk                        CallFunc_GetDesignDataPerk_ReturnValue;            // 0x0080(0x0098)()
	class USphereComponent*                       CallFunc_AddComponentByClass_ReturnValue;          // 0x0118(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_ApplyEffectToPartyWithinRangePerkBase_C_CreateAndAttachCollisionToOwner) == 0x000010, "Wrong alignment on GA_ApplyEffectToPartyWithinRangePerkBase_C_CreateAndAttachCollisionToOwner");
static_assert(sizeof(GA_ApplyEffectToPartyWithinRangePerkBase_C_CreateAndAttachCollisionToOwner) == 0x000120, "Wrong size on GA_ApplyEffectToPartyWithinRangePerkBase_C_CreateAndAttachCollisionToOwner");
static_assert(offsetof(GA_ApplyEffectToPartyWithinRangePerkBase_C_CreateAndAttachCollisionToOwner, Output_Get) == 0x000000, "Member 'GA_ApplyEffectToPartyWithinRangePerkBase_C_CreateAndAttachCollisionToOwner::Output_Get' has a wrong offset!");
static_assert(offsetof(GA_ApplyEffectToPartyWithinRangePerkBase_C_CreateAndAttachCollisionToOwner, CallFunc_GetAvatarActorFromActorInfo_ReturnValue) == 0x000008, "Member 'GA_ApplyEffectToPartyWithinRangePerkBase_C_CreateAndAttachCollisionToOwner::CallFunc_GetAvatarActorFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_ApplyEffectToPartyWithinRangePerkBase_C_CreateAndAttachCollisionToOwner, K2Node_DynamicCast_AsDCPlayer_Character_Base) == 0x000010, "Member 'GA_ApplyEffectToPartyWithinRangePerkBase_C_CreateAndAttachCollisionToOwner::K2Node_DynamicCast_AsDCPlayer_Character_Base' has a wrong offset!");
static_assert(offsetof(GA_ApplyEffectToPartyWithinRangePerkBase_C_CreateAndAttachCollisionToOwner, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'GA_ApplyEffectToPartyWithinRangePerkBase_C_CreateAndAttachCollisionToOwner::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GA_ApplyEffectToPartyWithinRangePerkBase_C_CreateAndAttachCollisionToOwner, CallFunc_GetSocketTransform_ReturnValue) == 0x000020, "Member 'GA_ApplyEffectToPartyWithinRangePerkBase_C_CreateAndAttachCollisionToOwner::CallFunc_GetSocketTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_ApplyEffectToPartyWithinRangePerkBase_C_CreateAndAttachCollisionToOwner, CallFunc_GetDesignDataPerk_ReturnValue) == 0x000080, "Member 'GA_ApplyEffectToPartyWithinRangePerkBase_C_CreateAndAttachCollisionToOwner::CallFunc_GetDesignDataPerk_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_ApplyEffectToPartyWithinRangePerkBase_C_CreateAndAttachCollisionToOwner, CallFunc_AddComponentByClass_ReturnValue) == 0x000118, "Member 'GA_ApplyEffectToPartyWithinRangePerkBase_C_CreateAndAttachCollisionToOwner::CallFunc_AddComponentByClass_ReturnValue' has a wrong offset!");

// Function GA_ApplyEffectToPartyWithinRangePerkBase.GA_ApplyEffectToPartyWithinRangePerkBase_C.ExecuteUbergraph_GA_ApplyEffectToPartyWithinRangePerkBase
// 0x0298 (0x0298 - 0x0000)
struct GA_ApplyEffectToPartyWithinRangePerkBase_C_ExecuteUbergraph_GA_ApplyEffectToPartyWithinRangePerkBase final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex)> K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5578[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayEventData                     K2Node_Event_EventData;                            // 0x0028(0x00B0)(ConstParm)
	bool                                          CallFunc_IsServer_ReturnValue;                     // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bWasCancelled;                        // 0x00D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsServer_ReturnValue_1;                   // 0x00DA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5579[0x5];                                     // 0x00DB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_CustomEvent_OverlappedComponent_1;          // 0x00E0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_OtherActor_1;                   // 0x00E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_CustomEvent_OtherComp_1;                    // 0x00F0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_OtherBodyIndex_1;               // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bFromSweep;                     // 0x00FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_557A[0x3];                                     // 0x00FD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_CustomEvent_SweepResult;                    // 0x0100(0x00E8)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class UPrimitiveComponent*                    K2Node_CustomEvent_OverlappedComponent;            // 0x01E8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_OtherActor;                     // 0x01F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_CustomEvent_OtherComp;                      // 0x01F8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_OtherBodyIndex;                 // 0x0200(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_557B[0x4];                                     // 0x0204(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ADCPlayerCharacterBase*                 K2Node_DynamicCast_AsDCPlayer_Character_Base;      // 0x0208(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0210(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_557C[0x7];                                     // 0x0211(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ADCPlayerCharacterBase*                 K2Node_DynamicCast_AsDCPlayer_Character_Base_1;    // 0x0218(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0220(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ApplyEffect_bIsApplied;                   // 0x0221(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_557D[0x6];                                     // 0x0222(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class USphereComponent*                       CallFunc_CreateAndAttachCollisionToOwner_Output_Get; // 0x0228(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x0230(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         CallFunc_GetOverlappingActors_OverlappingActors;   // 0x0240(0x0010)(ReferenceParm)
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0250(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ADCPlayerCharacterBase*                 CallFunc_Array_Get_Item_1;                         // 0x0258(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ADCPlayerCharacterBase*                 K2Node_DynamicCast_AsDCPlayer_Character_Base_2;    // 0x0260(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0268(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0269(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ApplyEffect_bIsApplied_1;                 // 0x026A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_557E[0x1];                                     // 0x026B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x026C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0270(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0274(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_557F[0x3];                                     // 0x0275(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0278(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x027C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5580[0x3];                                     // 0x027D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0280(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x0284(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x0288(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5581[0x3];                                     // 0x0289(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_AddUnique_ReturnValue_1;            // 0x028C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0290(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_ApplyEffectToPartyWithinRangePerkBase_C_ExecuteUbergraph_GA_ApplyEffectToPartyWithinRangePerkBase) == 0x000008, "Wrong alignment on GA_ApplyEffectToPartyWithinRangePerkBase_C_ExecuteUbergraph_GA_ApplyEffectToPartyWithinRangePerkBase");
static_assert(sizeof(GA_ApplyEffectToPartyWithinRangePerkBase_C_ExecuteUbergraph_GA_ApplyEffectToPartyWithinRangePerkBase) == 0x000298, "Wrong size on GA_ApplyEffectToPartyWithinRangePerkBase_C_ExecuteUbergraph_GA_ApplyEffectToPartyWithinRangePerkBase");
static_assert(offsetof(GA_ApplyEffectToPartyWithinRangePerkBase_C_ExecuteUbergraph_GA_ApplyEffectToPartyWithinRangePerkBase, EntryPoint) == 0x000000, "Member 'GA_ApplyEffectToPartyWithinRangePerkBase_C_ExecuteUbergraph_GA_ApplyEffectToPartyWithinRangePerkBase::EntryPoint' has a wrong offset!");
static_assert(offsetof(GA_ApplyEffectToPartyWithinRangePerkBase_C_ExecuteUbergraph_GA_ApplyEffectToPartyWithinRangePerkBase, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'GA_ApplyEffectToPartyWithinRangePerkBase_C_ExecuteUbergraph_GA_ApplyEffectToPartyWithinRangePerkBase::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(GA_ApplyEffectToPartyWithinRangePerkBase_C_ExecuteUbergraph_GA_ApplyEffectToPartyWithinRangePerkBase, Temp_int_Array_Index_Variable) == 0x000014, "Member 'GA_ApplyEffectToPartyWithinRangePerkBase_C_ExecuteUbergraph_GA_ApplyEffectToPartyWithinRangePerkBase::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(GA_ApplyEffectToPartyWithinRangePerkBase_C_ExecuteUbergraph_GA_ApplyEffectToPartyWithinRangePerkBase, Temp_int_Loop_Counter_Variable) == 0x000018, "Member 'GA_ApplyEffectToPartyWithinRangePerkBase_C_ExecuteUbergraph_GA_ApplyEffectToPartyWithinRangePerkBase::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(GA_ApplyEffectToPartyWithinRangePerkBase_C_ExecuteUbergraph_GA_ApplyEffectToPartyWithinRangePerkBase, CallFunc_Add_IntInt_ReturnValue) == 0x00001C, "Member 'GA_ApplyEffectToPartyWithinRangePerkBase_C_ExecuteUbergraph_GA_ApplyEffectToPartyWithinRangePerkBase::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_ApplyEffectToPartyWithinRangePerkBase_C_ExecuteUbergraph_GA_ApplyEffectToPartyWithinRangePerkBase, Temp_int_Array_Index_Variable_1) == 0x000020, "Member 'GA_ApplyEffectToPartyWithinRangePerkBase_C_ExecuteUbergraph_GA_ApplyEffectToPartyWithinRangePerkBase::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(GA_ApplyEffectToPartyWithinRangePerkBase_C_ExecuteUbergraph_GA_ApplyEffectToPartyWithinRangePerkBase, K2Node_Event_EventData) == 0x000028, "Member 'GA_ApplyEffectToPartyWithinRangePerkBase_C_ExecuteUbergraph_GA_ApplyEffectToPartyWithinRangePerkBase::K2Node_Event_EventData' has a wrong offset!");
static_assert(offsetof(GA_ApplyEffectToPartyWithinRangePerkBase_C_ExecuteUbergraph_GA_ApplyEffectToPartyWithinRangePerkBase, CallFunc_IsServer_ReturnValue) == 0x0000D8, "Member 'GA_ApplyEffectToPartyWithinRangePerkBase_C_ExecuteUbergraph_GA_ApplyEffectToPartyWithinRangePerkBase::CallFunc_IsServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_ApplyEffectToPartyWithinRangePerkBase_C_ExecuteUbergraph_GA_ApplyEffectToPartyWithinRangePerkBase, K2Node_Event_bWasCancelled) == 0x0000D9, "Member 'GA_ApplyEffectToPartyWithinRangePerkBase_C_ExecuteUbergraph_GA_ApplyEffectToPartyWithinRangePerkBase::K2Node_Event_bWasCancelled' has a wrong offset!");
static_assert(offsetof(GA_ApplyEffectToPartyWithinRangePerkBase_C_ExecuteUbergraph_GA_ApplyEffectToPartyWithinRangePerkBase, CallFunc_IsServer_ReturnValue_1) == 0x0000DA, "Member 'GA_ApplyEffectToPartyWithinRangePerkBase_C_ExecuteUbergraph_GA_ApplyEffectToPartyWithinRangePerkBase::CallFunc_IsServer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_ApplyEffectToPartyWithinRangePerkBase_C_ExecuteUbergraph_GA_ApplyEffectToPartyWithinRangePerkBase, K2Node_CustomEvent_OverlappedComponent_1) == 0x0000E0, "Member 'GA_ApplyEffectToPartyWithinRangePerkBase_C_ExecuteUbergraph_GA_ApplyEffectToPartyWithinRangePerkBase::K2Node_CustomEvent_OverlappedComponent_1' has a wrong offset!");
static_assert(offsetof(GA_ApplyEffectToPartyWithinRangePerkBase_C_ExecuteUbergraph_GA_ApplyEffectToPartyWithinRangePerkBase, K2Node_CustomEvent_OtherActor_1) == 0x0000E8, "Member 'GA_ApplyEffectToPartyWithinRangePerkBase_C_ExecuteUbergraph_GA_ApplyEffectToPartyWithinRangePerkBase::K2Node_CustomEvent_OtherActor_1' has a wrong offset!");
static_assert(offsetof(GA_ApplyEffectToPartyWithinRangePerkBase_C_ExecuteUbergraph_GA_ApplyEffectToPartyWithinRangePerkBase, K2Node_CustomEvent_OtherComp_1) == 0x0000F0, "Member 'GA_ApplyEffectToPartyWithinRangePerkBase_C_ExecuteUbergraph_GA_ApplyEffectToPartyWithinRangePerkBase::K2Node_CustomEvent_OtherComp_1' has a wrong offset!");
static_assert(offsetof(GA_ApplyEffectToPartyWithinRangePerkBase_C_ExecuteUbergraph_GA_ApplyEffectToPartyWithinRangePerkBase, K2Node_CustomEvent_OtherBodyIndex_1) == 0x0000F8, "Member 'GA_ApplyEffectToPartyWithinRangePerkBase_C_ExecuteUbergraph_GA_ApplyEffectToPartyWithinRangePerkBase::K2Node_CustomEvent_OtherBodyIndex_1' has a wrong offset!");
static_assert(offsetof(GA_ApplyEffectToPartyWithinRangePerkBase_C_ExecuteUbergraph_GA_ApplyEffectToPartyWithinRangePerkBase, K2Node_CustomEvent_bFromSweep) == 0x0000FC, "Member 'GA_ApplyEffectToPartyWithinRangePerkBase_C_ExecuteUbergraph_GA_ApplyEffectToPartyWithinRangePerkBase::K2Node_CustomEvent_bFromSweep' has a wrong offset!");
static_assert(offsetof(GA_ApplyEffectToPartyWithinRangePerkBase_C_ExecuteUbergraph_GA_ApplyEffectToPartyWithinRangePerkBase, K2Node_CustomEvent_SweepResult) == 0x000100, "Member 'GA_ApplyEffectToPartyWithinRangePerkBase_C_ExecuteUbergraph_GA_ApplyEffectToPartyWithinRangePerkBase::K2Node_CustomEvent_SweepResult' has a wrong offset!");
static_assert(offsetof(GA_ApplyEffectToPartyWithinRangePerkBase_C_ExecuteUbergraph_GA_ApplyEffectToPartyWithinRangePerkBase, K2Node_CustomEvent_OverlappedComponent) == 0x0001E8, "Member 'GA_ApplyEffectToPartyWithinRangePerkBase_C_ExecuteUbergraph_GA_ApplyEffectToPartyWithinRangePerkBase::K2Node_CustomEvent_OverlappedComponent' has a wrong offset!");
static_assert(offsetof(GA_ApplyEffectToPartyWithinRangePerkBase_C_ExecuteUbergraph_GA_ApplyEffectToPartyWithinRangePerkBase, K2Node_CustomEvent_OtherActor) == 0x0001F0, "Member 'GA_ApplyEffectToPartyWithinRangePerkBase_C_ExecuteUbergraph_GA_ApplyEffectToPartyWithinRangePerkBase::K2Node_CustomEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(GA_ApplyEffectToPartyWithinRangePerkBase_C_ExecuteUbergraph_GA_ApplyEffectToPartyWithinRangePerkBase, K2Node_CustomEvent_OtherComp) == 0x0001F8, "Member 'GA_ApplyEffectToPartyWithinRangePerkBase_C_ExecuteUbergraph_GA_ApplyEffectToPartyWithinRangePerkBase::K2Node_CustomEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(GA_ApplyEffectToPartyWithinRangePerkBase_C_ExecuteUbergraph_GA_ApplyEffectToPartyWithinRangePerkBase, K2Node_CustomEvent_OtherBodyIndex) == 0x000200, "Member 'GA_ApplyEffectToPartyWithinRangePerkBase_C_ExecuteUbergraph_GA_ApplyEffectToPartyWithinRangePerkBase::K2Node_CustomEvent_OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(GA_ApplyEffectToPartyWithinRangePerkBase_C_ExecuteUbergraph_GA_ApplyEffectToPartyWithinRangePerkBase, K2Node_DynamicCast_AsDCPlayer_Character_Base) == 0x000208, "Member 'GA_ApplyEffectToPartyWithinRangePerkBase_C_ExecuteUbergraph_GA_ApplyEffectToPartyWithinRangePerkBase::K2Node_DynamicCast_AsDCPlayer_Character_Base' has a wrong offset!");
static_assert(offsetof(GA_ApplyEffectToPartyWithinRangePerkBase_C_ExecuteUbergraph_GA_ApplyEffectToPartyWithinRangePerkBase, K2Node_DynamicCast_bSuccess) == 0x000210, "Member 'GA_ApplyEffectToPartyWithinRangePerkBase_C_ExecuteUbergraph_GA_ApplyEffectToPartyWithinRangePerkBase::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GA_ApplyEffectToPartyWithinRangePerkBase_C_ExecuteUbergraph_GA_ApplyEffectToPartyWithinRangePerkBase, K2Node_DynamicCast_AsDCPlayer_Character_Base_1) == 0x000218, "Member 'GA_ApplyEffectToPartyWithinRangePerkBase_C_ExecuteUbergraph_GA_ApplyEffectToPartyWithinRangePerkBase::K2Node_DynamicCast_AsDCPlayer_Character_Base_1' has a wrong offset!");
static_assert(offsetof(GA_ApplyEffectToPartyWithinRangePerkBase_C_ExecuteUbergraph_GA_ApplyEffectToPartyWithinRangePerkBase, K2Node_DynamicCast_bSuccess_1) == 0x000220, "Member 'GA_ApplyEffectToPartyWithinRangePerkBase_C_ExecuteUbergraph_GA_ApplyEffectToPartyWithinRangePerkBase::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(GA_ApplyEffectToPartyWithinRangePerkBase_C_ExecuteUbergraph_GA_ApplyEffectToPartyWithinRangePerkBase, CallFunc_ApplyEffect_bIsApplied) == 0x000221, "Member 'GA_ApplyEffectToPartyWithinRangePerkBase_C_ExecuteUbergraph_GA_ApplyEffectToPartyWithinRangePerkBase::CallFunc_ApplyEffect_bIsApplied' has a wrong offset!");
static_assert(offsetof(GA_ApplyEffectToPartyWithinRangePerkBase_C_ExecuteUbergraph_GA_ApplyEffectToPartyWithinRangePerkBase, CallFunc_CreateAndAttachCollisionToOwner_Output_Get) == 0x000228, "Member 'GA_ApplyEffectToPartyWithinRangePerkBase_C_ExecuteUbergraph_GA_ApplyEffectToPartyWithinRangePerkBase::CallFunc_CreateAndAttachCollisionToOwner_Output_Get' has a wrong offset!");
static_assert(offsetof(GA_ApplyEffectToPartyWithinRangePerkBase_C_ExecuteUbergraph_GA_ApplyEffectToPartyWithinRangePerkBase, K2Node_CreateDelegate_OutputDelegate_1) == 0x000230, "Member 'GA_ApplyEffectToPartyWithinRangePerkBase_C_ExecuteUbergraph_GA_ApplyEffectToPartyWithinRangePerkBase::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(GA_ApplyEffectToPartyWithinRangePerkBase_C_ExecuteUbergraph_GA_ApplyEffectToPartyWithinRangePerkBase, CallFunc_GetOverlappingActors_OverlappingActors) == 0x000240, "Member 'GA_ApplyEffectToPartyWithinRangePerkBase_C_ExecuteUbergraph_GA_ApplyEffectToPartyWithinRangePerkBase::CallFunc_GetOverlappingActors_OverlappingActors' has a wrong offset!");
static_assert(offsetof(GA_ApplyEffectToPartyWithinRangePerkBase_C_ExecuteUbergraph_GA_ApplyEffectToPartyWithinRangePerkBase, CallFunc_Array_Get_Item) == 0x000250, "Member 'GA_ApplyEffectToPartyWithinRangePerkBase_C_ExecuteUbergraph_GA_ApplyEffectToPartyWithinRangePerkBase::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(GA_ApplyEffectToPartyWithinRangePerkBase_C_ExecuteUbergraph_GA_ApplyEffectToPartyWithinRangePerkBase, CallFunc_Array_Get_Item_1) == 0x000258, "Member 'GA_ApplyEffectToPartyWithinRangePerkBase_C_ExecuteUbergraph_GA_ApplyEffectToPartyWithinRangePerkBase::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(GA_ApplyEffectToPartyWithinRangePerkBase_C_ExecuteUbergraph_GA_ApplyEffectToPartyWithinRangePerkBase, K2Node_DynamicCast_AsDCPlayer_Character_Base_2) == 0x000260, "Member 'GA_ApplyEffectToPartyWithinRangePerkBase_C_ExecuteUbergraph_GA_ApplyEffectToPartyWithinRangePerkBase::K2Node_DynamicCast_AsDCPlayer_Character_Base_2' has a wrong offset!");
static_assert(offsetof(GA_ApplyEffectToPartyWithinRangePerkBase_C_ExecuteUbergraph_GA_ApplyEffectToPartyWithinRangePerkBase, K2Node_DynamicCast_bSuccess_2) == 0x000268, "Member 'GA_ApplyEffectToPartyWithinRangePerkBase_C_ExecuteUbergraph_GA_ApplyEffectToPartyWithinRangePerkBase::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(GA_ApplyEffectToPartyWithinRangePerkBase_C_ExecuteUbergraph_GA_ApplyEffectToPartyWithinRangePerkBase, CallFunc_IsValid_ReturnValue) == 0x000269, "Member 'GA_ApplyEffectToPartyWithinRangePerkBase_C_ExecuteUbergraph_GA_ApplyEffectToPartyWithinRangePerkBase::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_ApplyEffectToPartyWithinRangePerkBase_C_ExecuteUbergraph_GA_ApplyEffectToPartyWithinRangePerkBase, CallFunc_ApplyEffect_bIsApplied_1) == 0x00026A, "Member 'GA_ApplyEffectToPartyWithinRangePerkBase_C_ExecuteUbergraph_GA_ApplyEffectToPartyWithinRangePerkBase::CallFunc_ApplyEffect_bIsApplied_1' has a wrong offset!");
static_assert(offsetof(GA_ApplyEffectToPartyWithinRangePerkBase_C_ExecuteUbergraph_GA_ApplyEffectToPartyWithinRangePerkBase, CallFunc_Array_Length_ReturnValue) == 0x00026C, "Member 'GA_ApplyEffectToPartyWithinRangePerkBase_C_ExecuteUbergraph_GA_ApplyEffectToPartyWithinRangePerkBase::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_ApplyEffectToPartyWithinRangePerkBase_C_ExecuteUbergraph_GA_ApplyEffectToPartyWithinRangePerkBase, CallFunc_Array_Length_ReturnValue_1) == 0x000270, "Member 'GA_ApplyEffectToPartyWithinRangePerkBase_C_ExecuteUbergraph_GA_ApplyEffectToPartyWithinRangePerkBase::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_ApplyEffectToPartyWithinRangePerkBase_C_ExecuteUbergraph_GA_ApplyEffectToPartyWithinRangePerkBase, CallFunc_Less_IntInt_ReturnValue) == 0x000274, "Member 'GA_ApplyEffectToPartyWithinRangePerkBase_C_ExecuteUbergraph_GA_ApplyEffectToPartyWithinRangePerkBase::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_ApplyEffectToPartyWithinRangePerkBase_C_ExecuteUbergraph_GA_ApplyEffectToPartyWithinRangePerkBase, Temp_int_Loop_Counter_Variable_1) == 0x000278, "Member 'GA_ApplyEffectToPartyWithinRangePerkBase_C_ExecuteUbergraph_GA_ApplyEffectToPartyWithinRangePerkBase::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(GA_ApplyEffectToPartyWithinRangePerkBase_C_ExecuteUbergraph_GA_ApplyEffectToPartyWithinRangePerkBase, CallFunc_Less_IntInt_ReturnValue_1) == 0x00027C, "Member 'GA_ApplyEffectToPartyWithinRangePerkBase_C_ExecuteUbergraph_GA_ApplyEffectToPartyWithinRangePerkBase::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_ApplyEffectToPartyWithinRangePerkBase_C_ExecuteUbergraph_GA_ApplyEffectToPartyWithinRangePerkBase, CallFunc_Add_IntInt_ReturnValue_1) == 0x000280, "Member 'GA_ApplyEffectToPartyWithinRangePerkBase_C_ExecuteUbergraph_GA_ApplyEffectToPartyWithinRangePerkBase::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_ApplyEffectToPartyWithinRangePerkBase_C_ExecuteUbergraph_GA_ApplyEffectToPartyWithinRangePerkBase, CallFunc_Array_AddUnique_ReturnValue) == 0x000284, "Member 'GA_ApplyEffectToPartyWithinRangePerkBase_C_ExecuteUbergraph_GA_ApplyEffectToPartyWithinRangePerkBase::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_ApplyEffectToPartyWithinRangePerkBase_C_ExecuteUbergraph_GA_ApplyEffectToPartyWithinRangePerkBase, CallFunc_Array_RemoveItem_ReturnValue) == 0x000288, "Member 'GA_ApplyEffectToPartyWithinRangePerkBase_C_ExecuteUbergraph_GA_ApplyEffectToPartyWithinRangePerkBase::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_ApplyEffectToPartyWithinRangePerkBase_C_ExecuteUbergraph_GA_ApplyEffectToPartyWithinRangePerkBase, CallFunc_Array_AddUnique_ReturnValue_1) == 0x00028C, "Member 'GA_ApplyEffectToPartyWithinRangePerkBase_C_ExecuteUbergraph_GA_ApplyEffectToPartyWithinRangePerkBase::CallFunc_Array_AddUnique_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_ApplyEffectToPartyWithinRangePerkBase_C_ExecuteUbergraph_GA_ApplyEffectToPartyWithinRangePerkBase, CallFunc_Array_Contains_ReturnValue) == 0x000290, "Member 'GA_ApplyEffectToPartyWithinRangePerkBase_C_ExecuteUbergraph_GA_ApplyEffectToPartyWithinRangePerkBase::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");

// Function GA_ApplyEffectToPartyWithinRangePerkBase.GA_ApplyEffectToPartyWithinRangePerkBase_C.GrantAbility
// 0x00A8 (0x00A8 - 0x0000)
struct GA_ApplyEffectToPartyWithinRangePerkBase_C_GrantAbility final
{
public:
	class AActor*                                 Target;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<struct FDCGameplayAbilityData>         K2Node_MakeArray_Array;                            // 0x0008(0x0010)(ConstParm, ReferenceParm)
	struct FDesignDataGameplayAbility             CallFunc_GetDesignDataGameplayAbility_ReturnValue; // 0x0018(0x0068)()
	bool                                          CallFunc_IsMatchingAbilityActivated_ReturnValue;   // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5582[0x7];                                     // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_GetCurrentSourceObject_ReturnValue;       // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_HasAuthority_ReturnValue;              // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5583[0x7];                                     // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FGameplayAbilitySpecHandle>     CallFunc_GiveAbilities_ReturnValue;                // 0x0098(0x0010)(ReferenceParm)
};
static_assert(alignof(GA_ApplyEffectToPartyWithinRangePerkBase_C_GrantAbility) == 0x000008, "Wrong alignment on GA_ApplyEffectToPartyWithinRangePerkBase_C_GrantAbility");
static_assert(sizeof(GA_ApplyEffectToPartyWithinRangePerkBase_C_GrantAbility) == 0x0000A8, "Wrong size on GA_ApplyEffectToPartyWithinRangePerkBase_C_GrantAbility");
static_assert(offsetof(GA_ApplyEffectToPartyWithinRangePerkBase_C_GrantAbility, Target) == 0x000000, "Member 'GA_ApplyEffectToPartyWithinRangePerkBase_C_GrantAbility::Target' has a wrong offset!");
static_assert(offsetof(GA_ApplyEffectToPartyWithinRangePerkBase_C_GrantAbility, K2Node_MakeArray_Array) == 0x000008, "Member 'GA_ApplyEffectToPartyWithinRangePerkBase_C_GrantAbility::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(GA_ApplyEffectToPartyWithinRangePerkBase_C_GrantAbility, CallFunc_GetDesignDataGameplayAbility_ReturnValue) == 0x000018, "Member 'GA_ApplyEffectToPartyWithinRangePerkBase_C_GrantAbility::CallFunc_GetDesignDataGameplayAbility_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_ApplyEffectToPartyWithinRangePerkBase_C_GrantAbility, CallFunc_IsMatchingAbilityActivated_ReturnValue) == 0x000080, "Member 'GA_ApplyEffectToPartyWithinRangePerkBase_C_GrantAbility::CallFunc_IsMatchingAbilityActivated_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_ApplyEffectToPartyWithinRangePerkBase_C_GrantAbility, CallFunc_GetCurrentSourceObject_ReturnValue) == 0x000088, "Member 'GA_ApplyEffectToPartyWithinRangePerkBase_C_GrantAbility::CallFunc_GetCurrentSourceObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_ApplyEffectToPartyWithinRangePerkBase_C_GrantAbility, CallFunc_K2_HasAuthority_ReturnValue) == 0x000090, "Member 'GA_ApplyEffectToPartyWithinRangePerkBase_C_GrantAbility::CallFunc_K2_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_ApplyEffectToPartyWithinRangePerkBase_C_GrantAbility, CallFunc_GiveAbilities_ReturnValue) == 0x000098, "Member 'GA_ApplyEffectToPartyWithinRangePerkBase_C_GrantAbility::CallFunc_GiveAbilities_ReturnValue' has a wrong offset!");

// Function GA_ApplyEffectToPartyWithinRangePerkBase.GA_ApplyEffectToPartyWithinRangePerkBase_C.K2_ActivateAbilityFromEvent
// 0x00B0 (0x00B0 - 0x0000)
struct GA_ApplyEffectToPartyWithinRangePerkBase_C_K2_ActivateAbilityFromEvent final
{
public:
	struct FGameplayEventData                     EventData;                                         // 0x0000(0x00B0)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(GA_ApplyEffectToPartyWithinRangePerkBase_C_K2_ActivateAbilityFromEvent) == 0x000008, "Wrong alignment on GA_ApplyEffectToPartyWithinRangePerkBase_C_K2_ActivateAbilityFromEvent");
static_assert(sizeof(GA_ApplyEffectToPartyWithinRangePerkBase_C_K2_ActivateAbilityFromEvent) == 0x0000B0, "Wrong size on GA_ApplyEffectToPartyWithinRangePerkBase_C_K2_ActivateAbilityFromEvent");
static_assert(offsetof(GA_ApplyEffectToPartyWithinRangePerkBase_C_K2_ActivateAbilityFromEvent, EventData) == 0x000000, "Member 'GA_ApplyEffectToPartyWithinRangePerkBase_C_K2_ActivateAbilityFromEvent::EventData' has a wrong offset!");

// Function GA_ApplyEffectToPartyWithinRangePerkBase.GA_ApplyEffectToPartyWithinRangePerkBase_C.K2_OnEndAbility
// 0x0001 (0x0001 - 0x0000)
struct GA_ApplyEffectToPartyWithinRangePerkBase_C_K2_OnEndAbility final
{
public:
	bool                                          bWasCancelled;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_ApplyEffectToPartyWithinRangePerkBase_C_K2_OnEndAbility) == 0x000001, "Wrong alignment on GA_ApplyEffectToPartyWithinRangePerkBase_C_K2_OnEndAbility");
static_assert(sizeof(GA_ApplyEffectToPartyWithinRangePerkBase_C_K2_OnEndAbility) == 0x000001, "Wrong size on GA_ApplyEffectToPartyWithinRangePerkBase_C_K2_OnEndAbility");
static_assert(offsetof(GA_ApplyEffectToPartyWithinRangePerkBase_C_K2_OnEndAbility, bWasCancelled) == 0x000000, "Member 'GA_ApplyEffectToPartyWithinRangePerkBase_C_K2_OnEndAbility::bWasCancelled' has a wrong offset!");

// Function GA_ApplyEffectToPartyWithinRangePerkBase.GA_ApplyEffectToPartyWithinRangePerkBase_C.OnComponentBeginOverlap
// 0x0108 (0x0108 - 0x0000)
struct GA_ApplyEffectToPartyWithinRangePerkBase_C_OnComponentBeginOverlap final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5584[0x3];                                     // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x00E8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(GA_ApplyEffectToPartyWithinRangePerkBase_C_OnComponentBeginOverlap) == 0x000008, "Wrong alignment on GA_ApplyEffectToPartyWithinRangePerkBase_C_OnComponentBeginOverlap");
static_assert(sizeof(GA_ApplyEffectToPartyWithinRangePerkBase_C_OnComponentBeginOverlap) == 0x000108, "Wrong size on GA_ApplyEffectToPartyWithinRangePerkBase_C_OnComponentBeginOverlap");
static_assert(offsetof(GA_ApplyEffectToPartyWithinRangePerkBase_C_OnComponentBeginOverlap, OverlappedComponent) == 0x000000, "Member 'GA_ApplyEffectToPartyWithinRangePerkBase_C_OnComponentBeginOverlap::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(GA_ApplyEffectToPartyWithinRangePerkBase_C_OnComponentBeginOverlap, OtherActor) == 0x000008, "Member 'GA_ApplyEffectToPartyWithinRangePerkBase_C_OnComponentBeginOverlap::OtherActor' has a wrong offset!");
static_assert(offsetof(GA_ApplyEffectToPartyWithinRangePerkBase_C_OnComponentBeginOverlap, OtherComp) == 0x000010, "Member 'GA_ApplyEffectToPartyWithinRangePerkBase_C_OnComponentBeginOverlap::OtherComp' has a wrong offset!");
static_assert(offsetof(GA_ApplyEffectToPartyWithinRangePerkBase_C_OnComponentBeginOverlap, OtherBodyIndex) == 0x000018, "Member 'GA_ApplyEffectToPartyWithinRangePerkBase_C_OnComponentBeginOverlap::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(GA_ApplyEffectToPartyWithinRangePerkBase_C_OnComponentBeginOverlap, bFromSweep) == 0x00001C, "Member 'GA_ApplyEffectToPartyWithinRangePerkBase_C_OnComponentBeginOverlap::bFromSweep' has a wrong offset!");
static_assert(offsetof(GA_ApplyEffectToPartyWithinRangePerkBase_C_OnComponentBeginOverlap, SweepResult) == 0x000020, "Member 'GA_ApplyEffectToPartyWithinRangePerkBase_C_OnComponentBeginOverlap::SweepResult' has a wrong offset!");

// Function GA_ApplyEffectToPartyWithinRangePerkBase.GA_ApplyEffectToPartyWithinRangePerkBase_C.OnComponentEndOverlap
// 0x0020 (0x0020 - 0x0000)
struct GA_ApplyEffectToPartyWithinRangePerkBase_C_OnComponentEndOverlap final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_ApplyEffectToPartyWithinRangePerkBase_C_OnComponentEndOverlap) == 0x000008, "Wrong alignment on GA_ApplyEffectToPartyWithinRangePerkBase_C_OnComponentEndOverlap");
static_assert(sizeof(GA_ApplyEffectToPartyWithinRangePerkBase_C_OnComponentEndOverlap) == 0x000020, "Wrong size on GA_ApplyEffectToPartyWithinRangePerkBase_C_OnComponentEndOverlap");
static_assert(offsetof(GA_ApplyEffectToPartyWithinRangePerkBase_C_OnComponentEndOverlap, OverlappedComponent) == 0x000000, "Member 'GA_ApplyEffectToPartyWithinRangePerkBase_C_OnComponentEndOverlap::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(GA_ApplyEffectToPartyWithinRangePerkBase_C_OnComponentEndOverlap, OtherActor) == 0x000008, "Member 'GA_ApplyEffectToPartyWithinRangePerkBase_C_OnComponentEndOverlap::OtherActor' has a wrong offset!");
static_assert(offsetof(GA_ApplyEffectToPartyWithinRangePerkBase_C_OnComponentEndOverlap, OtherComp) == 0x000010, "Member 'GA_ApplyEffectToPartyWithinRangePerkBase_C_OnComponentEndOverlap::OtherComp' has a wrong offset!");
static_assert(offsetof(GA_ApplyEffectToPartyWithinRangePerkBase_C_OnComponentEndOverlap, OtherBodyIndex) == 0x000018, "Member 'GA_ApplyEffectToPartyWithinRangePerkBase_C_OnComponentEndOverlap::OtherBodyIndex' has a wrong offset!");

// Function GA_ApplyEffectToPartyWithinRangePerkBase.GA_ApplyEffectToPartyWithinRangePerkBase_C.RemoveEffect
// 0x0028 (0x0028 - 0x0000)
struct GA_ApplyEffectToPartyWithinRangePerkBase_C_RemoveEffect final
{
public:
	class ADCPlayerCharacterBase*                 Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5585[0x6];                                     // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FActiveGameplayEffectHandle>    CallFunc_GetActiveEffects_ReturnValue;             // 0x0010(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsNotEmpty_ReturnValue;             // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RemoveActiveGameplayEffect_ReturnValue;   // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_ApplyEffectToPartyWithinRangePerkBase_C_RemoveEffect) == 0x000008, "Wrong alignment on GA_ApplyEffectToPartyWithinRangePerkBase_C_RemoveEffect");
static_assert(sizeof(GA_ApplyEffectToPartyWithinRangePerkBase_C_RemoveEffect) == 0x000028, "Wrong size on GA_ApplyEffectToPartyWithinRangePerkBase_C_RemoveEffect");
static_assert(offsetof(GA_ApplyEffectToPartyWithinRangePerkBase_C_RemoveEffect, Character) == 0x000000, "Member 'GA_ApplyEffectToPartyWithinRangePerkBase_C_RemoveEffect::Character' has a wrong offset!");
static_assert(offsetof(GA_ApplyEffectToPartyWithinRangePerkBase_C_RemoveEffect, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'GA_ApplyEffectToPartyWithinRangePerkBase_C_RemoveEffect::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_ApplyEffectToPartyWithinRangePerkBase_C_RemoveEffect, CallFunc_IsValid_ReturnValue_1) == 0x000009, "Member 'GA_ApplyEffectToPartyWithinRangePerkBase_C_RemoveEffect::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_ApplyEffectToPartyWithinRangePerkBase_C_RemoveEffect, CallFunc_GetActiveEffects_ReturnValue) == 0x000010, "Member 'GA_ApplyEffectToPartyWithinRangePerkBase_C_RemoveEffect::CallFunc_GetActiveEffects_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_ApplyEffectToPartyWithinRangePerkBase_C_RemoveEffect, CallFunc_Array_LastIndex_ReturnValue) == 0x000020, "Member 'GA_ApplyEffectToPartyWithinRangePerkBase_C_RemoveEffect::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_ApplyEffectToPartyWithinRangePerkBase_C_RemoveEffect, CallFunc_Array_IsNotEmpty_ReturnValue) == 0x000024, "Member 'GA_ApplyEffectToPartyWithinRangePerkBase_C_RemoveEffect::CallFunc_Array_IsNotEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_ApplyEffectToPartyWithinRangePerkBase_C_RemoveEffect, CallFunc_RemoveActiveGameplayEffect_ReturnValue) == 0x000025, "Member 'GA_ApplyEffectToPartyWithinRangePerkBase_C_RemoveEffect::CallFunc_RemoveActiveGameplayEffect_ReturnValue' has a wrong offset!");

}

