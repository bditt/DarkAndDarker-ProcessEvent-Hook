#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ABP_GiantCentipede

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "AnimGraphRuntime_structs.hpp"
#include "ABP_GiantCentipede_structs.hpp"
#include "DungeonCrawler_classes.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass ABP_GiantCentipede.ABP_GiantCentipede_C
// 0x2200 (0x2730 - 0x0530)
class UABP_GiantCentipede_C final : public UDCMonsterAnimInstanceBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0530(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct ABP_GiantCentipede::FAnimBlueprintGeneratedMutableData __AnimBlueprintMutables;                           // 0x0538(0x0038)(HasGetValueTypeHash)
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_PropertyAccess;             // 0x0570(0x0008)()
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_Base;                       // 0x0578(0x0008)()
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x0580(0x0020)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot;                                // 0x05A0(0x0048)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_10;                 // 0x05E8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_9;                  // 0x0610(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_8;                  // 0x0638(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_7;                  // 0x0660(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_8;                    // 0x0688(0x0048)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_4;                  // 0x06D0(0x0070)()
	struct FAnimNode_ApplyAdditive                AnimGraphNode_ApplyAdditive_7;                     // 0x0740(0x00C8)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_6;                       // 0x0808(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_7;                    // 0x0828(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_5;                       // 0x0870(0x0020)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_3;                  // 0x0890(0x0070)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_5;                   // 0x0900(0x0048)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_4;                   // 0x0948(0x0048)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_2;                  // 0x0990(0x0070)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_1;                  // 0x0A00(0x0070)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer;                    // 0x0A70(0x0070)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_6;                    // 0x0AE0(0x0048)()
	struct FAnimNode_ApplyAdditive                AnimGraphNode_ApplyAdditive_6;                     // 0x0B28(0x00C8)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_5;                    // 0x0BF0(0x0048)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_3;                   // 0x0C38(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_4;                    // 0x0C80(0x0048)()
	struct FAnimNode_ApplyAdditive                AnimGraphNode_ApplyAdditive_5;                     // 0x0CC8(0x00C8)()
	struct FAnimNode_ApplyAdditive                AnimGraphNode_ApplyAdditive_4;                     // 0x0D90(0x00C8)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_4;                       // 0x0E58(0x0020)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine_1;                      // 0x0E78(0x00C8)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_1;                    // 0x0F40(0x0080)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_6;                  // 0x0FC0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_5;                  // 0x0FE8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_4;                  // 0x1010(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_3;                  // 0x1038(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_2;                  // 0x1060(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_1;                  // 0x1088(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult;                    // 0x10B0(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_9;                     // 0x10D8(0x0028)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_3;                       // 0x1100(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_3;                    // 0x1120(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_2;                    // 0x1168(0x0048)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_8;                     // 0x11B0(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_7;                     // 0x11D8(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_6;                     // 0x1200(0x0028)()
	struct FAnimNode_ApplyAdditive                AnimGraphNode_ApplyAdditive_3;                     // 0x1228(0x00C8)()
	struct FAnimNode_ApplyAdditive                AnimGraphNode_ApplyAdditive_2;                     // 0x12F0(0x00C8)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_2;                   // 0x13B8(0x0048)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend_1;                  // 0x1400(0x00F0)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_2;                       // 0x14F0(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_1;                    // 0x1510(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x1558(0x0048)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_5;                     // 0x15A0(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_4;                     // 0x15C8(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_3;                     // 0x15F0(0x0028)()
	struct FAnimNode_ApplyAdditive                AnimGraphNode_ApplyAdditive_1;                     // 0x1618(0x00C8)()
	struct FAnimNode_ApplyAdditive                AnimGraphNode_ApplyAdditive;                       // 0x16E0(0x00C8)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_1;                   // 0x17A8(0x0048)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend;                    // 0x17F0(0x00F0)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_1;                       // 0x18E0(0x0020)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_2;                     // 0x1900(0x0028)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult;                         // 0x1928(0x0020)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine;                        // 0x1948(0x00C8)()
	struct FAnimNode_AnimDynamics                 AnimGraphNode_AnimDynamics_1;                      // 0x1A10(0x0520)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace;               // 0x1F30(0x0020)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace;               // 0x1F50(0x0020)()
	struct FAnimNode_AnimDynamics                 AnimGraphNode_AnimDynamics;                        // 0x1F70(0x0520)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_1;                     // 0x2490(0x0028)()
	struct FAnimNode_Inertialization              AnimGraphNode_Inertialization;                     // 0x24B8(0x0110)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose;                      // 0x25C8(0x0080)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool;                     // 0x2648(0x0048)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose;                       // 0x2690(0x0028)()
	struct FVector                                FootOffset;                                        // 0x26B8(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                LootAtPos;                                         // 0x26D0(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          RunPhase;                                          // 0x26E8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4529[0x7];                                     // 0x26E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Offset;                                            // 0x26F0(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Speed;                                             // 0x2708(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Direction;                                         // 0x2710(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsFastMoving;                                     // 0x2718(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_452A[0x7];                                     // 0x2719(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        SpeedCalc;                                         // 0x2720(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void AnimGraph(struct FPoseLink* Param_AnimGraph);
	void BlueprintThreadSafeUpdateAnimation(float DeltaTime);
	void BlueprintUpdateAnimation(float DeltaTimeX);
	void ExecuteUbergraph_ABP_GiantCentipede(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ABP_GiantCentipede_C">();
	}
	static class UABP_GiantCentipede_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UABP_GiantCentipede_C>();
	}
};
static_assert(alignof(UABP_GiantCentipede_C) == 0x000010, "Wrong alignment on UABP_GiantCentipede_C");
static_assert(sizeof(UABP_GiantCentipede_C) == 0x002730, "Wrong size on UABP_GiantCentipede_C");
static_assert(offsetof(UABP_GiantCentipede_C, UberGraphFrame) == 0x000530, "Member 'UABP_GiantCentipede_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UABP_GiantCentipede_C, __AnimBlueprintMutables) == 0x000538, "Member 'UABP_GiantCentipede_C::__AnimBlueprintMutables' has a wrong offset!");
static_assert(offsetof(UABP_GiantCentipede_C, AnimBlueprintExtension_PropertyAccess) == 0x000570, "Member 'UABP_GiantCentipede_C::AnimBlueprintExtension_PropertyAccess' has a wrong offset!");
static_assert(offsetof(UABP_GiantCentipede_C, AnimBlueprintExtension_Base) == 0x000578, "Member 'UABP_GiantCentipede_C::AnimBlueprintExtension_Base' has a wrong offset!");
static_assert(offsetof(UABP_GiantCentipede_C, AnimGraphNode_Root) == 0x000580, "Member 'UABP_GiantCentipede_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UABP_GiantCentipede_C, AnimGraphNode_Slot) == 0x0005A0, "Member 'UABP_GiantCentipede_C::AnimGraphNode_Slot' has a wrong offset!");
static_assert(offsetof(UABP_GiantCentipede_C, AnimGraphNode_TransitionResult_10) == 0x0005E8, "Member 'UABP_GiantCentipede_C::AnimGraphNode_TransitionResult_10' has a wrong offset!");
static_assert(offsetof(UABP_GiantCentipede_C, AnimGraphNode_TransitionResult_9) == 0x000610, "Member 'UABP_GiantCentipede_C::AnimGraphNode_TransitionResult_9' has a wrong offset!");
static_assert(offsetof(UABP_GiantCentipede_C, AnimGraphNode_TransitionResult_8) == 0x000638, "Member 'UABP_GiantCentipede_C::AnimGraphNode_TransitionResult_8' has a wrong offset!");
static_assert(offsetof(UABP_GiantCentipede_C, AnimGraphNode_TransitionResult_7) == 0x000660, "Member 'UABP_GiantCentipede_C::AnimGraphNode_TransitionResult_7' has a wrong offset!");
static_assert(offsetof(UABP_GiantCentipede_C, AnimGraphNode_SequencePlayer_8) == 0x000688, "Member 'UABP_GiantCentipede_C::AnimGraphNode_SequencePlayer_8' has a wrong offset!");
static_assert(offsetof(UABP_GiantCentipede_C, AnimGraphNode_BlendSpacePlayer_4) == 0x0006D0, "Member 'UABP_GiantCentipede_C::AnimGraphNode_BlendSpacePlayer_4' has a wrong offset!");
static_assert(offsetof(UABP_GiantCentipede_C, AnimGraphNode_ApplyAdditive_7) == 0x000740, "Member 'UABP_GiantCentipede_C::AnimGraphNode_ApplyAdditive_7' has a wrong offset!");
static_assert(offsetof(UABP_GiantCentipede_C, AnimGraphNode_StateResult_6) == 0x000808, "Member 'UABP_GiantCentipede_C::AnimGraphNode_StateResult_6' has a wrong offset!");
static_assert(offsetof(UABP_GiantCentipede_C, AnimGraphNode_SequencePlayer_7) == 0x000828, "Member 'UABP_GiantCentipede_C::AnimGraphNode_SequencePlayer_7' has a wrong offset!");
static_assert(offsetof(UABP_GiantCentipede_C, AnimGraphNode_StateResult_5) == 0x000870, "Member 'UABP_GiantCentipede_C::AnimGraphNode_StateResult_5' has a wrong offset!");
static_assert(offsetof(UABP_GiantCentipede_C, AnimGraphNode_BlendSpacePlayer_3) == 0x000890, "Member 'UABP_GiantCentipede_C::AnimGraphNode_BlendSpacePlayer_3' has a wrong offset!");
static_assert(offsetof(UABP_GiantCentipede_C, AnimGraphNode_BlendListByBool_5) == 0x000900, "Member 'UABP_GiantCentipede_C::AnimGraphNode_BlendListByBool_5' has a wrong offset!");
static_assert(offsetof(UABP_GiantCentipede_C, AnimGraphNode_BlendListByBool_4) == 0x000948, "Member 'UABP_GiantCentipede_C::AnimGraphNode_BlendListByBool_4' has a wrong offset!");
static_assert(offsetof(UABP_GiantCentipede_C, AnimGraphNode_BlendSpacePlayer_2) == 0x000990, "Member 'UABP_GiantCentipede_C::AnimGraphNode_BlendSpacePlayer_2' has a wrong offset!");
static_assert(offsetof(UABP_GiantCentipede_C, AnimGraphNode_BlendSpacePlayer_1) == 0x000A00, "Member 'UABP_GiantCentipede_C::AnimGraphNode_BlendSpacePlayer_1' has a wrong offset!");
static_assert(offsetof(UABP_GiantCentipede_C, AnimGraphNode_BlendSpacePlayer) == 0x000A70, "Member 'UABP_GiantCentipede_C::AnimGraphNode_BlendSpacePlayer' has a wrong offset!");
static_assert(offsetof(UABP_GiantCentipede_C, AnimGraphNode_SequencePlayer_6) == 0x000AE0, "Member 'UABP_GiantCentipede_C::AnimGraphNode_SequencePlayer_6' has a wrong offset!");
static_assert(offsetof(UABP_GiantCentipede_C, AnimGraphNode_ApplyAdditive_6) == 0x000B28, "Member 'UABP_GiantCentipede_C::AnimGraphNode_ApplyAdditive_6' has a wrong offset!");
static_assert(offsetof(UABP_GiantCentipede_C, AnimGraphNode_SequencePlayer_5) == 0x000BF0, "Member 'UABP_GiantCentipede_C::AnimGraphNode_SequencePlayer_5' has a wrong offset!");
static_assert(offsetof(UABP_GiantCentipede_C, AnimGraphNode_BlendListByBool_3) == 0x000C38, "Member 'UABP_GiantCentipede_C::AnimGraphNode_BlendListByBool_3' has a wrong offset!");
static_assert(offsetof(UABP_GiantCentipede_C, AnimGraphNode_SequencePlayer_4) == 0x000C80, "Member 'UABP_GiantCentipede_C::AnimGraphNode_SequencePlayer_4' has a wrong offset!");
static_assert(offsetof(UABP_GiantCentipede_C, AnimGraphNode_ApplyAdditive_5) == 0x000CC8, "Member 'UABP_GiantCentipede_C::AnimGraphNode_ApplyAdditive_5' has a wrong offset!");
static_assert(offsetof(UABP_GiantCentipede_C, AnimGraphNode_ApplyAdditive_4) == 0x000D90, "Member 'UABP_GiantCentipede_C::AnimGraphNode_ApplyAdditive_4' has a wrong offset!");
static_assert(offsetof(UABP_GiantCentipede_C, AnimGraphNode_StateResult_4) == 0x000E58, "Member 'UABP_GiantCentipede_C::AnimGraphNode_StateResult_4' has a wrong offset!");
static_assert(offsetof(UABP_GiantCentipede_C, AnimGraphNode_StateMachine_1) == 0x000E78, "Member 'UABP_GiantCentipede_C::AnimGraphNode_StateMachine_1' has a wrong offset!");
static_assert(offsetof(UABP_GiantCentipede_C, AnimGraphNode_SaveCachedPose_1) == 0x000F40, "Member 'UABP_GiantCentipede_C::AnimGraphNode_SaveCachedPose_1' has a wrong offset!");
static_assert(offsetof(UABP_GiantCentipede_C, AnimGraphNode_TransitionResult_6) == 0x000FC0, "Member 'UABP_GiantCentipede_C::AnimGraphNode_TransitionResult_6' has a wrong offset!");
static_assert(offsetof(UABP_GiantCentipede_C, AnimGraphNode_TransitionResult_5) == 0x000FE8, "Member 'UABP_GiantCentipede_C::AnimGraphNode_TransitionResult_5' has a wrong offset!");
static_assert(offsetof(UABP_GiantCentipede_C, AnimGraphNode_TransitionResult_4) == 0x001010, "Member 'UABP_GiantCentipede_C::AnimGraphNode_TransitionResult_4' has a wrong offset!");
static_assert(offsetof(UABP_GiantCentipede_C, AnimGraphNode_TransitionResult_3) == 0x001038, "Member 'UABP_GiantCentipede_C::AnimGraphNode_TransitionResult_3' has a wrong offset!");
static_assert(offsetof(UABP_GiantCentipede_C, AnimGraphNode_TransitionResult_2) == 0x001060, "Member 'UABP_GiantCentipede_C::AnimGraphNode_TransitionResult_2' has a wrong offset!");
static_assert(offsetof(UABP_GiantCentipede_C, AnimGraphNode_TransitionResult_1) == 0x001088, "Member 'UABP_GiantCentipede_C::AnimGraphNode_TransitionResult_1' has a wrong offset!");
static_assert(offsetof(UABP_GiantCentipede_C, AnimGraphNode_TransitionResult) == 0x0010B0, "Member 'UABP_GiantCentipede_C::AnimGraphNode_TransitionResult' has a wrong offset!");
static_assert(offsetof(UABP_GiantCentipede_C, AnimGraphNode_UseCachedPose_9) == 0x0010D8, "Member 'UABP_GiantCentipede_C::AnimGraphNode_UseCachedPose_9' has a wrong offset!");
static_assert(offsetof(UABP_GiantCentipede_C, AnimGraphNode_StateResult_3) == 0x001100, "Member 'UABP_GiantCentipede_C::AnimGraphNode_StateResult_3' has a wrong offset!");
static_assert(offsetof(UABP_GiantCentipede_C, AnimGraphNode_SequencePlayer_3) == 0x001120, "Member 'UABP_GiantCentipede_C::AnimGraphNode_SequencePlayer_3' has a wrong offset!");
static_assert(offsetof(UABP_GiantCentipede_C, AnimGraphNode_SequencePlayer_2) == 0x001168, "Member 'UABP_GiantCentipede_C::AnimGraphNode_SequencePlayer_2' has a wrong offset!");
static_assert(offsetof(UABP_GiantCentipede_C, AnimGraphNode_UseCachedPose_8) == 0x0011B0, "Member 'UABP_GiantCentipede_C::AnimGraphNode_UseCachedPose_8' has a wrong offset!");
static_assert(offsetof(UABP_GiantCentipede_C, AnimGraphNode_UseCachedPose_7) == 0x0011D8, "Member 'UABP_GiantCentipede_C::AnimGraphNode_UseCachedPose_7' has a wrong offset!");
static_assert(offsetof(UABP_GiantCentipede_C, AnimGraphNode_UseCachedPose_6) == 0x001200, "Member 'UABP_GiantCentipede_C::AnimGraphNode_UseCachedPose_6' has a wrong offset!");
static_assert(offsetof(UABP_GiantCentipede_C, AnimGraphNode_ApplyAdditive_3) == 0x001228, "Member 'UABP_GiantCentipede_C::AnimGraphNode_ApplyAdditive_3' has a wrong offset!");
static_assert(offsetof(UABP_GiantCentipede_C, AnimGraphNode_ApplyAdditive_2) == 0x0012F0, "Member 'UABP_GiantCentipede_C::AnimGraphNode_ApplyAdditive_2' has a wrong offset!");
static_assert(offsetof(UABP_GiantCentipede_C, AnimGraphNode_BlendListByBool_2) == 0x0013B8, "Member 'UABP_GiantCentipede_C::AnimGraphNode_BlendListByBool_2' has a wrong offset!");
static_assert(offsetof(UABP_GiantCentipede_C, AnimGraphNode_LayeredBoneBlend_1) == 0x001400, "Member 'UABP_GiantCentipede_C::AnimGraphNode_LayeredBoneBlend_1' has a wrong offset!");
static_assert(offsetof(UABP_GiantCentipede_C, AnimGraphNode_StateResult_2) == 0x0014F0, "Member 'UABP_GiantCentipede_C::AnimGraphNode_StateResult_2' has a wrong offset!");
static_assert(offsetof(UABP_GiantCentipede_C, AnimGraphNode_SequencePlayer_1) == 0x001510, "Member 'UABP_GiantCentipede_C::AnimGraphNode_SequencePlayer_1' has a wrong offset!");
static_assert(offsetof(UABP_GiantCentipede_C, AnimGraphNode_SequencePlayer) == 0x001558, "Member 'UABP_GiantCentipede_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(UABP_GiantCentipede_C, AnimGraphNode_UseCachedPose_5) == 0x0015A0, "Member 'UABP_GiantCentipede_C::AnimGraphNode_UseCachedPose_5' has a wrong offset!");
static_assert(offsetof(UABP_GiantCentipede_C, AnimGraphNode_UseCachedPose_4) == 0x0015C8, "Member 'UABP_GiantCentipede_C::AnimGraphNode_UseCachedPose_4' has a wrong offset!");
static_assert(offsetof(UABP_GiantCentipede_C, AnimGraphNode_UseCachedPose_3) == 0x0015F0, "Member 'UABP_GiantCentipede_C::AnimGraphNode_UseCachedPose_3' has a wrong offset!");
static_assert(offsetof(UABP_GiantCentipede_C, AnimGraphNode_ApplyAdditive_1) == 0x001618, "Member 'UABP_GiantCentipede_C::AnimGraphNode_ApplyAdditive_1' has a wrong offset!");
static_assert(offsetof(UABP_GiantCentipede_C, AnimGraphNode_ApplyAdditive) == 0x0016E0, "Member 'UABP_GiantCentipede_C::AnimGraphNode_ApplyAdditive' has a wrong offset!");
static_assert(offsetof(UABP_GiantCentipede_C, AnimGraphNode_BlendListByBool_1) == 0x0017A8, "Member 'UABP_GiantCentipede_C::AnimGraphNode_BlendListByBool_1' has a wrong offset!");
static_assert(offsetof(UABP_GiantCentipede_C, AnimGraphNode_LayeredBoneBlend) == 0x0017F0, "Member 'UABP_GiantCentipede_C::AnimGraphNode_LayeredBoneBlend' has a wrong offset!");
static_assert(offsetof(UABP_GiantCentipede_C, AnimGraphNode_StateResult_1) == 0x0018E0, "Member 'UABP_GiantCentipede_C::AnimGraphNode_StateResult_1' has a wrong offset!");
static_assert(offsetof(UABP_GiantCentipede_C, AnimGraphNode_UseCachedPose_2) == 0x001900, "Member 'UABP_GiantCentipede_C::AnimGraphNode_UseCachedPose_2' has a wrong offset!");
static_assert(offsetof(UABP_GiantCentipede_C, AnimGraphNode_StateResult) == 0x001928, "Member 'UABP_GiantCentipede_C::AnimGraphNode_StateResult' has a wrong offset!");
static_assert(offsetof(UABP_GiantCentipede_C, AnimGraphNode_StateMachine) == 0x001948, "Member 'UABP_GiantCentipede_C::AnimGraphNode_StateMachine' has a wrong offset!");
static_assert(offsetof(UABP_GiantCentipede_C, AnimGraphNode_AnimDynamics_1) == 0x001A10, "Member 'UABP_GiantCentipede_C::AnimGraphNode_AnimDynamics_1' has a wrong offset!");
static_assert(offsetof(UABP_GiantCentipede_C, AnimGraphNode_LocalToComponentSpace) == 0x001F30, "Member 'UABP_GiantCentipede_C::AnimGraphNode_LocalToComponentSpace' has a wrong offset!");
static_assert(offsetof(UABP_GiantCentipede_C, AnimGraphNode_ComponentToLocalSpace) == 0x001F50, "Member 'UABP_GiantCentipede_C::AnimGraphNode_ComponentToLocalSpace' has a wrong offset!");
static_assert(offsetof(UABP_GiantCentipede_C, AnimGraphNode_AnimDynamics) == 0x001F70, "Member 'UABP_GiantCentipede_C::AnimGraphNode_AnimDynamics' has a wrong offset!");
static_assert(offsetof(UABP_GiantCentipede_C, AnimGraphNode_UseCachedPose_1) == 0x002490, "Member 'UABP_GiantCentipede_C::AnimGraphNode_UseCachedPose_1' has a wrong offset!");
static_assert(offsetof(UABP_GiantCentipede_C, AnimGraphNode_Inertialization) == 0x0024B8, "Member 'UABP_GiantCentipede_C::AnimGraphNode_Inertialization' has a wrong offset!");
static_assert(offsetof(UABP_GiantCentipede_C, AnimGraphNode_SaveCachedPose) == 0x0025C8, "Member 'UABP_GiantCentipede_C::AnimGraphNode_SaveCachedPose' has a wrong offset!");
static_assert(offsetof(UABP_GiantCentipede_C, AnimGraphNode_BlendListByBool) == 0x002648, "Member 'UABP_GiantCentipede_C::AnimGraphNode_BlendListByBool' has a wrong offset!");
static_assert(offsetof(UABP_GiantCentipede_C, AnimGraphNode_UseCachedPose) == 0x002690, "Member 'UABP_GiantCentipede_C::AnimGraphNode_UseCachedPose' has a wrong offset!");
static_assert(offsetof(UABP_GiantCentipede_C, FootOffset) == 0x0026B8, "Member 'UABP_GiantCentipede_C::FootOffset' has a wrong offset!");
static_assert(offsetof(UABP_GiantCentipede_C, LootAtPos) == 0x0026D0, "Member 'UABP_GiantCentipede_C::LootAtPos' has a wrong offset!");
static_assert(offsetof(UABP_GiantCentipede_C, RunPhase) == 0x0026E8, "Member 'UABP_GiantCentipede_C::RunPhase' has a wrong offset!");
static_assert(offsetof(UABP_GiantCentipede_C, Offset) == 0x0026F0, "Member 'UABP_GiantCentipede_C::Offset' has a wrong offset!");
static_assert(offsetof(UABP_GiantCentipede_C, Speed) == 0x002708, "Member 'UABP_GiantCentipede_C::Speed' has a wrong offset!");
static_assert(offsetof(UABP_GiantCentipede_C, Direction) == 0x002710, "Member 'UABP_GiantCentipede_C::Direction' has a wrong offset!");
static_assert(offsetof(UABP_GiantCentipede_C, bIsFastMoving) == 0x002718, "Member 'UABP_GiantCentipede_C::bIsFastMoving' has a wrong offset!");
static_assert(offsetof(UABP_GiantCentipede_C, SpeedCalc) == 0x002720, "Member 'UABP_GiantCentipede_C::SpeedCalc' has a wrong offset!");

}

