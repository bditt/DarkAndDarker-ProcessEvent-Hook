#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ABP_LanternShield

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "AnimGraphRuntime_structs.hpp"
#include "ABP_LanternShield_structs.hpp"
#include "DungeonCrawler_classes.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass ABP_LanternShield.ABP_LanternShield_C
// 0x04B0 (0x0B10 - 0x0660)
class UABP_LanternShield_C final : public UItemWeaponAnimInstanceBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0660(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct ABP_LanternShield::FAnimBlueprintGeneratedMutableData __AnimBlueprintMutables;                           // 0x0668(0x0002)(HasGetValueTypeHash)
	uint8                                         Pad_416C[0x6];                                     // 0x066A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_PropertyAccess;             // 0x0670(0x0008)()
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_Base;                       // 0x0678(0x0008)()
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x0680(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_2;                    // 0x06A0(0x0048)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_1;                              // 0x06E8(0x0048)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend_1;                  // 0x0730(0x00F0)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool;                     // 0x0820(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_1;                    // 0x0868(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x08B0(0x0048)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot;                                // 0x08F8(0x0048)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose;                      // 0x0940(0x0080)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_1;                     // 0x09C0(0x0028)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend;                    // 0x09E8(0x00F0)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose;                       // 0x0AD8(0x0028)()
	bool                                          bIsLanternOn;                                      // 0x0B00(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void AnimGraph(struct FPoseLink* Param_AnimGraph);
	void ExecuteUbergraph_ABP_LanternShield(int32 EntryPoint);
	void GameplayTagUpdated(const struct FGameplayTag& InGameplayTag, int32 InCount);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ABP_LanternShield_C">();
	}
	static class UABP_LanternShield_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UABP_LanternShield_C>();
	}
};
static_assert(alignof(UABP_LanternShield_C) == 0x000010, "Wrong alignment on UABP_LanternShield_C");
static_assert(sizeof(UABP_LanternShield_C) == 0x000B10, "Wrong size on UABP_LanternShield_C");
static_assert(offsetof(UABP_LanternShield_C, UberGraphFrame) == 0x000660, "Member 'UABP_LanternShield_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UABP_LanternShield_C, __AnimBlueprintMutables) == 0x000668, "Member 'UABP_LanternShield_C::__AnimBlueprintMutables' has a wrong offset!");
static_assert(offsetof(UABP_LanternShield_C, AnimBlueprintExtension_PropertyAccess) == 0x000670, "Member 'UABP_LanternShield_C::AnimBlueprintExtension_PropertyAccess' has a wrong offset!");
static_assert(offsetof(UABP_LanternShield_C, AnimBlueprintExtension_Base) == 0x000678, "Member 'UABP_LanternShield_C::AnimBlueprintExtension_Base' has a wrong offset!");
static_assert(offsetof(UABP_LanternShield_C, AnimGraphNode_Root) == 0x000680, "Member 'UABP_LanternShield_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UABP_LanternShield_C, AnimGraphNode_SequencePlayer_2) == 0x0006A0, "Member 'UABP_LanternShield_C::AnimGraphNode_SequencePlayer_2' has a wrong offset!");
static_assert(offsetof(UABP_LanternShield_C, AnimGraphNode_Slot_1) == 0x0006E8, "Member 'UABP_LanternShield_C::AnimGraphNode_Slot_1' has a wrong offset!");
static_assert(offsetof(UABP_LanternShield_C, AnimGraphNode_LayeredBoneBlend_1) == 0x000730, "Member 'UABP_LanternShield_C::AnimGraphNode_LayeredBoneBlend_1' has a wrong offset!");
static_assert(offsetof(UABP_LanternShield_C, AnimGraphNode_BlendListByBool) == 0x000820, "Member 'UABP_LanternShield_C::AnimGraphNode_BlendListByBool' has a wrong offset!");
static_assert(offsetof(UABP_LanternShield_C, AnimGraphNode_SequencePlayer_1) == 0x000868, "Member 'UABP_LanternShield_C::AnimGraphNode_SequencePlayer_1' has a wrong offset!");
static_assert(offsetof(UABP_LanternShield_C, AnimGraphNode_SequencePlayer) == 0x0008B0, "Member 'UABP_LanternShield_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(UABP_LanternShield_C, AnimGraphNode_Slot) == 0x0008F8, "Member 'UABP_LanternShield_C::AnimGraphNode_Slot' has a wrong offset!");
static_assert(offsetof(UABP_LanternShield_C, AnimGraphNode_SaveCachedPose) == 0x000940, "Member 'UABP_LanternShield_C::AnimGraphNode_SaveCachedPose' has a wrong offset!");
static_assert(offsetof(UABP_LanternShield_C, AnimGraphNode_UseCachedPose_1) == 0x0009C0, "Member 'UABP_LanternShield_C::AnimGraphNode_UseCachedPose_1' has a wrong offset!");
static_assert(offsetof(UABP_LanternShield_C, AnimGraphNode_LayeredBoneBlend) == 0x0009E8, "Member 'UABP_LanternShield_C::AnimGraphNode_LayeredBoneBlend' has a wrong offset!");
static_assert(offsetof(UABP_LanternShield_C, AnimGraphNode_UseCachedPose) == 0x000AD8, "Member 'UABP_LanternShield_C::AnimGraphNode_UseCachedPose' has a wrong offset!");
static_assert(offsetof(UABP_LanternShield_C, bIsLanternOn) == 0x000B00, "Member 'UABP_LanternShield_C::bIsLanternOn' has a wrong offset!");

}

