#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_ShapeShiftRat

#include "Basic.hpp"

#include "GameplayAbilities_structs.hpp"


namespace SDK::Params
{

// Function GA_ShapeShiftRat.GA_ShapeShiftRat_C.AbilityActivated
// 0x00B0 (0x00B0 - 0x0000)
struct GA_ShapeShiftRat_C_AbilityActivated final
{
public:
	struct FGameplayEventData                     TriggerEventData;                                  // 0x0000(0x00B0)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(GA_ShapeShiftRat_C_AbilityActivated) == 0x000008, "Wrong alignment on GA_ShapeShiftRat_C_AbilityActivated");
static_assert(sizeof(GA_ShapeShiftRat_C_AbilityActivated) == 0x0000B0, "Wrong size on GA_ShapeShiftRat_C_AbilityActivated");
static_assert(offsetof(GA_ShapeShiftRat_C_AbilityActivated, TriggerEventData) == 0x000000, "Member 'GA_ShapeShiftRat_C_AbilityActivated::TriggerEventData' has a wrong offset!");

// Function GA_ShapeShiftRat.GA_ShapeShiftRat_C.ExecuteUbergraph_GA_ShapeShiftRat
// 0x0108 (0x0108 - 0x0000)
struct GA_ShapeShiftRat_C_ExecuteUbergraph_GA_ShapeShiftRat final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4E07[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayEventData                     K2Node_Event_TriggerEventData;                     // 0x0018(0x00B0)(ConstParm)
	bool                                          CallFunc_K2_HasAuthority_ReturnValue;              // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4E08[0x3];                                     // 0x00C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetConstantFloat_ReturnValue;             // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetConstantFloat_ReturnValue_1;           // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4E09[0x4];                                     // 0x00D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_RandomFloatInRange_ReturnValue;           // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAbilityTask_WaitDelay*                 CallFunc_WaitDelay_ReturnValue;                    // 0x00E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4E0A[0x7];                                     // 0x00E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_RandomFloatInRange_Min_ImplicitCast;      // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_RandomFloatInRange_Max_ImplicitCast;      // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_WaitDelay_Time_ImplicitCast;              // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_ShapeShiftRat_C_ExecuteUbergraph_GA_ShapeShiftRat) == 0x000008, "Wrong alignment on GA_ShapeShiftRat_C_ExecuteUbergraph_GA_ShapeShiftRat");
static_assert(sizeof(GA_ShapeShiftRat_C_ExecuteUbergraph_GA_ShapeShiftRat) == 0x000108, "Wrong size on GA_ShapeShiftRat_C_ExecuteUbergraph_GA_ShapeShiftRat");
static_assert(offsetof(GA_ShapeShiftRat_C_ExecuteUbergraph_GA_ShapeShiftRat, EntryPoint) == 0x000000, "Member 'GA_ShapeShiftRat_C_ExecuteUbergraph_GA_ShapeShiftRat::EntryPoint' has a wrong offset!");
static_assert(offsetof(GA_ShapeShiftRat_C_ExecuteUbergraph_GA_ShapeShiftRat, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'GA_ShapeShiftRat_C_ExecuteUbergraph_GA_ShapeShiftRat::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(GA_ShapeShiftRat_C_ExecuteUbergraph_GA_ShapeShiftRat, K2Node_Event_TriggerEventData) == 0x000018, "Member 'GA_ShapeShiftRat_C_ExecuteUbergraph_GA_ShapeShiftRat::K2Node_Event_TriggerEventData' has a wrong offset!");
static_assert(offsetof(GA_ShapeShiftRat_C_ExecuteUbergraph_GA_ShapeShiftRat, CallFunc_K2_HasAuthority_ReturnValue) == 0x0000C8, "Member 'GA_ShapeShiftRat_C_ExecuteUbergraph_GA_ShapeShiftRat::CallFunc_K2_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_ShapeShiftRat_C_ExecuteUbergraph_GA_ShapeShiftRat, CallFunc_GetConstantFloat_ReturnValue) == 0x0000CC, "Member 'GA_ShapeShiftRat_C_ExecuteUbergraph_GA_ShapeShiftRat::CallFunc_GetConstantFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_ShapeShiftRat_C_ExecuteUbergraph_GA_ShapeShiftRat, CallFunc_GetConstantFloat_ReturnValue_1) == 0x0000D0, "Member 'GA_ShapeShiftRat_C_ExecuteUbergraph_GA_ShapeShiftRat::CallFunc_GetConstantFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_ShapeShiftRat_C_ExecuteUbergraph_GA_ShapeShiftRat, CallFunc_RandomFloatInRange_ReturnValue) == 0x0000D8, "Member 'GA_ShapeShiftRat_C_ExecuteUbergraph_GA_ShapeShiftRat::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_ShapeShiftRat_C_ExecuteUbergraph_GA_ShapeShiftRat, CallFunc_WaitDelay_ReturnValue) == 0x0000E0, "Member 'GA_ShapeShiftRat_C_ExecuteUbergraph_GA_ShapeShiftRat::CallFunc_WaitDelay_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_ShapeShiftRat_C_ExecuteUbergraph_GA_ShapeShiftRat, CallFunc_IsValid_ReturnValue) == 0x0000E8, "Member 'GA_ShapeShiftRat_C_ExecuteUbergraph_GA_ShapeShiftRat::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_ShapeShiftRat_C_ExecuteUbergraph_GA_ShapeShiftRat, CallFunc_RandomFloatInRange_Min_ImplicitCast) == 0x0000F0, "Member 'GA_ShapeShiftRat_C_ExecuteUbergraph_GA_ShapeShiftRat::CallFunc_RandomFloatInRange_Min_ImplicitCast' has a wrong offset!");
static_assert(offsetof(GA_ShapeShiftRat_C_ExecuteUbergraph_GA_ShapeShiftRat, CallFunc_RandomFloatInRange_Max_ImplicitCast) == 0x0000F8, "Member 'GA_ShapeShiftRat_C_ExecuteUbergraph_GA_ShapeShiftRat::CallFunc_RandomFloatInRange_Max_ImplicitCast' has a wrong offset!");
static_assert(offsetof(GA_ShapeShiftRat_C_ExecuteUbergraph_GA_ShapeShiftRat, CallFunc_WaitDelay_Time_ImplicitCast) == 0x000100, "Member 'GA_ShapeShiftRat_C_ExecuteUbergraph_GA_ShapeShiftRat::CallFunc_WaitDelay_Time_ImplicitCast' has a wrong offset!");

}

