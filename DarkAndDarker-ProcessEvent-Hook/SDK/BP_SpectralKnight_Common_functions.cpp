#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_SpectralKnight_Common

#include "Basic.hpp"

#include "BP_SpectralKnight_Common_classes.hpp"
#include "BP_SpectralKnight_Common_parameters.hpp"


namespace SDK
{

// Function BP_SpectralKnight_Common.BP_SpectralKnight_Common_C.Activate Material__FinishedFunc
// (BlueprintEvent)

void ABP_SpectralKnight_Common_C::Activate_Material__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SpectralKnight_Common_C", "Activate Material__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SpectralKnight_Common.BP_SpectralKnight_Common_C.Activate Material__UpdateFunc
// (BlueprintEvent)

void ABP_SpectralKnight_Common_C::Activate_Material__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SpectralKnight_Common_C", "Activate Material__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SpectralKnight_Common.BP_SpectralKnight_Common_C.Activate Mode
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void ABP_SpectralKnight_Common_C::Activate_Mode()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SpectralKnight_Common_C", "Activate Mode");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SpectralKnight_Common.BP_SpectralKnight_Common_C.Add Phase
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Min                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Max                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_SpectralKnight_Common_C::Add_Phase(int32 Min, int32 Max)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SpectralKnight_Common_C", "Add Phase");

	Params::BP_SpectralKnight_Common_C_Add_Phase Parms{};

	Parms.Min = Min;
	Parms.Max = Max;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SpectralKnight_Common.BP_SpectralKnight_Common_C.Buff Movespeed Off_FastMove
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_SpectralKnight_Common_C::Buff_Movespeed_Off_FastMove()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SpectralKnight_Common_C", "Buff Movespeed Off_FastMove");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SpectralKnight_Common.BP_SpectralKnight_Common_C.Buff Movespeed On_FastMove
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_SpectralKnight_Common_C::Buff_Movespeed_On_FastMove()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SpectralKnight_Common_C", "Buff Movespeed On_FastMove");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SpectralKnight_Common.BP_SpectralKnight_Common_C.Buff Movespeed Special On_FastMove
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_SpectralKnight_Common_C::Buff_Movespeed_Special_On_FastMove()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SpectralKnight_Common_C", "Buff Movespeed Special On_FastMove");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SpectralKnight_Common.BP_SpectralKnight_Common_C.Combat Activated
// (BlueprintCallable, BlueprintEvent)

void ABP_SpectralKnight_Common_C::Combat_Activated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SpectralKnight_Common_C", "Combat Activated");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SpectralKnight_Common.BP_SpectralKnight_Common_C.Comeback Activated
// (BlueprintCallable, BlueprintEvent)

void ABP_SpectralKnight_Common_C::Comeback_Activated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SpectralKnight_Common_C", "Comeback Activated");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SpectralKnight_Common.BP_SpectralKnight_Common_C.Deactivate Mode
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsStanceOne                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_SpectralKnight_Common_C::Deactivate_Mode(bool IsStanceOne)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SpectralKnight_Common_C", "Deactivate Mode");

	Params::BP_SpectralKnight_Common_C_Deactivate_Mode Parms{};

	Parms.IsStanceOne = IsStanceOne;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SpectralKnight_Common.BP_SpectralKnight_Common_C.Death Deactivate Mode
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void ABP_SpectralKnight_Common_C::Death_Deactivate_Mode()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SpectralKnight_Common_C", "Death Deactivate Mode");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SpectralKnight_Common.BP_SpectralKnight_Common_C.DeBuff Movespeed Off
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_SpectralKnight_Common_C::DeBuff_Movespeed_Off()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SpectralKnight_Common_C", "DeBuff Movespeed Off");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SpectralKnight_Common.BP_SpectralKnight_Common_C.DeBuff Movespeed On
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_SpectralKnight_Common_C::DeBuff_Movespeed_On()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SpectralKnight_Common_C", "DeBuff Movespeed On");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SpectralKnight_Common.BP_SpectralKnight_Common_C.EventReceived_B758205543C6D19694C2D7B254391CB6
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGameplayEventData               Payload                                                (BlueprintVisible, BlueprintReadOnly, Parm)

void ABP_SpectralKnight_Common_C::EventReceived_B758205543C6D19694C2D7B254391CB6(const struct FGameplayEventData& Payload)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SpectralKnight_Common_C", "EventReceived_B758205543C6D19694C2D7B254391CB6");

	Params::BP_SpectralKnight_Common_C_EventReceived_B758205543C6D19694C2D7B254391CB6 Parms{};

	Parms.Payload = std::move(Payload);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SpectralKnight_Common.BP_SpectralKnight_Common_C.EventReceived_CB8D307649B85F0BEA1A97886359A65F
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGameplayEventData               Payload                                                (BlueprintVisible, BlueprintReadOnly, Parm)

void ABP_SpectralKnight_Common_C::EventReceived_CB8D307649B85F0BEA1A97886359A65F(const struct FGameplayEventData& Payload)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SpectralKnight_Common_C", "EventReceived_CB8D307649B85F0BEA1A97886359A65F");

	Params::BP_SpectralKnight_Common_C_EventReceived_CB8D307649B85F0BEA1A97886359A65F Parms{};

	Parms.Payload = std::move(Payload);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SpectralKnight_Common.BP_SpectralKnight_Common_C.EventReceived_FCB2D1EC4EC93BA51FA0559CB81ACC48
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGameplayEventData               Payload                                                (BlueprintVisible, BlueprintReadOnly, Parm)

void ABP_SpectralKnight_Common_C::EventReceived_FCB2D1EC4EC93BA51FA0559CB81ACC48(const struct FGameplayEventData& Payload)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SpectralKnight_Common_C", "EventReceived_FCB2D1EC4EC93BA51FA0559CB81ACC48");

	Params::BP_SpectralKnight_Common_C_EventReceived_FCB2D1EC4EC93BA51FA0559CB81ACC48 Parms{};

	Parms.Payload = std::move(Payload);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SpectralKnight_Common.BP_SpectralKnight_Common_C.ExecuteUbergraph_BP_SpectralKnight_Common
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_SpectralKnight_Common_C::ExecuteUbergraph_BP_SpectralKnight_Common(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SpectralKnight_Common_C", "ExecuteUbergraph_BP_SpectralKnight_Common");

	Params::BP_SpectralKnight_Common_C_ExecuteUbergraph_BP_SpectralKnight_Common Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SpectralKnight_Common.BP_SpectralKnight_Common_C.FastMove OFF
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void ABP_SpectralKnight_Common_C::FastMove_OFF()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SpectralKnight_Common_C", "FastMove OFF");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SpectralKnight_Common.BP_SpectralKnight_Common_C.FastMove ON
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void ABP_SpectralKnight_Common_C::FastMove_ON()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SpectralKnight_Common_C", "FastMove ON");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SpectralKnight_Common.BP_SpectralKnight_Common_C.Filter Enemies On Center Of Combat Area
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class ADCCharacterBase*>         DCCharacterBase                                        (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void ABP_SpectralKnight_Common_C::Filter_Enemies_On_Center_Of_Combat_Area(TArray<class ADCCharacterBase*>& DCCharacterBase)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SpectralKnight_Common_C", "Filter Enemies On Center Of Combat Area");

	Params::BP_SpectralKnight_Common_C_Filter_Enemies_On_Center_Of_Combat_Area Parms{};

	Parms.DCCharacterBase = std::move(DCCharacterBase);

	UObject::ProcessEvent(Func, &Parms);

	DCCharacterBase = std::move(Parms.DCCharacterBase);
}


// Function BP_SpectralKnight_Common.BP_SpectralKnight_Common_C.GameplayTagUpdated
// (Event, Protected, BlueprintEvent)
// Parameters:
// struct FGameplayTag                     InGameplayTag                                          (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// int32                                   InCount                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_SpectralKnight_Common_C::GameplayTagUpdated(const struct FGameplayTag& InGameplayTag, int32 InCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SpectralKnight_Common_C", "GameplayTagUpdated");

	Params::BP_SpectralKnight_Common_C_GameplayTagUpdated Parms{};

	Parms.InGameplayTag = std::move(InGameplayTag);
	Parms.InCount = InCount;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SpectralKnight_Common.BP_SpectralKnight_Common_C.Get Melee Attack Overlapped Targets
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class ADCCharacterBase*>         Overlapped_Targets                                     (Parm, OutParm)

void ABP_SpectralKnight_Common_C::Get_Melee_Attack_Overlapped_Targets(TArray<class ADCCharacterBase*>* Overlapped_Targets)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SpectralKnight_Common_C", "Get Melee Attack Overlapped Targets");

	Params::BP_SpectralKnight_Common_C_Get_Melee_Attack_Overlapped_Targets Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Overlapped_Targets != nullptr)
		*Overlapped_Targets = std::move(Parms.Overlapped_Targets);
}


// Function BP_SpectralKnight_Common.BP_SpectralKnight_Common_C.Get Overlap Weight From Target
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// double                                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  ReturnValue2                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

double ABP_SpectralKnight_Common_C::Get_Overlap_Weight_From_Target(class AActor* OtherActor, double* ReturnValue2)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SpectralKnight_Common_C", "Get Overlap Weight From Target");

	Params::BP_SpectralKnight_Common_C_Get_Overlap_Weight_From_Target Parms{};

	Parms.OtherActor = OtherActor;

	UObject::ProcessEvent(Func, &Parms);

	if (ReturnValue2 != nullptr)
		*ReturnValue2 = Parms.ReturnValue2;

	return Parms.ReturnValue;
}


// Function BP_SpectralKnight_Common.BP_SpectralKnight_Common_C.Get Possible to Use Next Combo
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGameplayTag                     Param_Next_Combo_Trigger_Tag                           (Parm, OutParm, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<class ADCCharacterBase*>         DCCharacter_Base                                       (Parm, OutParm)

bool ABP_SpectralKnight_Common_C::Get_Possible_to_Use_Next_Combo(struct FGameplayTag* Param_Next_Combo_Trigger_Tag, TArray<class ADCCharacterBase*>* DCCharacter_Base)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SpectralKnight_Common_C", "Get Possible to Use Next Combo");

	Params::BP_SpectralKnight_Common_C_Get_Possible_to_Use_Next_Combo Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Param_Next_Combo_Trigger_Tag != nullptr)
		*Param_Next_Combo_Trigger_Tag = std::move(Parms.Param_Next_Combo_Trigger_Tag);

	if (DCCharacter_Base != nullptr)
		*DCCharacter_Base = std::move(Parms.DCCharacter_Base);

	return Parms.ReturnValue;
}


// Function BP_SpectralKnight_Common.BP_SpectralKnight_Common_C.OnFMsgGASAttributeNotifyBlueprint
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// struct FMsgGASAttributeNotify           InMsg                                                  (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)

void ABP_SpectralKnight_Common_C::OnFMsgGASAttributeNotifyBlueprint(const struct FMsgGASAttributeNotify& InMsg)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SpectralKnight_Common_C", "OnFMsgGASAttributeNotifyBlueprint");

	Params::BP_SpectralKnight_Common_C_OnFMsgGASAttributeNotifyBlueprint Parms{};

	Parms.InMsg = std::move(InMsg);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SpectralKnight_Common.BP_SpectralKnight_Common_C.OnSetAI
// (Event, Protected, BlueprintEvent)

void ABP_SpectralKnight_Common_C::OnSetAI()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SpectralKnight_Common_C", "OnSetAI");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SpectralKnight_Common.BP_SpectralKnight_Common_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_SpectralKnight_Common_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SpectralKnight_Common_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SpectralKnight_Common.BP_SpectralKnight_Common_C.Remove Phase Count
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_SpectralKnight_Common_C::Remove_Phase_Count()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SpectralKnight_Common_C", "Remove Phase Count");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SpectralKnight_Common.BP_SpectralKnight_Common_C.RushThrust Power Distance Value
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  A                                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Return_Value                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_SpectralKnight_Common_C::RushThrust_Power_Distance_Value(double A, double* Return_Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SpectralKnight_Common_C", "RushThrust Power Distance Value");

	Params::BP_SpectralKnight_Common_C_RushThrust_Power_Distance_Value Parms{};

	Parms.A = A;

	UObject::ProcessEvent(Func, &Parms);

	if (Return_Value != nullptr)
		*Return_Value = Parms.Return_Value;
}


// Function BP_SpectralKnight_Common.BP_SpectralKnight_Common_C.TriggerChaos
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             Socket                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Radius                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Magnitude                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          OffsetInBoneSpace                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_SpectralKnight_Common_C::TriggerChaos(class FName Socket, double Radius, double Magnitude, const struct FVector& OffsetInBoneSpace)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SpectralKnight_Common_C", "TriggerChaos");

	Params::BP_SpectralKnight_Common_C_TriggerChaos Parms{};

	Parms.Socket = Socket;
	Parms.Radius = Radius;
	Parms.Magnitude = Magnitude;
	Parms.OffsetInBoneSpace = std::move(OffsetInBoneSpace);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SpectralKnight_Common.BP_SpectralKnight_Common_C.TriggerChaosTest
// (BlueprintCallable, BlueprintEvent)

void ABP_SpectralKnight_Common_C::TriggerChaosTest()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SpectralKnight_Common_C", "TriggerChaosTest");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SpectralKnight_Common.BP_SpectralKnight_Common_C.UserConstructionScript
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ABP_SpectralKnight_Common_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SpectralKnight_Common_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}

}

