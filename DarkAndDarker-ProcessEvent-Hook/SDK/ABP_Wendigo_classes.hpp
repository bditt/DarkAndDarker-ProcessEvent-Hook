#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ABP_Wendigo

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "ABP_Wendigo_structs.hpp"
#include "AnimGraphRuntime_structs.hpp"
#include "KawaiiPhysics_structs.hpp"
#include "DungeonCrawler_classes.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass ABP_Wendigo.ABP_Wendigo_C
// 0x1BC0 (0x20F0 - 0x0530)
class UABP_Wendigo_C final : public UDCMonsterAnimInstanceBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0530(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct ABP_Wendigo::FAnimBlueprintGeneratedMutableData __AnimBlueprintMutables;                           // 0x0538(0x000C)(HasGetValueTypeHash)
	uint8                                         Pad_59C3[0x4];                                     // 0x0544(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_PropertyAccess;             // 0x0548(0x0008)()
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_Base;                       // 0x0550(0x0008)()
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x0558(0x0020)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_6;                  // 0x0578(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_5;                  // 0x05A0(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_3;                    // 0x05C8(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_4;                       // 0x0610(0x0020)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer;                    // 0x0630(0x0070)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_3;                       // 0x06A0(0x0020)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine_1;                      // 0x06C0(0x00C8)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_4;                  // 0x0788(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_3;                  // 0x07B0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_2;                  // 0x07D8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_1;                  // 0x0800(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult;                    // 0x0828(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_6;                     // 0x0850(0x0028)()
	struct FAnimNode_ApplyAdditive                AnimGraphNode_ApplyAdditive_2;                     // 0x0878(0x00C8)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_2;                    // 0x0940(0x0048)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_5;                     // 0x0988(0x0028)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend_1;                  // 0x09B0(0x00F0)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_2;                       // 0x0AA0(0x0020)()
	struct FAnimNode_ApplyAdditive                AnimGraphNode_ApplyAdditive_1;                     // 0x0AC0(0x00C8)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_4;                     // 0x0B88(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_1;                    // 0x0BB0(0x0048)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_3;                     // 0x0BF8(0x0028)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend;                    // 0x0C20(0x00F0)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_1;                       // 0x0D10(0x0020)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_2;                     // 0x0D30(0x0028)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult;                         // 0x0D58(0x0020)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine;                        // 0x0D78(0x00C8)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot;                                // 0x0E40(0x0048)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_1;                    // 0x0E88(0x0080)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x0F08(0x0048)()
	struct FAnimNode_ApplyAdditive                AnimGraphNode_ApplyAdditive;                       // 0x0F50(0x00C8)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_1;                     // 0x1018(0x0028)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace;               // 0x1040(0x0020)()
	struct FAnimNode_KawaiiPhysics                AnimGraphNode_KawaiiPhysics_1;                     // 0x1060(0x07A0)()
	struct FAnimNode_KawaiiPhysics                AnimGraphNode_KawaiiPhysics;                       // 0x1800(0x07A0)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace;               // 0x1FA0(0x0020)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose;                       // 0x1FC0(0x0028)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose;                      // 0x1FE8(0x0080)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool;                     // 0x2068(0x0048)()
	bool                                          Doing_BattleCry;                                   // 0x20B0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Do_HitReaction;                                    // 0x20B1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Do_HitReaction_FlipFlop;                           // 0x20B2(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59C4[0x1];                                     // 0x20B3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKawaiiPhysicsSettings                 Kawaii_Physics_Settings_Tongue;                    // 0x20B4(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	struct FKawaiiPhysicsSettings                 Kawaii_Physics_Settings_Heart;                     // 0x20CC(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)

public:
	void AnimGraph(struct FPoseLink* Param_AnimGraph);
	void BlueprintInitializeAnimation();
	void BlueprintThreadSafeUpdateAnimation(float DeltaTime);
	void ExecuteUbergraph_ABP_Wendigo(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ABP_Wendigo_C">();
	}
	static class UABP_Wendigo_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UABP_Wendigo_C>();
	}
};
static_assert(alignof(UABP_Wendigo_C) == 0x000010, "Wrong alignment on UABP_Wendigo_C");
static_assert(sizeof(UABP_Wendigo_C) == 0x0020F0, "Wrong size on UABP_Wendigo_C");
static_assert(offsetof(UABP_Wendigo_C, UberGraphFrame) == 0x000530, "Member 'UABP_Wendigo_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UABP_Wendigo_C, __AnimBlueprintMutables) == 0x000538, "Member 'UABP_Wendigo_C::__AnimBlueprintMutables' has a wrong offset!");
static_assert(offsetof(UABP_Wendigo_C, AnimBlueprintExtension_PropertyAccess) == 0x000548, "Member 'UABP_Wendigo_C::AnimBlueprintExtension_PropertyAccess' has a wrong offset!");
static_assert(offsetof(UABP_Wendigo_C, AnimBlueprintExtension_Base) == 0x000550, "Member 'UABP_Wendigo_C::AnimBlueprintExtension_Base' has a wrong offset!");
static_assert(offsetof(UABP_Wendigo_C, AnimGraphNode_Root) == 0x000558, "Member 'UABP_Wendigo_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UABP_Wendigo_C, AnimGraphNode_TransitionResult_6) == 0x000578, "Member 'UABP_Wendigo_C::AnimGraphNode_TransitionResult_6' has a wrong offset!");
static_assert(offsetof(UABP_Wendigo_C, AnimGraphNode_TransitionResult_5) == 0x0005A0, "Member 'UABP_Wendigo_C::AnimGraphNode_TransitionResult_5' has a wrong offset!");
static_assert(offsetof(UABP_Wendigo_C, AnimGraphNode_SequencePlayer_3) == 0x0005C8, "Member 'UABP_Wendigo_C::AnimGraphNode_SequencePlayer_3' has a wrong offset!");
static_assert(offsetof(UABP_Wendigo_C, AnimGraphNode_StateResult_4) == 0x000610, "Member 'UABP_Wendigo_C::AnimGraphNode_StateResult_4' has a wrong offset!");
static_assert(offsetof(UABP_Wendigo_C, AnimGraphNode_BlendSpacePlayer) == 0x000630, "Member 'UABP_Wendigo_C::AnimGraphNode_BlendSpacePlayer' has a wrong offset!");
static_assert(offsetof(UABP_Wendigo_C, AnimGraphNode_StateResult_3) == 0x0006A0, "Member 'UABP_Wendigo_C::AnimGraphNode_StateResult_3' has a wrong offset!");
static_assert(offsetof(UABP_Wendigo_C, AnimGraphNode_StateMachine_1) == 0x0006C0, "Member 'UABP_Wendigo_C::AnimGraphNode_StateMachine_1' has a wrong offset!");
static_assert(offsetof(UABP_Wendigo_C, AnimGraphNode_TransitionResult_4) == 0x000788, "Member 'UABP_Wendigo_C::AnimGraphNode_TransitionResult_4' has a wrong offset!");
static_assert(offsetof(UABP_Wendigo_C, AnimGraphNode_TransitionResult_3) == 0x0007B0, "Member 'UABP_Wendigo_C::AnimGraphNode_TransitionResult_3' has a wrong offset!");
static_assert(offsetof(UABP_Wendigo_C, AnimGraphNode_TransitionResult_2) == 0x0007D8, "Member 'UABP_Wendigo_C::AnimGraphNode_TransitionResult_2' has a wrong offset!");
static_assert(offsetof(UABP_Wendigo_C, AnimGraphNode_TransitionResult_1) == 0x000800, "Member 'UABP_Wendigo_C::AnimGraphNode_TransitionResult_1' has a wrong offset!");
static_assert(offsetof(UABP_Wendigo_C, AnimGraphNode_TransitionResult) == 0x000828, "Member 'UABP_Wendigo_C::AnimGraphNode_TransitionResult' has a wrong offset!");
static_assert(offsetof(UABP_Wendigo_C, AnimGraphNode_UseCachedPose_6) == 0x000850, "Member 'UABP_Wendigo_C::AnimGraphNode_UseCachedPose_6' has a wrong offset!");
static_assert(offsetof(UABP_Wendigo_C, AnimGraphNode_ApplyAdditive_2) == 0x000878, "Member 'UABP_Wendigo_C::AnimGraphNode_ApplyAdditive_2' has a wrong offset!");
static_assert(offsetof(UABP_Wendigo_C, AnimGraphNode_SequencePlayer_2) == 0x000940, "Member 'UABP_Wendigo_C::AnimGraphNode_SequencePlayer_2' has a wrong offset!");
static_assert(offsetof(UABP_Wendigo_C, AnimGraphNode_UseCachedPose_5) == 0x000988, "Member 'UABP_Wendigo_C::AnimGraphNode_UseCachedPose_5' has a wrong offset!");
static_assert(offsetof(UABP_Wendigo_C, AnimGraphNode_LayeredBoneBlend_1) == 0x0009B0, "Member 'UABP_Wendigo_C::AnimGraphNode_LayeredBoneBlend_1' has a wrong offset!");
static_assert(offsetof(UABP_Wendigo_C, AnimGraphNode_StateResult_2) == 0x000AA0, "Member 'UABP_Wendigo_C::AnimGraphNode_StateResult_2' has a wrong offset!");
static_assert(offsetof(UABP_Wendigo_C, AnimGraphNode_ApplyAdditive_1) == 0x000AC0, "Member 'UABP_Wendigo_C::AnimGraphNode_ApplyAdditive_1' has a wrong offset!");
static_assert(offsetof(UABP_Wendigo_C, AnimGraphNode_UseCachedPose_4) == 0x000B88, "Member 'UABP_Wendigo_C::AnimGraphNode_UseCachedPose_4' has a wrong offset!");
static_assert(offsetof(UABP_Wendigo_C, AnimGraphNode_SequencePlayer_1) == 0x000BB0, "Member 'UABP_Wendigo_C::AnimGraphNode_SequencePlayer_1' has a wrong offset!");
static_assert(offsetof(UABP_Wendigo_C, AnimGraphNode_UseCachedPose_3) == 0x000BF8, "Member 'UABP_Wendigo_C::AnimGraphNode_UseCachedPose_3' has a wrong offset!");
static_assert(offsetof(UABP_Wendigo_C, AnimGraphNode_LayeredBoneBlend) == 0x000C20, "Member 'UABP_Wendigo_C::AnimGraphNode_LayeredBoneBlend' has a wrong offset!");
static_assert(offsetof(UABP_Wendigo_C, AnimGraphNode_StateResult_1) == 0x000D10, "Member 'UABP_Wendigo_C::AnimGraphNode_StateResult_1' has a wrong offset!");
static_assert(offsetof(UABP_Wendigo_C, AnimGraphNode_UseCachedPose_2) == 0x000D30, "Member 'UABP_Wendigo_C::AnimGraphNode_UseCachedPose_2' has a wrong offset!");
static_assert(offsetof(UABP_Wendigo_C, AnimGraphNode_StateResult) == 0x000D58, "Member 'UABP_Wendigo_C::AnimGraphNode_StateResult' has a wrong offset!");
static_assert(offsetof(UABP_Wendigo_C, AnimGraphNode_StateMachine) == 0x000D78, "Member 'UABP_Wendigo_C::AnimGraphNode_StateMachine' has a wrong offset!");
static_assert(offsetof(UABP_Wendigo_C, AnimGraphNode_Slot) == 0x000E40, "Member 'UABP_Wendigo_C::AnimGraphNode_Slot' has a wrong offset!");
static_assert(offsetof(UABP_Wendigo_C, AnimGraphNode_SaveCachedPose_1) == 0x000E88, "Member 'UABP_Wendigo_C::AnimGraphNode_SaveCachedPose_1' has a wrong offset!");
static_assert(offsetof(UABP_Wendigo_C, AnimGraphNode_SequencePlayer) == 0x000F08, "Member 'UABP_Wendigo_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(UABP_Wendigo_C, AnimGraphNode_ApplyAdditive) == 0x000F50, "Member 'UABP_Wendigo_C::AnimGraphNode_ApplyAdditive' has a wrong offset!");
static_assert(offsetof(UABP_Wendigo_C, AnimGraphNode_UseCachedPose_1) == 0x001018, "Member 'UABP_Wendigo_C::AnimGraphNode_UseCachedPose_1' has a wrong offset!");
static_assert(offsetof(UABP_Wendigo_C, AnimGraphNode_LocalToComponentSpace) == 0x001040, "Member 'UABP_Wendigo_C::AnimGraphNode_LocalToComponentSpace' has a wrong offset!");
static_assert(offsetof(UABP_Wendigo_C, AnimGraphNode_KawaiiPhysics_1) == 0x001060, "Member 'UABP_Wendigo_C::AnimGraphNode_KawaiiPhysics_1' has a wrong offset!");
static_assert(offsetof(UABP_Wendigo_C, AnimGraphNode_KawaiiPhysics) == 0x001800, "Member 'UABP_Wendigo_C::AnimGraphNode_KawaiiPhysics' has a wrong offset!");
static_assert(offsetof(UABP_Wendigo_C, AnimGraphNode_ComponentToLocalSpace) == 0x001FA0, "Member 'UABP_Wendigo_C::AnimGraphNode_ComponentToLocalSpace' has a wrong offset!");
static_assert(offsetof(UABP_Wendigo_C, AnimGraphNode_UseCachedPose) == 0x001FC0, "Member 'UABP_Wendigo_C::AnimGraphNode_UseCachedPose' has a wrong offset!");
static_assert(offsetof(UABP_Wendigo_C, AnimGraphNode_SaveCachedPose) == 0x001FE8, "Member 'UABP_Wendigo_C::AnimGraphNode_SaveCachedPose' has a wrong offset!");
static_assert(offsetof(UABP_Wendigo_C, AnimGraphNode_BlendListByBool) == 0x002068, "Member 'UABP_Wendigo_C::AnimGraphNode_BlendListByBool' has a wrong offset!");
static_assert(offsetof(UABP_Wendigo_C, Doing_BattleCry) == 0x0020B0, "Member 'UABP_Wendigo_C::Doing_BattleCry' has a wrong offset!");
static_assert(offsetof(UABP_Wendigo_C, Do_HitReaction) == 0x0020B1, "Member 'UABP_Wendigo_C::Do_HitReaction' has a wrong offset!");
static_assert(offsetof(UABP_Wendigo_C, Do_HitReaction_FlipFlop) == 0x0020B2, "Member 'UABP_Wendigo_C::Do_HitReaction_FlipFlop' has a wrong offset!");
static_assert(offsetof(UABP_Wendigo_C, Kawaii_Physics_Settings_Tongue) == 0x0020B4, "Member 'UABP_Wendigo_C::Kawaii_Physics_Settings_Tongue' has a wrong offset!");
static_assert(offsetof(UABP_Wendigo_C, Kawaii_Physics_Settings_Heart) == 0x0020CC, "Member 'UABP_Wendigo_C::Kawaii_Physics_Settings_Heart' has a wrong offset!");

}

