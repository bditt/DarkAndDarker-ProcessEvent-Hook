#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BTT_FrostElemental_MoveToTarget

#include "Basic.hpp"

#include "AIModule_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BTT_FrostElemental_MoveToTarget.BTT_FrostElemental_MoveToTarget_C.ExecuteUbergraph_BTT_FrostElemental_MoveToTarget
// 0x00E0 (0x00E0 - 0x0000)
struct BTT_FrostElemental_MoveToTarget_C_ExecuteUbergraph_BTT_FrostElemental_MoveToTarget final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPathFollowingResult                          K2Node_CustomEvent_MovementResult_1;               // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPathFollowingResult                          K2Node_CustomEvent_MovementResult;                 // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C6C[0x2];                                     // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(EPathFollowingResult MovementResult)> K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EPathFollowingResult                          Temp_byte_Variable;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C6D[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AAIController*                          K2Node_Event_OwnerController_1;                    // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_ControlledPawn_1;                     // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_MakeLiteralName_ReturnValue;              // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_FrostElemental_C*                   K2Node_DynamicCast_AsBP_Frost_Elemental;           // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C6E[0x3];                                     // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0044(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C6F[0x4];                                     // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBlackboardComponent*                   CallFunc_GetBlackboard_ReturnValue;                // 0x0058(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UAIAsyncTaskBlueprintProxy*             CallFunc_CreateMoveToProxyObject_ReturnValue;      // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_GetValueAsObject_ReturnValue;             // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ADCPlayerCharacterBase*                 K2Node_DynamicCast_AsDCPlayer_Character_Base;      // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C70[0x6];                                     // 0x007A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0088(0x0008)(NoDestructor, HasGetValueTypeHash)
	class AAIController*                          K2Node_Event_OwnerController;                      // 0x0090(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_ControlledPawn;                       // 0x0098(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EBTNodeResult                                 K2Node_Event_TaskResult;                           // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C71[0x2];                                     // 0x00A2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetHorizontalDistanceTo_ReturnValue;      // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C72[0x3];                                     // 0x00A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(EPathFollowingResult MovementResult)> K2Node_CreateDelegate_OutputDelegate_2;            // 0x00AC(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C73[0x4];                                     // 0x00BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AAIController*                          CallFunc_GetAIController_ReturnValue;              // 0x00C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AAIController*                          CallFunc_GetAIController_ReturnValue_1;            // 0x00C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_CreateMoveToProxyObject_AcceptanceRadius_ImplicitCast; // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_K2_SetTimerDelegate_Time_ImplicitCast;    // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Less_DoubleDouble_A_ImplicitCast;         // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTT_FrostElemental_MoveToTarget_C_ExecuteUbergraph_BTT_FrostElemental_MoveToTarget) == 0x000008, "Wrong alignment on BTT_FrostElemental_MoveToTarget_C_ExecuteUbergraph_BTT_FrostElemental_MoveToTarget");
static_assert(sizeof(BTT_FrostElemental_MoveToTarget_C_ExecuteUbergraph_BTT_FrostElemental_MoveToTarget) == 0x0000E0, "Wrong size on BTT_FrostElemental_MoveToTarget_C_ExecuteUbergraph_BTT_FrostElemental_MoveToTarget");
static_assert(offsetof(BTT_FrostElemental_MoveToTarget_C_ExecuteUbergraph_BTT_FrostElemental_MoveToTarget, EntryPoint) == 0x000000, "Member 'BTT_FrostElemental_MoveToTarget_C_ExecuteUbergraph_BTT_FrostElemental_MoveToTarget::EntryPoint' has a wrong offset!");
static_assert(offsetof(BTT_FrostElemental_MoveToTarget_C_ExecuteUbergraph_BTT_FrostElemental_MoveToTarget, K2Node_CustomEvent_MovementResult_1) == 0x000004, "Member 'BTT_FrostElemental_MoveToTarget_C_ExecuteUbergraph_BTT_FrostElemental_MoveToTarget::K2Node_CustomEvent_MovementResult_1' has a wrong offset!");
static_assert(offsetof(BTT_FrostElemental_MoveToTarget_C_ExecuteUbergraph_BTT_FrostElemental_MoveToTarget, K2Node_CustomEvent_MovementResult) == 0x000005, "Member 'BTT_FrostElemental_MoveToTarget_C_ExecuteUbergraph_BTT_FrostElemental_MoveToTarget::K2Node_CustomEvent_MovementResult' has a wrong offset!");
static_assert(offsetof(BTT_FrostElemental_MoveToTarget_C_ExecuteUbergraph_BTT_FrostElemental_MoveToTarget, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'BTT_FrostElemental_MoveToTarget_C_ExecuteUbergraph_BTT_FrostElemental_MoveToTarget::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BTT_FrostElemental_MoveToTarget_C_ExecuteUbergraph_BTT_FrostElemental_MoveToTarget, Temp_byte_Variable) == 0x000018, "Member 'BTT_FrostElemental_MoveToTarget_C_ExecuteUbergraph_BTT_FrostElemental_MoveToTarget::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BTT_FrostElemental_MoveToTarget_C_ExecuteUbergraph_BTT_FrostElemental_MoveToTarget, K2Node_Event_OwnerController_1) == 0x000020, "Member 'BTT_FrostElemental_MoveToTarget_C_ExecuteUbergraph_BTT_FrostElemental_MoveToTarget::K2Node_Event_OwnerController_1' has a wrong offset!");
static_assert(offsetof(BTT_FrostElemental_MoveToTarget_C_ExecuteUbergraph_BTT_FrostElemental_MoveToTarget, K2Node_Event_ControlledPawn_1) == 0x000028, "Member 'BTT_FrostElemental_MoveToTarget_C_ExecuteUbergraph_BTT_FrostElemental_MoveToTarget::K2Node_Event_ControlledPawn_1' has a wrong offset!");
static_assert(offsetof(BTT_FrostElemental_MoveToTarget_C_ExecuteUbergraph_BTT_FrostElemental_MoveToTarget, CallFunc_MakeLiteralName_ReturnValue) == 0x000030, "Member 'BTT_FrostElemental_MoveToTarget_C_ExecuteUbergraph_BTT_FrostElemental_MoveToTarget::CallFunc_MakeLiteralName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_FrostElemental_MoveToTarget_C_ExecuteUbergraph_BTT_FrostElemental_MoveToTarget, K2Node_DynamicCast_AsBP_Frost_Elemental) == 0x000038, "Member 'BTT_FrostElemental_MoveToTarget_C_ExecuteUbergraph_BTT_FrostElemental_MoveToTarget::K2Node_DynamicCast_AsBP_Frost_Elemental' has a wrong offset!");
static_assert(offsetof(BTT_FrostElemental_MoveToTarget_C_ExecuteUbergraph_BTT_FrostElemental_MoveToTarget, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'BTT_FrostElemental_MoveToTarget_C_ExecuteUbergraph_BTT_FrostElemental_MoveToTarget::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BTT_FrostElemental_MoveToTarget_C_ExecuteUbergraph_BTT_FrostElemental_MoveToTarget, K2Node_CreateDelegate_OutputDelegate_1) == 0x000044, "Member 'BTT_FrostElemental_MoveToTarget_C_ExecuteUbergraph_BTT_FrostElemental_MoveToTarget::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BTT_FrostElemental_MoveToTarget_C_ExecuteUbergraph_BTT_FrostElemental_MoveToTarget, CallFunc_GetBlackboard_ReturnValue) == 0x000058, "Member 'BTT_FrostElemental_MoveToTarget_C_ExecuteUbergraph_BTT_FrostElemental_MoveToTarget::CallFunc_GetBlackboard_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_FrostElemental_MoveToTarget_C_ExecuteUbergraph_BTT_FrostElemental_MoveToTarget, CallFunc_CreateMoveToProxyObject_ReturnValue) == 0x000060, "Member 'BTT_FrostElemental_MoveToTarget_C_ExecuteUbergraph_BTT_FrostElemental_MoveToTarget::CallFunc_CreateMoveToProxyObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_FrostElemental_MoveToTarget_C_ExecuteUbergraph_BTT_FrostElemental_MoveToTarget, CallFunc_GetValueAsObject_ReturnValue) == 0x000068, "Member 'BTT_FrostElemental_MoveToTarget_C_ExecuteUbergraph_BTT_FrostElemental_MoveToTarget::CallFunc_GetValueAsObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_FrostElemental_MoveToTarget_C_ExecuteUbergraph_BTT_FrostElemental_MoveToTarget, K2Node_DynamicCast_AsDCPlayer_Character_Base) == 0x000070, "Member 'BTT_FrostElemental_MoveToTarget_C_ExecuteUbergraph_BTT_FrostElemental_MoveToTarget::K2Node_DynamicCast_AsDCPlayer_Character_Base' has a wrong offset!");
static_assert(offsetof(BTT_FrostElemental_MoveToTarget_C_ExecuteUbergraph_BTT_FrostElemental_MoveToTarget, K2Node_DynamicCast_bSuccess_1) == 0x000078, "Member 'BTT_FrostElemental_MoveToTarget_C_ExecuteUbergraph_BTT_FrostElemental_MoveToTarget::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BTT_FrostElemental_MoveToTarget_C_ExecuteUbergraph_BTT_FrostElemental_MoveToTarget, CallFunc_IsValid_ReturnValue) == 0x000079, "Member 'BTT_FrostElemental_MoveToTarget_C_ExecuteUbergraph_BTT_FrostElemental_MoveToTarget::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_FrostElemental_MoveToTarget_C_ExecuteUbergraph_BTT_FrostElemental_MoveToTarget, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x000080, "Member 'BTT_FrostElemental_MoveToTarget_C_ExecuteUbergraph_BTT_FrostElemental_MoveToTarget::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_FrostElemental_MoveToTarget_C_ExecuteUbergraph_BTT_FrostElemental_MoveToTarget, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000088, "Member 'BTT_FrostElemental_MoveToTarget_C_ExecuteUbergraph_BTT_FrostElemental_MoveToTarget::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_FrostElemental_MoveToTarget_C_ExecuteUbergraph_BTT_FrostElemental_MoveToTarget, K2Node_Event_OwnerController) == 0x000090, "Member 'BTT_FrostElemental_MoveToTarget_C_ExecuteUbergraph_BTT_FrostElemental_MoveToTarget::K2Node_Event_OwnerController' has a wrong offset!");
static_assert(offsetof(BTT_FrostElemental_MoveToTarget_C_ExecuteUbergraph_BTT_FrostElemental_MoveToTarget, K2Node_Event_ControlledPawn) == 0x000098, "Member 'BTT_FrostElemental_MoveToTarget_C_ExecuteUbergraph_BTT_FrostElemental_MoveToTarget::K2Node_Event_ControlledPawn' has a wrong offset!");
static_assert(offsetof(BTT_FrostElemental_MoveToTarget_C_ExecuteUbergraph_BTT_FrostElemental_MoveToTarget, K2Node_Event_TaskResult) == 0x0000A0, "Member 'BTT_FrostElemental_MoveToTarget_C_ExecuteUbergraph_BTT_FrostElemental_MoveToTarget::K2Node_Event_TaskResult' has a wrong offset!");
static_assert(offsetof(BTT_FrostElemental_MoveToTarget_C_ExecuteUbergraph_BTT_FrostElemental_MoveToTarget, CallFunc_IsValid_ReturnValue_1) == 0x0000A1, "Member 'BTT_FrostElemental_MoveToTarget_C_ExecuteUbergraph_BTT_FrostElemental_MoveToTarget::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BTT_FrostElemental_MoveToTarget_C_ExecuteUbergraph_BTT_FrostElemental_MoveToTarget, CallFunc_GetHorizontalDistanceTo_ReturnValue) == 0x0000A4, "Member 'BTT_FrostElemental_MoveToTarget_C_ExecuteUbergraph_BTT_FrostElemental_MoveToTarget::CallFunc_GetHorizontalDistanceTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_FrostElemental_MoveToTarget_C_ExecuteUbergraph_BTT_FrostElemental_MoveToTarget, CallFunc_Less_DoubleDouble_ReturnValue) == 0x0000A8, "Member 'BTT_FrostElemental_MoveToTarget_C_ExecuteUbergraph_BTT_FrostElemental_MoveToTarget::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_FrostElemental_MoveToTarget_C_ExecuteUbergraph_BTT_FrostElemental_MoveToTarget, K2Node_CreateDelegate_OutputDelegate_2) == 0x0000AC, "Member 'BTT_FrostElemental_MoveToTarget_C_ExecuteUbergraph_BTT_FrostElemental_MoveToTarget::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(BTT_FrostElemental_MoveToTarget_C_ExecuteUbergraph_BTT_FrostElemental_MoveToTarget, CallFunc_GetAIController_ReturnValue) == 0x0000C0, "Member 'BTT_FrostElemental_MoveToTarget_C_ExecuteUbergraph_BTT_FrostElemental_MoveToTarget::CallFunc_GetAIController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_FrostElemental_MoveToTarget_C_ExecuteUbergraph_BTT_FrostElemental_MoveToTarget, CallFunc_GetAIController_ReturnValue_1) == 0x0000C8, "Member 'BTT_FrostElemental_MoveToTarget_C_ExecuteUbergraph_BTT_FrostElemental_MoveToTarget::CallFunc_GetAIController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BTT_FrostElemental_MoveToTarget_C_ExecuteUbergraph_BTT_FrostElemental_MoveToTarget, CallFunc_CreateMoveToProxyObject_AcceptanceRadius_ImplicitCast) == 0x0000D0, "Member 'BTT_FrostElemental_MoveToTarget_C_ExecuteUbergraph_BTT_FrostElemental_MoveToTarget::CallFunc_CreateMoveToProxyObject_AcceptanceRadius_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BTT_FrostElemental_MoveToTarget_C_ExecuteUbergraph_BTT_FrostElemental_MoveToTarget, CallFunc_K2_SetTimerDelegate_Time_ImplicitCast) == 0x0000D4, "Member 'BTT_FrostElemental_MoveToTarget_C_ExecuteUbergraph_BTT_FrostElemental_MoveToTarget::CallFunc_K2_SetTimerDelegate_Time_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BTT_FrostElemental_MoveToTarget_C_ExecuteUbergraph_BTT_FrostElemental_MoveToTarget, CallFunc_Less_DoubleDouble_A_ImplicitCast) == 0x0000D8, "Member 'BTT_FrostElemental_MoveToTarget_C_ExecuteUbergraph_BTT_FrostElemental_MoveToTarget::CallFunc_Less_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function BTT_FrostElemental_MoveToTarget.BTT_FrostElemental_MoveToTarget_C.OnFail_F3F3009B48DF8435B5ECC39D93FB3962
// 0x0001 (0x0001 - 0x0000)
struct BTT_FrostElemental_MoveToTarget_C_OnFail_F3F3009B48DF8435B5ECC39D93FB3962 final
{
public:
	EPathFollowingResult                          MovementResult;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTT_FrostElemental_MoveToTarget_C_OnFail_F3F3009B48DF8435B5ECC39D93FB3962) == 0x000001, "Wrong alignment on BTT_FrostElemental_MoveToTarget_C_OnFail_F3F3009B48DF8435B5ECC39D93FB3962");
static_assert(sizeof(BTT_FrostElemental_MoveToTarget_C_OnFail_F3F3009B48DF8435B5ECC39D93FB3962) == 0x000001, "Wrong size on BTT_FrostElemental_MoveToTarget_C_OnFail_F3F3009B48DF8435B5ECC39D93FB3962");
static_assert(offsetof(BTT_FrostElemental_MoveToTarget_C_OnFail_F3F3009B48DF8435B5ECC39D93FB3962, MovementResult) == 0x000000, "Member 'BTT_FrostElemental_MoveToTarget_C_OnFail_F3F3009B48DF8435B5ECC39D93FB3962::MovementResult' has a wrong offset!");

// Function BTT_FrostElemental_MoveToTarget.BTT_FrostElemental_MoveToTarget_C.OnSuccess_F3F3009B48DF8435B5ECC39D93FB3962
// 0x0001 (0x0001 - 0x0000)
struct BTT_FrostElemental_MoveToTarget_C_OnSuccess_F3F3009B48DF8435B5ECC39D93FB3962 final
{
public:
	EPathFollowingResult                          MovementResult;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTT_FrostElemental_MoveToTarget_C_OnSuccess_F3F3009B48DF8435B5ECC39D93FB3962) == 0x000001, "Wrong alignment on BTT_FrostElemental_MoveToTarget_C_OnSuccess_F3F3009B48DF8435B5ECC39D93FB3962");
static_assert(sizeof(BTT_FrostElemental_MoveToTarget_C_OnSuccess_F3F3009B48DF8435B5ECC39D93FB3962) == 0x000001, "Wrong size on BTT_FrostElemental_MoveToTarget_C_OnSuccess_F3F3009B48DF8435B5ECC39D93FB3962");
static_assert(offsetof(BTT_FrostElemental_MoveToTarget_C_OnSuccess_F3F3009B48DF8435B5ECC39D93FB3962, MovementResult) == 0x000000, "Member 'BTT_FrostElemental_MoveToTarget_C_OnSuccess_F3F3009B48DF8435B5ECC39D93FB3962::MovementResult' has a wrong offset!");

// Function BTT_FrostElemental_MoveToTarget.BTT_FrostElemental_MoveToTarget_C.OnTaskFinished
// 0x0018 (0x0018 - 0x0000)
struct BTT_FrostElemental_MoveToTarget_C_OnTaskFinished final
{
public:
	class AAIController*                          OwnerController;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  ControlledPawn;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EBTNodeResult                                 TaskResult;                                        // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTT_FrostElemental_MoveToTarget_C_OnTaskFinished) == 0x000008, "Wrong alignment on BTT_FrostElemental_MoveToTarget_C_OnTaskFinished");
static_assert(sizeof(BTT_FrostElemental_MoveToTarget_C_OnTaskFinished) == 0x000018, "Wrong size on BTT_FrostElemental_MoveToTarget_C_OnTaskFinished");
static_assert(offsetof(BTT_FrostElemental_MoveToTarget_C_OnTaskFinished, OwnerController) == 0x000000, "Member 'BTT_FrostElemental_MoveToTarget_C_OnTaskFinished::OwnerController' has a wrong offset!");
static_assert(offsetof(BTT_FrostElemental_MoveToTarget_C_OnTaskFinished, ControlledPawn) == 0x000008, "Member 'BTT_FrostElemental_MoveToTarget_C_OnTaskFinished::ControlledPawn' has a wrong offset!");
static_assert(offsetof(BTT_FrostElemental_MoveToTarget_C_OnTaskFinished, TaskResult) == 0x000010, "Member 'BTT_FrostElemental_MoveToTarget_C_OnTaskFinished::TaskResult' has a wrong offset!");

// Function BTT_FrostElemental_MoveToTarget.BTT_FrostElemental_MoveToTarget_C.ReceiveExecuteAI
// 0x0010 (0x0010 - 0x0000)
struct BTT_FrostElemental_MoveToTarget_C_ReceiveExecuteAI final
{
public:
	class AAIController*                          OwnerController;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  ControlledPawn;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTT_FrostElemental_MoveToTarget_C_ReceiveExecuteAI) == 0x000008, "Wrong alignment on BTT_FrostElemental_MoveToTarget_C_ReceiveExecuteAI");
static_assert(sizeof(BTT_FrostElemental_MoveToTarget_C_ReceiveExecuteAI) == 0x000010, "Wrong size on BTT_FrostElemental_MoveToTarget_C_ReceiveExecuteAI");
static_assert(offsetof(BTT_FrostElemental_MoveToTarget_C_ReceiveExecuteAI, OwnerController) == 0x000000, "Member 'BTT_FrostElemental_MoveToTarget_C_ReceiveExecuteAI::OwnerController' has a wrong offset!");
static_assert(offsetof(BTT_FrostElemental_MoveToTarget_C_ReceiveExecuteAI, ControlledPawn) == 0x000008, "Member 'BTT_FrostElemental_MoveToTarget_C_ReceiveExecuteAI::ControlledPawn' has a wrong offset!");

}

