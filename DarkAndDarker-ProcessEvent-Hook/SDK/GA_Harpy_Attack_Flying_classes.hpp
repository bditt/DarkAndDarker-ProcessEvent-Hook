#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_Harpy_Attack_Flying

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "GA_MonsterMeleeAttackBaseWithOptions_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass GA_Harpy_Attack_Flying.GA_Harpy_Attack_Flying_C
// 0x00F0 (0x0810 - 0x0720)
class UGA_Harpy_Attack_Flying_C final : public UGA_MonsterMeleeAttackBaseWithOptions_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_GA_Harpy_Attack_Flying_C;           // 0x0720(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FGameplayEventData                     Trigger_Event_Data;                                // 0x0728(0x00B0)(Edit, BlueprintVisible, DisableEditOnInstance)
	class ABP_Harpy_C*                            As_BP_Common_Harpy;                                // 0x07D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class ADCCharacterBase*                       Target_To_Rotate;                                  // 0x07E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           Rotate_To_Target_Timer_handle;                     // 0x07E8(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Target_HitBox_Location;                            // 0x07F0(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           MoveUpEventTimerHandle;                            // 0x0808(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void AbilityActivated(const struct FGameplayEventData& TriggerEventData);
	void EventReceived_2955E63541B6727C627803A6C6DCCB51(const struct FGameplayEventData& Payload);
	void ExecuteUbergraph_GA_Harpy_Attack_Flying(int32 EntryPoint);
	void K2_OnEndAbility(bool bWasCancelled);
	void Move_Up_Event();
	void Rotate_To_Target();
	void ServerTargetDataReceived(const struct FGameplayTag& EventTag, const struct FGameplayTag& InChannelTag, const struct FGameplayEventData& EventData);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GA_Harpy_Attack_Flying_C">();
	}
	static class UGA_Harpy_Attack_Flying_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGA_Harpy_Attack_Flying_C>();
	}
};
static_assert(alignof(UGA_Harpy_Attack_Flying_C) == 0x000008, "Wrong alignment on UGA_Harpy_Attack_Flying_C");
static_assert(sizeof(UGA_Harpy_Attack_Flying_C) == 0x000810, "Wrong size on UGA_Harpy_Attack_Flying_C");
static_assert(offsetof(UGA_Harpy_Attack_Flying_C, UberGraphFrame_GA_Harpy_Attack_Flying_C) == 0x000720, "Member 'UGA_Harpy_Attack_Flying_C::UberGraphFrame_GA_Harpy_Attack_Flying_C' has a wrong offset!");
static_assert(offsetof(UGA_Harpy_Attack_Flying_C, Trigger_Event_Data) == 0x000728, "Member 'UGA_Harpy_Attack_Flying_C::Trigger_Event_Data' has a wrong offset!");
static_assert(offsetof(UGA_Harpy_Attack_Flying_C, As_BP_Common_Harpy) == 0x0007D8, "Member 'UGA_Harpy_Attack_Flying_C::As_BP_Common_Harpy' has a wrong offset!");
static_assert(offsetof(UGA_Harpy_Attack_Flying_C, Target_To_Rotate) == 0x0007E0, "Member 'UGA_Harpy_Attack_Flying_C::Target_To_Rotate' has a wrong offset!");
static_assert(offsetof(UGA_Harpy_Attack_Flying_C, Rotate_To_Target_Timer_handle) == 0x0007E8, "Member 'UGA_Harpy_Attack_Flying_C::Rotate_To_Target_Timer_handle' has a wrong offset!");
static_assert(offsetof(UGA_Harpy_Attack_Flying_C, Target_HitBox_Location) == 0x0007F0, "Member 'UGA_Harpy_Attack_Flying_C::Target_HitBox_Location' has a wrong offset!");
static_assert(offsetof(UGA_Harpy_Attack_Flying_C, MoveUpEventTimerHandle) == 0x000808, "Member 'UGA_Harpy_Attack_Flying_C::MoveUpEventTimerHandle' has a wrong offset!");

}

