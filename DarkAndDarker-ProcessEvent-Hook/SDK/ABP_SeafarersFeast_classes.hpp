#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ABP_SeafarersFeast

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "DungeonCrawler_classes.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass ABP_SeafarersFeast.ABP_SeafarersFeast_C
// 0x03A0 (0x07D0 - 0x0430)
class UABP_SeafarersFeast_C final : public UDCAnimInstanceBase
{
public:
	uint8                                         Pad_52ED[0x8];                                     // 0x0428(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0430(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_PropertyAccess;             // 0x0438(0x0008)()
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_Base;                       // 0x0440(0x0008)()
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x0448(0x0020)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_2;                  // 0x0468(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_1;                  // 0x0490(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_2;                    // 0x04B8(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_3;                       // 0x0500(0x0020)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult;                    // 0x0520(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_1;                    // 0x0548(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_2;                       // 0x0590(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x05B0(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_1;                       // 0x05F8(0x0020)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine_1;                      // 0x0618(0x00C8)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult;                         // 0x06E0(0x0020)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine;                        // 0x0700(0x00C8)()

public:
	void AnimGraph(struct FPoseLink* Param_AnimGraph);
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_SeafarersFeast_AnimGraphNode_TransitionResult_51DF0F5D4AAEE069B9FD4D8B4BE4B2C3();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_SeafarersFeast_AnimGraphNode_TransitionResult_F99E9D414602551675BDCEBCB0D3C42C();
	void ExecuteUbergraph_ABP_SeafarersFeast(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ABP_SeafarersFeast_C">();
	}
	static class UABP_SeafarersFeast_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UABP_SeafarersFeast_C>();
	}
};
static_assert(alignof(UABP_SeafarersFeast_C) == 0x000010, "Wrong alignment on UABP_SeafarersFeast_C");
static_assert(sizeof(UABP_SeafarersFeast_C) == 0x0007D0, "Wrong size on UABP_SeafarersFeast_C");
static_assert(offsetof(UABP_SeafarersFeast_C, UberGraphFrame) == 0x000430, "Member 'UABP_SeafarersFeast_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UABP_SeafarersFeast_C, AnimBlueprintExtension_PropertyAccess) == 0x000438, "Member 'UABP_SeafarersFeast_C::AnimBlueprintExtension_PropertyAccess' has a wrong offset!");
static_assert(offsetof(UABP_SeafarersFeast_C, AnimBlueprintExtension_Base) == 0x000440, "Member 'UABP_SeafarersFeast_C::AnimBlueprintExtension_Base' has a wrong offset!");
static_assert(offsetof(UABP_SeafarersFeast_C, AnimGraphNode_Root) == 0x000448, "Member 'UABP_SeafarersFeast_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UABP_SeafarersFeast_C, AnimGraphNode_TransitionResult_2) == 0x000468, "Member 'UABP_SeafarersFeast_C::AnimGraphNode_TransitionResult_2' has a wrong offset!");
static_assert(offsetof(UABP_SeafarersFeast_C, AnimGraphNode_TransitionResult_1) == 0x000490, "Member 'UABP_SeafarersFeast_C::AnimGraphNode_TransitionResult_1' has a wrong offset!");
static_assert(offsetof(UABP_SeafarersFeast_C, AnimGraphNode_SequencePlayer_2) == 0x0004B8, "Member 'UABP_SeafarersFeast_C::AnimGraphNode_SequencePlayer_2' has a wrong offset!");
static_assert(offsetof(UABP_SeafarersFeast_C, AnimGraphNode_StateResult_3) == 0x000500, "Member 'UABP_SeafarersFeast_C::AnimGraphNode_StateResult_3' has a wrong offset!");
static_assert(offsetof(UABP_SeafarersFeast_C, AnimGraphNode_TransitionResult) == 0x000520, "Member 'UABP_SeafarersFeast_C::AnimGraphNode_TransitionResult' has a wrong offset!");
static_assert(offsetof(UABP_SeafarersFeast_C, AnimGraphNode_SequencePlayer_1) == 0x000548, "Member 'UABP_SeafarersFeast_C::AnimGraphNode_SequencePlayer_1' has a wrong offset!");
static_assert(offsetof(UABP_SeafarersFeast_C, AnimGraphNode_StateResult_2) == 0x000590, "Member 'UABP_SeafarersFeast_C::AnimGraphNode_StateResult_2' has a wrong offset!");
static_assert(offsetof(UABP_SeafarersFeast_C, AnimGraphNode_SequencePlayer) == 0x0005B0, "Member 'UABP_SeafarersFeast_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(UABP_SeafarersFeast_C, AnimGraphNode_StateResult_1) == 0x0005F8, "Member 'UABP_SeafarersFeast_C::AnimGraphNode_StateResult_1' has a wrong offset!");
static_assert(offsetof(UABP_SeafarersFeast_C, AnimGraphNode_StateMachine_1) == 0x000618, "Member 'UABP_SeafarersFeast_C::AnimGraphNode_StateMachine_1' has a wrong offset!");
static_assert(offsetof(UABP_SeafarersFeast_C, AnimGraphNode_StateResult) == 0x0006E0, "Member 'UABP_SeafarersFeast_C::AnimGraphNode_StateResult' has a wrong offset!");
static_assert(offsetof(UABP_SeafarersFeast_C, AnimGraphNode_StateMachine) == 0x000700, "Member 'UABP_SeafarersFeast_C::AnimGraphNode_StateMachine' has a wrong offset!");

}

