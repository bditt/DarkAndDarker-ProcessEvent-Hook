#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_TrackAxe

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "BP_TrapBase_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_TrackAxe.BP_TrackAxe_C
// 0x0030 (0x05A8 - 0x0578)
class ABP_TrackAxe_C final : public ABP_TrapBase_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_TrackAxe_C;                      // 0x0578(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBoxComponent*                          Box;                                               // 0x0580(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UArrowComponent*                        Arrow;                                             // 0x0588(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        ActiveCoolTime;                                    // 0x0590(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        ActiveDelay;                                       // 0x0598(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsTrapRemove;                                      // 0x05A0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ActiveEvent();
	void EventFMsgSoundEvent(const struct FMsgSoundEvent& Msg);
	void ExecuteUbergraph_BP_TrackAxe(int32 EntryPoint);
	void GameplayTagUpdated(const struct FGameplayTag& InGameplayTag, int32 InCount);
	void InteractSucceed(class AActor* Interacter, const struct FGameplayTag& StateTag, const struct FGameplayTag& TriggerTag, const struct FHitResult& HitResult);
	void OnMessageReceived_8813A0C944F113C8C2169F887C962471(class UMsgBaseNode* ProxyObject);
	void ReceiveBeginPlay();
	void ReceivePreInitializeComponents();
	void SetAbilityTriggerTag(const struct FGameplayTag& New_Trigger_Tag, bool* Result);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_TrackAxe_C">();
	}
	static class ABP_TrackAxe_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_TrackAxe_C>();
	}
};
static_assert(alignof(ABP_TrackAxe_C) == 0x000008, "Wrong alignment on ABP_TrackAxe_C");
static_assert(sizeof(ABP_TrackAxe_C) == 0x0005A8, "Wrong size on ABP_TrackAxe_C");
static_assert(offsetof(ABP_TrackAxe_C, UberGraphFrame_BP_TrackAxe_C) == 0x000578, "Member 'ABP_TrackAxe_C::UberGraphFrame_BP_TrackAxe_C' has a wrong offset!");
static_assert(offsetof(ABP_TrackAxe_C, Box) == 0x000580, "Member 'ABP_TrackAxe_C::Box' has a wrong offset!");
static_assert(offsetof(ABP_TrackAxe_C, Arrow) == 0x000588, "Member 'ABP_TrackAxe_C::Arrow' has a wrong offset!");
static_assert(offsetof(ABP_TrackAxe_C, ActiveCoolTime) == 0x000590, "Member 'ABP_TrackAxe_C::ActiveCoolTime' has a wrong offset!");
static_assert(offsetof(ABP_TrackAxe_C, ActiveDelay) == 0x000598, "Member 'ABP_TrackAxe_C::ActiveDelay' has a wrong offset!");
static_assert(offsetof(ABP_TrackAxe_C, IsTrapRemove) == 0x0005A0, "Member 'ABP_TrackAxe_C::IsTrapRemove' has a wrong offset!");

}

