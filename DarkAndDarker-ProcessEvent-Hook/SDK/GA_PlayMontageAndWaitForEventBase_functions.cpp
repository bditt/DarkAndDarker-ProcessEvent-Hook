#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_PlayMontageAndWaitForEventBase

#include "Basic.hpp"

#include "GA_PlayMontageAndWaitForEventBase_classes.hpp"
#include "GA_PlayMontageAndWaitForEventBase_parameters.hpp"


namespace SDK
{

// Function GA_PlayMontageAndWaitForEventBase.GA_PlayMontageAndWaitForEventBase_C.AbilityActivated
// (Event, Protected, BlueprintEvent)
// Parameters:
// struct FGameplayEventData               TriggerEventData                                       (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm)

void UGA_PlayMontageAndWaitForEventBase_C::AbilityActivated(const struct FGameplayEventData& TriggerEventData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_PlayMontageAndWaitForEventBase_C", "AbilityActivated");

	Params::GA_PlayMontageAndWaitForEventBase_C_AbilityActivated Parms{};

	Parms.TriggerEventData = std::move(TriggerEventData);

	UObject::ProcessEvent(Func, &Parms);
}


// Function GA_PlayMontageAndWaitForEventBase.GA_PlayMontageAndWaitForEventBase_C.EventReceived_A16E4ED54C0EDC5B9FCAD085674C725B
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGameplayEventData               Payload                                                (BlueprintVisible, BlueprintReadOnly, Parm)

void UGA_PlayMontageAndWaitForEventBase_C::EventReceived_A16E4ED54C0EDC5B9FCAD085674C725B(const struct FGameplayEventData& Payload)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_PlayMontageAndWaitForEventBase_C", "EventReceived_A16E4ED54C0EDC5B9FCAD085674C725B");

	Params::GA_PlayMontageAndWaitForEventBase_C_EventReceived_A16E4ED54C0EDC5B9FCAD085674C725B Parms{};

	Parms.Payload = std::move(Payload);

	UObject::ProcessEvent(Func, &Parms);
}


// Function GA_PlayMontageAndWaitForEventBase.GA_PlayMontageAndWaitForEventBase_C.ExecuteUbergraph_GA_PlayMontageAndWaitForEventBase
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UGA_PlayMontageAndWaitForEventBase_C::ExecuteUbergraph_GA_PlayMontageAndWaitForEventBase(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_PlayMontageAndWaitForEventBase_C", "ExecuteUbergraph_GA_PlayMontageAndWaitForEventBase");

	Params::GA_PlayMontageAndWaitForEventBase_C_ExecuteUbergraph_GA_PlayMontageAndWaitForEventBase Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GA_PlayMontageAndWaitForEventBase.GA_PlayMontageAndWaitForEventBase_C.GetBBTargetActor
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          Return_Value                                           (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UGA_PlayMontageAndWaitForEventBase_C::GetBBTargetActor(bool* Result, class UObject** Return_Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_PlayMontageAndWaitForEventBase_C", "GetBBTargetActor");

	Params::GA_PlayMontageAndWaitForEventBase_C_GetBBTargetActor Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;

	if (Return_Value != nullptr)
		*Return_Value = Parms.Return_Value;
}


// Function GA_PlayMontageAndWaitForEventBase.GA_PlayMontageAndWaitForEventBase_C.GetBBTargetActorToCharacterBase
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ADCCharacterBase*                 As_DCCharacter_Base                                    (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UGA_PlayMontageAndWaitForEventBase_C::GetBBTargetActorToCharacterBase(bool* Result, class ADCCharacterBase** As_DCCharacter_Base)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_PlayMontageAndWaitForEventBase_C", "GetBBTargetActorToCharacterBase");

	Params::GA_PlayMontageAndWaitForEventBase_C_GetBBTargetActorToCharacterBase Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;

	if (As_DCCharacter_Base != nullptr)
		*As_DCCharacter_Base = Parms.As_DCCharacter_Base;
}


// Function GA_PlayMontageAndWaitForEventBase.GA_PlayMontageAndWaitForEventBase_C.GetBBTargetActorToMonsterBase
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ABP_DCMonsterBaseWithOptions_C*   DCMonsterBaseWithOptions                               (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UGA_PlayMontageAndWaitForEventBase_C::GetBBTargetActorToMonsterBase(bool* Result, class ABP_DCMonsterBaseWithOptions_C** DCMonsterBaseWithOptions)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_PlayMontageAndWaitForEventBase_C", "GetBBTargetActorToMonsterBase");

	Params::GA_PlayMontageAndWaitForEventBase_C_GetBBTargetActorToMonsterBase Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;

	if (DCMonsterBaseWithOptions != nullptr)
		*DCMonsterBaseWithOptions = Parms.DCMonsterBaseWithOptions;
}


// Function GA_PlayMontageAndWaitForEventBase.GA_PlayMontageAndWaitForEventBase_C.Rotate To Actor
// (BlueprintCallable, BlueprintEvent)

void UGA_PlayMontageAndWaitForEventBase_C::Rotate_To_Actor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_PlayMontageAndWaitForEventBase_C", "Rotate To Actor");

	UObject::ProcessEvent(Func, nullptr);
}

}

