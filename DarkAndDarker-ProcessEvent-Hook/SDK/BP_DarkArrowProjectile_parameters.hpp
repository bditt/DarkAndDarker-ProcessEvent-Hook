#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_DarkArrowProjectile

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"
#include "Engine_structs.hpp"
#include "AkAudio_structs.hpp"


namespace SDK::Params
{

// Function BP_DarkArrowProjectile.BP_DarkArrowProjectile_C.BndEvt__BP_MagicMissileProjectile_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature
// 0x0108 (0x0108 - 0x0000)
struct BP_DarkArrowProjectile_C_BndEvt__BP_MagicMissileProjectile_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_56E7[0x3];                                     // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x00E8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_DarkArrowProjectile_C_BndEvt__BP_MagicMissileProjectile_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_DarkArrowProjectile_C_BndEvt__BP_MagicMissileProjectile_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(BP_DarkArrowProjectile_C_BndEvt__BP_MagicMissileProjectile_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x000108, "Wrong size on BP_DarkArrowProjectile_C_BndEvt__BP_MagicMissileProjectile_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(BP_DarkArrowProjectile_C_BndEvt__BP_MagicMissileProjectile_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'BP_DarkArrowProjectile_C_BndEvt__BP_MagicMissileProjectile_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_DarkArrowProjectile_C_BndEvt__BP_MagicMissileProjectile_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BP_DarkArrowProjectile_C_BndEvt__BP_MagicMissileProjectile_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_DarkArrowProjectile_C_BndEvt__BP_MagicMissileProjectile_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BP_DarkArrowProjectile_C_BndEvt__BP_MagicMissileProjectile_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_DarkArrowProjectile_C_BndEvt__BP_MagicMissileProjectile_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'BP_DarkArrowProjectile_C_BndEvt__BP_MagicMissileProjectile_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_DarkArrowProjectile_C_BndEvt__BP_MagicMissileProjectile_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'BP_DarkArrowProjectile_C_BndEvt__BP_MagicMissileProjectile_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_DarkArrowProjectile_C_BndEvt__BP_MagicMissileProjectile_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'BP_DarkArrowProjectile_C_BndEvt__BP_MagicMissileProjectile_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function BP_DarkArrowProjectile.BP_DarkArrowProjectile_C.ExecuteUbergraph_BP_DarkArrowProjectile
// 0x0168 (0x0168 - 0x0000)
struct BP_DarkArrowProjectile_C_ExecuteUbergraph_BP_DarkArrowProjectile final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_Event_InGameplayTag;                        // 0x0004(0x0008)(ConstParm, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_InCount;                              // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEndPlayReason                                K2Node_Event_EndPlayReason;                        // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_MatchesTag_ReturnValue;                   // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_56E8[0x1];                                     // 0x0013(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable;                            // 0x0014(0x0010)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable_1;                          // 0x0024(0x0010)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_PostAkEvent_ReturnValue;                  // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable_2;                          // 0x0038(0x0010)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_PostAkEvent_ReturnValue_1;                // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_PostAkEvent_ReturnValue_2;                // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent;    // 0x0050(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor;             // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp;              // 0x0060(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex;         // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep;             // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_56E9[0x3];                                     // 0x006D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult;            // 0x0070(0x00E8)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class ABP_PlayerCharacter_C*                  K2Node_DynamicCast_AsBP_Player_Character;          // 0x0158(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue;          // 0x0161(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DarkArrowProjectile_C_ExecuteUbergraph_BP_DarkArrowProjectile) == 0x000008, "Wrong alignment on BP_DarkArrowProjectile_C_ExecuteUbergraph_BP_DarkArrowProjectile");
static_assert(sizeof(BP_DarkArrowProjectile_C_ExecuteUbergraph_BP_DarkArrowProjectile) == 0x000168, "Wrong size on BP_DarkArrowProjectile_C_ExecuteUbergraph_BP_DarkArrowProjectile");
static_assert(offsetof(BP_DarkArrowProjectile_C_ExecuteUbergraph_BP_DarkArrowProjectile, EntryPoint) == 0x000000, "Member 'BP_DarkArrowProjectile_C_ExecuteUbergraph_BP_DarkArrowProjectile::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_DarkArrowProjectile_C_ExecuteUbergraph_BP_DarkArrowProjectile, K2Node_Event_InGameplayTag) == 0x000004, "Member 'BP_DarkArrowProjectile_C_ExecuteUbergraph_BP_DarkArrowProjectile::K2Node_Event_InGameplayTag' has a wrong offset!");
static_assert(offsetof(BP_DarkArrowProjectile_C_ExecuteUbergraph_BP_DarkArrowProjectile, K2Node_Event_InCount) == 0x00000C, "Member 'BP_DarkArrowProjectile_C_ExecuteUbergraph_BP_DarkArrowProjectile::K2Node_Event_InCount' has a wrong offset!");
static_assert(offsetof(BP_DarkArrowProjectile_C_ExecuteUbergraph_BP_DarkArrowProjectile, K2Node_Event_EndPlayReason) == 0x000010, "Member 'BP_DarkArrowProjectile_C_ExecuteUbergraph_BP_DarkArrowProjectile::K2Node_Event_EndPlayReason' has a wrong offset!");
static_assert(offsetof(BP_DarkArrowProjectile_C_ExecuteUbergraph_BP_DarkArrowProjectile, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000011, "Member 'BP_DarkArrowProjectile_C_ExecuteUbergraph_BP_DarkArrowProjectile::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DarkArrowProjectile_C_ExecuteUbergraph_BP_DarkArrowProjectile, CallFunc_MatchesTag_ReturnValue) == 0x000012, "Member 'BP_DarkArrowProjectile_C_ExecuteUbergraph_BP_DarkArrowProjectile::CallFunc_MatchesTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DarkArrowProjectile_C_ExecuteUbergraph_BP_DarkArrowProjectile, Temp_delegate_Variable) == 0x000014, "Member 'BP_DarkArrowProjectile_C_ExecuteUbergraph_BP_DarkArrowProjectile::Temp_delegate_Variable' has a wrong offset!");
static_assert(offsetof(BP_DarkArrowProjectile_C_ExecuteUbergraph_BP_DarkArrowProjectile, Temp_delegate_Variable_1) == 0x000024, "Member 'BP_DarkArrowProjectile_C_ExecuteUbergraph_BP_DarkArrowProjectile::Temp_delegate_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_DarkArrowProjectile_C_ExecuteUbergraph_BP_DarkArrowProjectile, CallFunc_PostAkEvent_ReturnValue) == 0x000034, "Member 'BP_DarkArrowProjectile_C_ExecuteUbergraph_BP_DarkArrowProjectile::CallFunc_PostAkEvent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DarkArrowProjectile_C_ExecuteUbergraph_BP_DarkArrowProjectile, Temp_delegate_Variable_2) == 0x000038, "Member 'BP_DarkArrowProjectile_C_ExecuteUbergraph_BP_DarkArrowProjectile::Temp_delegate_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_DarkArrowProjectile_C_ExecuteUbergraph_BP_DarkArrowProjectile, CallFunc_PostAkEvent_ReturnValue_1) == 0x000048, "Member 'BP_DarkArrowProjectile_C_ExecuteUbergraph_BP_DarkArrowProjectile::CallFunc_PostAkEvent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DarkArrowProjectile_C_ExecuteUbergraph_BP_DarkArrowProjectile, CallFunc_PostAkEvent_ReturnValue_2) == 0x00004C, "Member 'BP_DarkArrowProjectile_C_ExecuteUbergraph_BP_DarkArrowProjectile::CallFunc_PostAkEvent_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_DarkArrowProjectile_C_ExecuteUbergraph_BP_DarkArrowProjectile, K2Node_ComponentBoundEvent_OverlappedComponent) == 0x000050, "Member 'BP_DarkArrowProjectile_C_ExecuteUbergraph_BP_DarkArrowProjectile::K2Node_ComponentBoundEvent_OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_DarkArrowProjectile_C_ExecuteUbergraph_BP_DarkArrowProjectile, K2Node_ComponentBoundEvent_OtherActor) == 0x000058, "Member 'BP_DarkArrowProjectile_C_ExecuteUbergraph_BP_DarkArrowProjectile::K2Node_ComponentBoundEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(BP_DarkArrowProjectile_C_ExecuteUbergraph_BP_DarkArrowProjectile, K2Node_ComponentBoundEvent_OtherComp) == 0x000060, "Member 'BP_DarkArrowProjectile_C_ExecuteUbergraph_BP_DarkArrowProjectile::K2Node_ComponentBoundEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(BP_DarkArrowProjectile_C_ExecuteUbergraph_BP_DarkArrowProjectile, K2Node_ComponentBoundEvent_OtherBodyIndex) == 0x000068, "Member 'BP_DarkArrowProjectile_C_ExecuteUbergraph_BP_DarkArrowProjectile::K2Node_ComponentBoundEvent_OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_DarkArrowProjectile_C_ExecuteUbergraph_BP_DarkArrowProjectile, K2Node_ComponentBoundEvent_bFromSweep) == 0x00006C, "Member 'BP_DarkArrowProjectile_C_ExecuteUbergraph_BP_DarkArrowProjectile::K2Node_ComponentBoundEvent_bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_DarkArrowProjectile_C_ExecuteUbergraph_BP_DarkArrowProjectile, K2Node_ComponentBoundEvent_SweepResult) == 0x000070, "Member 'BP_DarkArrowProjectile_C_ExecuteUbergraph_BP_DarkArrowProjectile::K2Node_ComponentBoundEvent_SweepResult' has a wrong offset!");
static_assert(offsetof(BP_DarkArrowProjectile_C_ExecuteUbergraph_BP_DarkArrowProjectile, K2Node_DynamicCast_AsBP_Player_Character) == 0x000158, "Member 'BP_DarkArrowProjectile_C_ExecuteUbergraph_BP_DarkArrowProjectile::K2Node_DynamicCast_AsBP_Player_Character' has a wrong offset!");
static_assert(offsetof(BP_DarkArrowProjectile_C_ExecuteUbergraph_BP_DarkArrowProjectile, K2Node_DynamicCast_bSuccess) == 0x000160, "Member 'BP_DarkArrowProjectile_C_ExecuteUbergraph_BP_DarkArrowProjectile::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_DarkArrowProjectile_C_ExecuteUbergraph_BP_DarkArrowProjectile, CallFunc_IsLocallyControlled_ReturnValue) == 0x000161, "Member 'BP_DarkArrowProjectile_C_ExecuteUbergraph_BP_DarkArrowProjectile::CallFunc_IsLocallyControlled_ReturnValue' has a wrong offset!");

// Function BP_DarkArrowProjectile.BP_DarkArrowProjectile_C.GameplayTagUpdated
// 0x000C (0x000C - 0x0000)
struct BP_DarkArrowProjectile_C_GameplayTagUpdated final
{
public:
	struct FGameplayTag                           InGameplayTag;                                     // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	int32                                         InCount;                                           // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DarkArrowProjectile_C_GameplayTagUpdated) == 0x000004, "Wrong alignment on BP_DarkArrowProjectile_C_GameplayTagUpdated");
static_assert(sizeof(BP_DarkArrowProjectile_C_GameplayTagUpdated) == 0x00000C, "Wrong size on BP_DarkArrowProjectile_C_GameplayTagUpdated");
static_assert(offsetof(BP_DarkArrowProjectile_C_GameplayTagUpdated, InGameplayTag) == 0x000000, "Member 'BP_DarkArrowProjectile_C_GameplayTagUpdated::InGameplayTag' has a wrong offset!");
static_assert(offsetof(BP_DarkArrowProjectile_C_GameplayTagUpdated, InCount) == 0x000008, "Member 'BP_DarkArrowProjectile_C_GameplayTagUpdated::InCount' has a wrong offset!");

// Function BP_DarkArrowProjectile.BP_DarkArrowProjectile_C.ReceiveEndPlay
// 0x0001 (0x0001 - 0x0000)
struct BP_DarkArrowProjectile_C_ReceiveEndPlay final
{
public:
	EEndPlayReason                                EndPlayReason;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DarkArrowProjectile_C_ReceiveEndPlay) == 0x000001, "Wrong alignment on BP_DarkArrowProjectile_C_ReceiveEndPlay");
static_assert(sizeof(BP_DarkArrowProjectile_C_ReceiveEndPlay) == 0x000001, "Wrong size on BP_DarkArrowProjectile_C_ReceiveEndPlay");
static_assert(offsetof(BP_DarkArrowProjectile_C_ReceiveEndPlay, EndPlayReason) == 0x000000, "Member 'BP_DarkArrowProjectile_C_ReceiveEndPlay::EndPlayReason' has a wrong offset!");

}

