#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_SpellPredation

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "GA_SpellCasting_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass GA_SpellPredation.GA_SpellPredation_C
// 0x0018 (0x0680 - 0x0668)
class UGA_SpellPredation_C final : public UGA_SpellCasting_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0668(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FPrimaryAssetId                        MaxRemovalCountConstant;                           // 0x0670(0x0010)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void AbilityActivated_BP(const struct FGameplayEventData& TriggerEventData, bool bIsSocketSightBlocked);
	void Cancelled_BE2B05C5456F7106ADAF5CA858B9F747(const struct FGameplayAbilityTargetDataHandle& Data);
	void DispelMagicalBuffAndReturnRemoveCount(class UAbilitySystemComponent* TargetAbilitySystemComponent, int32* RemoveCount);
	void ExecuteUbergraph_GA_SpellPredation(int32 EntryPoint);
	void OnCasted(class AActor* InTarget);
	void ValidData_BE2B05C5456F7106ADAF5CA858B9F747(const struct FGameplayAbilityTargetDataHandle& Data);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GA_SpellPredation_C">();
	}
	static class UGA_SpellPredation_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGA_SpellPredation_C>();
	}
};
static_assert(alignof(UGA_SpellPredation_C) == 0x000008, "Wrong alignment on UGA_SpellPredation_C");
static_assert(sizeof(UGA_SpellPredation_C) == 0x000680, "Wrong size on UGA_SpellPredation_C");
static_assert(offsetof(UGA_SpellPredation_C, UberGraphFrame) == 0x000668, "Member 'UGA_SpellPredation_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UGA_SpellPredation_C, MaxRemovalCountConstant) == 0x000670, "Member 'UGA_SpellPredation_C::MaxRemovalCountConstant' has a wrong offset!");

}

