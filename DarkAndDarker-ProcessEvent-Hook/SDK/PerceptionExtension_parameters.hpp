#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PerceptionExtension

#include "Basic.hpp"

#include "AIModule_structs.hpp"


namespace SDK::Params
{

// Function PerceptionExtension.PerceptionExtensionBPLibrary.ForgetActor
// 0x0018 (0x0018 - 0x0000)
struct PerceptionExtensionBPLibrary_ForgetActor final
{
public:
	class UAIPerceptionComponent*                 Perception;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                 Actor;                                             // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_28FF[0x7];                                     // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PerceptionExtensionBPLibrary_ForgetActor) == 0x000008, "Wrong alignment on PerceptionExtensionBPLibrary_ForgetActor");
static_assert(sizeof(PerceptionExtensionBPLibrary_ForgetActor) == 0x000018, "Wrong size on PerceptionExtensionBPLibrary_ForgetActor");
static_assert(offsetof(PerceptionExtensionBPLibrary_ForgetActor, Perception) == 0x000000, "Member 'PerceptionExtensionBPLibrary_ForgetActor::Perception' has a wrong offset!");
static_assert(offsetof(PerceptionExtensionBPLibrary_ForgetActor, Actor) == 0x000008, "Member 'PerceptionExtensionBPLibrary_ForgetActor::Actor' has a wrong offset!");
static_assert(offsetof(PerceptionExtensionBPLibrary_ForgetActor, ReturnValue) == 0x000010, "Member 'PerceptionExtensionBPLibrary_ForgetActor::ReturnValue' has a wrong offset!");

// Function PerceptionExtension.PerceptionExtensionBPLibrary.ForgetAll
// 0x0010 (0x0010 - 0x0000)
struct PerceptionExtensionBPLibrary_ForgetAll final
{
public:
	class UAIPerceptionComponent*                 Perception;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2900[0x7];                                     // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PerceptionExtensionBPLibrary_ForgetAll) == 0x000008, "Wrong alignment on PerceptionExtensionBPLibrary_ForgetAll");
static_assert(sizeof(PerceptionExtensionBPLibrary_ForgetAll) == 0x000010, "Wrong size on PerceptionExtensionBPLibrary_ForgetAll");
static_assert(offsetof(PerceptionExtensionBPLibrary_ForgetAll, Perception) == 0x000000, "Member 'PerceptionExtensionBPLibrary_ForgetAll::Perception' has a wrong offset!");
static_assert(offsetof(PerceptionExtensionBPLibrary_ForgetAll, ReturnValue) == 0x000008, "Member 'PerceptionExtensionBPLibrary_ForgetAll::ReturnValue' has a wrong offset!");

// Function PerceptionExtension.PerceptionExtensionBPLibrary.GetAutoSuccessRange
// 0x0010 (0x0010 - 0x0000)
struct PerceptionExtensionBPLibrary_GetAutoSuccessRange final
{
public:
	class UAIPerceptionComponent*                 Perception;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ReturnValue;                                       // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2901[0x4];                                     // 0x000C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PerceptionExtensionBPLibrary_GetAutoSuccessRange) == 0x000008, "Wrong alignment on PerceptionExtensionBPLibrary_GetAutoSuccessRange");
static_assert(sizeof(PerceptionExtensionBPLibrary_GetAutoSuccessRange) == 0x000010, "Wrong size on PerceptionExtensionBPLibrary_GetAutoSuccessRange");
static_assert(offsetof(PerceptionExtensionBPLibrary_GetAutoSuccessRange, Perception) == 0x000000, "Member 'PerceptionExtensionBPLibrary_GetAutoSuccessRange::Perception' has a wrong offset!");
static_assert(offsetof(PerceptionExtensionBPLibrary_GetAutoSuccessRange, ReturnValue) == 0x000008, "Member 'PerceptionExtensionBPLibrary_GetAutoSuccessRange::ReturnValue' has a wrong offset!");

// Function PerceptionExtension.PerceptionExtensionBPLibrary.GetDetectionByAffiliation
// 0x0018 (0x0018 - 0x0000)
struct PerceptionExtensionBPLibrary_GetDetectionByAffiliation final
{
public:
	class UAIPerceptionComponent*                 Perception;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UAISense>                   SenseClass;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAISenseAffiliationFilter              ReturnValue;                                       // 0x0010(0x0004)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_2902[0x4];                                     // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PerceptionExtensionBPLibrary_GetDetectionByAffiliation) == 0x000008, "Wrong alignment on PerceptionExtensionBPLibrary_GetDetectionByAffiliation");
static_assert(sizeof(PerceptionExtensionBPLibrary_GetDetectionByAffiliation) == 0x000018, "Wrong size on PerceptionExtensionBPLibrary_GetDetectionByAffiliation");
static_assert(offsetof(PerceptionExtensionBPLibrary_GetDetectionByAffiliation, Perception) == 0x000000, "Member 'PerceptionExtensionBPLibrary_GetDetectionByAffiliation::Perception' has a wrong offset!");
static_assert(offsetof(PerceptionExtensionBPLibrary_GetDetectionByAffiliation, SenseClass) == 0x000008, "Member 'PerceptionExtensionBPLibrary_GetDetectionByAffiliation::SenseClass' has a wrong offset!");
static_assert(offsetof(PerceptionExtensionBPLibrary_GetDetectionByAffiliation, ReturnValue) == 0x000010, "Member 'PerceptionExtensionBPLibrary_GetDetectionByAffiliation::ReturnValue' has a wrong offset!");

// Function PerceptionExtension.PerceptionExtensionBPLibrary.GetDominantSense
// 0x0010 (0x0010 - 0x0000)
struct PerceptionExtensionBPLibrary_GetDominantSense final
{
public:
	class UAIPerceptionComponent*                 Perception;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UAISense>                   ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PerceptionExtensionBPLibrary_GetDominantSense) == 0x000008, "Wrong alignment on PerceptionExtensionBPLibrary_GetDominantSense");
static_assert(sizeof(PerceptionExtensionBPLibrary_GetDominantSense) == 0x000010, "Wrong size on PerceptionExtensionBPLibrary_GetDominantSense");
static_assert(offsetof(PerceptionExtensionBPLibrary_GetDominantSense, Perception) == 0x000000, "Member 'PerceptionExtensionBPLibrary_GetDominantSense::Perception' has a wrong offset!");
static_assert(offsetof(PerceptionExtensionBPLibrary_GetDominantSense, ReturnValue) == 0x000008, "Member 'PerceptionExtensionBPLibrary_GetDominantSense::ReturnValue' has a wrong offset!");

// Function PerceptionExtension.PerceptionExtensionBPLibrary.GetHearingRange
// 0x0010 (0x0010 - 0x0000)
struct PerceptionExtensionBPLibrary_GetHearingRange final
{
public:
	class UAIPerceptionComponent*                 Perception;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ReturnValue;                                       // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2903[0x4];                                     // 0x000C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PerceptionExtensionBPLibrary_GetHearingRange) == 0x000008, "Wrong alignment on PerceptionExtensionBPLibrary_GetHearingRange");
static_assert(sizeof(PerceptionExtensionBPLibrary_GetHearingRange) == 0x000010, "Wrong size on PerceptionExtensionBPLibrary_GetHearingRange");
static_assert(offsetof(PerceptionExtensionBPLibrary_GetHearingRange, Perception) == 0x000000, "Member 'PerceptionExtensionBPLibrary_GetHearingRange::Perception' has a wrong offset!");
static_assert(offsetof(PerceptionExtensionBPLibrary_GetHearingRange, ReturnValue) == 0x000008, "Member 'PerceptionExtensionBPLibrary_GetHearingRange::ReturnValue' has a wrong offset!");

// Function PerceptionExtension.PerceptionExtensionBPLibrary.GetLoseSightRange
// 0x0010 (0x0010 - 0x0000)
struct PerceptionExtensionBPLibrary_GetLoseSightRange final
{
public:
	class UAIPerceptionComponent*                 Perception;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ReturnValue;                                       // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2904[0x4];                                     // 0x000C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PerceptionExtensionBPLibrary_GetLoseSightRange) == 0x000008, "Wrong alignment on PerceptionExtensionBPLibrary_GetLoseSightRange");
static_assert(sizeof(PerceptionExtensionBPLibrary_GetLoseSightRange) == 0x000010, "Wrong size on PerceptionExtensionBPLibrary_GetLoseSightRange");
static_assert(offsetof(PerceptionExtensionBPLibrary_GetLoseSightRange, Perception) == 0x000000, "Member 'PerceptionExtensionBPLibrary_GetLoseSightRange::Perception' has a wrong offset!");
static_assert(offsetof(PerceptionExtensionBPLibrary_GetLoseSightRange, ReturnValue) == 0x000008, "Member 'PerceptionExtensionBPLibrary_GetLoseSightRange::ReturnValue' has a wrong offset!");

// Function PerceptionExtension.PerceptionExtensionBPLibrary.GetLoSHearingRange
// 0x0010 (0x0010 - 0x0000)
struct PerceptionExtensionBPLibrary_GetLoSHearingRange final
{
public:
	class UAIPerceptionComponent*                 Perception;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ReturnValue;                                       // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2905[0x4];                                     // 0x000C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PerceptionExtensionBPLibrary_GetLoSHearingRange) == 0x000008, "Wrong alignment on PerceptionExtensionBPLibrary_GetLoSHearingRange");
static_assert(sizeof(PerceptionExtensionBPLibrary_GetLoSHearingRange) == 0x000010, "Wrong size on PerceptionExtensionBPLibrary_GetLoSHearingRange");
static_assert(offsetof(PerceptionExtensionBPLibrary_GetLoSHearingRange, Perception) == 0x000000, "Member 'PerceptionExtensionBPLibrary_GetLoSHearingRange::Perception' has a wrong offset!");
static_assert(offsetof(PerceptionExtensionBPLibrary_GetLoSHearingRange, ReturnValue) == 0x000008, "Member 'PerceptionExtensionBPLibrary_GetLoSHearingRange::ReturnValue' has a wrong offset!");

// Function PerceptionExtension.PerceptionExtensionBPLibrary.GetMaxAge
// 0x0018 (0x0018 - 0x0000)
struct PerceptionExtensionBPLibrary_GetMaxAge final
{
public:
	class UAIPerceptionComponent*                 Perception;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UAISense>                   SenseClass;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ReturnValue;                                       // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2906[0x4];                                     // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PerceptionExtensionBPLibrary_GetMaxAge) == 0x000008, "Wrong alignment on PerceptionExtensionBPLibrary_GetMaxAge");
static_assert(sizeof(PerceptionExtensionBPLibrary_GetMaxAge) == 0x000018, "Wrong size on PerceptionExtensionBPLibrary_GetMaxAge");
static_assert(offsetof(PerceptionExtensionBPLibrary_GetMaxAge, Perception) == 0x000000, "Member 'PerceptionExtensionBPLibrary_GetMaxAge::Perception' has a wrong offset!");
static_assert(offsetof(PerceptionExtensionBPLibrary_GetMaxAge, SenseClass) == 0x000008, "Member 'PerceptionExtensionBPLibrary_GetMaxAge::SenseClass' has a wrong offset!");
static_assert(offsetof(PerceptionExtensionBPLibrary_GetMaxAge, ReturnValue) == 0x000010, "Member 'PerceptionExtensionBPLibrary_GetMaxAge::ReturnValue' has a wrong offset!");

// Function PerceptionExtension.PerceptionExtensionBPLibrary.GetNearClippingRadius
// 0x0010 (0x0010 - 0x0000)
struct PerceptionExtensionBPLibrary_GetNearClippingRadius final
{
public:
	class UAIPerceptionComponent*                 Perception;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ReturnValue;                                       // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2907[0x4];                                     // 0x000C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PerceptionExtensionBPLibrary_GetNearClippingRadius) == 0x000008, "Wrong alignment on PerceptionExtensionBPLibrary_GetNearClippingRadius");
static_assert(sizeof(PerceptionExtensionBPLibrary_GetNearClippingRadius) == 0x000010, "Wrong size on PerceptionExtensionBPLibrary_GetNearClippingRadius");
static_assert(offsetof(PerceptionExtensionBPLibrary_GetNearClippingRadius, Perception) == 0x000000, "Member 'PerceptionExtensionBPLibrary_GetNearClippingRadius::Perception' has a wrong offset!");
static_assert(offsetof(PerceptionExtensionBPLibrary_GetNearClippingRadius, ReturnValue) == 0x000008, "Member 'PerceptionExtensionBPLibrary_GetNearClippingRadius::ReturnValue' has a wrong offset!");

// Function PerceptionExtension.PerceptionExtensionBPLibrary.GetPOVBackwardOffset
// 0x0010 (0x0010 - 0x0000)
struct PerceptionExtensionBPLibrary_GetPOVBackwardOffset final
{
public:
	class UAIPerceptionComponent*                 Perception;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ReturnValue;                                       // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2908[0x4];                                     // 0x000C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PerceptionExtensionBPLibrary_GetPOVBackwardOffset) == 0x000008, "Wrong alignment on PerceptionExtensionBPLibrary_GetPOVBackwardOffset");
static_assert(sizeof(PerceptionExtensionBPLibrary_GetPOVBackwardOffset) == 0x000010, "Wrong size on PerceptionExtensionBPLibrary_GetPOVBackwardOffset");
static_assert(offsetof(PerceptionExtensionBPLibrary_GetPOVBackwardOffset, Perception) == 0x000000, "Member 'PerceptionExtensionBPLibrary_GetPOVBackwardOffset::Perception' has a wrong offset!");
static_assert(offsetof(PerceptionExtensionBPLibrary_GetPOVBackwardOffset, ReturnValue) == 0x000008, "Member 'PerceptionExtensionBPLibrary_GetPOVBackwardOffset::ReturnValue' has a wrong offset!");

// Function PerceptionExtension.PerceptionExtensionBPLibrary.GetSightRange
// 0x0010 (0x0010 - 0x0000)
struct PerceptionExtensionBPLibrary_GetSightRange final
{
public:
	class UAIPerceptionComponent*                 Perception;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ReturnValue;                                       // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2909[0x4];                                     // 0x000C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PerceptionExtensionBPLibrary_GetSightRange) == 0x000008, "Wrong alignment on PerceptionExtensionBPLibrary_GetSightRange");
static_assert(sizeof(PerceptionExtensionBPLibrary_GetSightRange) == 0x000010, "Wrong size on PerceptionExtensionBPLibrary_GetSightRange");
static_assert(offsetof(PerceptionExtensionBPLibrary_GetSightRange, Perception) == 0x000000, "Member 'PerceptionExtensionBPLibrary_GetSightRange::Perception' has a wrong offset!");
static_assert(offsetof(PerceptionExtensionBPLibrary_GetSightRange, ReturnValue) == 0x000008, "Member 'PerceptionExtensionBPLibrary_GetSightRange::ReturnValue' has a wrong offset!");

// Function PerceptionExtension.PerceptionExtensionBPLibrary.GetUseLoSHearing
// 0x0010 (0x0010 - 0x0000)
struct PerceptionExtensionBPLibrary_GetUseLoSHearing final
{
public:
	class UAIPerceptionComponent*                 Perception;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_290A[0x7];                                     // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PerceptionExtensionBPLibrary_GetUseLoSHearing) == 0x000008, "Wrong alignment on PerceptionExtensionBPLibrary_GetUseLoSHearing");
static_assert(sizeof(PerceptionExtensionBPLibrary_GetUseLoSHearing) == 0x000010, "Wrong size on PerceptionExtensionBPLibrary_GetUseLoSHearing");
static_assert(offsetof(PerceptionExtensionBPLibrary_GetUseLoSHearing, Perception) == 0x000000, "Member 'PerceptionExtensionBPLibrary_GetUseLoSHearing::Perception' has a wrong offset!");
static_assert(offsetof(PerceptionExtensionBPLibrary_GetUseLoSHearing, ReturnValue) == 0x000008, "Member 'PerceptionExtensionBPLibrary_GetUseLoSHearing::ReturnValue' has a wrong offset!");

// Function PerceptionExtension.PerceptionExtensionBPLibrary.GetVisionAngle
// 0x0010 (0x0010 - 0x0000)
struct PerceptionExtensionBPLibrary_GetVisionAngle final
{
public:
	class UAIPerceptionComponent*                 Perception;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ReturnValue;                                       // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_290B[0x4];                                     // 0x000C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PerceptionExtensionBPLibrary_GetVisionAngle) == 0x000008, "Wrong alignment on PerceptionExtensionBPLibrary_GetVisionAngle");
static_assert(sizeof(PerceptionExtensionBPLibrary_GetVisionAngle) == 0x000010, "Wrong size on PerceptionExtensionBPLibrary_GetVisionAngle");
static_assert(offsetof(PerceptionExtensionBPLibrary_GetVisionAngle, Perception) == 0x000000, "Member 'PerceptionExtensionBPLibrary_GetVisionAngle::Perception' has a wrong offset!");
static_assert(offsetof(PerceptionExtensionBPLibrary_GetVisionAngle, ReturnValue) == 0x000008, "Member 'PerceptionExtensionBPLibrary_GetVisionAngle::ReturnValue' has a wrong offset!");

// Function PerceptionExtension.PerceptionExtensionBPLibrary.SetAutoSuccessRange
// 0x0010 (0x0010 - 0x0000)
struct PerceptionExtensionBPLibrary_SetAutoSuccessRange final
{
public:
	class UAIPerceptionComponent*                 Perception;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         AutoSuccessRange;                                  // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x000C(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_290C[0x3];                                     // 0x000D(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PerceptionExtensionBPLibrary_SetAutoSuccessRange) == 0x000008, "Wrong alignment on PerceptionExtensionBPLibrary_SetAutoSuccessRange");
static_assert(sizeof(PerceptionExtensionBPLibrary_SetAutoSuccessRange) == 0x000010, "Wrong size on PerceptionExtensionBPLibrary_SetAutoSuccessRange");
static_assert(offsetof(PerceptionExtensionBPLibrary_SetAutoSuccessRange, Perception) == 0x000000, "Member 'PerceptionExtensionBPLibrary_SetAutoSuccessRange::Perception' has a wrong offset!");
static_assert(offsetof(PerceptionExtensionBPLibrary_SetAutoSuccessRange, AutoSuccessRange) == 0x000008, "Member 'PerceptionExtensionBPLibrary_SetAutoSuccessRange::AutoSuccessRange' has a wrong offset!");
static_assert(offsetof(PerceptionExtensionBPLibrary_SetAutoSuccessRange, ReturnValue) == 0x00000C, "Member 'PerceptionExtensionBPLibrary_SetAutoSuccessRange::ReturnValue' has a wrong offset!");

// Function PerceptionExtension.PerceptionExtensionBPLibrary.SetDetectionByAffiliation
// 0x0018 (0x0018 - 0x0000)
struct PerceptionExtensionBPLibrary_SetDetectionByAffiliation final
{
public:
	class UAIPerceptionComponent*                 Perception;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UAISense>                   SenseClass;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          DetectEnemies;                                     // 0x0010(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          DetectNeutrals;                                    // 0x0011(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          DetectFriendlies;                                  // 0x0012(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0013(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_290D[0x4];                                     // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PerceptionExtensionBPLibrary_SetDetectionByAffiliation) == 0x000008, "Wrong alignment on PerceptionExtensionBPLibrary_SetDetectionByAffiliation");
static_assert(sizeof(PerceptionExtensionBPLibrary_SetDetectionByAffiliation) == 0x000018, "Wrong size on PerceptionExtensionBPLibrary_SetDetectionByAffiliation");
static_assert(offsetof(PerceptionExtensionBPLibrary_SetDetectionByAffiliation, Perception) == 0x000000, "Member 'PerceptionExtensionBPLibrary_SetDetectionByAffiliation::Perception' has a wrong offset!");
static_assert(offsetof(PerceptionExtensionBPLibrary_SetDetectionByAffiliation, SenseClass) == 0x000008, "Member 'PerceptionExtensionBPLibrary_SetDetectionByAffiliation::SenseClass' has a wrong offset!");
static_assert(offsetof(PerceptionExtensionBPLibrary_SetDetectionByAffiliation, DetectEnemies) == 0x000010, "Member 'PerceptionExtensionBPLibrary_SetDetectionByAffiliation::DetectEnemies' has a wrong offset!");
static_assert(offsetof(PerceptionExtensionBPLibrary_SetDetectionByAffiliation, DetectNeutrals) == 0x000011, "Member 'PerceptionExtensionBPLibrary_SetDetectionByAffiliation::DetectNeutrals' has a wrong offset!");
static_assert(offsetof(PerceptionExtensionBPLibrary_SetDetectionByAffiliation, DetectFriendlies) == 0x000012, "Member 'PerceptionExtensionBPLibrary_SetDetectionByAffiliation::DetectFriendlies' has a wrong offset!");
static_assert(offsetof(PerceptionExtensionBPLibrary_SetDetectionByAffiliation, ReturnValue) == 0x000013, "Member 'PerceptionExtensionBPLibrary_SetDetectionByAffiliation::ReturnValue' has a wrong offset!");

// Function PerceptionExtension.PerceptionExtensionBPLibrary.SetDominantSense
// 0x0018 (0x0018 - 0x0000)
struct PerceptionExtensionBPLibrary_SetDominantSense final
{
public:
	class UAIPerceptionComponent*                 Perception;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UAISense>                   SenseClass;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_290E[0x7];                                     // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PerceptionExtensionBPLibrary_SetDominantSense) == 0x000008, "Wrong alignment on PerceptionExtensionBPLibrary_SetDominantSense");
static_assert(sizeof(PerceptionExtensionBPLibrary_SetDominantSense) == 0x000018, "Wrong size on PerceptionExtensionBPLibrary_SetDominantSense");
static_assert(offsetof(PerceptionExtensionBPLibrary_SetDominantSense, Perception) == 0x000000, "Member 'PerceptionExtensionBPLibrary_SetDominantSense::Perception' has a wrong offset!");
static_assert(offsetof(PerceptionExtensionBPLibrary_SetDominantSense, SenseClass) == 0x000008, "Member 'PerceptionExtensionBPLibrary_SetDominantSense::SenseClass' has a wrong offset!");
static_assert(offsetof(PerceptionExtensionBPLibrary_SetDominantSense, ReturnValue) == 0x000010, "Member 'PerceptionExtensionBPLibrary_SetDominantSense::ReturnValue' has a wrong offset!");

// Function PerceptionExtension.PerceptionExtensionBPLibrary.SetHearingRange
// 0x0010 (0x0010 - 0x0000)
struct PerceptionExtensionBPLibrary_SetHearingRange final
{
public:
	class UAIPerceptionComponent*                 Perception;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         HearingRange;                                      // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x000C(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_290F[0x3];                                     // 0x000D(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PerceptionExtensionBPLibrary_SetHearingRange) == 0x000008, "Wrong alignment on PerceptionExtensionBPLibrary_SetHearingRange");
static_assert(sizeof(PerceptionExtensionBPLibrary_SetHearingRange) == 0x000010, "Wrong size on PerceptionExtensionBPLibrary_SetHearingRange");
static_assert(offsetof(PerceptionExtensionBPLibrary_SetHearingRange, Perception) == 0x000000, "Member 'PerceptionExtensionBPLibrary_SetHearingRange::Perception' has a wrong offset!");
static_assert(offsetof(PerceptionExtensionBPLibrary_SetHearingRange, HearingRange) == 0x000008, "Member 'PerceptionExtensionBPLibrary_SetHearingRange::HearingRange' has a wrong offset!");
static_assert(offsetof(PerceptionExtensionBPLibrary_SetHearingRange, ReturnValue) == 0x00000C, "Member 'PerceptionExtensionBPLibrary_SetHearingRange::ReturnValue' has a wrong offset!");

// Function PerceptionExtension.PerceptionExtensionBPLibrary.SetLoseSightRange
// 0x0010 (0x0010 - 0x0000)
struct PerceptionExtensionBPLibrary_SetLoseSightRange final
{
public:
	class UAIPerceptionComponent*                 Perception;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         LoseSightRange;                                    // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x000C(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2910[0x3];                                     // 0x000D(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PerceptionExtensionBPLibrary_SetLoseSightRange) == 0x000008, "Wrong alignment on PerceptionExtensionBPLibrary_SetLoseSightRange");
static_assert(sizeof(PerceptionExtensionBPLibrary_SetLoseSightRange) == 0x000010, "Wrong size on PerceptionExtensionBPLibrary_SetLoseSightRange");
static_assert(offsetof(PerceptionExtensionBPLibrary_SetLoseSightRange, Perception) == 0x000000, "Member 'PerceptionExtensionBPLibrary_SetLoseSightRange::Perception' has a wrong offset!");
static_assert(offsetof(PerceptionExtensionBPLibrary_SetLoseSightRange, LoseSightRange) == 0x000008, "Member 'PerceptionExtensionBPLibrary_SetLoseSightRange::LoseSightRange' has a wrong offset!");
static_assert(offsetof(PerceptionExtensionBPLibrary_SetLoseSightRange, ReturnValue) == 0x00000C, "Member 'PerceptionExtensionBPLibrary_SetLoseSightRange::ReturnValue' has a wrong offset!");

// Function PerceptionExtension.PerceptionExtensionBPLibrary.SetLoSHearingRange
// 0x0010 (0x0010 - 0x0000)
struct PerceptionExtensionBPLibrary_SetLoSHearingRange final
{
public:
	class UAIPerceptionComponent*                 Perception;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         LoSHearingRange;                                   // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x000C(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2911[0x3];                                     // 0x000D(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PerceptionExtensionBPLibrary_SetLoSHearingRange) == 0x000008, "Wrong alignment on PerceptionExtensionBPLibrary_SetLoSHearingRange");
static_assert(sizeof(PerceptionExtensionBPLibrary_SetLoSHearingRange) == 0x000010, "Wrong size on PerceptionExtensionBPLibrary_SetLoSHearingRange");
static_assert(offsetof(PerceptionExtensionBPLibrary_SetLoSHearingRange, Perception) == 0x000000, "Member 'PerceptionExtensionBPLibrary_SetLoSHearingRange::Perception' has a wrong offset!");
static_assert(offsetof(PerceptionExtensionBPLibrary_SetLoSHearingRange, LoSHearingRange) == 0x000008, "Member 'PerceptionExtensionBPLibrary_SetLoSHearingRange::LoSHearingRange' has a wrong offset!");
static_assert(offsetof(PerceptionExtensionBPLibrary_SetLoSHearingRange, ReturnValue) == 0x00000C, "Member 'PerceptionExtensionBPLibrary_SetLoSHearingRange::ReturnValue' has a wrong offset!");

// Function PerceptionExtension.PerceptionExtensionBPLibrary.SetMaxAge
// 0x0018 (0x0018 - 0x0000)
struct PerceptionExtensionBPLibrary_SetMaxAge final
{
public:
	class UAIPerceptionComponent*                 Perception;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UAISense>                   SenseClass;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MaxAge;                                            // 0x0010(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0014(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2912[0x3];                                     // 0x0015(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PerceptionExtensionBPLibrary_SetMaxAge) == 0x000008, "Wrong alignment on PerceptionExtensionBPLibrary_SetMaxAge");
static_assert(sizeof(PerceptionExtensionBPLibrary_SetMaxAge) == 0x000018, "Wrong size on PerceptionExtensionBPLibrary_SetMaxAge");
static_assert(offsetof(PerceptionExtensionBPLibrary_SetMaxAge, Perception) == 0x000000, "Member 'PerceptionExtensionBPLibrary_SetMaxAge::Perception' has a wrong offset!");
static_assert(offsetof(PerceptionExtensionBPLibrary_SetMaxAge, SenseClass) == 0x000008, "Member 'PerceptionExtensionBPLibrary_SetMaxAge::SenseClass' has a wrong offset!");
static_assert(offsetof(PerceptionExtensionBPLibrary_SetMaxAge, MaxAge) == 0x000010, "Member 'PerceptionExtensionBPLibrary_SetMaxAge::MaxAge' has a wrong offset!");
static_assert(offsetof(PerceptionExtensionBPLibrary_SetMaxAge, ReturnValue) == 0x000014, "Member 'PerceptionExtensionBPLibrary_SetMaxAge::ReturnValue' has a wrong offset!");

// Function PerceptionExtension.PerceptionExtensionBPLibrary.SetNearClippingRadius
// 0x0010 (0x0010 - 0x0000)
struct PerceptionExtensionBPLibrary_SetNearClippingRadius final
{
public:
	class UAIPerceptionComponent*                 Perception;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         NearClippingRadius;                                // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x000C(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2913[0x3];                                     // 0x000D(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PerceptionExtensionBPLibrary_SetNearClippingRadius) == 0x000008, "Wrong alignment on PerceptionExtensionBPLibrary_SetNearClippingRadius");
static_assert(sizeof(PerceptionExtensionBPLibrary_SetNearClippingRadius) == 0x000010, "Wrong size on PerceptionExtensionBPLibrary_SetNearClippingRadius");
static_assert(offsetof(PerceptionExtensionBPLibrary_SetNearClippingRadius, Perception) == 0x000000, "Member 'PerceptionExtensionBPLibrary_SetNearClippingRadius::Perception' has a wrong offset!");
static_assert(offsetof(PerceptionExtensionBPLibrary_SetNearClippingRadius, NearClippingRadius) == 0x000008, "Member 'PerceptionExtensionBPLibrary_SetNearClippingRadius::NearClippingRadius' has a wrong offset!");
static_assert(offsetof(PerceptionExtensionBPLibrary_SetNearClippingRadius, ReturnValue) == 0x00000C, "Member 'PerceptionExtensionBPLibrary_SetNearClippingRadius::ReturnValue' has a wrong offset!");

// Function PerceptionExtension.PerceptionExtensionBPLibrary.SetPOVBackwardOffset
// 0x0010 (0x0010 - 0x0000)
struct PerceptionExtensionBPLibrary_SetPOVBackwardOffset final
{
public:
	class UAIPerceptionComponent*                 Perception;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         POVBackwardsOffset;                                // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x000C(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2914[0x3];                                     // 0x000D(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PerceptionExtensionBPLibrary_SetPOVBackwardOffset) == 0x000008, "Wrong alignment on PerceptionExtensionBPLibrary_SetPOVBackwardOffset");
static_assert(sizeof(PerceptionExtensionBPLibrary_SetPOVBackwardOffset) == 0x000010, "Wrong size on PerceptionExtensionBPLibrary_SetPOVBackwardOffset");
static_assert(offsetof(PerceptionExtensionBPLibrary_SetPOVBackwardOffset, Perception) == 0x000000, "Member 'PerceptionExtensionBPLibrary_SetPOVBackwardOffset::Perception' has a wrong offset!");
static_assert(offsetof(PerceptionExtensionBPLibrary_SetPOVBackwardOffset, POVBackwardsOffset) == 0x000008, "Member 'PerceptionExtensionBPLibrary_SetPOVBackwardOffset::POVBackwardsOffset' has a wrong offset!");
static_assert(offsetof(PerceptionExtensionBPLibrary_SetPOVBackwardOffset, ReturnValue) == 0x00000C, "Member 'PerceptionExtensionBPLibrary_SetPOVBackwardOffset::ReturnValue' has a wrong offset!");

// Function PerceptionExtension.PerceptionExtensionBPLibrary.SetSightRange
// 0x0010 (0x0010 - 0x0000)
struct PerceptionExtensionBPLibrary_SetSightRange final
{
public:
	class UAIPerceptionComponent*                 Perception;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SightRange;                                        // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x000C(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2915[0x3];                                     // 0x000D(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PerceptionExtensionBPLibrary_SetSightRange) == 0x000008, "Wrong alignment on PerceptionExtensionBPLibrary_SetSightRange");
static_assert(sizeof(PerceptionExtensionBPLibrary_SetSightRange) == 0x000010, "Wrong size on PerceptionExtensionBPLibrary_SetSightRange");
static_assert(offsetof(PerceptionExtensionBPLibrary_SetSightRange, Perception) == 0x000000, "Member 'PerceptionExtensionBPLibrary_SetSightRange::Perception' has a wrong offset!");
static_assert(offsetof(PerceptionExtensionBPLibrary_SetSightRange, SightRange) == 0x000008, "Member 'PerceptionExtensionBPLibrary_SetSightRange::SightRange' has a wrong offset!");
static_assert(offsetof(PerceptionExtensionBPLibrary_SetSightRange, ReturnValue) == 0x00000C, "Member 'PerceptionExtensionBPLibrary_SetSightRange::ReturnValue' has a wrong offset!");

// Function PerceptionExtension.PerceptionExtensionBPLibrary.SetUseLoSHearing
// 0x0010 (0x0010 - 0x0000)
struct PerceptionExtensionBPLibrary_SetUseLoSHearing final
{
public:
	class UAIPerceptionComponent*                 Perception;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          UseLoSHearing;                                     // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0009(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2916[0x6];                                     // 0x000A(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PerceptionExtensionBPLibrary_SetUseLoSHearing) == 0x000008, "Wrong alignment on PerceptionExtensionBPLibrary_SetUseLoSHearing");
static_assert(sizeof(PerceptionExtensionBPLibrary_SetUseLoSHearing) == 0x000010, "Wrong size on PerceptionExtensionBPLibrary_SetUseLoSHearing");
static_assert(offsetof(PerceptionExtensionBPLibrary_SetUseLoSHearing, Perception) == 0x000000, "Member 'PerceptionExtensionBPLibrary_SetUseLoSHearing::Perception' has a wrong offset!");
static_assert(offsetof(PerceptionExtensionBPLibrary_SetUseLoSHearing, UseLoSHearing) == 0x000008, "Member 'PerceptionExtensionBPLibrary_SetUseLoSHearing::UseLoSHearing' has a wrong offset!");
static_assert(offsetof(PerceptionExtensionBPLibrary_SetUseLoSHearing, ReturnValue) == 0x000009, "Member 'PerceptionExtensionBPLibrary_SetUseLoSHearing::ReturnValue' has a wrong offset!");

// Function PerceptionExtension.PerceptionExtensionBPLibrary.SetVisionAngle
// 0x0010 (0x0010 - 0x0000)
struct PerceptionExtensionBPLibrary_SetVisionAngle final
{
public:
	class UAIPerceptionComponent*                 Perception;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         VisionAngle;                                       // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x000C(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2917[0x3];                                     // 0x000D(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PerceptionExtensionBPLibrary_SetVisionAngle) == 0x000008, "Wrong alignment on PerceptionExtensionBPLibrary_SetVisionAngle");
static_assert(sizeof(PerceptionExtensionBPLibrary_SetVisionAngle) == 0x000010, "Wrong size on PerceptionExtensionBPLibrary_SetVisionAngle");
static_assert(offsetof(PerceptionExtensionBPLibrary_SetVisionAngle, Perception) == 0x000000, "Member 'PerceptionExtensionBPLibrary_SetVisionAngle::Perception' has a wrong offset!");
static_assert(offsetof(PerceptionExtensionBPLibrary_SetVisionAngle, VisionAngle) == 0x000008, "Member 'PerceptionExtensionBPLibrary_SetVisionAngle::VisionAngle' has a wrong offset!");
static_assert(offsetof(PerceptionExtensionBPLibrary_SetVisionAngle, ReturnValue) == 0x00000C, "Member 'PerceptionExtensionBPLibrary_SetVisionAngle::ReturnValue' has a wrong offset!");

}

