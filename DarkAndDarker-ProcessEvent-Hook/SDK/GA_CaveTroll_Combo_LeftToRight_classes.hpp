#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_CaveTroll_Combo_LeftToRight

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "GA_MonsterMeleeAttackBaseWithOptions_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass GA_CaveTroll_Combo_LeftToRight.GA_CaveTroll_Combo_LeftToRight_C
// 0x0020 (0x0740 - 0x0720)
class UGA_CaveTroll_Combo_LeftToRight_C final : public UGA_MonsterMeleeAttackBaseWithOptions_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_GA_CaveTroll_Combo_LeftToRight_C;   // 0x0720(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	bool                                          Combo_Triggered;                                   // 0x0728(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4927[0x7];                                     // 0x0729(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Ratio_To_Choose_Combo;                             // 0x0730(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_CaveTroll_Common_C*                 As_BP_Cave_Troll;                                  // 0x0738(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void AbilityActivated(const struct FGameplayEventData& TriggerEventData);
	void EventReceived_A925733446D6E2DB0FC4F1A7F5CD2C71(const struct FGameplayEventData& Payload);
	void ExecuteUbergraph_GA_CaveTroll_Combo_LeftToRight(int32 EntryPoint);
	void ServerTargetDataReceived(const struct FGameplayTag& EventTag, const struct FGameplayTag& InChannelTag, const struct FGameplayEventData& EventData);
	void K2_OnEndAbility(bool bWasCancelled);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GA_CaveTroll_Combo_LeftToRight_C">();
	}
	static class UGA_CaveTroll_Combo_LeftToRight_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGA_CaveTroll_Combo_LeftToRight_C>();
	}
};
static_assert(alignof(UGA_CaveTroll_Combo_LeftToRight_C) == 0x000008, "Wrong alignment on UGA_CaveTroll_Combo_LeftToRight_C");
static_assert(sizeof(UGA_CaveTroll_Combo_LeftToRight_C) == 0x000740, "Wrong size on UGA_CaveTroll_Combo_LeftToRight_C");
static_assert(offsetof(UGA_CaveTroll_Combo_LeftToRight_C, UberGraphFrame_GA_CaveTroll_Combo_LeftToRight_C) == 0x000720, "Member 'UGA_CaveTroll_Combo_LeftToRight_C::UberGraphFrame_GA_CaveTroll_Combo_LeftToRight_C' has a wrong offset!");
static_assert(offsetof(UGA_CaveTroll_Combo_LeftToRight_C, Combo_Triggered) == 0x000728, "Member 'UGA_CaveTroll_Combo_LeftToRight_C::Combo_Triggered' has a wrong offset!");
static_assert(offsetof(UGA_CaveTroll_Combo_LeftToRight_C, Ratio_To_Choose_Combo) == 0x000730, "Member 'UGA_CaveTroll_Combo_LeftToRight_C::Ratio_To_Choose_Combo' has a wrong offset!");
static_assert(offsetof(UGA_CaveTroll_Combo_LeftToRight_C, As_BP_Cave_Troll) == 0x000738, "Member 'UGA_CaveTroll_Combo_LeftToRight_C::As_BP_Cave_Troll' has a wrong offset!");

}

