#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_ChainLightning

#include "Basic.hpp"

#include "GameplayAbilities_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function GA_ChainLightning.GA_ChainLightning_C.AbilityActivated_BP
// 0x00B8 (0x00B8 - 0x0000)
struct GA_ChainLightning_C_AbilityActivated_BP final
{
public:
	struct FGameplayEventData                     TriggerEventData;                                  // 0x0000(0x00B0)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm)
	bool                                          bIsSocketSightBlocked;                             // 0x00B0(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_ChainLightning_C_AbilityActivated_BP) == 0x000008, "Wrong alignment on GA_ChainLightning_C_AbilityActivated_BP");
static_assert(sizeof(GA_ChainLightning_C_AbilityActivated_BP) == 0x0000B8, "Wrong size on GA_ChainLightning_C_AbilityActivated_BP");
static_assert(offsetof(GA_ChainLightning_C_AbilityActivated_BP, TriggerEventData) == 0x000000, "Member 'GA_ChainLightning_C_AbilityActivated_BP::TriggerEventData' has a wrong offset!");
static_assert(offsetof(GA_ChainLightning_C_AbilityActivated_BP, bIsSocketSightBlocked) == 0x0000B0, "Member 'GA_ChainLightning_C_AbilityActivated_BP::bIsSocketSightBlocked' has a wrong offset!");

// Function GA_ChainLightning.GA_ChainLightning_C.CalMinDistanceTarget
// 0x0090 (0x0090 - 0x0000)
struct GA_ChainLightning_C_CalMinDistanceTarget final
{
public:
	TArray<class AActor*>                         InActors;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class AActor*                                 OutActor;                                          // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<double>                                DistanceArray;                                     // 0x0018(0x0010)(Edit, BlueprintVisible)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5797[0x4];                                     // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0040(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5798[0x3];                                     // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Vector_Distance_ReturnValue;              // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_MinOfFloatArray_IndexOfMinValue;          // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MinOfFloatArray_MinValue;                 // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_Array_Get_Item_1;                         // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5799[0x4];                                     // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<float>                                 CallFunc_MinOfFloatArray_FloatArray_ImplicitCast;  // 0x0080(0x0010)(ConstParm, ReferenceParm)
};
static_assert(alignof(GA_ChainLightning_C_CalMinDistanceTarget) == 0x000008, "Wrong alignment on GA_ChainLightning_C_CalMinDistanceTarget");
static_assert(sizeof(GA_ChainLightning_C_CalMinDistanceTarget) == 0x000090, "Wrong size on GA_ChainLightning_C_CalMinDistanceTarget");
static_assert(offsetof(GA_ChainLightning_C_CalMinDistanceTarget, InActors) == 0x000000, "Member 'GA_ChainLightning_C_CalMinDistanceTarget::InActors' has a wrong offset!");
static_assert(offsetof(GA_ChainLightning_C_CalMinDistanceTarget, OutActor) == 0x000010, "Member 'GA_ChainLightning_C_CalMinDistanceTarget::OutActor' has a wrong offset!");
static_assert(offsetof(GA_ChainLightning_C_CalMinDistanceTarget, DistanceArray) == 0x000018, "Member 'GA_ChainLightning_C_CalMinDistanceTarget::DistanceArray' has a wrong offset!");
static_assert(offsetof(GA_ChainLightning_C_CalMinDistanceTarget, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'GA_ChainLightning_C_CalMinDistanceTarget::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_ChainLightning_C_CalMinDistanceTarget, Temp_int_Array_Index_Variable) == 0x00002C, "Member 'GA_ChainLightning_C_CalMinDistanceTarget::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(GA_ChainLightning_C_CalMinDistanceTarget, Temp_int_Loop_Counter_Variable) == 0x000030, "Member 'GA_ChainLightning_C_CalMinDistanceTarget::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(GA_ChainLightning_C_CalMinDistanceTarget, CallFunc_Array_Get_Item) == 0x000038, "Member 'GA_ChainLightning_C_CalMinDistanceTarget::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(GA_ChainLightning_C_CalMinDistanceTarget, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000040, "Member 'GA_ChainLightning_C_CalMinDistanceTarget::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_ChainLightning_C_CalMinDistanceTarget, CallFunc_Less_IntInt_ReturnValue) == 0x000058, "Member 'GA_ChainLightning_C_CalMinDistanceTarget::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_ChainLightning_C_CalMinDistanceTarget, CallFunc_Add_IntInt_ReturnValue) == 0x00005C, "Member 'GA_ChainLightning_C_CalMinDistanceTarget::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_ChainLightning_C_CalMinDistanceTarget, CallFunc_Vector_Distance_ReturnValue) == 0x000060, "Member 'GA_ChainLightning_C_CalMinDistanceTarget::CallFunc_Vector_Distance_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_ChainLightning_C_CalMinDistanceTarget, CallFunc_MinOfFloatArray_IndexOfMinValue) == 0x000068, "Member 'GA_ChainLightning_C_CalMinDistanceTarget::CallFunc_MinOfFloatArray_IndexOfMinValue' has a wrong offset!");
static_assert(offsetof(GA_ChainLightning_C_CalMinDistanceTarget, CallFunc_MinOfFloatArray_MinValue) == 0x00006C, "Member 'GA_ChainLightning_C_CalMinDistanceTarget::CallFunc_MinOfFloatArray_MinValue' has a wrong offset!");
static_assert(offsetof(GA_ChainLightning_C_CalMinDistanceTarget, CallFunc_Array_Get_Item_1) == 0x000070, "Member 'GA_ChainLightning_C_CalMinDistanceTarget::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(GA_ChainLightning_C_CalMinDistanceTarget, CallFunc_Array_AddUnique_ReturnValue) == 0x000078, "Member 'GA_ChainLightning_C_CalMinDistanceTarget::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_ChainLightning_C_CalMinDistanceTarget, CallFunc_MinOfFloatArray_FloatArray_ImplicitCast) == 0x000080, "Member 'GA_ChainLightning_C_CalMinDistanceTarget::CallFunc_MinOfFloatArray_FloatArray_ImplicitCast' has a wrong offset!");

// Function GA_ChainLightning.GA_ChainLightning_C.Cancelled_31121FD1430811CAF3A874B288707DD0
// 0x0028 (0x0028 - 0x0000)
struct GA_ChainLightning_C_Cancelled_31121FD1430811CAF3A874B288707DD0 final
{
public:
	struct FGameplayAbilityTargetDataHandle       Data;                                              // 0x0000(0x0028)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(GA_ChainLightning_C_Cancelled_31121FD1430811CAF3A874B288707DD0) == 0x000008, "Wrong alignment on GA_ChainLightning_C_Cancelled_31121FD1430811CAF3A874B288707DD0");
static_assert(sizeof(GA_ChainLightning_C_Cancelled_31121FD1430811CAF3A874B288707DD0) == 0x000028, "Wrong size on GA_ChainLightning_C_Cancelled_31121FD1430811CAF3A874B288707DD0");
static_assert(offsetof(GA_ChainLightning_C_Cancelled_31121FD1430811CAF3A874B288707DD0, Data) == 0x000000, "Member 'GA_ChainLightning_C_Cancelled_31121FD1430811CAF3A874B288707DD0::Data' has a wrong offset!");

// Function GA_ChainLightning.GA_ChainLightning_C.CheckTargetActor
// 0x0230 (0x0230 - 0x0000)
struct GA_ChainLightning_C_CheckTargetActor final
{
public:
	class AActor*                                 TargetActor;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_579A[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 Target;                                            // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetAvatarActorFromActorInfo_ReturnValue;  // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_TrainingDummy_C*                    K2Node_DynamicCast_AsBP_Training_Dummy;            // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_579B[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ADCCharacterBase*                       K2Node_DynamicCast_AsDCCharacter_Base;             // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_579C[0x7];                                     // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayEventData                     K2Node_MakeStruct_GameplayEventData;               // 0x0040(0x00B0)()
	TArray<struct FActiveGameplayEffectHandle>    CallFunc_ApplyEffectContainer_ReturnValue;         // 0x00F0(0x0010)(ReferenceParm)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0100(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_579D[0x7];                                     // 0x0119(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0120(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasMatchingGameplayTag_self_CastInput;    // 0x0138(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue;       // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_579E[0x7];                                     // 0x0149(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetAvatarActorFromActorInfo_ReturnValue_1; // 0x0150(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEventData                     K2Node_MakeStruct_GameplayEventData_1;             // 0x0158(0x00B0)()
	TArray<struct FActiveGameplayEffectHandle>    CallFunc_ApplyEffectContainer_ReturnValue_1;       // 0x0208(0x0010)(ReferenceParm)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0218(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_ChainLightning_C_CheckTargetActor) == 0x000008, "Wrong alignment on GA_ChainLightning_C_CheckTargetActor");
static_assert(sizeof(GA_ChainLightning_C_CheckTargetActor) == 0x000230, "Wrong size on GA_ChainLightning_C_CheckTargetActor");
static_assert(offsetof(GA_ChainLightning_C_CheckTargetActor, TargetActor) == 0x000000, "Member 'GA_ChainLightning_C_CheckTargetActor::TargetActor' has a wrong offset!");
static_assert(offsetof(GA_ChainLightning_C_CheckTargetActor, Result) == 0x000008, "Member 'GA_ChainLightning_C_CheckTargetActor::Result' has a wrong offset!");
static_assert(offsetof(GA_ChainLightning_C_CheckTargetActor, Target) == 0x000010, "Member 'GA_ChainLightning_C_CheckTargetActor::Target' has a wrong offset!");
static_assert(offsetof(GA_ChainLightning_C_CheckTargetActor, CallFunc_GetAvatarActorFromActorInfo_ReturnValue) == 0x000018, "Member 'GA_ChainLightning_C_CheckTargetActor::CallFunc_GetAvatarActorFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_ChainLightning_C_CheckTargetActor, K2Node_DynamicCast_AsBP_Training_Dummy) == 0x000020, "Member 'GA_ChainLightning_C_CheckTargetActor::K2Node_DynamicCast_AsBP_Training_Dummy' has a wrong offset!");
static_assert(offsetof(GA_ChainLightning_C_CheckTargetActor, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'GA_ChainLightning_C_CheckTargetActor::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GA_ChainLightning_C_CheckTargetActor, K2Node_DynamicCast_AsDCCharacter_Base) == 0x000030, "Member 'GA_ChainLightning_C_CheckTargetActor::K2Node_DynamicCast_AsDCCharacter_Base' has a wrong offset!");
static_assert(offsetof(GA_ChainLightning_C_CheckTargetActor, K2Node_DynamicCast_bSuccess_1) == 0x000038, "Member 'GA_ChainLightning_C_CheckTargetActor::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(GA_ChainLightning_C_CheckTargetActor, K2Node_MakeStruct_GameplayEventData) == 0x000040, "Member 'GA_ChainLightning_C_CheckTargetActor::K2Node_MakeStruct_GameplayEventData' has a wrong offset!");
static_assert(offsetof(GA_ChainLightning_C_CheckTargetActor, CallFunc_ApplyEffectContainer_ReturnValue) == 0x0000F0, "Member 'GA_ChainLightning_C_CheckTargetActor::CallFunc_ApplyEffectContainer_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_ChainLightning_C_CheckTargetActor, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000100, "Member 'GA_ChainLightning_C_CheckTargetActor::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_ChainLightning_C_CheckTargetActor, CallFunc_IsValid_ReturnValue) == 0x000118, "Member 'GA_ChainLightning_C_CheckTargetActor::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_ChainLightning_C_CheckTargetActor, CallFunc_Add_VectorVector_ReturnValue) == 0x000120, "Member 'GA_ChainLightning_C_CheckTargetActor::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_ChainLightning_C_CheckTargetActor, CallFunc_HasMatchingGameplayTag_self_CastInput) == 0x000138, "Member 'GA_ChainLightning_C_CheckTargetActor::CallFunc_HasMatchingGameplayTag_self_CastInput' has a wrong offset!");
static_assert(offsetof(GA_ChainLightning_C_CheckTargetActor, CallFunc_HasMatchingGameplayTag_ReturnValue) == 0x000148, "Member 'GA_ChainLightning_C_CheckTargetActor::CallFunc_HasMatchingGameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_ChainLightning_C_CheckTargetActor, CallFunc_GetAvatarActorFromActorInfo_ReturnValue_1) == 0x000150, "Member 'GA_ChainLightning_C_CheckTargetActor::CallFunc_GetAvatarActorFromActorInfo_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_ChainLightning_C_CheckTargetActor, K2Node_MakeStruct_GameplayEventData_1) == 0x000158, "Member 'GA_ChainLightning_C_CheckTargetActor::K2Node_MakeStruct_GameplayEventData_1' has a wrong offset!");
static_assert(offsetof(GA_ChainLightning_C_CheckTargetActor, CallFunc_ApplyEffectContainer_ReturnValue_1) == 0x000208, "Member 'GA_ChainLightning_C_CheckTargetActor::CallFunc_ApplyEffectContainer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_ChainLightning_C_CheckTargetActor, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000218, "Member 'GA_ChainLightning_C_CheckTargetActor::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");

// Function GA_ChainLightning.GA_ChainLightning_C.ExecuteUbergraph_GA_ChainLightning
// 0x03C8 (0x03C8 - 0x0000)
struct GA_ChainLightning_C_ExecuteUbergraph_GA_ChainLightning final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_579F[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayEventData                     K2Node_Event_TriggerEventData;                     // 0x0008(0x00B0)(ConstParm)
	bool                                          K2Node_Event_bIsSocketSightBlocked;                // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_57A0[0x3];                                     // 0x00B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(struct FGameplayAbilityTargetDataHandle& Data)> K2Node_CreateDelegate_OutputDelegate;              // 0x00BC(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_57A1[0x4];                                     // 0x00CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayAbilityTargetDataHandle       K2Node_CustomEvent_Data_1;                         // 0x00D0(0x0028)(ConstParm)
	struct FGameplayAbilityTargetDataHandle       K2Node_CustomEvent_Data;                           // 0x00F8(0x0028)(ConstParm)
	TDelegate<void(struct FGameplayAbilityTargetDataHandle& Data)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x0120(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayAbilityTargetDataHandle       Temp_struct_Variable;                              // 0x0130(0x0028)()
	class UAbilityTask_WaitTargetData*            CallFunc_WaitTargetData_ReturnValue;               // 0x0158(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_57A2[0x7];                                     // 0x0161(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameplayAbilityTargetActor*            CallFunc_BeginSpawningActor_SpawnedActor;          // 0x0168(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BeginSpawningActor_ReturnValue;           // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0171(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_57A3[0x6];                                     // 0x0172(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_GetHitResultFromTargetData_ReturnValue;   // 0x0178(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0260(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0261(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_57A4[0x2];                                     // 0x0262(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0264(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0268(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_57A5[0x4];                                     // 0x026C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0270(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0288(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x02A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x02B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x02D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x02D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x02E0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x02E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x02F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x02F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x02FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0300(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_57A6[0x4];                                     // 0x0304(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0308(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0320(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(int32 ActionNumber)>           K2Node_CreateDelegate_OutputDelegate_2;            // 0x0338(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckTargetActor_Result;                  // 0x0348(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CastToTarget_ReturnValue;                 // 0x0349(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_57A7[0x2];                                     // 0x034A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_CustomEvent_ActionNumber_1;                 // 0x034C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_ActionNumber;                   // 0x0350(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(int32 ActionNumber)>           K2Node_CreateDelegate_OutputDelegate_3;            // 0x0354(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0364(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_4;            // 0x0368(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetRange_ReturnValue;                     // 0x0378(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetAimRadius_ReturnValue;                 // 0x037C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bWasCancelled;                        // 0x0380(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_57A8[0x7];                                     // 0x0381(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAbilityTask_Repeat*                    CallFunc_RepeatAction_ReturnValue;                 // 0x0388(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IGameplayTaskOwnerInterface> CallFunc_TaskWaitDelay_TaskOwner_CastInput;        // 0x0390(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UGameplayTask_WaitDelay*                CallFunc_TaskWaitDelay_ReturnValue;                // 0x03A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x03A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x03A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_57A9[0x2];                                     // 0x03AA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x03AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SetDoublePropertyByName_Value_ImplicitCast; // 0x03B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SetDoublePropertyByName_Value_ImplicitCast_1; // 0x03B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_TaskWaitDelay_Time_ImplicitCast;          // 0x03C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RepeatAction_TimeBetweenActions_ImplicitCast; // 0x03C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_ChainLightning_C_ExecuteUbergraph_GA_ChainLightning) == 0x000008, "Wrong alignment on GA_ChainLightning_C_ExecuteUbergraph_GA_ChainLightning");
static_assert(sizeof(GA_ChainLightning_C_ExecuteUbergraph_GA_ChainLightning) == 0x0003C8, "Wrong size on GA_ChainLightning_C_ExecuteUbergraph_GA_ChainLightning");
static_assert(offsetof(GA_ChainLightning_C_ExecuteUbergraph_GA_ChainLightning, EntryPoint) == 0x000000, "Member 'GA_ChainLightning_C_ExecuteUbergraph_GA_ChainLightning::EntryPoint' has a wrong offset!");
static_assert(offsetof(GA_ChainLightning_C_ExecuteUbergraph_GA_ChainLightning, K2Node_Event_TriggerEventData) == 0x000008, "Member 'GA_ChainLightning_C_ExecuteUbergraph_GA_ChainLightning::K2Node_Event_TriggerEventData' has a wrong offset!");
static_assert(offsetof(GA_ChainLightning_C_ExecuteUbergraph_GA_ChainLightning, K2Node_Event_bIsSocketSightBlocked) == 0x0000B8, "Member 'GA_ChainLightning_C_ExecuteUbergraph_GA_ChainLightning::K2Node_Event_bIsSocketSightBlocked' has a wrong offset!");
static_assert(offsetof(GA_ChainLightning_C_ExecuteUbergraph_GA_ChainLightning, K2Node_CreateDelegate_OutputDelegate) == 0x0000BC, "Member 'GA_ChainLightning_C_ExecuteUbergraph_GA_ChainLightning::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(GA_ChainLightning_C_ExecuteUbergraph_GA_ChainLightning, K2Node_CustomEvent_Data_1) == 0x0000D0, "Member 'GA_ChainLightning_C_ExecuteUbergraph_GA_ChainLightning::K2Node_CustomEvent_Data_1' has a wrong offset!");
static_assert(offsetof(GA_ChainLightning_C_ExecuteUbergraph_GA_ChainLightning, K2Node_CustomEvent_Data) == 0x0000F8, "Member 'GA_ChainLightning_C_ExecuteUbergraph_GA_ChainLightning::K2Node_CustomEvent_Data' has a wrong offset!");
static_assert(offsetof(GA_ChainLightning_C_ExecuteUbergraph_GA_ChainLightning, K2Node_CreateDelegate_OutputDelegate_1) == 0x000120, "Member 'GA_ChainLightning_C_ExecuteUbergraph_GA_ChainLightning::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(GA_ChainLightning_C_ExecuteUbergraph_GA_ChainLightning, Temp_struct_Variable) == 0x000130, "Member 'GA_ChainLightning_C_ExecuteUbergraph_GA_ChainLightning::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(GA_ChainLightning_C_ExecuteUbergraph_GA_ChainLightning, CallFunc_WaitTargetData_ReturnValue) == 0x000158, "Member 'GA_ChainLightning_C_ExecuteUbergraph_GA_ChainLightning::CallFunc_WaitTargetData_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_ChainLightning_C_ExecuteUbergraph_GA_ChainLightning, CallFunc_IsValid_ReturnValue) == 0x000160, "Member 'GA_ChainLightning_C_ExecuteUbergraph_GA_ChainLightning::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_ChainLightning_C_ExecuteUbergraph_GA_ChainLightning, CallFunc_BeginSpawningActor_SpawnedActor) == 0x000168, "Member 'GA_ChainLightning_C_ExecuteUbergraph_GA_ChainLightning::CallFunc_BeginSpawningActor_SpawnedActor' has a wrong offset!");
static_assert(offsetof(GA_ChainLightning_C_ExecuteUbergraph_GA_ChainLightning, CallFunc_BeginSpawningActor_ReturnValue) == 0x000170, "Member 'GA_ChainLightning_C_ExecuteUbergraph_GA_ChainLightning::CallFunc_BeginSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_ChainLightning_C_ExecuteUbergraph_GA_ChainLightning, CallFunc_IsValid_ReturnValue_1) == 0x000171, "Member 'GA_ChainLightning_C_ExecuteUbergraph_GA_ChainLightning::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_ChainLightning_C_ExecuteUbergraph_GA_ChainLightning, CallFunc_GetHitResultFromTargetData_ReturnValue) == 0x000178, "Member 'GA_ChainLightning_C_ExecuteUbergraph_GA_ChainLightning::CallFunc_GetHitResultFromTargetData_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_ChainLightning_C_ExecuteUbergraph_GA_ChainLightning, CallFunc_BreakHitResult_bBlockingHit) == 0x000260, "Member 'GA_ChainLightning_C_ExecuteUbergraph_GA_ChainLightning::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(GA_ChainLightning_C_ExecuteUbergraph_GA_ChainLightning, CallFunc_BreakHitResult_bInitialOverlap) == 0x000261, "Member 'GA_ChainLightning_C_ExecuteUbergraph_GA_ChainLightning::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(GA_ChainLightning_C_ExecuteUbergraph_GA_ChainLightning, CallFunc_BreakHitResult_Time) == 0x000264, "Member 'GA_ChainLightning_C_ExecuteUbergraph_GA_ChainLightning::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(GA_ChainLightning_C_ExecuteUbergraph_GA_ChainLightning, CallFunc_BreakHitResult_Distance) == 0x000268, "Member 'GA_ChainLightning_C_ExecuteUbergraph_GA_ChainLightning::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(GA_ChainLightning_C_ExecuteUbergraph_GA_ChainLightning, CallFunc_BreakHitResult_Location) == 0x000270, "Member 'GA_ChainLightning_C_ExecuteUbergraph_GA_ChainLightning::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(GA_ChainLightning_C_ExecuteUbergraph_GA_ChainLightning, CallFunc_BreakHitResult_ImpactPoint) == 0x000288, "Member 'GA_ChainLightning_C_ExecuteUbergraph_GA_ChainLightning::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(GA_ChainLightning_C_ExecuteUbergraph_GA_ChainLightning, CallFunc_BreakHitResult_Normal) == 0x0002A0, "Member 'GA_ChainLightning_C_ExecuteUbergraph_GA_ChainLightning::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(GA_ChainLightning_C_ExecuteUbergraph_GA_ChainLightning, CallFunc_BreakHitResult_ImpactNormal) == 0x0002B8, "Member 'GA_ChainLightning_C_ExecuteUbergraph_GA_ChainLightning::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(GA_ChainLightning_C_ExecuteUbergraph_GA_ChainLightning, CallFunc_BreakHitResult_PhysMat) == 0x0002D0, "Member 'GA_ChainLightning_C_ExecuteUbergraph_GA_ChainLightning::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(GA_ChainLightning_C_ExecuteUbergraph_GA_ChainLightning, CallFunc_BreakHitResult_HitActor) == 0x0002D8, "Member 'GA_ChainLightning_C_ExecuteUbergraph_GA_ChainLightning::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(GA_ChainLightning_C_ExecuteUbergraph_GA_ChainLightning, CallFunc_BreakHitResult_HitComponent) == 0x0002E0, "Member 'GA_ChainLightning_C_ExecuteUbergraph_GA_ChainLightning::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(GA_ChainLightning_C_ExecuteUbergraph_GA_ChainLightning, CallFunc_BreakHitResult_HitBoneName) == 0x0002E8, "Member 'GA_ChainLightning_C_ExecuteUbergraph_GA_ChainLightning::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(GA_ChainLightning_C_ExecuteUbergraph_GA_ChainLightning, CallFunc_BreakHitResult_BoneName) == 0x0002F0, "Member 'GA_ChainLightning_C_ExecuteUbergraph_GA_ChainLightning::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(GA_ChainLightning_C_ExecuteUbergraph_GA_ChainLightning, CallFunc_BreakHitResult_HitItem) == 0x0002F8, "Member 'GA_ChainLightning_C_ExecuteUbergraph_GA_ChainLightning::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(GA_ChainLightning_C_ExecuteUbergraph_GA_ChainLightning, CallFunc_BreakHitResult_ElementIndex) == 0x0002FC, "Member 'GA_ChainLightning_C_ExecuteUbergraph_GA_ChainLightning::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(GA_ChainLightning_C_ExecuteUbergraph_GA_ChainLightning, CallFunc_BreakHitResult_FaceIndex) == 0x000300, "Member 'GA_ChainLightning_C_ExecuteUbergraph_GA_ChainLightning::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(GA_ChainLightning_C_ExecuteUbergraph_GA_ChainLightning, CallFunc_BreakHitResult_TraceStart) == 0x000308, "Member 'GA_ChainLightning_C_ExecuteUbergraph_GA_ChainLightning::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(GA_ChainLightning_C_ExecuteUbergraph_GA_ChainLightning, CallFunc_BreakHitResult_TraceEnd) == 0x000320, "Member 'GA_ChainLightning_C_ExecuteUbergraph_GA_ChainLightning::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(GA_ChainLightning_C_ExecuteUbergraph_GA_ChainLightning, K2Node_CreateDelegate_OutputDelegate_2) == 0x000338, "Member 'GA_ChainLightning_C_ExecuteUbergraph_GA_ChainLightning::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(GA_ChainLightning_C_ExecuteUbergraph_GA_ChainLightning, CallFunc_CheckTargetActor_Result) == 0x000348, "Member 'GA_ChainLightning_C_ExecuteUbergraph_GA_ChainLightning::CallFunc_CheckTargetActor_Result' has a wrong offset!");
static_assert(offsetof(GA_ChainLightning_C_ExecuteUbergraph_GA_ChainLightning, CallFunc_CastToTarget_ReturnValue) == 0x000349, "Member 'GA_ChainLightning_C_ExecuteUbergraph_GA_ChainLightning::CallFunc_CastToTarget_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_ChainLightning_C_ExecuteUbergraph_GA_ChainLightning, K2Node_CustomEvent_ActionNumber_1) == 0x00034C, "Member 'GA_ChainLightning_C_ExecuteUbergraph_GA_ChainLightning::K2Node_CustomEvent_ActionNumber_1' has a wrong offset!");
static_assert(offsetof(GA_ChainLightning_C_ExecuteUbergraph_GA_ChainLightning, K2Node_CustomEvent_ActionNumber) == 0x000350, "Member 'GA_ChainLightning_C_ExecuteUbergraph_GA_ChainLightning::K2Node_CustomEvent_ActionNumber' has a wrong offset!");
static_assert(offsetof(GA_ChainLightning_C_ExecuteUbergraph_GA_ChainLightning, K2Node_CreateDelegate_OutputDelegate_3) == 0x000354, "Member 'GA_ChainLightning_C_ExecuteUbergraph_GA_ChainLightning::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(GA_ChainLightning_C_ExecuteUbergraph_GA_ChainLightning, Temp_int_Variable) == 0x000364, "Member 'GA_ChainLightning_C_ExecuteUbergraph_GA_ChainLightning::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(GA_ChainLightning_C_ExecuteUbergraph_GA_ChainLightning, K2Node_CreateDelegate_OutputDelegate_4) == 0x000368, "Member 'GA_ChainLightning_C_ExecuteUbergraph_GA_ChainLightning::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(GA_ChainLightning_C_ExecuteUbergraph_GA_ChainLightning, CallFunc_GetRange_ReturnValue) == 0x000378, "Member 'GA_ChainLightning_C_ExecuteUbergraph_GA_ChainLightning::CallFunc_GetRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_ChainLightning_C_ExecuteUbergraph_GA_ChainLightning, CallFunc_GetAimRadius_ReturnValue) == 0x00037C, "Member 'GA_ChainLightning_C_ExecuteUbergraph_GA_ChainLightning::CallFunc_GetAimRadius_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_ChainLightning_C_ExecuteUbergraph_GA_ChainLightning, K2Node_Event_bWasCancelled) == 0x000380, "Member 'GA_ChainLightning_C_ExecuteUbergraph_GA_ChainLightning::K2Node_Event_bWasCancelled' has a wrong offset!");
static_assert(offsetof(GA_ChainLightning_C_ExecuteUbergraph_GA_ChainLightning, CallFunc_RepeatAction_ReturnValue) == 0x000388, "Member 'GA_ChainLightning_C_ExecuteUbergraph_GA_ChainLightning::CallFunc_RepeatAction_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_ChainLightning_C_ExecuteUbergraph_GA_ChainLightning, CallFunc_TaskWaitDelay_TaskOwner_CastInput) == 0x000390, "Member 'GA_ChainLightning_C_ExecuteUbergraph_GA_ChainLightning::CallFunc_TaskWaitDelay_TaskOwner_CastInput' has a wrong offset!");
static_assert(offsetof(GA_ChainLightning_C_ExecuteUbergraph_GA_ChainLightning, CallFunc_TaskWaitDelay_ReturnValue) == 0x0003A0, "Member 'GA_ChainLightning_C_ExecuteUbergraph_GA_ChainLightning::CallFunc_TaskWaitDelay_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_ChainLightning_C_ExecuteUbergraph_GA_ChainLightning, CallFunc_IsValid_ReturnValue_2) == 0x0003A8, "Member 'GA_ChainLightning_C_ExecuteUbergraph_GA_ChainLightning::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GA_ChainLightning_C_ExecuteUbergraph_GA_ChainLightning, CallFunc_IsValid_ReturnValue_3) == 0x0003A9, "Member 'GA_ChainLightning_C_ExecuteUbergraph_GA_ChainLightning::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(GA_ChainLightning_C_ExecuteUbergraph_GA_ChainLightning, CallFunc_Array_AddUnique_ReturnValue) == 0x0003AC, "Member 'GA_ChainLightning_C_ExecuteUbergraph_GA_ChainLightning::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_ChainLightning_C_ExecuteUbergraph_GA_ChainLightning, CallFunc_SetDoublePropertyByName_Value_ImplicitCast) == 0x0003B0, "Member 'GA_ChainLightning_C_ExecuteUbergraph_GA_ChainLightning::CallFunc_SetDoublePropertyByName_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(GA_ChainLightning_C_ExecuteUbergraph_GA_ChainLightning, CallFunc_SetDoublePropertyByName_Value_ImplicitCast_1) == 0x0003B8, "Member 'GA_ChainLightning_C_ExecuteUbergraph_GA_ChainLightning::CallFunc_SetDoublePropertyByName_Value_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(GA_ChainLightning_C_ExecuteUbergraph_GA_ChainLightning, CallFunc_TaskWaitDelay_Time_ImplicitCast) == 0x0003C0, "Member 'GA_ChainLightning_C_ExecuteUbergraph_GA_ChainLightning::CallFunc_TaskWaitDelay_Time_ImplicitCast' has a wrong offset!");
static_assert(offsetof(GA_ChainLightning_C_ExecuteUbergraph_GA_ChainLightning, CallFunc_RepeatAction_TimeBetweenActions_ImplicitCast) == 0x0003C4, "Member 'GA_ChainLightning_C_ExecuteUbergraph_GA_ChainLightning::CallFunc_RepeatAction_TimeBetweenActions_ImplicitCast' has a wrong offset!");

// Function GA_ChainLightning.GA_ChainLightning_C.K2_OnEndAbility
// 0x0001 (0x0001 - 0x0000)
struct GA_ChainLightning_C_K2_OnEndAbility final
{
public:
	bool                                          bWasCancelled;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_ChainLightning_C_K2_OnEndAbility) == 0x000001, "Wrong alignment on GA_ChainLightning_C_K2_OnEndAbility");
static_assert(sizeof(GA_ChainLightning_C_K2_OnEndAbility) == 0x000001, "Wrong size on GA_ChainLightning_C_K2_OnEndAbility");
static_assert(offsetof(GA_ChainLightning_C_K2_OnEndAbility, bWasCancelled) == 0x000000, "Member 'GA_ChainLightning_C_K2_OnEndAbility::bWasCancelled' has a wrong offset!");

// Function GA_ChainLightning.GA_ChainLightning_C.OnApplyedTargetDamage
// 0x0138 (0x0138 - 0x0000)
struct GA_ChainLightning_C_OnApplyedTargetDamage final
{
public:
	class AActor*                                 TargetActor;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         BoundCount;                                        // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_57AA[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetAvatarActorFromActorInfo_ReturnValue;  // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_57AB[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayEventData                     K2Node_MakeStruct_GameplayEventData;               // 0x0020(0x00B0)()
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x00D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FActiveGameplayEffectHandle>    CallFunc_ApplyEffectContainer_ReturnValue;         // 0x00E8(0x0010)(ReferenceParm)
	TArray<struct FActiveGameplayEffectHandle>    CallFunc_ApplyEffectContainer_ReturnValue_1;       // 0x00F8(0x0010)(ReferenceParm)
	TArray<struct FActiveGameplayEffectHandle>    CallFunc_ApplyEffectContainer_ReturnValue_2;       // 0x0108(0x0010)(ReferenceParm)
	TArray<struct FActiveGameplayEffectHandle>    CallFunc_ApplyEffectContainer_ReturnValue_3;       // 0x0118(0x0010)(ReferenceParm)
	class UAbilitySystemComponent*                CallFunc_GetAbilitySystemComponent_ReturnValue;    // 0x0128(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0131(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_57AC[0x2];                                     // 0x0132(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_ChainLightning_C_OnApplyedTargetDamage) == 0x000008, "Wrong alignment on GA_ChainLightning_C_OnApplyedTargetDamage");
static_assert(sizeof(GA_ChainLightning_C_OnApplyedTargetDamage) == 0x000138, "Wrong size on GA_ChainLightning_C_OnApplyedTargetDamage");
static_assert(offsetof(GA_ChainLightning_C_OnApplyedTargetDamage, TargetActor) == 0x000000, "Member 'GA_ChainLightning_C_OnApplyedTargetDamage::TargetActor' has a wrong offset!");
static_assert(offsetof(GA_ChainLightning_C_OnApplyedTargetDamage, BoundCount) == 0x000008, "Member 'GA_ChainLightning_C_OnApplyedTargetDamage::BoundCount' has a wrong offset!");
static_assert(offsetof(GA_ChainLightning_C_OnApplyedTargetDamage, CallFunc_GetAvatarActorFromActorInfo_ReturnValue) == 0x000010, "Member 'GA_ChainLightning_C_OnApplyedTargetDamage::CallFunc_GetAvatarActorFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_ChainLightning_C_OnApplyedTargetDamage, K2Node_SwitchInteger_CmpSuccess) == 0x000018, "Member 'GA_ChainLightning_C_OnApplyedTargetDamage::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(GA_ChainLightning_C_OnApplyedTargetDamage, K2Node_MakeStruct_GameplayEventData) == 0x000020, "Member 'GA_ChainLightning_C_OnApplyedTargetDamage::K2Node_MakeStruct_GameplayEventData' has a wrong offset!");
static_assert(offsetof(GA_ChainLightning_C_OnApplyedTargetDamage, CallFunc_K2_GetActorLocation_ReturnValue) == 0x0000D0, "Member 'GA_ChainLightning_C_OnApplyedTargetDamage::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_ChainLightning_C_OnApplyedTargetDamage, CallFunc_ApplyEffectContainer_ReturnValue) == 0x0000E8, "Member 'GA_ChainLightning_C_OnApplyedTargetDamage::CallFunc_ApplyEffectContainer_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_ChainLightning_C_OnApplyedTargetDamage, CallFunc_ApplyEffectContainer_ReturnValue_1) == 0x0000F8, "Member 'GA_ChainLightning_C_OnApplyedTargetDamage::CallFunc_ApplyEffectContainer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_ChainLightning_C_OnApplyedTargetDamage, CallFunc_ApplyEffectContainer_ReturnValue_2) == 0x000108, "Member 'GA_ChainLightning_C_OnApplyedTargetDamage::CallFunc_ApplyEffectContainer_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GA_ChainLightning_C_OnApplyedTargetDamage, CallFunc_ApplyEffectContainer_ReturnValue_3) == 0x000118, "Member 'GA_ChainLightning_C_OnApplyedTargetDamage::CallFunc_ApplyEffectContainer_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(GA_ChainLightning_C_OnApplyedTargetDamage, CallFunc_GetAbilitySystemComponent_ReturnValue) == 0x000128, "Member 'GA_ChainLightning_C_OnApplyedTargetDamage::CallFunc_GetAbilitySystemComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_ChainLightning_C_OnApplyedTargetDamage, CallFunc_IsValid_ReturnValue) == 0x000130, "Member 'GA_ChainLightning_C_OnApplyedTargetDamage::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_ChainLightning_C_OnApplyedTargetDamage, CallFunc_IsValid_ReturnValue_1) == 0x000131, "Member 'GA_ChainLightning_C_OnApplyedTargetDamage::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_ChainLightning_C_OnApplyedTargetDamage, CallFunc_Array_AddUnique_ReturnValue) == 0x000134, "Member 'GA_ChainLightning_C_OnApplyedTargetDamage::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");

// Function GA_ChainLightning.GA_ChainLightning_C.OnBoundingTarget
// 0x0230 (0x0230 - 0x0000)
struct GA_ChainLightning_C_OnBoundingTarget final
{
public:
	int32                                         RepeatCount;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_57AD[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                HeightCorrection;                                  // 0x0008(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         TargetActors;                                      // 0x0020(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_57AE[0x4];                                     // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_57AF[0x4];                                     // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetAvatarActorFromActorInfo_ReturnValue;  // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_57B0[0x4];                                     // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsEmpty_ReturnValue;                // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_57B1[0x3];                                     // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_57B2[0x3];                                     // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetAvatarActorFromActorInfo_ReturnValue_1; // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_CalMinDistanceTarget_OutActor;            // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        CallFunc_K2_GetRootComponent_ReturnValue;          // 0x0088(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0090(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ADCCharacterBase*                       K2Node_DynamicCast_AsDCCharacter_Base;             // 0x00A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_57B3[0x7];                                     // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x00B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 CallFunc_MakeGameplayCueParameters_ReturnValue;    // 0x00D0(0x00D8)(ContainsInstancedReference)
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array;                            // 0x01A8(0x0010)(ConstParm, ReferenceParm)
	TArray<class AActor*>                         CallFunc_SphereOverlapActors_OutActors;            // 0x01B8(0x0010)(ReferenceParm)
	bool                                          CallFunc_SphereOverlapActors_ReturnValue;          // 0x01C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_57B4[0x7];                                     // 0x01C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         CallFunc_SphereOverlapActors_OutActors_1;          // 0x01D0(0x0010)(ReferenceParm)
	bool                                          CallFunc_SphereOverlapActors_ReturnValue_1;        // 0x01E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_57B5[0x7];                                     // 0x01E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item_1;                         // 0x01E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x01F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_57B6[0x4];                                     // 0x01F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAbilitySystemComponent*                CallFunc_GetAbilitySystemComponent_ReturnValue;    // 0x01F8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0200(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_57B7[0x7];                                     // 0x0201(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasMatchingGameplayTag_self_CastInput;    // 0x0208(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue;       // 0x0218(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_57B8[0x3];                                     // 0x0219(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x021C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0220(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_57B9[0x3];                                     // 0x0221(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_MakeGameplayCueParameters_NormalizedMagnitude_ImplicitCast; // 0x0224(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SphereOverlapActors_SphereRadius_ImplicitCast; // 0x0228(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SphereOverlapActors_SphereRadius_ImplicitCast_1; // 0x022C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_ChainLightning_C_OnBoundingTarget) == 0x000008, "Wrong alignment on GA_ChainLightning_C_OnBoundingTarget");
static_assert(sizeof(GA_ChainLightning_C_OnBoundingTarget) == 0x000230, "Wrong size on GA_ChainLightning_C_OnBoundingTarget");
static_assert(offsetof(GA_ChainLightning_C_OnBoundingTarget, RepeatCount) == 0x000000, "Member 'GA_ChainLightning_C_OnBoundingTarget::RepeatCount' has a wrong offset!");
static_assert(offsetof(GA_ChainLightning_C_OnBoundingTarget, HeightCorrection) == 0x000008, "Member 'GA_ChainLightning_C_OnBoundingTarget::HeightCorrection' has a wrong offset!");
static_assert(offsetof(GA_ChainLightning_C_OnBoundingTarget, TargetActors) == 0x000020, "Member 'GA_ChainLightning_C_OnBoundingTarget::TargetActors' has a wrong offset!");
static_assert(offsetof(GA_ChainLightning_C_OnBoundingTarget, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000030, "Member 'GA_ChainLightning_C_OnBoundingTarget::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_ChainLightning_C_OnBoundingTarget, Temp_int_Array_Index_Variable) == 0x000038, "Member 'GA_ChainLightning_C_OnBoundingTarget::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(GA_ChainLightning_C_OnBoundingTarget, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000040, "Member 'GA_ChainLightning_C_OnBoundingTarget::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_ChainLightning_C_OnBoundingTarget, CallFunc_FTrunc_ReturnValue) == 0x000048, "Member 'GA_ChainLightning_C_OnBoundingTarget::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_ChainLightning_C_OnBoundingTarget, CallFunc_GetAvatarActorFromActorInfo_ReturnValue) == 0x000050, "Member 'GA_ChainLightning_C_OnBoundingTarget::CallFunc_GetAvatarActorFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_ChainLightning_C_OnBoundingTarget, CallFunc_Array_LastIndex_ReturnValue) == 0x000058, "Member 'GA_ChainLightning_C_OnBoundingTarget::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_ChainLightning_C_OnBoundingTarget, CallFunc_Array_Get_Item) == 0x000060, "Member 'GA_ChainLightning_C_OnBoundingTarget::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(GA_ChainLightning_C_OnBoundingTarget, CallFunc_Array_IsEmpty_ReturnValue) == 0x000068, "Member 'GA_ChainLightning_C_OnBoundingTarget::CallFunc_Array_IsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_ChainLightning_C_OnBoundingTarget, Temp_int_Loop_Counter_Variable) == 0x00006C, "Member 'GA_ChainLightning_C_OnBoundingTarget::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(GA_ChainLightning_C_OnBoundingTarget, CallFunc_Not_PreBool_ReturnValue) == 0x000070, "Member 'GA_ChainLightning_C_OnBoundingTarget::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_ChainLightning_C_OnBoundingTarget, CallFunc_Add_IntInt_ReturnValue) == 0x000074, "Member 'GA_ChainLightning_C_OnBoundingTarget::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_ChainLightning_C_OnBoundingTarget, CallFunc_GetAvatarActorFromActorInfo_ReturnValue_1) == 0x000078, "Member 'GA_ChainLightning_C_OnBoundingTarget::CallFunc_GetAvatarActorFromActorInfo_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_ChainLightning_C_OnBoundingTarget, CallFunc_CalMinDistanceTarget_OutActor) == 0x000080, "Member 'GA_ChainLightning_C_OnBoundingTarget::CallFunc_CalMinDistanceTarget_OutActor' has a wrong offset!");
static_assert(offsetof(GA_ChainLightning_C_OnBoundingTarget, CallFunc_K2_GetRootComponent_ReturnValue) == 0x000088, "Member 'GA_ChainLightning_C_OnBoundingTarget::CallFunc_K2_GetRootComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_ChainLightning_C_OnBoundingTarget, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000090, "Member 'GA_ChainLightning_C_OnBoundingTarget::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_ChainLightning_C_OnBoundingTarget, K2Node_DynamicCast_AsDCCharacter_Base) == 0x0000A8, "Member 'GA_ChainLightning_C_OnBoundingTarget::K2Node_DynamicCast_AsDCCharacter_Base' has a wrong offset!");
static_assert(offsetof(GA_ChainLightning_C_OnBoundingTarget, K2Node_DynamicCast_bSuccess) == 0x0000B0, "Member 'GA_ChainLightning_C_OnBoundingTarget::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GA_ChainLightning_C_OnBoundingTarget, CallFunc_Add_VectorVector_ReturnValue) == 0x0000B8, "Member 'GA_ChainLightning_C_OnBoundingTarget::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_ChainLightning_C_OnBoundingTarget, CallFunc_MakeGameplayCueParameters_ReturnValue) == 0x0000D0, "Member 'GA_ChainLightning_C_OnBoundingTarget::CallFunc_MakeGameplayCueParameters_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_ChainLightning_C_OnBoundingTarget, K2Node_MakeArray_Array) == 0x0001A8, "Member 'GA_ChainLightning_C_OnBoundingTarget::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(GA_ChainLightning_C_OnBoundingTarget, CallFunc_SphereOverlapActors_OutActors) == 0x0001B8, "Member 'GA_ChainLightning_C_OnBoundingTarget::CallFunc_SphereOverlapActors_OutActors' has a wrong offset!");
static_assert(offsetof(GA_ChainLightning_C_OnBoundingTarget, CallFunc_SphereOverlapActors_ReturnValue) == 0x0001C8, "Member 'GA_ChainLightning_C_OnBoundingTarget::CallFunc_SphereOverlapActors_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_ChainLightning_C_OnBoundingTarget, CallFunc_SphereOverlapActors_OutActors_1) == 0x0001D0, "Member 'GA_ChainLightning_C_OnBoundingTarget::CallFunc_SphereOverlapActors_OutActors_1' has a wrong offset!");
static_assert(offsetof(GA_ChainLightning_C_OnBoundingTarget, CallFunc_SphereOverlapActors_ReturnValue_1) == 0x0001E0, "Member 'GA_ChainLightning_C_OnBoundingTarget::CallFunc_SphereOverlapActors_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_ChainLightning_C_OnBoundingTarget, CallFunc_Array_Get_Item_1) == 0x0001E8, "Member 'GA_ChainLightning_C_OnBoundingTarget::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(GA_ChainLightning_C_OnBoundingTarget, CallFunc_Array_AddUnique_ReturnValue) == 0x0001F0, "Member 'GA_ChainLightning_C_OnBoundingTarget::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_ChainLightning_C_OnBoundingTarget, CallFunc_GetAbilitySystemComponent_ReturnValue) == 0x0001F8, "Member 'GA_ChainLightning_C_OnBoundingTarget::CallFunc_GetAbilitySystemComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_ChainLightning_C_OnBoundingTarget, CallFunc_IsValid_ReturnValue) == 0x000200, "Member 'GA_ChainLightning_C_OnBoundingTarget::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_ChainLightning_C_OnBoundingTarget, CallFunc_HasMatchingGameplayTag_self_CastInput) == 0x000208, "Member 'GA_ChainLightning_C_OnBoundingTarget::CallFunc_HasMatchingGameplayTag_self_CastInput' has a wrong offset!");
static_assert(offsetof(GA_ChainLightning_C_OnBoundingTarget, CallFunc_HasMatchingGameplayTag_ReturnValue) == 0x000218, "Member 'GA_ChainLightning_C_OnBoundingTarget::CallFunc_HasMatchingGameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_ChainLightning_C_OnBoundingTarget, CallFunc_Array_Length_ReturnValue) == 0x00021C, "Member 'GA_ChainLightning_C_OnBoundingTarget::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_ChainLightning_C_OnBoundingTarget, CallFunc_Less_IntInt_ReturnValue) == 0x000220, "Member 'GA_ChainLightning_C_OnBoundingTarget::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_ChainLightning_C_OnBoundingTarget, CallFunc_MakeGameplayCueParameters_NormalizedMagnitude_ImplicitCast) == 0x000224, "Member 'GA_ChainLightning_C_OnBoundingTarget::CallFunc_MakeGameplayCueParameters_NormalizedMagnitude_ImplicitCast' has a wrong offset!");
static_assert(offsetof(GA_ChainLightning_C_OnBoundingTarget, CallFunc_SphereOverlapActors_SphereRadius_ImplicitCast) == 0x000228, "Member 'GA_ChainLightning_C_OnBoundingTarget::CallFunc_SphereOverlapActors_SphereRadius_ImplicitCast' has a wrong offset!");
static_assert(offsetof(GA_ChainLightning_C_OnBoundingTarget, CallFunc_SphereOverlapActors_SphereRadius_ImplicitCast_1) == 0x00022C, "Member 'GA_ChainLightning_C_OnBoundingTarget::CallFunc_SphereOverlapActors_SphereRadius_ImplicitCast_1' has a wrong offset!");

// Function GA_ChainLightning.GA_ChainLightning_C.OnFinished_0648ED534A0BC29A1C2F12BADC8FE40C
// 0x0004 (0x0004 - 0x0000)
struct GA_ChainLightning_C_OnFinished_0648ED534A0BC29A1C2F12BADC8FE40C final
{
public:
	int32                                         ActionNumber;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_ChainLightning_C_OnFinished_0648ED534A0BC29A1C2F12BADC8FE40C) == 0x000004, "Wrong alignment on GA_ChainLightning_C_OnFinished_0648ED534A0BC29A1C2F12BADC8FE40C");
static_assert(sizeof(GA_ChainLightning_C_OnFinished_0648ED534A0BC29A1C2F12BADC8FE40C) == 0x000004, "Wrong size on GA_ChainLightning_C_OnFinished_0648ED534A0BC29A1C2F12BADC8FE40C");
static_assert(offsetof(GA_ChainLightning_C_OnFinished_0648ED534A0BC29A1C2F12BADC8FE40C, ActionNumber) == 0x000000, "Member 'GA_ChainLightning_C_OnFinished_0648ED534A0BC29A1C2F12BADC8FE40C::ActionNumber' has a wrong offset!");

// Function GA_ChainLightning.GA_ChainLightning_C.OnPerformAction_0648ED534A0BC29A1C2F12BADC8FE40C
// 0x0004 (0x0004 - 0x0000)
struct GA_ChainLightning_C_OnPerformAction_0648ED534A0BC29A1C2F12BADC8FE40C final
{
public:
	int32                                         ActionNumber;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_ChainLightning_C_OnPerformAction_0648ED534A0BC29A1C2F12BADC8FE40C) == 0x000004, "Wrong alignment on GA_ChainLightning_C_OnPerformAction_0648ED534A0BC29A1C2F12BADC8FE40C");
static_assert(sizeof(GA_ChainLightning_C_OnPerformAction_0648ED534A0BC29A1C2F12BADC8FE40C) == 0x000004, "Wrong size on GA_ChainLightning_C_OnPerformAction_0648ED534A0BC29A1C2F12BADC8FE40C");
static_assert(offsetof(GA_ChainLightning_C_OnPerformAction_0648ED534A0BC29A1C2F12BADC8FE40C, ActionNumber) == 0x000000, "Member 'GA_ChainLightning_C_OnPerformAction_0648ED534A0BC29A1C2F12BADC8FE40C::ActionNumber' has a wrong offset!");

// Function GA_ChainLightning.GA_ChainLightning_C.ValidData_31121FD1430811CAF3A874B288707DD0
// 0x0028 (0x0028 - 0x0000)
struct GA_ChainLightning_C_ValidData_31121FD1430811CAF3A874B288707DD0 final
{
public:
	struct FGameplayAbilityTargetDataHandle       Data;                                              // 0x0000(0x0028)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(GA_ChainLightning_C_ValidData_31121FD1430811CAF3A874B288707DD0) == 0x000008, "Wrong alignment on GA_ChainLightning_C_ValidData_31121FD1430811CAF3A874B288707DD0");
static_assert(sizeof(GA_ChainLightning_C_ValidData_31121FD1430811CAF3A874B288707DD0) == 0x000028, "Wrong size on GA_ChainLightning_C_ValidData_31121FD1430811CAF3A874B288707DD0");
static_assert(offsetof(GA_ChainLightning_C_ValidData_31121FD1430811CAF3A874B288707DD0, Data) == 0x000000, "Member 'GA_ChainLightning_C_ValidData_31121FD1430811CAF3A874B288707DD0::Data' has a wrong offset!");

}

