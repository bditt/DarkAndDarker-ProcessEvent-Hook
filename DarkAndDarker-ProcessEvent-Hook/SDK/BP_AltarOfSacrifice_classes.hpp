#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AltarOfSacrifice

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "BP_StatueBase_classes.hpp"
#include "AkAudio_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_AltarOfSacrifice.BP_AltarOfSacrifice_C
// 0x00E8 (0x05A0 - 0x04B8)
class ABP_AltarOfSacrifice_C final : public ABP_StatueBase_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_AltarOfSacrifice_C;              // 0x04B8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UArrowComponent*                        EffectSpawnLocation;                               // 0x04C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      FXS_Resurrection_Altar;                            // 0x04C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UArrowComponent*                        PlayerCharacterSpawnLocation;                      // 0x04D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USphereComponent*                       Sphere;                                            // 0x04D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPointLightComponent*                   PointLight;                                        // 0x04E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Altar_01;                                       // 0x04E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         Timeline_1______0_D55664FF4AEF2E069CDFDFA8B6E4ABFE; // 0x04F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Timeline_1__Direction_D55664FF4AEF2E069CDFDFA8B6E4ABFE; // 0x04F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4880[0x3];                                     // 0x04F5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Timeline_1;                                        // 0x04F8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	float                                         Timeline_0______0_8F53DD174018071EBC18BF80C8D1B8D4; // 0x0500(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Timeline_0__Direction_8F53DD174018071EBC18BF80C8D1B8D4; // 0x0504(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4881[0x3];                                     // 0x0505(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Timeline_0;                                        // 0x0508(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsOverlapped;                                     // 0x0510(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4882[0x7];                                     // 0x0511(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        ReactivationTime;                                  // 0x0518(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          InteractCancel;                                    // 0x0520(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4883[0x7];                                     // 0x0521(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   SystemMessage0;                                    // 0x0528(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FText                                   SystemMessage1;                                    // 0x0540(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FText                                   SystemMessage2;                                    // 0x0558(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          EffectResurrectionOn;                              // 0x0570(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4884[0x7];                                     // 0x0571(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 Interacter;                                        // 0x0578(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	double                                        NeededHealth;                                      // 0x0580(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        EffectMaxTime;                                     // 0x0588(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           EffectResurrectionOffTimerHandle;                  // 0x0590(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      EffectResurrection;                                // 0x0598(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)

public:
	void BndEvt__BP_TorchOn_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void BndEvt__BP_TorchOn_Sphere_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void BroadcastSystemMessage(class ABP_PlayerCharacter_C* Param_Interacter, const class FText& SystemMessage);
	void EffectResurrectionOff();
	void ExecuteUbergraph_BP_AltarOfSacrifice(int32 EntryPoint);
	void GameplayTagUpdated(const struct FGameplayTag& InGameplayTag, int32 InCount);
	void InteractFailed(class AActor* Param_Interacter, const struct FGameplayTag& EventTag);
	void InteractStarted(class AActor* Param_Interacter, const struct FGameplayTag& EventTag);
	void InteractSucceed(class AActor* Param_Interacter, const struct FGameplayTag& StateTag, const struct FGameplayTag& TriggerTag, const struct FHitResult& HitResult);
	void IsEnoughHealth(class ABP_PlayerCharacter_C* Param_Interacter, bool* Result);
	void OnRep_EffectResurrectionOn();
	void ReceiveEndPlay(EEndPlayReason EndPlayReason);
	void Timeline_0__FinishedFunc();
	void Timeline_0__UpdateFunc();
	void Timeline_1__FinishedFunc();
	void Timeline_1__UpdateFunc();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_AltarOfSacrifice_C">();
	}
	static class ABP_AltarOfSacrifice_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_AltarOfSacrifice_C>();
	}
};
static_assert(alignof(ABP_AltarOfSacrifice_C) == 0x000008, "Wrong alignment on ABP_AltarOfSacrifice_C");
static_assert(sizeof(ABP_AltarOfSacrifice_C) == 0x0005A0, "Wrong size on ABP_AltarOfSacrifice_C");
static_assert(offsetof(ABP_AltarOfSacrifice_C, UberGraphFrame_BP_AltarOfSacrifice_C) == 0x0004B8, "Member 'ABP_AltarOfSacrifice_C::UberGraphFrame_BP_AltarOfSacrifice_C' has a wrong offset!");
static_assert(offsetof(ABP_AltarOfSacrifice_C, EffectSpawnLocation) == 0x0004C0, "Member 'ABP_AltarOfSacrifice_C::EffectSpawnLocation' has a wrong offset!");
static_assert(offsetof(ABP_AltarOfSacrifice_C, FXS_Resurrection_Altar) == 0x0004C8, "Member 'ABP_AltarOfSacrifice_C::FXS_Resurrection_Altar' has a wrong offset!");
static_assert(offsetof(ABP_AltarOfSacrifice_C, PlayerCharacterSpawnLocation) == 0x0004D0, "Member 'ABP_AltarOfSacrifice_C::PlayerCharacterSpawnLocation' has a wrong offset!");
static_assert(offsetof(ABP_AltarOfSacrifice_C, Sphere) == 0x0004D8, "Member 'ABP_AltarOfSacrifice_C::Sphere' has a wrong offset!");
static_assert(offsetof(ABP_AltarOfSacrifice_C, PointLight) == 0x0004E0, "Member 'ABP_AltarOfSacrifice_C::PointLight' has a wrong offset!");
static_assert(offsetof(ABP_AltarOfSacrifice_C, SM_Altar_01) == 0x0004E8, "Member 'ABP_AltarOfSacrifice_C::SM_Altar_01' has a wrong offset!");
static_assert(offsetof(ABP_AltarOfSacrifice_C, Timeline_1______0_D55664FF4AEF2E069CDFDFA8B6E4ABFE) == 0x0004F0, "Member 'ABP_AltarOfSacrifice_C::Timeline_1______0_D55664FF4AEF2E069CDFDFA8B6E4ABFE' has a wrong offset!");
static_assert(offsetof(ABP_AltarOfSacrifice_C, Timeline_1__Direction_D55664FF4AEF2E069CDFDFA8B6E4ABFE) == 0x0004F4, "Member 'ABP_AltarOfSacrifice_C::Timeline_1__Direction_D55664FF4AEF2E069CDFDFA8B6E4ABFE' has a wrong offset!");
static_assert(offsetof(ABP_AltarOfSacrifice_C, Timeline_1) == 0x0004F8, "Member 'ABP_AltarOfSacrifice_C::Timeline_1' has a wrong offset!");
static_assert(offsetof(ABP_AltarOfSacrifice_C, Timeline_0______0_8F53DD174018071EBC18BF80C8D1B8D4) == 0x000500, "Member 'ABP_AltarOfSacrifice_C::Timeline_0______0_8F53DD174018071EBC18BF80C8D1B8D4' has a wrong offset!");
static_assert(offsetof(ABP_AltarOfSacrifice_C, Timeline_0__Direction_8F53DD174018071EBC18BF80C8D1B8D4) == 0x000504, "Member 'ABP_AltarOfSacrifice_C::Timeline_0__Direction_8F53DD174018071EBC18BF80C8D1B8D4' has a wrong offset!");
static_assert(offsetof(ABP_AltarOfSacrifice_C, Timeline_0) == 0x000508, "Member 'ABP_AltarOfSacrifice_C::Timeline_0' has a wrong offset!");
static_assert(offsetof(ABP_AltarOfSacrifice_C, bIsOverlapped) == 0x000510, "Member 'ABP_AltarOfSacrifice_C::bIsOverlapped' has a wrong offset!");
static_assert(offsetof(ABP_AltarOfSacrifice_C, ReactivationTime) == 0x000518, "Member 'ABP_AltarOfSacrifice_C::ReactivationTime' has a wrong offset!");
static_assert(offsetof(ABP_AltarOfSacrifice_C, InteractCancel) == 0x000520, "Member 'ABP_AltarOfSacrifice_C::InteractCancel' has a wrong offset!");
static_assert(offsetof(ABP_AltarOfSacrifice_C, SystemMessage0) == 0x000528, "Member 'ABP_AltarOfSacrifice_C::SystemMessage0' has a wrong offset!");
static_assert(offsetof(ABP_AltarOfSacrifice_C, SystemMessage1) == 0x000540, "Member 'ABP_AltarOfSacrifice_C::SystemMessage1' has a wrong offset!");
static_assert(offsetof(ABP_AltarOfSacrifice_C, SystemMessage2) == 0x000558, "Member 'ABP_AltarOfSacrifice_C::SystemMessage2' has a wrong offset!");
static_assert(offsetof(ABP_AltarOfSacrifice_C, EffectResurrectionOn) == 0x000570, "Member 'ABP_AltarOfSacrifice_C::EffectResurrectionOn' has a wrong offset!");
static_assert(offsetof(ABP_AltarOfSacrifice_C, Interacter) == 0x000578, "Member 'ABP_AltarOfSacrifice_C::Interacter' has a wrong offset!");
static_assert(offsetof(ABP_AltarOfSacrifice_C, NeededHealth) == 0x000580, "Member 'ABP_AltarOfSacrifice_C::NeededHealth' has a wrong offset!");
static_assert(offsetof(ABP_AltarOfSacrifice_C, EffectMaxTime) == 0x000588, "Member 'ABP_AltarOfSacrifice_C::EffectMaxTime' has a wrong offset!");
static_assert(offsetof(ABP_AltarOfSacrifice_C, EffectResurrectionOffTimerHandle) == 0x000590, "Member 'ABP_AltarOfSacrifice_C::EffectResurrectionOffTimerHandle' has a wrong offset!");
static_assert(offsetof(ABP_AltarOfSacrifice_C, EffectResurrection) == 0x000598, "Member 'ABP_AltarOfSacrifice_C::EffectResurrection' has a wrong offset!");

}

