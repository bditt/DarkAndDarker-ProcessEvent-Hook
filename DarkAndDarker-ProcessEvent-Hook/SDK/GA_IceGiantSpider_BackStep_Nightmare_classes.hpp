#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_IceGiantSpider_BackStep_Nightmare

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "GA_PlayMontageAndWaitForEventBase_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass GA_IceGiantSpider_BackStep_Nightmare.GA_IceGiantSpider_BackStep_Nightmare_C
// 0x00C0 (0x0738 - 0x0678)
class UGA_IceGiantSpider_BackStep_Nightmare_C final : public UGA_PlayMontageAndWaitForEventBase_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_GA_IceGiantSpider_BackStep_Nightmare_C; // 0x0678(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FGameplayEventData                     Trigger_Event_Data;                                // 0x0680(0x00B0)(Edit, BlueprintVisible, DisableEditOnInstance)
	class ABP_IceGiantSpider_C*                   As_To_BP_IceGiantSpider;                           // 0x0730(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void AbilityActivated(const struct FGameplayEventData& TriggerEventData);
	void EventReceived_7CD3B9C743928CEA02A92A9BD5000D85(const struct FGameplayEventData& Payload);
	void ExecuteUbergraph_GA_IceGiantSpider_BackStep_Nightmare(int32 EntryPoint);
	void K2_OnEndAbility(bool bWasCancelled);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GA_IceGiantSpider_BackStep_Nightmare_C">();
	}
	static class UGA_IceGiantSpider_BackStep_Nightmare_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGA_IceGiantSpider_BackStep_Nightmare_C>();
	}
};
static_assert(alignof(UGA_IceGiantSpider_BackStep_Nightmare_C) == 0x000008, "Wrong alignment on UGA_IceGiantSpider_BackStep_Nightmare_C");
static_assert(sizeof(UGA_IceGiantSpider_BackStep_Nightmare_C) == 0x000738, "Wrong size on UGA_IceGiantSpider_BackStep_Nightmare_C");
static_assert(offsetof(UGA_IceGiantSpider_BackStep_Nightmare_C, UberGraphFrame_GA_IceGiantSpider_BackStep_Nightmare_C) == 0x000678, "Member 'UGA_IceGiantSpider_BackStep_Nightmare_C::UberGraphFrame_GA_IceGiantSpider_BackStep_Nightmare_C' has a wrong offset!");
static_assert(offsetof(UGA_IceGiantSpider_BackStep_Nightmare_C, Trigger_Event_Data) == 0x000680, "Member 'UGA_IceGiantSpider_BackStep_Nightmare_C::Trigger_Event_Data' has a wrong offset!");
static_assert(offsetof(UGA_IceGiantSpider_BackStep_Nightmare_C, As_To_BP_IceGiantSpider) == 0x000730, "Member 'UGA_IceGiantSpider_BackStep_Nightmare_C::As_To_BP_IceGiantSpider' has a wrong offset!");

}

