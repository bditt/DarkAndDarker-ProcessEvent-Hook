#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_FrostElemental_SelfExplosion

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "GA_PlayMontageAndWaitForEventBase_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass GA_FrostElemental_SelfExplosion.GA_FrostElemental_SelfExplosion_C
// 0x0038 (0x06B0 - 0x0678)
class UGA_FrostElemental_SelfExplosion_C final : public UGA_PlayMontageAndWaitForEventBase_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_GA_FrostElemental_SelfExplosion_C;  // 0x0678(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class ABP_FrostElemental_C*                   As_BP_Frost_Elemental;                             // 0x0680(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           Explosion_TimerHandle;                             // 0x0688(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           Shaking_TimerHandle;                               // 0x0690(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Shaking_Center_Location;                           // 0x0698(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void AbilityActivated(const struct FGameplayEventData& TriggerEventData);
	void ExecuteUbergraph_GA_FrostElemental_SelfExplosion(int32 EntryPoint);
	void Explosion();
	void Shaking();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GA_FrostElemental_SelfExplosion_C">();
	}
	static class UGA_FrostElemental_SelfExplosion_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGA_FrostElemental_SelfExplosion_C>();
	}
};
static_assert(alignof(UGA_FrostElemental_SelfExplosion_C) == 0x000008, "Wrong alignment on UGA_FrostElemental_SelfExplosion_C");
static_assert(sizeof(UGA_FrostElemental_SelfExplosion_C) == 0x0006B0, "Wrong size on UGA_FrostElemental_SelfExplosion_C");
static_assert(offsetof(UGA_FrostElemental_SelfExplosion_C, UberGraphFrame_GA_FrostElemental_SelfExplosion_C) == 0x000678, "Member 'UGA_FrostElemental_SelfExplosion_C::UberGraphFrame_GA_FrostElemental_SelfExplosion_C' has a wrong offset!");
static_assert(offsetof(UGA_FrostElemental_SelfExplosion_C, As_BP_Frost_Elemental) == 0x000680, "Member 'UGA_FrostElemental_SelfExplosion_C::As_BP_Frost_Elemental' has a wrong offset!");
static_assert(offsetof(UGA_FrostElemental_SelfExplosion_C, Explosion_TimerHandle) == 0x000688, "Member 'UGA_FrostElemental_SelfExplosion_C::Explosion_TimerHandle' has a wrong offset!");
static_assert(offsetof(UGA_FrostElemental_SelfExplosion_C, Shaking_TimerHandle) == 0x000690, "Member 'UGA_FrostElemental_SelfExplosion_C::Shaking_TimerHandle' has a wrong offset!");
static_assert(offsetof(UGA_FrostElemental_SelfExplosion_C, Shaking_Center_Location) == 0x000698, "Member 'UGA_FrostElemental_SelfExplosion_C::Shaking_Center_Location' has a wrong offset!");

}

