#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_IceKoboldAxeman_Inspecting_Phase

#include "Basic.hpp"

#include "GameplayAbilities_structs.hpp"
#include "AIModule_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function GA_IceKoboldAxeman_Inspecting_Phase.GA_IceKoboldAxeman_Inspecting_Phase_C.AbilityActivated
// 0x00B0 (0x00B0 - 0x0000)
struct GA_IceKoboldAxeman_Inspecting_Phase_C_AbilityActivated final
{
public:
	struct FGameplayEventData                     TriggerEventData;                                  // 0x0000(0x00B0)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(GA_IceKoboldAxeman_Inspecting_Phase_C_AbilityActivated) == 0x000008, "Wrong alignment on GA_IceKoboldAxeman_Inspecting_Phase_C_AbilityActivated");
static_assert(sizeof(GA_IceKoboldAxeman_Inspecting_Phase_C_AbilityActivated) == 0x0000B0, "Wrong size on GA_IceKoboldAxeman_Inspecting_Phase_C_AbilityActivated");
static_assert(offsetof(GA_IceKoboldAxeman_Inspecting_Phase_C_AbilityActivated, TriggerEventData) == 0x000000, "Member 'GA_IceKoboldAxeman_Inspecting_Phase_C_AbilityActivated::TriggerEventData' has a wrong offset!");

// Function GA_IceKoboldAxeman_Inspecting_Phase.GA_IceKoboldAxeman_Inspecting_Phase_C.EventReceived_2C109241447FB983C0B334AD76A8BDF8
// 0x00B0 (0x00B0 - 0x0000)
struct GA_IceKoboldAxeman_Inspecting_Phase_C_EventReceived_2C109241447FB983C0B334AD76A8BDF8 final
{
public:
	struct FGameplayEventData                     Payload;                                           // 0x0000(0x00B0)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(GA_IceKoboldAxeman_Inspecting_Phase_C_EventReceived_2C109241447FB983C0B334AD76A8BDF8) == 0x000008, "Wrong alignment on GA_IceKoboldAxeman_Inspecting_Phase_C_EventReceived_2C109241447FB983C0B334AD76A8BDF8");
static_assert(sizeof(GA_IceKoboldAxeman_Inspecting_Phase_C_EventReceived_2C109241447FB983C0B334AD76A8BDF8) == 0x0000B0, "Wrong size on GA_IceKoboldAxeman_Inspecting_Phase_C_EventReceived_2C109241447FB983C0B334AD76A8BDF8");
static_assert(offsetof(GA_IceKoboldAxeman_Inspecting_Phase_C_EventReceived_2C109241447FB983C0B334AD76A8BDF8, Payload) == 0x000000, "Member 'GA_IceKoboldAxeman_Inspecting_Phase_C_EventReceived_2C109241447FB983C0B334AD76A8BDF8::Payload' has a wrong offset!");

// Function GA_IceKoboldAxeman_Inspecting_Phase.GA_IceKoboldAxeman_Inspecting_Phase_C.ExecuteUbergraph_GA_IceKoboldAxeman_Inspecting_Phase
// 0x03D0 (0x03D0 - 0x0000)
struct GA_IceKoboldAxeman_Inspecting_Phase_C_ExecuteUbergraph_GA_IceKoboldAxeman_Inspecting_Phase final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bWasCancelled;                        // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4ECA[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(EPathFollowingResult MovementResult)> K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EPathFollowingResult                          K2Node_CustomEvent_MovementResult;                 // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPathFollowingResult                          Temp_byte_Variable;                                // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4ECB[0x2];                                     // 0x001A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x001C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4ECC[0x2];                                     // 0x0036(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UAbilityTask_WaitGameplayEvent*         CallFunc_WaitGameplayEvent_ReturnValue;            // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0043(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4ECD[0x4];                                     // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetAvatarActorFromActorInfo_ReturnValue;  // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0050(0x0060)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEventData                     Temp_struct_Variable;                              // 0x00B0(0x00B0)()
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0160(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0178(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0190(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x01A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4ECE[0x7];                                     // 0x01A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayEventData                     K2Node_Event_TriggerEventData;                     // 0x01B0(0x00B0)(ConstParm)
	struct FGameplayEventData                     K2Node_CustomEvent_Payload;                        // 0x0260(0x00B0)()
	class AActor*                                 CallFunc_GetAvatarActorFromActorInfo_ReturnValue_1; // 0x0310(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0318(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4ECF[0x7];                                     // 0x0319(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_DCMonsterBase_C*                    K2Node_DynamicCast_AsBP_DCMonster_Base;            // 0x0320(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0328(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPathFollowingResult                          K2Node_CustomEvent_MovementResult_1;               // 0x0329(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4ED0[0x6];                                     // 0x032A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetRandomReachablePointInRadius_RandomLocation; // 0x0330(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_GetRandomReachablePointInRadius_ReturnValue; // 0x0348(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4ED1[0x7];                                     // 0x0349(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Vector_Distance_ReturnValue;              // 0x0350(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const struct FGameplayEventData& Payload)> K2Node_CreateDelegate_OutputDelegate_2;            // 0x0358(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x0368(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4ED2[0x3];                                     // 0x0369(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(EPathFollowingResult MovementResult)> K2Node_CreateDelegate_OutputDelegate_3;            // 0x036C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4ED3[0x4];                                     // 0x037C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAIAsyncTaskBlueprintProxy*             CallFunc_CreateMoveToProxyObject_ReturnValue;      // 0x0380(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_4;            // 0x0388(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0398(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x03A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4ED4[0x3];                                     // 0x03A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_RandomInteger_ReturnValue;                // 0x03A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x03A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4ED5[0x7];                                     // 0x03A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_RandomFloatInRange_ReturnValue;           // 0x03B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAbilityTask_WaitDelay*                 CallFunc_WaitDelay_ReturnValue;                    // 0x03B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x03C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4ED6[0x3];                                     // 0x03C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_WaitDelay_Time_ImplicitCast;              // 0x03C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_IceKoboldAxeman_Inspecting_Phase_C_ExecuteUbergraph_GA_IceKoboldAxeman_Inspecting_Phase) == 0x000010, "Wrong alignment on GA_IceKoboldAxeman_Inspecting_Phase_C_ExecuteUbergraph_GA_IceKoboldAxeman_Inspecting_Phase");
static_assert(sizeof(GA_IceKoboldAxeman_Inspecting_Phase_C_ExecuteUbergraph_GA_IceKoboldAxeman_Inspecting_Phase) == 0x0003D0, "Wrong size on GA_IceKoboldAxeman_Inspecting_Phase_C_ExecuteUbergraph_GA_IceKoboldAxeman_Inspecting_Phase");
static_assert(offsetof(GA_IceKoboldAxeman_Inspecting_Phase_C_ExecuteUbergraph_GA_IceKoboldAxeman_Inspecting_Phase, EntryPoint) == 0x000000, "Member 'GA_IceKoboldAxeman_Inspecting_Phase_C_ExecuteUbergraph_GA_IceKoboldAxeman_Inspecting_Phase::EntryPoint' has a wrong offset!");
static_assert(offsetof(GA_IceKoboldAxeman_Inspecting_Phase_C_ExecuteUbergraph_GA_IceKoboldAxeman_Inspecting_Phase, K2Node_Event_bWasCancelled) == 0x000004, "Member 'GA_IceKoboldAxeman_Inspecting_Phase_C_ExecuteUbergraph_GA_IceKoboldAxeman_Inspecting_Phase::K2Node_Event_bWasCancelled' has a wrong offset!");
static_assert(offsetof(GA_IceKoboldAxeman_Inspecting_Phase_C_ExecuteUbergraph_GA_IceKoboldAxeman_Inspecting_Phase, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'GA_IceKoboldAxeman_Inspecting_Phase_C_ExecuteUbergraph_GA_IceKoboldAxeman_Inspecting_Phase::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(GA_IceKoboldAxeman_Inspecting_Phase_C_ExecuteUbergraph_GA_IceKoboldAxeman_Inspecting_Phase, K2Node_CustomEvent_MovementResult) == 0x000018, "Member 'GA_IceKoboldAxeman_Inspecting_Phase_C_ExecuteUbergraph_GA_IceKoboldAxeman_Inspecting_Phase::K2Node_CustomEvent_MovementResult' has a wrong offset!");
static_assert(offsetof(GA_IceKoboldAxeman_Inspecting_Phase_C_ExecuteUbergraph_GA_IceKoboldAxeman_Inspecting_Phase, Temp_byte_Variable) == 0x000019, "Member 'GA_IceKoboldAxeman_Inspecting_Phase_C_ExecuteUbergraph_GA_IceKoboldAxeman_Inspecting_Phase::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(GA_IceKoboldAxeman_Inspecting_Phase_C_ExecuteUbergraph_GA_IceKoboldAxeman_Inspecting_Phase, K2Node_CreateDelegate_OutputDelegate_1) == 0x00001C, "Member 'GA_IceKoboldAxeman_Inspecting_Phase_C_ExecuteUbergraph_GA_IceKoboldAxeman_Inspecting_Phase::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(GA_IceKoboldAxeman_Inspecting_Phase_C_ExecuteUbergraph_GA_IceKoboldAxeman_Inspecting_Phase, Temp_int_Variable) == 0x00002C, "Member 'GA_IceKoboldAxeman_Inspecting_Phase_C_ExecuteUbergraph_GA_IceKoboldAxeman_Inspecting_Phase::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(GA_IceKoboldAxeman_Inspecting_Phase_C_ExecuteUbergraph_GA_IceKoboldAxeman_Inspecting_Phase, CallFunc_Add_IntInt_ReturnValue) == 0x000030, "Member 'GA_IceKoboldAxeman_Inspecting_Phase_C_ExecuteUbergraph_GA_IceKoboldAxeman_Inspecting_Phase::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_IceKoboldAxeman_Inspecting_Phase_C_ExecuteUbergraph_GA_IceKoboldAxeman_Inspecting_Phase, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000034, "Member 'GA_IceKoboldAxeman_Inspecting_Phase_C_ExecuteUbergraph_GA_IceKoboldAxeman_Inspecting_Phase::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_IceKoboldAxeman_Inspecting_Phase_C_ExecuteUbergraph_GA_IceKoboldAxeman_Inspecting_Phase, Temp_bool_Variable) == 0x000035, "Member 'GA_IceKoboldAxeman_Inspecting_Phase_C_ExecuteUbergraph_GA_IceKoboldAxeman_Inspecting_Phase::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(GA_IceKoboldAxeman_Inspecting_Phase_C_ExecuteUbergraph_GA_IceKoboldAxeman_Inspecting_Phase, CallFunc_WaitGameplayEvent_ReturnValue) == 0x000038, "Member 'GA_IceKoboldAxeman_Inspecting_Phase_C_ExecuteUbergraph_GA_IceKoboldAxeman_Inspecting_Phase::CallFunc_WaitGameplayEvent_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_IceKoboldAxeman_Inspecting_Phase_C_ExecuteUbergraph_GA_IceKoboldAxeman_Inspecting_Phase, CallFunc_IsValid_ReturnValue) == 0x000040, "Member 'GA_IceKoboldAxeman_Inspecting_Phase_C_ExecuteUbergraph_GA_IceKoboldAxeman_Inspecting_Phase::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_IceKoboldAxeman_Inspecting_Phase_C_ExecuteUbergraph_GA_IceKoboldAxeman_Inspecting_Phase, CallFunc_Not_PreBool_ReturnValue) == 0x000041, "Member 'GA_IceKoboldAxeman_Inspecting_Phase_C_ExecuteUbergraph_GA_IceKoboldAxeman_Inspecting_Phase::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_IceKoboldAxeman_Inspecting_Phase_C_ExecuteUbergraph_GA_IceKoboldAxeman_Inspecting_Phase, CallFunc_IsValid_ReturnValue_1) == 0x000042, "Member 'GA_IceKoboldAxeman_Inspecting_Phase_C_ExecuteUbergraph_GA_IceKoboldAxeman_Inspecting_Phase::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_IceKoboldAxeman_Inspecting_Phase_C_ExecuteUbergraph_GA_IceKoboldAxeman_Inspecting_Phase, CallFunc_BooleanAND_ReturnValue) == 0x000043, "Member 'GA_IceKoboldAxeman_Inspecting_Phase_C_ExecuteUbergraph_GA_IceKoboldAxeman_Inspecting_Phase::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_IceKoboldAxeman_Inspecting_Phase_C_ExecuteUbergraph_GA_IceKoboldAxeman_Inspecting_Phase, CallFunc_GetAvatarActorFromActorInfo_ReturnValue) == 0x000048, "Member 'GA_IceKoboldAxeman_Inspecting_Phase_C_ExecuteUbergraph_GA_IceKoboldAxeman_Inspecting_Phase::CallFunc_GetAvatarActorFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_IceKoboldAxeman_Inspecting_Phase_C_ExecuteUbergraph_GA_IceKoboldAxeman_Inspecting_Phase, CallFunc_GetTransform_ReturnValue) == 0x000050, "Member 'GA_IceKoboldAxeman_Inspecting_Phase_C_ExecuteUbergraph_GA_IceKoboldAxeman_Inspecting_Phase::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_IceKoboldAxeman_Inspecting_Phase_C_ExecuteUbergraph_GA_IceKoboldAxeman_Inspecting_Phase, Temp_struct_Variable) == 0x0000B0, "Member 'GA_IceKoboldAxeman_Inspecting_Phase_C_ExecuteUbergraph_GA_IceKoboldAxeman_Inspecting_Phase::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(GA_IceKoboldAxeman_Inspecting_Phase_C_ExecuteUbergraph_GA_IceKoboldAxeman_Inspecting_Phase, CallFunc_BreakTransform_Location) == 0x000160, "Member 'GA_IceKoboldAxeman_Inspecting_Phase_C_ExecuteUbergraph_GA_IceKoboldAxeman_Inspecting_Phase::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(GA_IceKoboldAxeman_Inspecting_Phase_C_ExecuteUbergraph_GA_IceKoboldAxeman_Inspecting_Phase, CallFunc_BreakTransform_Rotation) == 0x000178, "Member 'GA_IceKoboldAxeman_Inspecting_Phase_C_ExecuteUbergraph_GA_IceKoboldAxeman_Inspecting_Phase::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(GA_IceKoboldAxeman_Inspecting_Phase_C_ExecuteUbergraph_GA_IceKoboldAxeman_Inspecting_Phase, CallFunc_BreakTransform_Scale) == 0x000190, "Member 'GA_IceKoboldAxeman_Inspecting_Phase_C_ExecuteUbergraph_GA_IceKoboldAxeman_Inspecting_Phase::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(GA_IceKoboldAxeman_Inspecting_Phase_C_ExecuteUbergraph_GA_IceKoboldAxeman_Inspecting_Phase, CallFunc_IsValid_ReturnValue_2) == 0x0001A8, "Member 'GA_IceKoboldAxeman_Inspecting_Phase_C_ExecuteUbergraph_GA_IceKoboldAxeman_Inspecting_Phase::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GA_IceKoboldAxeman_Inspecting_Phase_C_ExecuteUbergraph_GA_IceKoboldAxeman_Inspecting_Phase, K2Node_Event_TriggerEventData) == 0x0001B0, "Member 'GA_IceKoboldAxeman_Inspecting_Phase_C_ExecuteUbergraph_GA_IceKoboldAxeman_Inspecting_Phase::K2Node_Event_TriggerEventData' has a wrong offset!");
static_assert(offsetof(GA_IceKoboldAxeman_Inspecting_Phase_C_ExecuteUbergraph_GA_IceKoboldAxeman_Inspecting_Phase, K2Node_CustomEvent_Payload) == 0x000260, "Member 'GA_IceKoboldAxeman_Inspecting_Phase_C_ExecuteUbergraph_GA_IceKoboldAxeman_Inspecting_Phase::K2Node_CustomEvent_Payload' has a wrong offset!");
static_assert(offsetof(GA_IceKoboldAxeman_Inspecting_Phase_C_ExecuteUbergraph_GA_IceKoboldAxeman_Inspecting_Phase, CallFunc_GetAvatarActorFromActorInfo_ReturnValue_1) == 0x000310, "Member 'GA_IceKoboldAxeman_Inspecting_Phase_C_ExecuteUbergraph_GA_IceKoboldAxeman_Inspecting_Phase::CallFunc_GetAvatarActorFromActorInfo_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_IceKoboldAxeman_Inspecting_Phase_C_ExecuteUbergraph_GA_IceKoboldAxeman_Inspecting_Phase, CallFunc_IsValid_ReturnValue_3) == 0x000318, "Member 'GA_IceKoboldAxeman_Inspecting_Phase_C_ExecuteUbergraph_GA_IceKoboldAxeman_Inspecting_Phase::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(GA_IceKoboldAxeman_Inspecting_Phase_C_ExecuteUbergraph_GA_IceKoboldAxeman_Inspecting_Phase, K2Node_DynamicCast_AsBP_DCMonster_Base) == 0x000320, "Member 'GA_IceKoboldAxeman_Inspecting_Phase_C_ExecuteUbergraph_GA_IceKoboldAxeman_Inspecting_Phase::K2Node_DynamicCast_AsBP_DCMonster_Base' has a wrong offset!");
static_assert(offsetof(GA_IceKoboldAxeman_Inspecting_Phase_C_ExecuteUbergraph_GA_IceKoboldAxeman_Inspecting_Phase, K2Node_DynamicCast_bSuccess) == 0x000328, "Member 'GA_IceKoboldAxeman_Inspecting_Phase_C_ExecuteUbergraph_GA_IceKoboldAxeman_Inspecting_Phase::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GA_IceKoboldAxeman_Inspecting_Phase_C_ExecuteUbergraph_GA_IceKoboldAxeman_Inspecting_Phase, K2Node_CustomEvent_MovementResult_1) == 0x000329, "Member 'GA_IceKoboldAxeman_Inspecting_Phase_C_ExecuteUbergraph_GA_IceKoboldAxeman_Inspecting_Phase::K2Node_CustomEvent_MovementResult_1' has a wrong offset!");
static_assert(offsetof(GA_IceKoboldAxeman_Inspecting_Phase_C_ExecuteUbergraph_GA_IceKoboldAxeman_Inspecting_Phase, CallFunc_K2_GetRandomReachablePointInRadius_RandomLocation) == 0x000330, "Member 'GA_IceKoboldAxeman_Inspecting_Phase_C_ExecuteUbergraph_GA_IceKoboldAxeman_Inspecting_Phase::CallFunc_K2_GetRandomReachablePointInRadius_RandomLocation' has a wrong offset!");
static_assert(offsetof(GA_IceKoboldAxeman_Inspecting_Phase_C_ExecuteUbergraph_GA_IceKoboldAxeman_Inspecting_Phase, CallFunc_K2_GetRandomReachablePointInRadius_ReturnValue) == 0x000348, "Member 'GA_IceKoboldAxeman_Inspecting_Phase_C_ExecuteUbergraph_GA_IceKoboldAxeman_Inspecting_Phase::CallFunc_K2_GetRandomReachablePointInRadius_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_IceKoboldAxeman_Inspecting_Phase_C_ExecuteUbergraph_GA_IceKoboldAxeman_Inspecting_Phase, CallFunc_Vector_Distance_ReturnValue) == 0x000350, "Member 'GA_IceKoboldAxeman_Inspecting_Phase_C_ExecuteUbergraph_GA_IceKoboldAxeman_Inspecting_Phase::CallFunc_Vector_Distance_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_IceKoboldAxeman_Inspecting_Phase_C_ExecuteUbergraph_GA_IceKoboldAxeman_Inspecting_Phase, K2Node_CreateDelegate_OutputDelegate_2) == 0x000358, "Member 'GA_IceKoboldAxeman_Inspecting_Phase_C_ExecuteUbergraph_GA_IceKoboldAxeman_Inspecting_Phase::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(GA_IceKoboldAxeman_Inspecting_Phase_C_ExecuteUbergraph_GA_IceKoboldAxeman_Inspecting_Phase, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x000368, "Member 'GA_IceKoboldAxeman_Inspecting_Phase_C_ExecuteUbergraph_GA_IceKoboldAxeman_Inspecting_Phase::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_IceKoboldAxeman_Inspecting_Phase_C_ExecuteUbergraph_GA_IceKoboldAxeman_Inspecting_Phase, K2Node_CreateDelegate_OutputDelegate_3) == 0x00036C, "Member 'GA_IceKoboldAxeman_Inspecting_Phase_C_ExecuteUbergraph_GA_IceKoboldAxeman_Inspecting_Phase::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(GA_IceKoboldAxeman_Inspecting_Phase_C_ExecuteUbergraph_GA_IceKoboldAxeman_Inspecting_Phase, CallFunc_CreateMoveToProxyObject_ReturnValue) == 0x000380, "Member 'GA_IceKoboldAxeman_Inspecting_Phase_C_ExecuteUbergraph_GA_IceKoboldAxeman_Inspecting_Phase::CallFunc_CreateMoveToProxyObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_IceKoboldAxeman_Inspecting_Phase_C_ExecuteUbergraph_GA_IceKoboldAxeman_Inspecting_Phase, K2Node_CreateDelegate_OutputDelegate_4) == 0x000388, "Member 'GA_IceKoboldAxeman_Inspecting_Phase_C_ExecuteUbergraph_GA_IceKoboldAxeman_Inspecting_Phase::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(GA_IceKoboldAxeman_Inspecting_Phase_C_ExecuteUbergraph_GA_IceKoboldAxeman_Inspecting_Phase, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000398, "Member 'GA_IceKoboldAxeman_Inspecting_Phase_C_ExecuteUbergraph_GA_IceKoboldAxeman_Inspecting_Phase::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_IceKoboldAxeman_Inspecting_Phase_C_ExecuteUbergraph_GA_IceKoboldAxeman_Inspecting_Phase, CallFunc_IsValid_ReturnValue_4) == 0x0003A0, "Member 'GA_IceKoboldAxeman_Inspecting_Phase_C_ExecuteUbergraph_GA_IceKoboldAxeman_Inspecting_Phase::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(GA_IceKoboldAxeman_Inspecting_Phase_C_ExecuteUbergraph_GA_IceKoboldAxeman_Inspecting_Phase, CallFunc_RandomInteger_ReturnValue) == 0x0003A4, "Member 'GA_IceKoboldAxeman_Inspecting_Phase_C_ExecuteUbergraph_GA_IceKoboldAxeman_Inspecting_Phase::CallFunc_RandomInteger_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_IceKoboldAxeman_Inspecting_Phase_C_ExecuteUbergraph_GA_IceKoboldAxeman_Inspecting_Phase, K2Node_SwitchInteger_CmpSuccess) == 0x0003A8, "Member 'GA_IceKoboldAxeman_Inspecting_Phase_C_ExecuteUbergraph_GA_IceKoboldAxeman_Inspecting_Phase::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(GA_IceKoboldAxeman_Inspecting_Phase_C_ExecuteUbergraph_GA_IceKoboldAxeman_Inspecting_Phase, CallFunc_RandomFloatInRange_ReturnValue) == 0x0003B0, "Member 'GA_IceKoboldAxeman_Inspecting_Phase_C_ExecuteUbergraph_GA_IceKoboldAxeman_Inspecting_Phase::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_IceKoboldAxeman_Inspecting_Phase_C_ExecuteUbergraph_GA_IceKoboldAxeman_Inspecting_Phase, CallFunc_WaitDelay_ReturnValue) == 0x0003B8, "Member 'GA_IceKoboldAxeman_Inspecting_Phase_C_ExecuteUbergraph_GA_IceKoboldAxeman_Inspecting_Phase::CallFunc_WaitDelay_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_IceKoboldAxeman_Inspecting_Phase_C_ExecuteUbergraph_GA_IceKoboldAxeman_Inspecting_Phase, CallFunc_IsValid_ReturnValue_5) == 0x0003C0, "Member 'GA_IceKoboldAxeman_Inspecting_Phase_C_ExecuteUbergraph_GA_IceKoboldAxeman_Inspecting_Phase::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(GA_IceKoboldAxeman_Inspecting_Phase_C_ExecuteUbergraph_GA_IceKoboldAxeman_Inspecting_Phase, CallFunc_WaitDelay_Time_ImplicitCast) == 0x0003C4, "Member 'GA_IceKoboldAxeman_Inspecting_Phase_C_ExecuteUbergraph_GA_IceKoboldAxeman_Inspecting_Phase::CallFunc_WaitDelay_Time_ImplicitCast' has a wrong offset!");

// Function GA_IceKoboldAxeman_Inspecting_Phase.GA_IceKoboldAxeman_Inspecting_Phase_C.GA_KoboldStoneAxe_InspectingPhase_AutoGenFunc
// 0x0018 (0x0018 - 0x0000)
struct GA_IceKoboldAxeman_Inspecting_Phase_C_GA_KoboldStoneAxe_InspectingPhase_AutoGenFunc final
{
public:
	class AActor*                                 CallFunc_GetAvatarActorFromActorInfo_ReturnValue;  // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_IceKoboldAxeman_C*                  K2Node_DynamicCast_AsBP_Ice_Kobold_Axeman;         // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_IceKoboldAxeman_Inspecting_Phase_C_GA_KoboldStoneAxe_InspectingPhase_AutoGenFunc) == 0x000008, "Wrong alignment on GA_IceKoboldAxeman_Inspecting_Phase_C_GA_KoboldStoneAxe_InspectingPhase_AutoGenFunc");
static_assert(sizeof(GA_IceKoboldAxeman_Inspecting_Phase_C_GA_KoboldStoneAxe_InspectingPhase_AutoGenFunc) == 0x000018, "Wrong size on GA_IceKoboldAxeman_Inspecting_Phase_C_GA_KoboldStoneAxe_InspectingPhase_AutoGenFunc");
static_assert(offsetof(GA_IceKoboldAxeman_Inspecting_Phase_C_GA_KoboldStoneAxe_InspectingPhase_AutoGenFunc, CallFunc_GetAvatarActorFromActorInfo_ReturnValue) == 0x000000, "Member 'GA_IceKoboldAxeman_Inspecting_Phase_C_GA_KoboldStoneAxe_InspectingPhase_AutoGenFunc::CallFunc_GetAvatarActorFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_IceKoboldAxeman_Inspecting_Phase_C_GA_KoboldStoneAxe_InspectingPhase_AutoGenFunc, K2Node_DynamicCast_AsBP_Ice_Kobold_Axeman) == 0x000008, "Member 'GA_IceKoboldAxeman_Inspecting_Phase_C_GA_KoboldStoneAxe_InspectingPhase_AutoGenFunc::K2Node_DynamicCast_AsBP_Ice_Kobold_Axeman' has a wrong offset!");
static_assert(offsetof(GA_IceKoboldAxeman_Inspecting_Phase_C_GA_KoboldStoneAxe_InspectingPhase_AutoGenFunc, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'GA_IceKoboldAxeman_Inspecting_Phase_C_GA_KoboldStoneAxe_InspectingPhase_AutoGenFunc::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function GA_IceKoboldAxeman_Inspecting_Phase.GA_IceKoboldAxeman_Inspecting_Phase_C.K2_OnEndAbility
// 0x0001 (0x0001 - 0x0000)
struct GA_IceKoboldAxeman_Inspecting_Phase_C_K2_OnEndAbility final
{
public:
	bool                                          bWasCancelled;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_IceKoboldAxeman_Inspecting_Phase_C_K2_OnEndAbility) == 0x000001, "Wrong alignment on GA_IceKoboldAxeman_Inspecting_Phase_C_K2_OnEndAbility");
static_assert(sizeof(GA_IceKoboldAxeman_Inspecting_Phase_C_K2_OnEndAbility) == 0x000001, "Wrong size on GA_IceKoboldAxeman_Inspecting_Phase_C_K2_OnEndAbility");
static_assert(offsetof(GA_IceKoboldAxeman_Inspecting_Phase_C_K2_OnEndAbility, bWasCancelled) == 0x000000, "Member 'GA_IceKoboldAxeman_Inspecting_Phase_C_K2_OnEndAbility::bWasCancelled' has a wrong offset!");

// Function GA_IceKoboldAxeman_Inspecting_Phase.GA_IceKoboldAxeman_Inspecting_Phase_C.OnFail_A6942E6543705A0366F67F9C03322619
// 0x0001 (0x0001 - 0x0000)
struct GA_IceKoboldAxeman_Inspecting_Phase_C_OnFail_A6942E6543705A0366F67F9C03322619 final
{
public:
	EPathFollowingResult                          MovementResult;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_IceKoboldAxeman_Inspecting_Phase_C_OnFail_A6942E6543705A0366F67F9C03322619) == 0x000001, "Wrong alignment on GA_IceKoboldAxeman_Inspecting_Phase_C_OnFail_A6942E6543705A0366F67F9C03322619");
static_assert(sizeof(GA_IceKoboldAxeman_Inspecting_Phase_C_OnFail_A6942E6543705A0366F67F9C03322619) == 0x000001, "Wrong size on GA_IceKoboldAxeman_Inspecting_Phase_C_OnFail_A6942E6543705A0366F67F9C03322619");
static_assert(offsetof(GA_IceKoboldAxeman_Inspecting_Phase_C_OnFail_A6942E6543705A0366F67F9C03322619, MovementResult) == 0x000000, "Member 'GA_IceKoboldAxeman_Inspecting_Phase_C_OnFail_A6942E6543705A0366F67F9C03322619::MovementResult' has a wrong offset!");

// Function GA_IceKoboldAxeman_Inspecting_Phase.GA_IceKoboldAxeman_Inspecting_Phase_C.OnSuccess_A6942E6543705A0366F67F9C03322619
// 0x0001 (0x0001 - 0x0000)
struct GA_IceKoboldAxeman_Inspecting_Phase_C_OnSuccess_A6942E6543705A0366F67F9C03322619 final
{
public:
	EPathFollowingResult                          MovementResult;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_IceKoboldAxeman_Inspecting_Phase_C_OnSuccess_A6942E6543705A0366F67F9C03322619) == 0x000001, "Wrong alignment on GA_IceKoboldAxeman_Inspecting_Phase_C_OnSuccess_A6942E6543705A0366F67F9C03322619");
static_assert(sizeof(GA_IceKoboldAxeman_Inspecting_Phase_C_OnSuccess_A6942E6543705A0366F67F9C03322619) == 0x000001, "Wrong size on GA_IceKoboldAxeman_Inspecting_Phase_C_OnSuccess_A6942E6543705A0366F67F9C03322619");
static_assert(offsetof(GA_IceKoboldAxeman_Inspecting_Phase_C_OnSuccess_A6942E6543705A0366F67F9C03322619, MovementResult) == 0x000000, "Member 'GA_IceKoboldAxeman_Inspecting_Phase_C_OnSuccess_A6942E6543705A0366F67F9C03322619::MovementResult' has a wrong offset!");

}

