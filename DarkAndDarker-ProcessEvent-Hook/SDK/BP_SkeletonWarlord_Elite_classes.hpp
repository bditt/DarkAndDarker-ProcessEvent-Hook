#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_SkeletonWarlord_Elite

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "BP_SkeletonWarlord_classes.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_SkeletonWarlord_Elite.BP_SkeletonWarlord_Elite_C
// 0x00B0 (0x16B0 - 0x1600)
class ABP_SkeletonWarlord_Elite_C final : public ABP_SkeletonWarlord_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_SkeletonWarlord_Elite_C;         // 0x1600(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	TArray<class ADCPlayerCharacterBase*>         Cursed_Player;                                     // 0x1608(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	struct FVector                                Explosion_Area_Radius;                             // 0x1618(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Explosion_Area_Preceding_Time;                     // 0x1630(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Exceptional_Area_Radius;                           // 0x1638(0x0008)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Exceptional_Area_Location;                         // 0x1640(0x0018)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)
	struct FPrimaryAssetId                        Monster_ID;                                        // 0x1658(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	int32                                         Explosion_Radius_Base;                             // 0x1668(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Explosion_Radius_Per_Lv_Effect_Count;              // 0x166C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Explosion_Preciding_Time;                          // 0x1670(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Explosion_Radius;                                  // 0x1678(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_435B[0x4];                                     // 0x167C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Spawn_Transform_Location;                          // 0x1680(0x0018)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)
	TArray<class ADCMonsterBase*>                 Crystal;                                           // 0x1698(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)

public:
	void Add_Curse_GameplayCue(class ADCCharacterBase* DCCharacterBase);
	void Comeback_Activated();
	void ExecuteUbergraph_BP_SkeletonWarlord_Elite(int32 EntryPoint);
	void OnRep_Exceptional_Area_Location();
	void OnRep_Exceptional_Area_Radius();
	void OnRep_Explosion_Radius();
	void OnRep_Spawn_Transform_Location();
	void Remove_Curse_GameplayCue(class ADCCharacterBase* DCCharacterBase);
	void Reset_All_Variables();
	void Trigger_In_Combat_Area(class AActor* OverlappedActor, class AActor* OtherActor);
	void Trigger_Out_Combat_Area(class AActor* OverlappedActor, class AActor* OtherActor);
	void GameplayTagUpdated(const struct FGameplayTag& InGameplayTag, int32 InCount);
	void OnSetAI();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_SkeletonWarlord_Elite_C">();
	}
	static class ABP_SkeletonWarlord_Elite_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_SkeletonWarlord_Elite_C>();
	}
};
static_assert(alignof(ABP_SkeletonWarlord_Elite_C) == 0x000010, "Wrong alignment on ABP_SkeletonWarlord_Elite_C");
static_assert(sizeof(ABP_SkeletonWarlord_Elite_C) == 0x0016B0, "Wrong size on ABP_SkeletonWarlord_Elite_C");
static_assert(offsetof(ABP_SkeletonWarlord_Elite_C, UberGraphFrame_BP_SkeletonWarlord_Elite_C) == 0x001600, "Member 'ABP_SkeletonWarlord_Elite_C::UberGraphFrame_BP_SkeletonWarlord_Elite_C' has a wrong offset!");
static_assert(offsetof(ABP_SkeletonWarlord_Elite_C, Cursed_Player) == 0x001608, "Member 'ABP_SkeletonWarlord_Elite_C::Cursed_Player' has a wrong offset!");
static_assert(offsetof(ABP_SkeletonWarlord_Elite_C, Explosion_Area_Radius) == 0x001618, "Member 'ABP_SkeletonWarlord_Elite_C::Explosion_Area_Radius' has a wrong offset!");
static_assert(offsetof(ABP_SkeletonWarlord_Elite_C, Explosion_Area_Preceding_Time) == 0x001630, "Member 'ABP_SkeletonWarlord_Elite_C::Explosion_Area_Preceding_Time' has a wrong offset!");
static_assert(offsetof(ABP_SkeletonWarlord_Elite_C, Exceptional_Area_Radius) == 0x001638, "Member 'ABP_SkeletonWarlord_Elite_C::Exceptional_Area_Radius' has a wrong offset!");
static_assert(offsetof(ABP_SkeletonWarlord_Elite_C, Exceptional_Area_Location) == 0x001640, "Member 'ABP_SkeletonWarlord_Elite_C::Exceptional_Area_Location' has a wrong offset!");
static_assert(offsetof(ABP_SkeletonWarlord_Elite_C, Monster_ID) == 0x001658, "Member 'ABP_SkeletonWarlord_Elite_C::Monster_ID' has a wrong offset!");
static_assert(offsetof(ABP_SkeletonWarlord_Elite_C, Explosion_Radius_Base) == 0x001668, "Member 'ABP_SkeletonWarlord_Elite_C::Explosion_Radius_Base' has a wrong offset!");
static_assert(offsetof(ABP_SkeletonWarlord_Elite_C, Explosion_Radius_Per_Lv_Effect_Count) == 0x00166C, "Member 'ABP_SkeletonWarlord_Elite_C::Explosion_Radius_Per_Lv_Effect_Count' has a wrong offset!");
static_assert(offsetof(ABP_SkeletonWarlord_Elite_C, Explosion_Preciding_Time) == 0x001670, "Member 'ABP_SkeletonWarlord_Elite_C::Explosion_Preciding_Time' has a wrong offset!");
static_assert(offsetof(ABP_SkeletonWarlord_Elite_C, Explosion_Radius) == 0x001678, "Member 'ABP_SkeletonWarlord_Elite_C::Explosion_Radius' has a wrong offset!");
static_assert(offsetof(ABP_SkeletonWarlord_Elite_C, Spawn_Transform_Location) == 0x001680, "Member 'ABP_SkeletonWarlord_Elite_C::Spawn_Transform_Location' has a wrong offset!");
static_assert(offsetof(ABP_SkeletonWarlord_Elite_C, Crystal) == 0x001698, "Member 'ABP_SkeletonWarlord_Elite_C::Crystal' has a wrong offset!");

}

