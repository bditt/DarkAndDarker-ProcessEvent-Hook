#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_VictoryStrike

#include "Basic.hpp"

#include "GA_VictoryStrike_classes.hpp"
#include "GA_VictoryStrike_parameters.hpp"


namespace SDK
{

// Function GA_VictoryStrike.GA_VictoryStrike_C.ClientOnSkillActivate
// (Event, Protected, BlueprintEvent)
// Parameters:
// struct FGameplayTag                     SkillTag                                               (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// struct FGameplayTag                     CooldownTag                                            (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)

void UGA_VictoryStrike_C::ClientOnSkillActivate(const struct FGameplayTag& SkillTag, const struct FGameplayTag& CooldownTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_VictoryStrike_C", "ClientOnSkillActivate");

	Params::GA_VictoryStrike_C_ClientOnSkillActivate Parms{};

	Parms.SkillTag = std::move(SkillTag);
	Parms.CooldownTag = std::move(CooldownTag);

	UObject::ProcessEvent(Func, &Parms);
}


// Function GA_VictoryStrike.GA_VictoryStrike_C.EventReceived_4152A666499A52F3576D7DA76244168D
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGameplayTag                     EventTag                                               (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// struct FGameplayEventData               EventData                                              (BlueprintVisible, BlueprintReadOnly, Parm)

void UGA_VictoryStrike_C::EventReceived_4152A666499A52F3576D7DA76244168D(const struct FGameplayTag& EventTag, const struct FGameplayEventData& EventData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_VictoryStrike_C", "EventReceived_4152A666499A52F3576D7DA76244168D");

	Params::GA_VictoryStrike_C_EventReceived_4152A666499A52F3576D7DA76244168D Parms{};

	Parms.EventTag = std::move(EventTag);
	Parms.EventData = std::move(EventData);

	UObject::ProcessEvent(Func, &Parms);
}


// Function GA_VictoryStrike.GA_VictoryStrike_C.EventReceived_4550563E45E7099E87C701BAF081F1C4
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGameplayTag                     EventTag                                               (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// struct FGameplayEventData               EventData                                              (BlueprintVisible, BlueprintReadOnly, Parm)

void UGA_VictoryStrike_C::EventReceived_4550563E45E7099E87C701BAF081F1C4(const struct FGameplayTag& EventTag, const struct FGameplayEventData& EventData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_VictoryStrike_C", "EventReceived_4550563E45E7099E87C701BAF081F1C4");

	Params::GA_VictoryStrike_C_EventReceived_4550563E45E7099E87C701BAF081F1C4 Parms{};

	Parms.EventTag = std::move(EventTag);
	Parms.EventData = std::move(EventData);

	UObject::ProcessEvent(Func, &Parms);
}


// Function GA_VictoryStrike.GA_VictoryStrike_C.EventReceived_E82B711947DCAFA3711E85BF6CDB03F0
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGameplayTag                     EventTag                                               (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// struct FGameplayEventData               EventData                                              (BlueprintVisible, BlueprintReadOnly, Parm)

void UGA_VictoryStrike_C::EventReceived_E82B711947DCAFA3711E85BF6CDB03F0(const struct FGameplayTag& EventTag, const struct FGameplayEventData& EventData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_VictoryStrike_C", "EventReceived_E82B711947DCAFA3711E85BF6CDB03F0");

	Params::GA_VictoryStrike_C_EventReceived_E82B711947DCAFA3711E85BF6CDB03F0 Parms{};

	Parms.EventTag = std::move(EventTag);
	Parms.EventData = std::move(EventData);

	UObject::ProcessEvent(Func, &Parms);
}


// Function GA_VictoryStrike.GA_VictoryStrike_C.ExecuteUbergraph_GA_VictoryStrike
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UGA_VictoryStrike_C::ExecuteUbergraph_GA_VictoryStrike(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_VictoryStrike_C", "ExecuteUbergraph_GA_VictoryStrike");

	Params::GA_VictoryStrike_C_ExecuteUbergraph_GA_VictoryStrike Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GA_VictoryStrike.GA_VictoryStrike_C.K2_OnEndAbility
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bWasCancelled                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UGA_VictoryStrike_C::K2_OnEndAbility(bool bWasCancelled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_VictoryStrike_C", "K2_OnEndAbility");

	Params::GA_VictoryStrike_C_K2_OnEndAbility Parms{};

	Parms.bWasCancelled = bWasCancelled;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GA_VictoryStrike.GA_VictoryStrike_C.ServerOnSkillActivate
// (Event, Protected, BlueprintEvent)
// Parameters:
// struct FGameplayTag                     SkillTag                                               (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// struct FGameplayTag                     CooldownTag                                            (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)

void UGA_VictoryStrike_C::ServerOnSkillActivate(const struct FGameplayTag& SkillTag, const struct FGameplayTag& CooldownTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_VictoryStrike_C", "ServerOnSkillActivate");

	Params::GA_VictoryStrike_C_ServerOnSkillActivate Parms{};

	Parms.SkillTag = std::move(SkillTag);
	Parms.CooldownTag = std::move(CooldownTag);

	UObject::ProcessEvent(Func, &Parms);
}

}

