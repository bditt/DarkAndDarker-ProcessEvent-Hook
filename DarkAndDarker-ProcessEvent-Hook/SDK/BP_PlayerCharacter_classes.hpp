#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_PlayerCharacter

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "DungeonCrawler_classes.hpp"
#include "GameplayTags_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "PhysicsCore_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_PlayerCharacter.BP_PlayerCharacter_C
// 0x0160 (0x0D10 - 0x0BB0)
class ABP_PlayerCharacter_C : public ADCPlayerCharacterBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0BB0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBPC_GrassEffectSpawner_C*              BPC_GrassEffectSpawner;                            // 0x0BB8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UDCMaterialComponent*                   DCMaterial;                                        // 0x0BC0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_VoipAkComponent_C*                  VoipAkComponent;                                   // 0x0BC8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UDCPostProcessingComponent*             DCPostProcessing;                                  // 0x0BD0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UEmoteComponent*                        Emote;                                             // 0x0BD8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UDCActorStatusComponent*                DCActorStatus;                                     // 0x0BE0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UDCAkComponent*                         DCAk;                                              // 0x0BE8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UInteractableTargetComponent*           InteractableTarget;                                // 0x0BF0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UGameHeadupWidgetComponent*             GameHeadupWidget;                                  // 0x0BF8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USpringArmComponent*                    ThirdPersonCameraBoom;                             // 0x0C00(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UCameraComponent*                       FirstPersonCamera;                                 // 0x0C08(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UCameraComponent*                       ThirdPersonCamera;                                 // 0x0C10(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_DCHitBox_C*                         BP_DCHitBox_Hand_R;                                // 0x0C18(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_DCHitBox_C*                         BP_DCHitBox_Arm_R1;                                // 0x0C20(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_DCHitBox_C*                         BP_DCHitBox_Arm_R;                                 // 0x0C28(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_DCHitBox_C*                         BP_DCHitBox_Hand_L;                                // 0x0C30(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_DCHitBox_C*                         BP_DCHitBox_Arm_L1;                                // 0x0C38(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_DCHitBox_C*                         BP_DCHitBox_Arm_L;                                 // 0x0C40(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_DCHitBox_C*                         BP_DCHitBox_Foot_R;                                // 0x0C48(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_DCHitBox_C*                         BP_DCHitBox_Leg_R1;                                // 0x0C50(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_DCHitBox_C*                         BP_DCHitBox_Leg_R;                                 // 0x0C58(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_DCHitBox_C*                         BP_DCHitBox_Foot_L;                                // 0x0C60(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_DCHitBox_C*                         BP_DCHitBox_Leg_L1;                                // 0x0C68(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_DCHitBox_C*                         BP_DCHitBox_Leg_L;                                 // 0x0C70(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_DCHitBox_C*                         BP_DCHitBox_Body2;                                 // 0x0C78(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_DCHitBox_C*                         BP_DCHitBox_Body1;                                 // 0x0C80(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_DCHitBox_C*                         BP_DCHitBox_Body;                                  // 0x0C88(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_DCHitBox_C*                         BP_DCHitBox_Head;                                  // 0x0C90(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                GroundTraceStartPoint;                             // 0x0C98(0x0018)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           SoundQueryTag;                                     // 0x0CB0(0x0008)(Edit, BlueprintVisible, Transient, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	EPhysicalSurface                              LastFootStepSurface;                               // 0x0CB8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFootStepLeft;                                     // 0x0CB9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B3B[0x6];                                     // 0x0CBA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                SoundDataProvider;                                 // 0x0CC0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UAkAudioEvent*                          AkEvent;                                           // 0x0CC8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Location;                                          // 0x0CD0(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        RTPCValuePlayerSpeed;                              // 0x0CE8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CameraCullingDistance;                             // 0x0CF0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bCameraCulling;                                    // 0x0CF8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFPSView;                                          // 0x0CF9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B3C[0x2];                                     // 0x0CFA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           IgniteSoundTag;                                    // 0x0CFC(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B3D[0x4];                                     // 0x0D04(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_GrassInteractionRenderTargetCamera_C* GrassInteractionCamera;                            // 0x0D08(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void EventFMsgSoundEvent(const struct FMsgSoundEvent& Msg);
	void ExecuteUbergraph_BP_PlayerCharacter(int32 EntryPoint);
	void GameplayTagUpdated(const struct FGameplayTag& InGameplayTag, int32 InCount);
	void Get_Current_Holding_Item_Actors_by_Id_Tag(const struct FGameplayTag& IdTag, TArray<class AItemActor*>* ItemActors);
	void Get_Current_Holding_Item_Actors_by_SlotType(const struct FGameplayTag& SlotType, TArray<class AItemActor*>* ItemActors);
	void Get_Equipped_Foot_Item_Info(bool* Bool, struct FDCItemInfo* ItemInfo);
	void Get_Equipped_Item_Actors(const struct FGameplayTag& SlotType, TArray<class AItemActor*>* ItemActors);
	void Get_Equipped_Soul_Heart_Item_Actor(class AItemActor** ItemActor);
	void Get_Soul_Heart_in_Chest(class FString* Param_AccountId, class FString* PartyId);
	class UCameraComponent* GetCameraComponent();
	class UCameraComponent* GetPerspectiveCameraComponent(bool bFirstPersonPerspective);
	void Has_Local_Current_Character_Chase(bool* HasChase);
	void Has_Soul_Heart_In_Chest(bool* bHasSoulHeartInChest);
	void HeadCameraCulling(bool Param_bFPSView);
	void InteractFound(class AActor* Interacter, class UPrimitiveComponent* InteractPart);
	void InteractLost(class AActor* Interacter);
	void InteractSucceed(class AActor* Interacter, const struct FGameplayTag& StateTag, const struct FGameplayTag& TriggerTag, const struct FHitResult& HitResult);
	void OnCommemorativePlaqueText(const struct FPrimaryAssetId& ScriptAseetId, const struct FVector& Param_Location);
	void OnEtherealStateEntered(bool IsActivate);
	void OnMessageReceived_E32555534626CD303291009A607703E1(class UMsgBaseNode* ProxyObject);
	void OnSetPerspective(class APlayerController* InPlayerController, const bool bInIsFirstPersonPerspective);
	void OnSetRenderCustomDepth(bool bValue);
	void OnTarget(bool bTarget);
	void ReceiveBeginPlay();
	void ReceivePreInitializeComponents();
	void ReceiveTick(float DeltaSeconds);
	void Reduce_Current_Holding_Item_Count(int32 Count);
	void Reduce_Holding_Item_Count_By_Id_Tag(const struct FGameplayTag& IdTag, int32 Count);
	void Reduce_Holding_Item_Count_By_ItemId(int64 ItemId, int32 Count);
	void SetRTPCValuePlayerSpeed();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_PlayerCharacter_C">();
	}
	static class ABP_PlayerCharacter_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_PlayerCharacter_C>();
	}
};
static_assert(alignof(ABP_PlayerCharacter_C) == 0x000010, "Wrong alignment on ABP_PlayerCharacter_C");
static_assert(sizeof(ABP_PlayerCharacter_C) == 0x000D10, "Wrong size on ABP_PlayerCharacter_C");
static_assert(offsetof(ABP_PlayerCharacter_C, UberGraphFrame) == 0x000BB0, "Member 'ABP_PlayerCharacter_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_PlayerCharacter_C, BPC_GrassEffectSpawner) == 0x000BB8, "Member 'ABP_PlayerCharacter_C::BPC_GrassEffectSpawner' has a wrong offset!");
static_assert(offsetof(ABP_PlayerCharacter_C, DCMaterial) == 0x000BC0, "Member 'ABP_PlayerCharacter_C::DCMaterial' has a wrong offset!");
static_assert(offsetof(ABP_PlayerCharacter_C, VoipAkComponent) == 0x000BC8, "Member 'ABP_PlayerCharacter_C::VoipAkComponent' has a wrong offset!");
static_assert(offsetof(ABP_PlayerCharacter_C, DCPostProcessing) == 0x000BD0, "Member 'ABP_PlayerCharacter_C::DCPostProcessing' has a wrong offset!");
static_assert(offsetof(ABP_PlayerCharacter_C, Emote) == 0x000BD8, "Member 'ABP_PlayerCharacter_C::Emote' has a wrong offset!");
static_assert(offsetof(ABP_PlayerCharacter_C, DCActorStatus) == 0x000BE0, "Member 'ABP_PlayerCharacter_C::DCActorStatus' has a wrong offset!");
static_assert(offsetof(ABP_PlayerCharacter_C, DCAk) == 0x000BE8, "Member 'ABP_PlayerCharacter_C::DCAk' has a wrong offset!");
static_assert(offsetof(ABP_PlayerCharacter_C, InteractableTarget) == 0x000BF0, "Member 'ABP_PlayerCharacter_C::InteractableTarget' has a wrong offset!");
static_assert(offsetof(ABP_PlayerCharacter_C, GameHeadupWidget) == 0x000BF8, "Member 'ABP_PlayerCharacter_C::GameHeadupWidget' has a wrong offset!");
static_assert(offsetof(ABP_PlayerCharacter_C, ThirdPersonCameraBoom) == 0x000C00, "Member 'ABP_PlayerCharacter_C::ThirdPersonCameraBoom' has a wrong offset!");
static_assert(offsetof(ABP_PlayerCharacter_C, FirstPersonCamera) == 0x000C08, "Member 'ABP_PlayerCharacter_C::FirstPersonCamera' has a wrong offset!");
static_assert(offsetof(ABP_PlayerCharacter_C, ThirdPersonCamera) == 0x000C10, "Member 'ABP_PlayerCharacter_C::ThirdPersonCamera' has a wrong offset!");
static_assert(offsetof(ABP_PlayerCharacter_C, BP_DCHitBox_Hand_R) == 0x000C18, "Member 'ABP_PlayerCharacter_C::BP_DCHitBox_Hand_R' has a wrong offset!");
static_assert(offsetof(ABP_PlayerCharacter_C, BP_DCHitBox_Arm_R1) == 0x000C20, "Member 'ABP_PlayerCharacter_C::BP_DCHitBox_Arm_R1' has a wrong offset!");
static_assert(offsetof(ABP_PlayerCharacter_C, BP_DCHitBox_Arm_R) == 0x000C28, "Member 'ABP_PlayerCharacter_C::BP_DCHitBox_Arm_R' has a wrong offset!");
static_assert(offsetof(ABP_PlayerCharacter_C, BP_DCHitBox_Hand_L) == 0x000C30, "Member 'ABP_PlayerCharacter_C::BP_DCHitBox_Hand_L' has a wrong offset!");
static_assert(offsetof(ABP_PlayerCharacter_C, BP_DCHitBox_Arm_L1) == 0x000C38, "Member 'ABP_PlayerCharacter_C::BP_DCHitBox_Arm_L1' has a wrong offset!");
static_assert(offsetof(ABP_PlayerCharacter_C, BP_DCHitBox_Arm_L) == 0x000C40, "Member 'ABP_PlayerCharacter_C::BP_DCHitBox_Arm_L' has a wrong offset!");
static_assert(offsetof(ABP_PlayerCharacter_C, BP_DCHitBox_Foot_R) == 0x000C48, "Member 'ABP_PlayerCharacter_C::BP_DCHitBox_Foot_R' has a wrong offset!");
static_assert(offsetof(ABP_PlayerCharacter_C, BP_DCHitBox_Leg_R1) == 0x000C50, "Member 'ABP_PlayerCharacter_C::BP_DCHitBox_Leg_R1' has a wrong offset!");
static_assert(offsetof(ABP_PlayerCharacter_C, BP_DCHitBox_Leg_R) == 0x000C58, "Member 'ABP_PlayerCharacter_C::BP_DCHitBox_Leg_R' has a wrong offset!");
static_assert(offsetof(ABP_PlayerCharacter_C, BP_DCHitBox_Foot_L) == 0x000C60, "Member 'ABP_PlayerCharacter_C::BP_DCHitBox_Foot_L' has a wrong offset!");
static_assert(offsetof(ABP_PlayerCharacter_C, BP_DCHitBox_Leg_L1) == 0x000C68, "Member 'ABP_PlayerCharacter_C::BP_DCHitBox_Leg_L1' has a wrong offset!");
static_assert(offsetof(ABP_PlayerCharacter_C, BP_DCHitBox_Leg_L) == 0x000C70, "Member 'ABP_PlayerCharacter_C::BP_DCHitBox_Leg_L' has a wrong offset!");
static_assert(offsetof(ABP_PlayerCharacter_C, BP_DCHitBox_Body2) == 0x000C78, "Member 'ABP_PlayerCharacter_C::BP_DCHitBox_Body2' has a wrong offset!");
static_assert(offsetof(ABP_PlayerCharacter_C, BP_DCHitBox_Body1) == 0x000C80, "Member 'ABP_PlayerCharacter_C::BP_DCHitBox_Body1' has a wrong offset!");
static_assert(offsetof(ABP_PlayerCharacter_C, BP_DCHitBox_Body) == 0x000C88, "Member 'ABP_PlayerCharacter_C::BP_DCHitBox_Body' has a wrong offset!");
static_assert(offsetof(ABP_PlayerCharacter_C, BP_DCHitBox_Head) == 0x000C90, "Member 'ABP_PlayerCharacter_C::BP_DCHitBox_Head' has a wrong offset!");
static_assert(offsetof(ABP_PlayerCharacter_C, GroundTraceStartPoint) == 0x000C98, "Member 'ABP_PlayerCharacter_C::GroundTraceStartPoint' has a wrong offset!");
static_assert(offsetof(ABP_PlayerCharacter_C, SoundQueryTag) == 0x000CB0, "Member 'ABP_PlayerCharacter_C::SoundQueryTag' has a wrong offset!");
static_assert(offsetof(ABP_PlayerCharacter_C, LastFootStepSurface) == 0x000CB8, "Member 'ABP_PlayerCharacter_C::LastFootStepSurface' has a wrong offset!");
static_assert(offsetof(ABP_PlayerCharacter_C, bFootStepLeft) == 0x000CB9, "Member 'ABP_PlayerCharacter_C::bFootStepLeft' has a wrong offset!");
static_assert(offsetof(ABP_PlayerCharacter_C, SoundDataProvider) == 0x000CC0, "Member 'ABP_PlayerCharacter_C::SoundDataProvider' has a wrong offset!");
static_assert(offsetof(ABP_PlayerCharacter_C, AkEvent) == 0x000CC8, "Member 'ABP_PlayerCharacter_C::AkEvent' has a wrong offset!");
static_assert(offsetof(ABP_PlayerCharacter_C, Location) == 0x000CD0, "Member 'ABP_PlayerCharacter_C::Location' has a wrong offset!");
static_assert(offsetof(ABP_PlayerCharacter_C, RTPCValuePlayerSpeed) == 0x000CE8, "Member 'ABP_PlayerCharacter_C::RTPCValuePlayerSpeed' has a wrong offset!");
static_assert(offsetof(ABP_PlayerCharacter_C, CameraCullingDistance) == 0x000CF0, "Member 'ABP_PlayerCharacter_C::CameraCullingDistance' has a wrong offset!");
static_assert(offsetof(ABP_PlayerCharacter_C, bCameraCulling) == 0x000CF8, "Member 'ABP_PlayerCharacter_C::bCameraCulling' has a wrong offset!");
static_assert(offsetof(ABP_PlayerCharacter_C, bFPSView) == 0x000CF9, "Member 'ABP_PlayerCharacter_C::bFPSView' has a wrong offset!");
static_assert(offsetof(ABP_PlayerCharacter_C, IgniteSoundTag) == 0x000CFC, "Member 'ABP_PlayerCharacter_C::IgniteSoundTag' has a wrong offset!");
static_assert(offsetof(ABP_PlayerCharacter_C, GrassInteractionCamera) == 0x000D08, "Member 'ABP_PlayerCharacter_C::GrassInteractionCamera' has a wrong offset!");

}

