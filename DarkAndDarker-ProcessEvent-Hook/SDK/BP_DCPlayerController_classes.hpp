#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_DCPlayerController

#include "Basic.hpp"

#include "DungeonCrawler_structs.hpp"
#include "DungeonCrawler_classes.hpp"
#include "Engine_structs.hpp"
#include "AkAudio_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_DCPlayerController.BP_DCPlayerController_C
// 0x0068 (0x0B98 - 0x0B30)
class ABP_DCPlayerController_C final : public ADCPlayerController
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0B30(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBP_GameVoipComponent_C*                GameVoipComponent;                                 // 0x0B38(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_VoipAkComponent_C*                  SendVoipAkComponent;                               // 0x0B40(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UDCAkComponent*                         DCAk;                                              // 0x0B48(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UDCContextComponent*                    DCContext;                                         // 0x0B50(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UDCCustomizeComponent*                  DCCustomize;                                       // 0x0B58(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UDCPlayerChatComponent*                 DCPlayerChat;                                      // 0x0B60(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UGameTestComponent*                     GameTest;                                          // 0x0B68(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UItemMoveValidatorComponent*            ItemMoveValidator;                                 // 0x0B70(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	EInventoryType                                MovedItemInventoryType;                            // 0x0B78(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_58BA[0x7];                                     // 0x0B79(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         PlayerFootprintArray;                              // 0x0B80(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	bool                                          bIsStartSoundReserved;                             // 0x0B90(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void BindMouse();
	void ExecuteUbergraph_BP_DCPlayerController(int32 EntryPoint);
	void FreeMouse();
	void OnGameStateNotify(const struct FGameStateData& InGameStateData);
	void OnLoadSoundData(class UObject* Object);
	void OnUnmuted();
	void ReceiveTick(float DeltaSeconds);
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_DCPlayerController_C">();
	}
	static class ABP_DCPlayerController_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_DCPlayerController_C>();
	}
};
static_assert(alignof(ABP_DCPlayerController_C) == 0x000008, "Wrong alignment on ABP_DCPlayerController_C");
static_assert(sizeof(ABP_DCPlayerController_C) == 0x000B98, "Wrong size on ABP_DCPlayerController_C");
static_assert(offsetof(ABP_DCPlayerController_C, UberGraphFrame) == 0x000B30, "Member 'ABP_DCPlayerController_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_DCPlayerController_C, GameVoipComponent) == 0x000B38, "Member 'ABP_DCPlayerController_C::GameVoipComponent' has a wrong offset!");
static_assert(offsetof(ABP_DCPlayerController_C, SendVoipAkComponent) == 0x000B40, "Member 'ABP_DCPlayerController_C::SendVoipAkComponent' has a wrong offset!");
static_assert(offsetof(ABP_DCPlayerController_C, DCAk) == 0x000B48, "Member 'ABP_DCPlayerController_C::DCAk' has a wrong offset!");
static_assert(offsetof(ABP_DCPlayerController_C, DCContext) == 0x000B50, "Member 'ABP_DCPlayerController_C::DCContext' has a wrong offset!");
static_assert(offsetof(ABP_DCPlayerController_C, DCCustomize) == 0x000B58, "Member 'ABP_DCPlayerController_C::DCCustomize' has a wrong offset!");
static_assert(offsetof(ABP_DCPlayerController_C, DCPlayerChat) == 0x000B60, "Member 'ABP_DCPlayerController_C::DCPlayerChat' has a wrong offset!");
static_assert(offsetof(ABP_DCPlayerController_C, GameTest) == 0x000B68, "Member 'ABP_DCPlayerController_C::GameTest' has a wrong offset!");
static_assert(offsetof(ABP_DCPlayerController_C, ItemMoveValidator) == 0x000B70, "Member 'ABP_DCPlayerController_C::ItemMoveValidator' has a wrong offset!");
static_assert(offsetof(ABP_DCPlayerController_C, MovedItemInventoryType) == 0x000B78, "Member 'ABP_DCPlayerController_C::MovedItemInventoryType' has a wrong offset!");
static_assert(offsetof(ABP_DCPlayerController_C, PlayerFootprintArray) == 0x000B80, "Member 'ABP_DCPlayerController_C::PlayerFootprintArray' has a wrong offset!");
static_assert(offsetof(ABP_DCPlayerController_C, bIsStartSoundReserved) == 0x000B90, "Member 'ABP_DCPlayerController_C::bIsStartSoundReserved' has a wrong offset!");

}

