#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_FrostWyvern_IcePillar_ControllExceptionFromBreath

#include "Basic.hpp"

#include "GameplayAbilities_structs.hpp"


namespace SDK::Params
{

// Function GA_FrostWyvern_IcePillar_ControllExceptionFromBreath.GA_FrostWyvern_IcePillar_ControllExceptionFromBreath_C.EventReceived_F15D72AC46E453F70389C7968341CCE3
// 0x00B0 (0x00B0 - 0x0000)
struct GA_FrostWyvern_IcePillar_ControllExceptionFromBreath_C_EventReceived_F15D72AC46E453F70389C7968341CCE3 final
{
public:
	struct FGameplayEventData                     Payload;                                           // 0x0000(0x00B0)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(GA_FrostWyvern_IcePillar_ControllExceptionFromBreath_C_EventReceived_F15D72AC46E453F70389C7968341CCE3) == 0x000008, "Wrong alignment on GA_FrostWyvern_IcePillar_ControllExceptionFromBreath_C_EventReceived_F15D72AC46E453F70389C7968341CCE3");
static_assert(sizeof(GA_FrostWyvern_IcePillar_ControllExceptionFromBreath_C_EventReceived_F15D72AC46E453F70389C7968341CCE3) == 0x0000B0, "Wrong size on GA_FrostWyvern_IcePillar_ControllExceptionFromBreath_C_EventReceived_F15D72AC46E453F70389C7968341CCE3");
static_assert(offsetof(GA_FrostWyvern_IcePillar_ControllExceptionFromBreath_C_EventReceived_F15D72AC46E453F70389C7968341CCE3, Payload) == 0x000000, "Member 'GA_FrostWyvern_IcePillar_ControllExceptionFromBreath_C_EventReceived_F15D72AC46E453F70389C7968341CCE3::Payload' has a wrong offset!");

// Function GA_FrostWyvern_IcePillar_ControllExceptionFromBreath.GA_FrostWyvern_IcePillar_ControllExceptionFromBreath_C.ExecuteUbergraph_GA_FrostWyvern_IcePillar_ControllExceptionFromBreath
// 0x0368 (0x0368 - 0x0000)
struct GA_FrostWyvern_IcePillar_ControllExceptionFromBreath_C_ExecuteUbergraph_GA_FrostWyvern_IcePillar_ControllExceptionFromBreath final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_564C[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayEventData                     K2Node_CustomEvent_Payload;                        // 0x0008(0x00B0)()
	TDelegate<void(const struct FGameplayEventData& Payload)> K2Node_CreateDelegate_OutputDelegate;              // 0x00B8(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEventData                     Temp_struct_Variable;                              // 0x00C8(0x00B0)()
	class UAbilityTask_WaitGameplayEvent*         CallFunc_WaitGameplayEvent_ReturnValue;            // 0x0178(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_564D[0x3];                                     // 0x0181(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0184(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x018C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_564E[0x3];                                     // 0x018D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_564F[0x4];                                     // 0x0194(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayEventData                     K2Node_Event_EventData;                            // 0x0198(0x00B0)(ConstParm)
	class AActor*                                 CallFunc_GetAvatarActorFromActorInfo_ReturnValue;  // 0x0248(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_Props_FrostWyvern_IcePillar_C*      K2Node_DynamicCast_AsBP_Props_Frost_Wyvern_Ice_Pillar; // 0x0250(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0258(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5650[0x7];                                     // 0x0259(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ADCPlayerCharacterBase*                 K2Node_DynamicCast_AsDCPlayer_Character_Base;      // 0x0260(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0268(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5651[0x7];                                     // 0x0269(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ADCCharacterBase*                       K2Node_DynamicCast_AsDCCharacter_Base;             // 0x0270(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0278(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5652[0x7];                                     // 0x0279(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayEventData                     K2Node_MakeStruct_GameplayEventData;               // 0x0280(0x00B0)()
	TArray<struct FActiveGameplayEffectHandle>    CallFunc_ApplyEffectContainer_ReturnValue;         // 0x0330(0x0010)(ReferenceParm)
	struct FActiveGameplayEffectHandle            CallFunc_Array_Get_Item;                           // 0x0340(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FActiveGameplayEffectHandle            CallFunc_Map_Find_Value;                           // 0x0348(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0350(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RemoveActiveGameplayEffect_ReturnValue;   // 0x0351(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5653[0x2];                                     // 0x0352(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0354(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x0358(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Remove_ReturnValue;                   // 0x035C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5654[0x3];                                     // 0x035D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Max_ReturnValue;                          // 0x0360(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_FrostWyvern_IcePillar_ControllExceptionFromBreath_C_ExecuteUbergraph_GA_FrostWyvern_IcePillar_ControllExceptionFromBreath) == 0x000008, "Wrong alignment on GA_FrostWyvern_IcePillar_ControllExceptionFromBreath_C_ExecuteUbergraph_GA_FrostWyvern_IcePillar_ControllExceptionFromBreath");
static_assert(sizeof(GA_FrostWyvern_IcePillar_ControllExceptionFromBreath_C_ExecuteUbergraph_GA_FrostWyvern_IcePillar_ControllExceptionFromBreath) == 0x000368, "Wrong size on GA_FrostWyvern_IcePillar_ControllExceptionFromBreath_C_ExecuteUbergraph_GA_FrostWyvern_IcePillar_ControllExceptionFromBreath");
static_assert(offsetof(GA_FrostWyvern_IcePillar_ControllExceptionFromBreath_C_ExecuteUbergraph_GA_FrostWyvern_IcePillar_ControllExceptionFromBreath, EntryPoint) == 0x000000, "Member 'GA_FrostWyvern_IcePillar_ControllExceptionFromBreath_C_ExecuteUbergraph_GA_FrostWyvern_IcePillar_ControllExceptionFromBreath::EntryPoint' has a wrong offset!");
static_assert(offsetof(GA_FrostWyvern_IcePillar_ControllExceptionFromBreath_C_ExecuteUbergraph_GA_FrostWyvern_IcePillar_ControllExceptionFromBreath, K2Node_CustomEvent_Payload) == 0x000008, "Member 'GA_FrostWyvern_IcePillar_ControllExceptionFromBreath_C_ExecuteUbergraph_GA_FrostWyvern_IcePillar_ControllExceptionFromBreath::K2Node_CustomEvent_Payload' has a wrong offset!");
static_assert(offsetof(GA_FrostWyvern_IcePillar_ControllExceptionFromBreath_C_ExecuteUbergraph_GA_FrostWyvern_IcePillar_ControllExceptionFromBreath, K2Node_CreateDelegate_OutputDelegate) == 0x0000B8, "Member 'GA_FrostWyvern_IcePillar_ControllExceptionFromBreath_C_ExecuteUbergraph_GA_FrostWyvern_IcePillar_ControllExceptionFromBreath::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(GA_FrostWyvern_IcePillar_ControllExceptionFromBreath_C_ExecuteUbergraph_GA_FrostWyvern_IcePillar_ControllExceptionFromBreath, Temp_struct_Variable) == 0x0000C8, "Member 'GA_FrostWyvern_IcePillar_ControllExceptionFromBreath_C_ExecuteUbergraph_GA_FrostWyvern_IcePillar_ControllExceptionFromBreath::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(GA_FrostWyvern_IcePillar_ControllExceptionFromBreath_C_ExecuteUbergraph_GA_FrostWyvern_IcePillar_ControllExceptionFromBreath, CallFunc_WaitGameplayEvent_ReturnValue) == 0x000178, "Member 'GA_FrostWyvern_IcePillar_ControllExceptionFromBreath_C_ExecuteUbergraph_GA_FrostWyvern_IcePillar_ControllExceptionFromBreath::CallFunc_WaitGameplayEvent_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_FrostWyvern_IcePillar_ControllExceptionFromBreath_C_ExecuteUbergraph_GA_FrostWyvern_IcePillar_ControllExceptionFromBreath, CallFunc_IsValid_ReturnValue) == 0x000180, "Member 'GA_FrostWyvern_IcePillar_ControllExceptionFromBreath_C_ExecuteUbergraph_GA_FrostWyvern_IcePillar_ControllExceptionFromBreath::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_FrostWyvern_IcePillar_ControllExceptionFromBreath_C_ExecuteUbergraph_GA_FrostWyvern_IcePillar_ControllExceptionFromBreath, Temp_int_Loop_Counter_Variable) == 0x000184, "Member 'GA_FrostWyvern_IcePillar_ControllExceptionFromBreath_C_ExecuteUbergraph_GA_FrostWyvern_IcePillar_ControllExceptionFromBreath::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(GA_FrostWyvern_IcePillar_ControllExceptionFromBreath_C_ExecuteUbergraph_GA_FrostWyvern_IcePillar_ControllExceptionFromBreath, CallFunc_Subtract_IntInt_ReturnValue) == 0x000188, "Member 'GA_FrostWyvern_IcePillar_ControllExceptionFromBreath_C_ExecuteUbergraph_GA_FrostWyvern_IcePillar_ControllExceptionFromBreath::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_FrostWyvern_IcePillar_ControllExceptionFromBreath_C_ExecuteUbergraph_GA_FrostWyvern_IcePillar_ControllExceptionFromBreath, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x00018C, "Member 'GA_FrostWyvern_IcePillar_ControllExceptionFromBreath_C_ExecuteUbergraph_GA_FrostWyvern_IcePillar_ControllExceptionFromBreath::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_FrostWyvern_IcePillar_ControllExceptionFromBreath_C_ExecuteUbergraph_GA_FrostWyvern_IcePillar_ControllExceptionFromBreath, Temp_int_Array_Index_Variable) == 0x000190, "Member 'GA_FrostWyvern_IcePillar_ControllExceptionFromBreath_C_ExecuteUbergraph_GA_FrostWyvern_IcePillar_ControllExceptionFromBreath::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(GA_FrostWyvern_IcePillar_ControllExceptionFromBreath_C_ExecuteUbergraph_GA_FrostWyvern_IcePillar_ControllExceptionFromBreath, K2Node_Event_EventData) == 0x000198, "Member 'GA_FrostWyvern_IcePillar_ControllExceptionFromBreath_C_ExecuteUbergraph_GA_FrostWyvern_IcePillar_ControllExceptionFromBreath::K2Node_Event_EventData' has a wrong offset!");
static_assert(offsetof(GA_FrostWyvern_IcePillar_ControllExceptionFromBreath_C_ExecuteUbergraph_GA_FrostWyvern_IcePillar_ControllExceptionFromBreath, CallFunc_GetAvatarActorFromActorInfo_ReturnValue) == 0x000248, "Member 'GA_FrostWyvern_IcePillar_ControllExceptionFromBreath_C_ExecuteUbergraph_GA_FrostWyvern_IcePillar_ControllExceptionFromBreath::CallFunc_GetAvatarActorFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_FrostWyvern_IcePillar_ControllExceptionFromBreath_C_ExecuteUbergraph_GA_FrostWyvern_IcePillar_ControllExceptionFromBreath, K2Node_DynamicCast_AsBP_Props_Frost_Wyvern_Ice_Pillar) == 0x000250, "Member 'GA_FrostWyvern_IcePillar_ControllExceptionFromBreath_C_ExecuteUbergraph_GA_FrostWyvern_IcePillar_ControllExceptionFromBreath::K2Node_DynamicCast_AsBP_Props_Frost_Wyvern_Ice_Pillar' has a wrong offset!");
static_assert(offsetof(GA_FrostWyvern_IcePillar_ControllExceptionFromBreath_C_ExecuteUbergraph_GA_FrostWyvern_IcePillar_ControllExceptionFromBreath, K2Node_DynamicCast_bSuccess) == 0x000258, "Member 'GA_FrostWyvern_IcePillar_ControllExceptionFromBreath_C_ExecuteUbergraph_GA_FrostWyvern_IcePillar_ControllExceptionFromBreath::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GA_FrostWyvern_IcePillar_ControllExceptionFromBreath_C_ExecuteUbergraph_GA_FrostWyvern_IcePillar_ControllExceptionFromBreath, K2Node_DynamicCast_AsDCPlayer_Character_Base) == 0x000260, "Member 'GA_FrostWyvern_IcePillar_ControllExceptionFromBreath_C_ExecuteUbergraph_GA_FrostWyvern_IcePillar_ControllExceptionFromBreath::K2Node_DynamicCast_AsDCPlayer_Character_Base' has a wrong offset!");
static_assert(offsetof(GA_FrostWyvern_IcePillar_ControllExceptionFromBreath_C_ExecuteUbergraph_GA_FrostWyvern_IcePillar_ControllExceptionFromBreath, K2Node_DynamicCast_bSuccess_1) == 0x000268, "Member 'GA_FrostWyvern_IcePillar_ControllExceptionFromBreath_C_ExecuteUbergraph_GA_FrostWyvern_IcePillar_ControllExceptionFromBreath::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(GA_FrostWyvern_IcePillar_ControllExceptionFromBreath_C_ExecuteUbergraph_GA_FrostWyvern_IcePillar_ControllExceptionFromBreath, K2Node_DynamicCast_AsDCCharacter_Base) == 0x000270, "Member 'GA_FrostWyvern_IcePillar_ControllExceptionFromBreath_C_ExecuteUbergraph_GA_FrostWyvern_IcePillar_ControllExceptionFromBreath::K2Node_DynamicCast_AsDCCharacter_Base' has a wrong offset!");
static_assert(offsetof(GA_FrostWyvern_IcePillar_ControllExceptionFromBreath_C_ExecuteUbergraph_GA_FrostWyvern_IcePillar_ControllExceptionFromBreath, K2Node_DynamicCast_bSuccess_2) == 0x000278, "Member 'GA_FrostWyvern_IcePillar_ControllExceptionFromBreath_C_ExecuteUbergraph_GA_FrostWyvern_IcePillar_ControllExceptionFromBreath::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(GA_FrostWyvern_IcePillar_ControllExceptionFromBreath_C_ExecuteUbergraph_GA_FrostWyvern_IcePillar_ControllExceptionFromBreath, K2Node_MakeStruct_GameplayEventData) == 0x000280, "Member 'GA_FrostWyvern_IcePillar_ControllExceptionFromBreath_C_ExecuteUbergraph_GA_FrostWyvern_IcePillar_ControllExceptionFromBreath::K2Node_MakeStruct_GameplayEventData' has a wrong offset!");
static_assert(offsetof(GA_FrostWyvern_IcePillar_ControllExceptionFromBreath_C_ExecuteUbergraph_GA_FrostWyvern_IcePillar_ControllExceptionFromBreath, CallFunc_ApplyEffectContainer_ReturnValue) == 0x000330, "Member 'GA_FrostWyvern_IcePillar_ControllExceptionFromBreath_C_ExecuteUbergraph_GA_FrostWyvern_IcePillar_ControllExceptionFromBreath::CallFunc_ApplyEffectContainer_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_FrostWyvern_IcePillar_ControllExceptionFromBreath_C_ExecuteUbergraph_GA_FrostWyvern_IcePillar_ControllExceptionFromBreath, CallFunc_Array_Get_Item) == 0x000340, "Member 'GA_FrostWyvern_IcePillar_ControllExceptionFromBreath_C_ExecuteUbergraph_GA_FrostWyvern_IcePillar_ControllExceptionFromBreath::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(GA_FrostWyvern_IcePillar_ControllExceptionFromBreath_C_ExecuteUbergraph_GA_FrostWyvern_IcePillar_ControllExceptionFromBreath, CallFunc_Map_Find_Value) == 0x000348, "Member 'GA_FrostWyvern_IcePillar_ControllExceptionFromBreath_C_ExecuteUbergraph_GA_FrostWyvern_IcePillar_ControllExceptionFromBreath::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(GA_FrostWyvern_IcePillar_ControllExceptionFromBreath_C_ExecuteUbergraph_GA_FrostWyvern_IcePillar_ControllExceptionFromBreath, CallFunc_Map_Find_ReturnValue) == 0x000350, "Member 'GA_FrostWyvern_IcePillar_ControllExceptionFromBreath_C_ExecuteUbergraph_GA_FrostWyvern_IcePillar_ControllExceptionFromBreath::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_FrostWyvern_IcePillar_ControllExceptionFromBreath_C_ExecuteUbergraph_GA_FrostWyvern_IcePillar_ControllExceptionFromBreath, CallFunc_RemoveActiveGameplayEffect_ReturnValue) == 0x000351, "Member 'GA_FrostWyvern_IcePillar_ControllExceptionFromBreath_C_ExecuteUbergraph_GA_FrostWyvern_IcePillar_ControllExceptionFromBreath::CallFunc_RemoveActiveGameplayEffect_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_FrostWyvern_IcePillar_ControllExceptionFromBreath_C_ExecuteUbergraph_GA_FrostWyvern_IcePillar_ControllExceptionFromBreath, CallFunc_Array_Length_ReturnValue) == 0x000354, "Member 'GA_FrostWyvern_IcePillar_ControllExceptionFromBreath_C_ExecuteUbergraph_GA_FrostWyvern_IcePillar_ControllExceptionFromBreath::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_FrostWyvern_IcePillar_ControllExceptionFromBreath_C_ExecuteUbergraph_GA_FrostWyvern_IcePillar_ControllExceptionFromBreath, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x000358, "Member 'GA_FrostWyvern_IcePillar_ControllExceptionFromBreath_C_ExecuteUbergraph_GA_FrostWyvern_IcePillar_ControllExceptionFromBreath::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_FrostWyvern_IcePillar_ControllExceptionFromBreath_C_ExecuteUbergraph_GA_FrostWyvern_IcePillar_ControllExceptionFromBreath, CallFunc_Map_Remove_ReturnValue) == 0x00035C, "Member 'GA_FrostWyvern_IcePillar_ControllExceptionFromBreath_C_ExecuteUbergraph_GA_FrostWyvern_IcePillar_ControllExceptionFromBreath::CallFunc_Map_Remove_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_FrostWyvern_IcePillar_ControllExceptionFromBreath_C_ExecuteUbergraph_GA_FrostWyvern_IcePillar_ControllExceptionFromBreath, CallFunc_Max_ReturnValue) == 0x000360, "Member 'GA_FrostWyvern_IcePillar_ControllExceptionFromBreath_C_ExecuteUbergraph_GA_FrostWyvern_IcePillar_ControllExceptionFromBreath::CallFunc_Max_ReturnValue' has a wrong offset!");

// Function GA_FrostWyvern_IcePillar_ControllExceptionFromBreath.GA_FrostWyvern_IcePillar_ControllExceptionFromBreath_C.K2_ActivateAbilityFromEvent
// 0x00B0 (0x00B0 - 0x0000)
struct GA_FrostWyvern_IcePillar_ControllExceptionFromBreath_C_K2_ActivateAbilityFromEvent final
{
public:
	struct FGameplayEventData                     EventData;                                         // 0x0000(0x00B0)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(GA_FrostWyvern_IcePillar_ControllExceptionFromBreath_C_K2_ActivateAbilityFromEvent) == 0x000008, "Wrong alignment on GA_FrostWyvern_IcePillar_ControllExceptionFromBreath_C_K2_ActivateAbilityFromEvent");
static_assert(sizeof(GA_FrostWyvern_IcePillar_ControllExceptionFromBreath_C_K2_ActivateAbilityFromEvent) == 0x0000B0, "Wrong size on GA_FrostWyvern_IcePillar_ControllExceptionFromBreath_C_K2_ActivateAbilityFromEvent");
static_assert(offsetof(GA_FrostWyvern_IcePillar_ControllExceptionFromBreath_C_K2_ActivateAbilityFromEvent, EventData) == 0x000000, "Member 'GA_FrostWyvern_IcePillar_ControllExceptionFromBreath_C_K2_ActivateAbilityFromEvent::EventData' has a wrong offset!");

}

