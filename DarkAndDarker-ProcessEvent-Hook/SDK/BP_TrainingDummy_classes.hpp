#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_TrainingDummy

#include "Basic.hpp"

#include "BP_PropsActorBase_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_TrainingDummy.BP_TrainingDummy_C
// 0x0050 (0x0508 - 0x04B8)
class ABP_TrainingDummy_C final : public ABP_PropsActorBase_C
{
public:
	class UBP_DCHitBox_C*                         BP_DCHitBox_Foot;                                  // 0x04B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_DCHitBox_C*                         BP_DCHitBox_Hand_Arm_L;                            // 0x04C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_DCHitBox_C*                         BP_DCHitBox_Hand_Arm_R;                            // 0x04C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_DCHitBox_C*                         BP_DCHitBox_Hand_L;                                // 0x04D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_DCHitBox_C*                         BP_DCHitBox_Hand_R;                                // 0x04D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_DCHitBox_C*                         BP_DCHitBox_Head;                                  // 0x04E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_DCHitBox_C*                         BP_DCHitBox_Body;                                  // 0x04E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UDCDamageIndicatorComponent*            DCDamageIndicator;                                 // 0x04F0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_DCHitBox_C*                         BP_DCHitBox_Leg;                                   // 0x04F8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Dummy_A;                                        // 0x0500(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_TrainingDummy_C">();
	}
	static class ABP_TrainingDummy_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_TrainingDummy_C>();
	}
};
static_assert(alignof(ABP_TrainingDummy_C) == 0x000008, "Wrong alignment on ABP_TrainingDummy_C");
static_assert(sizeof(ABP_TrainingDummy_C) == 0x000508, "Wrong size on ABP_TrainingDummy_C");
static_assert(offsetof(ABP_TrainingDummy_C, BP_DCHitBox_Foot) == 0x0004B8, "Member 'ABP_TrainingDummy_C::BP_DCHitBox_Foot' has a wrong offset!");
static_assert(offsetof(ABP_TrainingDummy_C, BP_DCHitBox_Hand_Arm_L) == 0x0004C0, "Member 'ABP_TrainingDummy_C::BP_DCHitBox_Hand_Arm_L' has a wrong offset!");
static_assert(offsetof(ABP_TrainingDummy_C, BP_DCHitBox_Hand_Arm_R) == 0x0004C8, "Member 'ABP_TrainingDummy_C::BP_DCHitBox_Hand_Arm_R' has a wrong offset!");
static_assert(offsetof(ABP_TrainingDummy_C, BP_DCHitBox_Hand_L) == 0x0004D0, "Member 'ABP_TrainingDummy_C::BP_DCHitBox_Hand_L' has a wrong offset!");
static_assert(offsetof(ABP_TrainingDummy_C, BP_DCHitBox_Hand_R) == 0x0004D8, "Member 'ABP_TrainingDummy_C::BP_DCHitBox_Hand_R' has a wrong offset!");
static_assert(offsetof(ABP_TrainingDummy_C, BP_DCHitBox_Head) == 0x0004E0, "Member 'ABP_TrainingDummy_C::BP_DCHitBox_Head' has a wrong offset!");
static_assert(offsetof(ABP_TrainingDummy_C, BP_DCHitBox_Body) == 0x0004E8, "Member 'ABP_TrainingDummy_C::BP_DCHitBox_Body' has a wrong offset!");
static_assert(offsetof(ABP_TrainingDummy_C, DCDamageIndicator) == 0x0004F0, "Member 'ABP_TrainingDummy_C::DCDamageIndicator' has a wrong offset!");
static_assert(offsetof(ABP_TrainingDummy_C, BP_DCHitBox_Leg) == 0x0004F8, "Member 'ABP_TrainingDummy_C::BP_DCHitBox_Leg' has a wrong offset!");
static_assert(offsetof(ABP_TrainingDummy_C, SM_Dummy_A) == 0x000500, "Member 'ABP_TrainingDummy_C::SM_Dummy_A' has a wrong offset!");

}

