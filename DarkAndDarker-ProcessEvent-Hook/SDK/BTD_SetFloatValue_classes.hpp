#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BTD_SetFloatValue

#include "Basic.hpp"

#include "E_FloatValueCalculate_structs.hpp"
#include "AIModule_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BTD_SetFloatValue.BTD_SetFloatValue_C
// 0x0048 (0x00E8 - 0x00A0)
class UBTD_SetFloatValue_C final : public UBTDecorator_BlueprintBase
{
public:
	bool                                          Use_Random_Range;                                  // 0x00A0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_FloatValueCalculate                         CalculateType;                                     // 0x00A1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A1B[0x6];                                     // 0x00A2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Value1;                                            // 0x00A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Value2;                                            // 0x00B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Obtained_Value;                                    // 0x00B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Obtained_Final_Value;                              // 0x00C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   FloatValue;                                        // 0x00C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBlackboardComponent*                   Blackboard;                                        // 0x00D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AAIController*                          Owner_Controller;                                  // 0x00D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  Controlled_Pawn;                                   // 0x00E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void Add(double FloatValue_Before_Change);
	void Divide(double FloatValue_Before_Change);
	void Multiply(double FloatValue_Before_Change);
	bool PerformConditionCheckAI(class AAIController* OwnerController, class APawn* ControlledPawn);
	void Subtract(double FloatValue_Before_Change);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BTD_SetFloatValue_C">();
	}
	static class UBTD_SetFloatValue_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBTD_SetFloatValue_C>();
	}
};
static_assert(alignof(UBTD_SetFloatValue_C) == 0x000008, "Wrong alignment on UBTD_SetFloatValue_C");
static_assert(sizeof(UBTD_SetFloatValue_C) == 0x0000E8, "Wrong size on UBTD_SetFloatValue_C");
static_assert(offsetof(UBTD_SetFloatValue_C, Use_Random_Range) == 0x0000A0, "Member 'UBTD_SetFloatValue_C::Use_Random_Range' has a wrong offset!");
static_assert(offsetof(UBTD_SetFloatValue_C, CalculateType) == 0x0000A1, "Member 'UBTD_SetFloatValue_C::CalculateType' has a wrong offset!");
static_assert(offsetof(UBTD_SetFloatValue_C, Value1) == 0x0000A8, "Member 'UBTD_SetFloatValue_C::Value1' has a wrong offset!");
static_assert(offsetof(UBTD_SetFloatValue_C, Value2) == 0x0000B0, "Member 'UBTD_SetFloatValue_C::Value2' has a wrong offset!");
static_assert(offsetof(UBTD_SetFloatValue_C, Obtained_Value) == 0x0000B8, "Member 'UBTD_SetFloatValue_C::Obtained_Value' has a wrong offset!");
static_assert(offsetof(UBTD_SetFloatValue_C, Obtained_Final_Value) == 0x0000C0, "Member 'UBTD_SetFloatValue_C::Obtained_Final_Value' has a wrong offset!");
static_assert(offsetof(UBTD_SetFloatValue_C, FloatValue) == 0x0000C8, "Member 'UBTD_SetFloatValue_C::FloatValue' has a wrong offset!");
static_assert(offsetof(UBTD_SetFloatValue_C, Blackboard) == 0x0000D0, "Member 'UBTD_SetFloatValue_C::Blackboard' has a wrong offset!");
static_assert(offsetof(UBTD_SetFloatValue_C, Owner_Controller) == 0x0000D8, "Member 'UBTD_SetFloatValue_C::Owner_Controller' has a wrong offset!");
static_assert(offsetof(UBTD_SetFloatValue_C, Controlled_Pawn) == 0x0000E0, "Member 'UBTD_SetFloatValue_C::Controlled_Pawn' has a wrong offset!");

}

