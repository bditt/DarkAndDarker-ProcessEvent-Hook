#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BTD_ProbabilitySuccess

#include "Basic.hpp"

#include "AIModule_structs.hpp"
#include "AIModule_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BTD_ProbabilitySuccess.BTD_ProbabilitySuccess_C
// 0x0040 (0x00E0 - 0x00A0)
class UBTD_ProbabilitySuccess_C final : public UBTDecorator_BlueprintBase
{
public:
	double                                        SuccessRatio;                                      // 0x00A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        RandomRatio;                                       // 0x00A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   FloatValue;                                        // 0x00B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FBlackboardKeySelector                 BlackboardKey;                                     // 0x00B8(0x0028)(Edit, BlueprintVisible)

public:
	bool PerformConditionCheckAI(class AAIController* OwnerController, class APawn* ControlledPawn);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BTD_ProbabilitySuccess_C">();
	}
	static class UBTD_ProbabilitySuccess_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBTD_ProbabilitySuccess_C>();
	}
};
static_assert(alignof(UBTD_ProbabilitySuccess_C) == 0x000008, "Wrong alignment on UBTD_ProbabilitySuccess_C");
static_assert(sizeof(UBTD_ProbabilitySuccess_C) == 0x0000E0, "Wrong size on UBTD_ProbabilitySuccess_C");
static_assert(offsetof(UBTD_ProbabilitySuccess_C, SuccessRatio) == 0x0000A0, "Member 'UBTD_ProbabilitySuccess_C::SuccessRatio' has a wrong offset!");
static_assert(offsetof(UBTD_ProbabilitySuccess_C, RandomRatio) == 0x0000A8, "Member 'UBTD_ProbabilitySuccess_C::RandomRatio' has a wrong offset!");
static_assert(offsetof(UBTD_ProbabilitySuccess_C, FloatValue) == 0x0000B0, "Member 'UBTD_ProbabilitySuccess_C::FloatValue' has a wrong offset!");
static_assert(offsetof(UBTD_ProbabilitySuccess_C, BlackboardKey) == 0x0000B8, "Member 'UBTD_ProbabilitySuccess_C::BlackboardKey' has a wrong offset!");

}

