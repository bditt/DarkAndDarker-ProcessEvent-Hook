#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_PlayerCharacter

#include "Basic.hpp"

#include "BP_PlayerCharacter_classes.hpp"
#include "BP_PlayerCharacter_parameters.hpp"


namespace SDK
{

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.EventFMsgSoundEvent
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FMsgSoundEvent                   Msg                                                    (BlueprintVisible, BlueprintReadOnly, Parm)

void ABP_PlayerCharacter_C::EventFMsgSoundEvent(const struct FMsgSoundEvent& Msg)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerCharacter_C", "EventFMsgSoundEvent");

	Params::BP_PlayerCharacter_C_EventFMsgSoundEvent Parms{};

	Parms.Msg = std::move(Msg);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerCharacter.BP_PlayerCharacter_C.ExecuteUbergraph_BP_PlayerCharacter
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PlayerCharacter_C::ExecuteUbergraph_BP_PlayerCharacter(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerCharacter_C", "ExecuteUbergraph_BP_PlayerCharacter");

	Params::BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerCharacter.BP_PlayerCharacter_C.GameplayTagUpdated
// (Event, Protected, BlueprintEvent)
// Parameters:
// struct FGameplayTag                     InGameplayTag                                          (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// int32                                   InCount                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PlayerCharacter_C::GameplayTagUpdated(const struct FGameplayTag& InGameplayTag, int32 InCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerCharacter_C", "GameplayTagUpdated");

	Params::BP_PlayerCharacter_C_GameplayTagUpdated Parms{};

	Parms.InGameplayTag = std::move(InGameplayTag);
	Parms.InCount = InCount;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerCharacter.BP_PlayerCharacter_C.Get Current Holding Item Actors by Id Tag
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGameplayTag                     IdTag                                                  (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// TArray<class AItemActor*>               ItemActors                                             (Parm, OutParm)

void ABP_PlayerCharacter_C::Get_Current_Holding_Item_Actors_by_Id_Tag(const struct FGameplayTag& IdTag, TArray<class AItemActor*>* ItemActors)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerCharacter_C", "Get Current Holding Item Actors by Id Tag");

	Params::BP_PlayerCharacter_C_Get_Current_Holding_Item_Actors_by_Id_Tag Parms{};

	Parms.IdTag = std::move(IdTag);

	UObject::ProcessEvent(Func, &Parms);

	if (ItemActors != nullptr)
		*ItemActors = std::move(Parms.ItemActors);
}


// Function BP_PlayerCharacter.BP_PlayerCharacter_C.Get Current Holding Item Actors by SlotType
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGameplayTag                     SlotType                                               (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// TArray<class AItemActor*>               ItemActors                                             (Parm, OutParm)

void ABP_PlayerCharacter_C::Get_Current_Holding_Item_Actors_by_SlotType(const struct FGameplayTag& SlotType, TArray<class AItemActor*>* ItemActors)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerCharacter_C", "Get Current Holding Item Actors by SlotType");

	Params::BP_PlayerCharacter_C_Get_Current_Holding_Item_Actors_by_SlotType Parms{};

	Parms.SlotType = std::move(SlotType);

	UObject::ProcessEvent(Func, &Parms);

	if (ItemActors != nullptr)
		*ItemActors = std::move(Parms.ItemActors);
}


// Function BP_PlayerCharacter.BP_PlayerCharacter_C.Get Equipped Foot Item Info
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Bool                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FDCItemInfo                      ItemInfo                                               (Parm, OutParm, HasGetValueTypeHash)

void ABP_PlayerCharacter_C::Get_Equipped_Foot_Item_Info(bool* Bool, struct FDCItemInfo* ItemInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerCharacter_C", "Get Equipped Foot Item Info");

	Params::BP_PlayerCharacter_C_Get_Equipped_Foot_Item_Info Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Bool != nullptr)
		*Bool = Parms.Bool;

	if (ItemInfo != nullptr)
		*ItemInfo = std::move(Parms.ItemInfo);
}


// Function BP_PlayerCharacter.BP_PlayerCharacter_C.Get Equipped Item Actors
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGameplayTag                     SlotType                                               (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// TArray<class AItemActor*>               ItemActors                                             (Parm, OutParm)

void ABP_PlayerCharacter_C::Get_Equipped_Item_Actors(const struct FGameplayTag& SlotType, TArray<class AItemActor*>* ItemActors)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerCharacter_C", "Get Equipped Item Actors");

	Params::BP_PlayerCharacter_C_Get_Equipped_Item_Actors Parms{};

	Parms.SlotType = std::move(SlotType);

	UObject::ProcessEvent(Func, &Parms);

	if (ItemActors != nullptr)
		*ItemActors = std::move(Parms.ItemActors);
}


// Function BP_PlayerCharacter.BP_PlayerCharacter_C.Get Equipped Soul Heart Item Actor
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AItemActor*                       ItemActor                                              (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_PlayerCharacter_C::Get_Equipped_Soul_Heart_Item_Actor(class AItemActor** ItemActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerCharacter_C", "Get Equipped Soul Heart Item Actor");

	Params::BP_PlayerCharacter_C_Get_Equipped_Soul_Heart_Item_Actor Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (ItemActor != nullptr)
		*ItemActor = Parms.ItemActor;
}


// Function BP_PlayerCharacter.BP_PlayerCharacter_C.Get Soul Heart in Chest
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           Param_AccountId                                        (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
// class FString                           PartyId                                                (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)

void ABP_PlayerCharacter_C::Get_Soul_Heart_in_Chest(class FString* Param_AccountId, class FString* PartyId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerCharacter_C", "Get Soul Heart in Chest");

	Params::BP_PlayerCharacter_C_Get_Soul_Heart_in_Chest Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Param_AccountId != nullptr)
		*Param_AccountId = std::move(Parms.Param_AccountId);

	if (PartyId != nullptr)
		*PartyId = std::move(Parms.PartyId);
}


// Function BP_PlayerCharacter.BP_PlayerCharacter_C.GetCameraComponent
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UCameraComponent*                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)

class UCameraComponent* ABP_PlayerCharacter_C::GetCameraComponent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerCharacter_C", "GetCameraComponent");

	Params::BP_PlayerCharacter_C_GetCameraComponent Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_PlayerCharacter.BP_PlayerCharacter_C.GetPerspectiveCameraComponent
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bFirstPersonPerspective                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UCameraComponent*                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)

class UCameraComponent* ABP_PlayerCharacter_C::GetPerspectiveCameraComponent(bool bFirstPersonPerspective)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerCharacter_C", "GetPerspectiveCameraComponent");

	Params::BP_PlayerCharacter_C_GetPerspectiveCameraComponent Parms{};

	Parms.bFirstPersonPerspective = bFirstPersonPerspective;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_PlayerCharacter.BP_PlayerCharacter_C.Has Local Current Character Chase
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    HasChase                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PlayerCharacter_C::Has_Local_Current_Character_Chase(bool* HasChase)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerCharacter_C", "Has Local Current Character Chase");

	Params::BP_PlayerCharacter_C_Has_Local_Current_Character_Chase Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (HasChase != nullptr)
		*HasChase = Parms.HasChase;
}


// Function BP_PlayerCharacter.BP_PlayerCharacter_C.Has Soul Heart In Chest
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bHasSoulHeartInChest                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PlayerCharacter_C::Has_Soul_Heart_In_Chest(bool* bHasSoulHeartInChest)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerCharacter_C", "Has Soul Heart In Chest");

	Params::BP_PlayerCharacter_C_Has_Soul_Heart_In_Chest Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bHasSoulHeartInChest != nullptr)
		*bHasSoulHeartInChest = Parms.bHasSoulHeartInChest;
}


// Function BP_PlayerCharacter.BP_PlayerCharacter_C.HeadCameraCulling
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Param_bFPSView                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PlayerCharacter_C::HeadCameraCulling(bool Param_bFPSView)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerCharacter_C", "HeadCameraCulling");

	Params::BP_PlayerCharacter_C_HeadCameraCulling Parms{};

	Parms.Param_bFPSView = Param_bFPSView;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerCharacter.BP_PlayerCharacter_C.InteractFound
// (Event, Protected, BlueprintEvent)
// Parameters:
// class AActor*                           Interacter                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              InteractPart                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void ABP_PlayerCharacter_C::InteractFound(class AActor* Interacter, class UPrimitiveComponent* InteractPart)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerCharacter_C", "InteractFound");

	Params::BP_PlayerCharacter_C_InteractFound Parms{};

	Parms.Interacter = Interacter;
	Parms.InteractPart = InteractPart;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerCharacter.BP_PlayerCharacter_C.InteractLost
// (Event, Protected, BlueprintEvent)
// Parameters:
// class AActor*                           Interacter                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_PlayerCharacter_C::InteractLost(class AActor* Interacter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerCharacter_C", "InteractLost");

	Params::BP_PlayerCharacter_C_InteractLost Parms{};

	Parms.Interacter = Interacter;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerCharacter.BP_PlayerCharacter_C.InteractSucceed
// (Event, Protected, BlueprintEvent)
// Parameters:
// class AActor*                           Interacter                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FGameplayTag                     StateTag                                               (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// struct FGameplayTag                     TriggerTag                                             (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// struct FHitResult                       HitResult                                              (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void ABP_PlayerCharacter_C::InteractSucceed(class AActor* Interacter, const struct FGameplayTag& StateTag, const struct FGameplayTag& TriggerTag, const struct FHitResult& HitResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerCharacter_C", "InteractSucceed");

	Params::BP_PlayerCharacter_C_InteractSucceed Parms{};

	Parms.Interacter = Interacter;
	Parms.StateTag = std::move(StateTag);
	Parms.TriggerTag = std::move(TriggerTag);
	Parms.HitResult = std::move(HitResult);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerCharacter.BP_PlayerCharacter_C.OnCommemorativePlaqueText
// (Net, NetReliable, NetClient, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FPrimaryAssetId                  ScriptAseetId                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Param_Location                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PlayerCharacter_C::OnCommemorativePlaqueText(const struct FPrimaryAssetId& ScriptAseetId, const struct FVector& Param_Location)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerCharacter_C", "OnCommemorativePlaqueText");

	Params::BP_PlayerCharacter_C_OnCommemorativePlaqueText Parms{};

	Parms.ScriptAseetId = std::move(ScriptAseetId);
	Parms.Param_Location = std::move(Param_Location);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerCharacter.BP_PlayerCharacter_C.OnEtherealStateEntered
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsActivate                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PlayerCharacter_C::OnEtherealStateEntered(bool IsActivate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerCharacter_C", "OnEtherealStateEntered");

	Params::BP_PlayerCharacter_C_OnEtherealStateEntered Parms{};

	Parms.IsActivate = IsActivate;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerCharacter.BP_PlayerCharacter_C.OnMessageReceived_E32555534626CD303291009A607703E1
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UMsgBaseNode*                     ProxyObject                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_PlayerCharacter_C::OnMessageReceived_E32555534626CD303291009A607703E1(class UMsgBaseNode* ProxyObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerCharacter_C", "OnMessageReceived_E32555534626CD303291009A607703E1");

	Params::BP_PlayerCharacter_C_OnMessageReceived_E32555534626CD303291009A607703E1 Parms{};

	Parms.ProxyObject = ProxyObject;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerCharacter.BP_PlayerCharacter_C.OnSetPerspective
// (Event, Protected, BlueprintEvent)
// Parameters:
// class APlayerController*                InPlayerController                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    bInIsFirstPersonPerspective                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PlayerCharacter_C::OnSetPerspective(class APlayerController* InPlayerController, const bool bInIsFirstPersonPerspective)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerCharacter_C", "OnSetPerspective");

	Params::BP_PlayerCharacter_C_OnSetPerspective Parms{};

	Parms.InPlayerController = InPlayerController;
	Parms.bInIsFirstPersonPerspective = bInIsFirstPersonPerspective;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerCharacter.BP_PlayerCharacter_C.OnSetRenderCustomDepth
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bValue                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PlayerCharacter_C::OnSetRenderCustomDepth(bool bValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerCharacter_C", "OnSetRenderCustomDepth");

	Params::BP_PlayerCharacter_C_OnSetRenderCustomDepth Parms{};

	Parms.bValue = bValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerCharacter.BP_PlayerCharacter_C.OnTarget
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bTarget                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PlayerCharacter_C::OnTarget(bool bTarget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerCharacter_C", "OnTarget");

	Params::BP_PlayerCharacter_C_OnTarget Parms{};

	Parms.bTarget = bTarget;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerCharacter.BP_PlayerCharacter_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_PlayerCharacter_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerCharacter_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerCharacter.BP_PlayerCharacter_C.ReceivePreInitializeComponents
// (Event, Protected, BlueprintEvent)

void ABP_PlayerCharacter_C::ReceivePreInitializeComponents()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerCharacter_C", "ReceivePreInitializeComponents");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerCharacter.BP_PlayerCharacter_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PlayerCharacter_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerCharacter_C", "ReceiveTick");

	Params::BP_PlayerCharacter_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerCharacter.BP_PlayerCharacter_C.Reduce Current Holding Item Count
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Count                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PlayerCharacter_C::Reduce_Current_Holding_Item_Count(int32 Count)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerCharacter_C", "Reduce Current Holding Item Count");

	Params::BP_PlayerCharacter_C_Reduce_Current_Holding_Item_Count Parms{};

	Parms.Count = Count;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerCharacter.BP_PlayerCharacter_C.Reduce Holding Item Count By Id Tag
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGameplayTag                     IdTag                                                  (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// int32                                   Count                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PlayerCharacter_C::Reduce_Holding_Item_Count_By_Id_Tag(const struct FGameplayTag& IdTag, int32 Count)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerCharacter_C", "Reduce Holding Item Count By Id Tag");

	Params::BP_PlayerCharacter_C_Reduce_Holding_Item_Count_By_Id_Tag Parms{};

	Parms.IdTag = std::move(IdTag);
	Parms.Count = Count;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerCharacter.BP_PlayerCharacter_C.Reduce Holding Item Count By ItemId
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int64                                   ItemId                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Count                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PlayerCharacter_C::Reduce_Holding_Item_Count_By_ItemId(int64 ItemId, int32 Count)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerCharacter_C", "Reduce Holding Item Count By ItemId");

	Params::BP_PlayerCharacter_C_Reduce_Holding_Item_Count_By_ItemId Parms{};

	Parms.ItemId = ItemId;
	Parms.Count = Count;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerCharacter.BP_PlayerCharacter_C.SetRTPCValuePlayerSpeed
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_PlayerCharacter_C::SetRTPCValuePlayerSpeed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerCharacter_C", "SetRTPCValuePlayerSpeed");

	UObject::ProcessEvent(Func, nullptr);
}

}

