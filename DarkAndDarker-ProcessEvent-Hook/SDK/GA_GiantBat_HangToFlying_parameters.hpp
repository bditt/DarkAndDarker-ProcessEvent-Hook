#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_GiantBat_HangToFlying

#include "Basic.hpp"

#include "GameplayAbilities_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function GA_GiantBat_HangToFlying.GA_GiantBat_HangToFlying_C.AbilityActivated
// 0x00B0 (0x00B0 - 0x0000)
struct GA_GiantBat_HangToFlying_C_AbilityActivated final
{
public:
	struct FGameplayEventData                     TriggerEventData;                                  // 0x0000(0x00B0)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(GA_GiantBat_HangToFlying_C_AbilityActivated) == 0x000008, "Wrong alignment on GA_GiantBat_HangToFlying_C_AbilityActivated");
static_assert(sizeof(GA_GiantBat_HangToFlying_C_AbilityActivated) == 0x0000B0, "Wrong size on GA_GiantBat_HangToFlying_C_AbilityActivated");
static_assert(offsetof(GA_GiantBat_HangToFlying_C_AbilityActivated, TriggerEventData) == 0x000000, "Member 'GA_GiantBat_HangToFlying_C_AbilityActivated::TriggerEventData' has a wrong offset!");

// Function GA_GiantBat_HangToFlying.GA_GiantBat_HangToFlying_C.ExecuteUbergraph_GA_GiantBat_HangToFlying
// 0x0200 (0x0200 - 0x0000)
struct GA_GiantBat_HangToFlying_C_ExecuteUbergraph_GA_GiantBat_HangToFlying final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bWasCancelled;                        // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14F7[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayEventData                     K2Node_Event_TriggerEventData;                     // 0x0008(0x00B0)(ConstParm)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x00B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetAvatarActorFromActorInfo_ReturnValue;  // 0x00D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x00E0(0x0060)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetAvatarActorFromActorInfo_ReturnValue_1; // 0x0140(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0148(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0160(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0178(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_FindLookAtRotation_ReturnValue;           // 0x0190(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x01AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x01B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll_1;                      // 0x01B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_1;                     // 0x01B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_1;                       // 0x01BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x01C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_RInterpTo_ReturnValue;                    // 0x01D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_SetActorRotation_ReturnValue;          // 0x01F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14F8[0x3];                                     // 0x01F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_RInterpTo_DeltaTime_ImplicitCast;         // 0x01F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_GiantBat_HangToFlying_C_ExecuteUbergraph_GA_GiantBat_HangToFlying) == 0x000010, "Wrong alignment on GA_GiantBat_HangToFlying_C_ExecuteUbergraph_GA_GiantBat_HangToFlying");
static_assert(sizeof(GA_GiantBat_HangToFlying_C_ExecuteUbergraph_GA_GiantBat_HangToFlying) == 0x000200, "Wrong size on GA_GiantBat_HangToFlying_C_ExecuteUbergraph_GA_GiantBat_HangToFlying");
static_assert(offsetof(GA_GiantBat_HangToFlying_C_ExecuteUbergraph_GA_GiantBat_HangToFlying, EntryPoint) == 0x000000, "Member 'GA_GiantBat_HangToFlying_C_ExecuteUbergraph_GA_GiantBat_HangToFlying::EntryPoint' has a wrong offset!");
static_assert(offsetof(GA_GiantBat_HangToFlying_C_ExecuteUbergraph_GA_GiantBat_HangToFlying, K2Node_Event_bWasCancelled) == 0x000004, "Member 'GA_GiantBat_HangToFlying_C_ExecuteUbergraph_GA_GiantBat_HangToFlying::K2Node_Event_bWasCancelled' has a wrong offset!");
static_assert(offsetof(GA_GiantBat_HangToFlying_C_ExecuteUbergraph_GA_GiantBat_HangToFlying, K2Node_Event_TriggerEventData) == 0x000008, "Member 'GA_GiantBat_HangToFlying_C_ExecuteUbergraph_GA_GiantBat_HangToFlying::K2Node_Event_TriggerEventData' has a wrong offset!");
static_assert(offsetof(GA_GiantBat_HangToFlying_C_ExecuteUbergraph_GA_GiantBat_HangToFlying, CallFunc_K2_GetActorLocation_ReturnValue) == 0x0000B8, "Member 'GA_GiantBat_HangToFlying_C_ExecuteUbergraph_GA_GiantBat_HangToFlying::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_GiantBat_HangToFlying_C_ExecuteUbergraph_GA_GiantBat_HangToFlying, CallFunc_GetAvatarActorFromActorInfo_ReturnValue) == 0x0000D0, "Member 'GA_GiantBat_HangToFlying_C_ExecuteUbergraph_GA_GiantBat_HangToFlying::CallFunc_GetAvatarActorFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_GiantBat_HangToFlying_C_ExecuteUbergraph_GA_GiantBat_HangToFlying, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x0000D8, "Member 'GA_GiantBat_HangToFlying_C_ExecuteUbergraph_GA_GiantBat_HangToFlying::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_GiantBat_HangToFlying_C_ExecuteUbergraph_GA_GiantBat_HangToFlying, CallFunc_GetTransform_ReturnValue) == 0x0000E0, "Member 'GA_GiantBat_HangToFlying_C_ExecuteUbergraph_GA_GiantBat_HangToFlying::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_GiantBat_HangToFlying_C_ExecuteUbergraph_GA_GiantBat_HangToFlying, CallFunc_GetAvatarActorFromActorInfo_ReturnValue_1) == 0x000140, "Member 'GA_GiantBat_HangToFlying_C_ExecuteUbergraph_GA_GiantBat_HangToFlying::CallFunc_GetAvatarActorFromActorInfo_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_GiantBat_HangToFlying_C_ExecuteUbergraph_GA_GiantBat_HangToFlying, CallFunc_BreakTransform_Location) == 0x000148, "Member 'GA_GiantBat_HangToFlying_C_ExecuteUbergraph_GA_GiantBat_HangToFlying::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(GA_GiantBat_HangToFlying_C_ExecuteUbergraph_GA_GiantBat_HangToFlying, CallFunc_BreakTransform_Rotation) == 0x000160, "Member 'GA_GiantBat_HangToFlying_C_ExecuteUbergraph_GA_GiantBat_HangToFlying::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(GA_GiantBat_HangToFlying_C_ExecuteUbergraph_GA_GiantBat_HangToFlying, CallFunc_BreakTransform_Scale) == 0x000178, "Member 'GA_GiantBat_HangToFlying_C_ExecuteUbergraph_GA_GiantBat_HangToFlying::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(GA_GiantBat_HangToFlying_C_ExecuteUbergraph_GA_GiantBat_HangToFlying, CallFunc_FindLookAtRotation_ReturnValue) == 0x000190, "Member 'GA_GiantBat_HangToFlying_C_ExecuteUbergraph_GA_GiantBat_HangToFlying::CallFunc_FindLookAtRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_GiantBat_HangToFlying_C_ExecuteUbergraph_GA_GiantBat_HangToFlying, CallFunc_BreakRotator_Roll) == 0x0001A8, "Member 'GA_GiantBat_HangToFlying_C_ExecuteUbergraph_GA_GiantBat_HangToFlying::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(GA_GiantBat_HangToFlying_C_ExecuteUbergraph_GA_GiantBat_HangToFlying, CallFunc_BreakRotator_Pitch) == 0x0001AC, "Member 'GA_GiantBat_HangToFlying_C_ExecuteUbergraph_GA_GiantBat_HangToFlying::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(GA_GiantBat_HangToFlying_C_ExecuteUbergraph_GA_GiantBat_HangToFlying, CallFunc_BreakRotator_Yaw) == 0x0001B0, "Member 'GA_GiantBat_HangToFlying_C_ExecuteUbergraph_GA_GiantBat_HangToFlying::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(GA_GiantBat_HangToFlying_C_ExecuteUbergraph_GA_GiantBat_HangToFlying, CallFunc_BreakRotator_Roll_1) == 0x0001B4, "Member 'GA_GiantBat_HangToFlying_C_ExecuteUbergraph_GA_GiantBat_HangToFlying::CallFunc_BreakRotator_Roll_1' has a wrong offset!");
static_assert(offsetof(GA_GiantBat_HangToFlying_C_ExecuteUbergraph_GA_GiantBat_HangToFlying, CallFunc_BreakRotator_Pitch_1) == 0x0001B8, "Member 'GA_GiantBat_HangToFlying_C_ExecuteUbergraph_GA_GiantBat_HangToFlying::CallFunc_BreakRotator_Pitch_1' has a wrong offset!");
static_assert(offsetof(GA_GiantBat_HangToFlying_C_ExecuteUbergraph_GA_GiantBat_HangToFlying, CallFunc_BreakRotator_Yaw_1) == 0x0001BC, "Member 'GA_GiantBat_HangToFlying_C_ExecuteUbergraph_GA_GiantBat_HangToFlying::CallFunc_BreakRotator_Yaw_1' has a wrong offset!");
static_assert(offsetof(GA_GiantBat_HangToFlying_C_ExecuteUbergraph_GA_GiantBat_HangToFlying, CallFunc_MakeRotator_ReturnValue) == 0x0001C0, "Member 'GA_GiantBat_HangToFlying_C_ExecuteUbergraph_GA_GiantBat_HangToFlying::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_GiantBat_HangToFlying_C_ExecuteUbergraph_GA_GiantBat_HangToFlying, CallFunc_RInterpTo_ReturnValue) == 0x0001D8, "Member 'GA_GiantBat_HangToFlying_C_ExecuteUbergraph_GA_GiantBat_HangToFlying::CallFunc_RInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_GiantBat_HangToFlying_C_ExecuteUbergraph_GA_GiantBat_HangToFlying, CallFunc_K2_SetActorRotation_ReturnValue) == 0x0001F0, "Member 'GA_GiantBat_HangToFlying_C_ExecuteUbergraph_GA_GiantBat_HangToFlying::CallFunc_K2_SetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_GiantBat_HangToFlying_C_ExecuteUbergraph_GA_GiantBat_HangToFlying, CallFunc_RInterpTo_DeltaTime_ImplicitCast) == 0x0001F4, "Member 'GA_GiantBat_HangToFlying_C_ExecuteUbergraph_GA_GiantBat_HangToFlying::CallFunc_RInterpTo_DeltaTime_ImplicitCast' has a wrong offset!");

// Function GA_GiantBat_HangToFlying.GA_GiantBat_HangToFlying_C.K2_OnEndAbility
// 0x0001 (0x0001 - 0x0000)
struct GA_GiantBat_HangToFlying_C_K2_OnEndAbility final
{
public:
	bool                                          bWasCancelled;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_GiantBat_HangToFlying_C_K2_OnEndAbility) == 0x000001, "Wrong alignment on GA_GiantBat_HangToFlying_C_K2_OnEndAbility");
static_assert(sizeof(GA_GiantBat_HangToFlying_C_K2_OnEndAbility) == 0x000001, "Wrong size on GA_GiantBat_HangToFlying_C_K2_OnEndAbility");
static_assert(offsetof(GA_GiantBat_HangToFlying_C_K2_OnEndAbility, bWasCancelled) == 0x000000, "Member 'GA_GiantBat_HangToFlying_C_K2_OnEndAbility::bWasCancelled' has a wrong offset!");

}

