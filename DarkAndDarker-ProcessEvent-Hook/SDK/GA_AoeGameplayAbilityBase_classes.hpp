#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_AoeGameplayAbilityBase

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "DungeonCrawler_classes.hpp"
#include "GameplayTags_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass GA_AoeGameplayAbilityBase.GA_AoeGameplayAbilityBase_C
// 0x0098 (0x0638 - 0x05A0)
class UGA_AoeGameplayAbilityBase_C : public UDCGameplayAbilityBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x05A0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FGameplayTag                           Add_GameplayCue_Tag_Player;                        // 0x05A8(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Add_GameplayCue_Tag_Monster;                       // 0x05B0(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Add_GameplayCue_Tag_Location;                      // 0x05B8(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Execute_GameplayCue_Tag_Player;                    // 0x05C0(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Execute_GameplayCue_Tag_Monster;                   // 0x05C8(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Execute_GameplayCue_Tag_Location;                  // 0x05D0(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class ABP_AoeDefineBase_C*                    As_BP_Aoe_Define_Base;                             // 0x05D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	TArray<struct FGameplayTag>                   Apply_Effect_Player;                               // 0x05E0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<struct FGameplayTag>                   Apply_Effect_Monster;                              // 0x05F0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<struct FGameplayTag>                   Add_Tag_Player;                                    // 0x0600(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<struct FGameplayTag>                   Add_Tag_Monster;                                   // 0x0610(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          Target_Is_Player;                                  // 0x0620(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A15[0x7];                                     // 0x0621(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ADCCharacterBase*                       Target_Actor;                                      // 0x0628(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           Interval_TimerHandle;                              // 0x0630(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void Add_GameplayCue(const struct FGameplayTag& GameplayCueTag);
	void Add_GameplayTag(TArray<struct FGameplayTag>& Add_Tags, class ADCCharacterBase* Target);
	void Apply_Effect_Monster_Event();
	void Apply_Effect_Player_Event();
	void Apply_GameplayCue_Monster_Event();
	void Apply_GameplayCue_Player_Event();
	void Apply_GameplayEffect(TArray<struct FGameplayTag>& Apply_Effect_Tags, class ADCCharacterBase* Target);
	void Apply_Tag_Monster_Event();
	void Apply_Tag_Player_Event();
	void Apply_To_Monster_Set();
	void Apply_To_Player_Set();
	void Check_Target_In_List_And_Apply_Monster();
	void Check_Target_In_List_And_Apply_Player();
	void Check_Target_To_Cancel_Ability(bool* Result);
	void Execute_GameplayCue(const struct FGameplayTag& GameplayCueTag);
	void ExecuteUbergraph_GA_AoeGameplayAbilityBase(int32 EntryPoint);
	void K2_ActivateAbilityFromEvent(const struct FGameplayEventData& EventData);
	void K2_OnEndAbility(bool bWasCancelled);
	void Remove_Target_Out(bool* Param_Remove_Target_Out);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GA_AoeGameplayAbilityBase_C">();
	}
	static class UGA_AoeGameplayAbilityBase_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGA_AoeGameplayAbilityBase_C>();
	}
};
static_assert(alignof(UGA_AoeGameplayAbilityBase_C) == 0x000008, "Wrong alignment on UGA_AoeGameplayAbilityBase_C");
static_assert(sizeof(UGA_AoeGameplayAbilityBase_C) == 0x000638, "Wrong size on UGA_AoeGameplayAbilityBase_C");
static_assert(offsetof(UGA_AoeGameplayAbilityBase_C, UberGraphFrame) == 0x0005A0, "Member 'UGA_AoeGameplayAbilityBase_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UGA_AoeGameplayAbilityBase_C, Add_GameplayCue_Tag_Player) == 0x0005A8, "Member 'UGA_AoeGameplayAbilityBase_C::Add_GameplayCue_Tag_Player' has a wrong offset!");
static_assert(offsetof(UGA_AoeGameplayAbilityBase_C, Add_GameplayCue_Tag_Monster) == 0x0005B0, "Member 'UGA_AoeGameplayAbilityBase_C::Add_GameplayCue_Tag_Monster' has a wrong offset!");
static_assert(offsetof(UGA_AoeGameplayAbilityBase_C, Add_GameplayCue_Tag_Location) == 0x0005B8, "Member 'UGA_AoeGameplayAbilityBase_C::Add_GameplayCue_Tag_Location' has a wrong offset!");
static_assert(offsetof(UGA_AoeGameplayAbilityBase_C, Execute_GameplayCue_Tag_Player) == 0x0005C0, "Member 'UGA_AoeGameplayAbilityBase_C::Execute_GameplayCue_Tag_Player' has a wrong offset!");
static_assert(offsetof(UGA_AoeGameplayAbilityBase_C, Execute_GameplayCue_Tag_Monster) == 0x0005C8, "Member 'UGA_AoeGameplayAbilityBase_C::Execute_GameplayCue_Tag_Monster' has a wrong offset!");
static_assert(offsetof(UGA_AoeGameplayAbilityBase_C, Execute_GameplayCue_Tag_Location) == 0x0005D0, "Member 'UGA_AoeGameplayAbilityBase_C::Execute_GameplayCue_Tag_Location' has a wrong offset!");
static_assert(offsetof(UGA_AoeGameplayAbilityBase_C, As_BP_Aoe_Define_Base) == 0x0005D8, "Member 'UGA_AoeGameplayAbilityBase_C::As_BP_Aoe_Define_Base' has a wrong offset!");
static_assert(offsetof(UGA_AoeGameplayAbilityBase_C, Apply_Effect_Player) == 0x0005E0, "Member 'UGA_AoeGameplayAbilityBase_C::Apply_Effect_Player' has a wrong offset!");
static_assert(offsetof(UGA_AoeGameplayAbilityBase_C, Apply_Effect_Monster) == 0x0005F0, "Member 'UGA_AoeGameplayAbilityBase_C::Apply_Effect_Monster' has a wrong offset!");
static_assert(offsetof(UGA_AoeGameplayAbilityBase_C, Add_Tag_Player) == 0x000600, "Member 'UGA_AoeGameplayAbilityBase_C::Add_Tag_Player' has a wrong offset!");
static_assert(offsetof(UGA_AoeGameplayAbilityBase_C, Add_Tag_Monster) == 0x000610, "Member 'UGA_AoeGameplayAbilityBase_C::Add_Tag_Monster' has a wrong offset!");
static_assert(offsetof(UGA_AoeGameplayAbilityBase_C, Target_Is_Player) == 0x000620, "Member 'UGA_AoeGameplayAbilityBase_C::Target_Is_Player' has a wrong offset!");
static_assert(offsetof(UGA_AoeGameplayAbilityBase_C, Target_Actor) == 0x000628, "Member 'UGA_AoeGameplayAbilityBase_C::Target_Actor' has a wrong offset!");
static_assert(offsetof(UGA_AoeGameplayAbilityBase_C, Interval_TimerHandle) == 0x000630, "Member 'UGA_AoeGameplayAbilityBase_C::Interval_TimerHandle' has a wrong offset!");

}

