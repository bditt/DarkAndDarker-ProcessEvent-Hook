#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_LightSource_ObjectLinkBase

#include "Basic.hpp"

#include "AkAudio_structs.hpp"
#include "Engine_structs.hpp"
#include "GameplayTags_structs.hpp"


namespace SDK::Params
{

// Function BP_LightSource_ObjectLinkBase.BP_LightSource_ObjectLinkBase_C.BndEvt__BP_TorchOn_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature
// 0x0108 (0x0108 - 0x0000)
struct BP_LightSource_ObjectLinkBase_C_BndEvt__BP_TorchOn_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A92[0x3];                                     // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x00E8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_LightSource_ObjectLinkBase_C_BndEvt__BP_TorchOn_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_LightSource_ObjectLinkBase_C_BndEvt__BP_TorchOn_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(BP_LightSource_ObjectLinkBase_C_BndEvt__BP_TorchOn_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x000108, "Wrong size on BP_LightSource_ObjectLinkBase_C_BndEvt__BP_TorchOn_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(BP_LightSource_ObjectLinkBase_C_BndEvt__BP_TorchOn_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'BP_LightSource_ObjectLinkBase_C_BndEvt__BP_TorchOn_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_LightSource_ObjectLinkBase_C_BndEvt__BP_TorchOn_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BP_LightSource_ObjectLinkBase_C_BndEvt__BP_TorchOn_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_LightSource_ObjectLinkBase_C_BndEvt__BP_TorchOn_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BP_LightSource_ObjectLinkBase_C_BndEvt__BP_TorchOn_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_LightSource_ObjectLinkBase_C_BndEvt__BP_TorchOn_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'BP_LightSource_ObjectLinkBase_C_BndEvt__BP_TorchOn_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_LightSource_ObjectLinkBase_C_BndEvt__BP_TorchOn_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'BP_LightSource_ObjectLinkBase_C_BndEvt__BP_TorchOn_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_LightSource_ObjectLinkBase_C_BndEvt__BP_TorchOn_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'BP_LightSource_ObjectLinkBase_C_BndEvt__BP_TorchOn_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function BP_LightSource_ObjectLinkBase.BP_LightSource_ObjectLinkBase_C.BndEvt__BP_TorchOn_Sphere_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct BP_LightSource_ObjectLinkBase_C_BndEvt__BP_TorchOn_Sphere_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LightSource_ObjectLinkBase_C_BndEvt__BP_TorchOn_Sphere_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_LightSource_ObjectLinkBase_C_BndEvt__BP_TorchOn_Sphere_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature");
static_assert(sizeof(BP_LightSource_ObjectLinkBase_C_BndEvt__BP_TorchOn_Sphere_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature) == 0x000020, "Wrong size on BP_LightSource_ObjectLinkBase_C_BndEvt__BP_TorchOn_Sphere_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature");
static_assert(offsetof(BP_LightSource_ObjectLinkBase_C_BndEvt__BP_TorchOn_Sphere_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'BP_LightSource_ObjectLinkBase_C_BndEvt__BP_TorchOn_Sphere_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_LightSource_ObjectLinkBase_C_BndEvt__BP_TorchOn_Sphere_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BP_LightSource_ObjectLinkBase_C_BndEvt__BP_TorchOn_Sphere_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_LightSource_ObjectLinkBase_C_BndEvt__BP_TorchOn_Sphere_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BP_LightSource_ObjectLinkBase_C_BndEvt__BP_TorchOn_Sphere_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_LightSource_ObjectLinkBase_C_BndEvt__BP_TorchOn_Sphere_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'BP_LightSource_ObjectLinkBase_C_BndEvt__BP_TorchOn_Sphere_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");

// Function BP_LightSource_ObjectLinkBase.BP_LightSource_ObjectLinkBase_C.ExecuteUbergraph_BP_LightSource_ObjectLinkBase
// 0x01B0 (0x01B0 - 0x0000)
struct BP_LightSource_ObjectLinkBase_C_ExecuteUbergraph_BP_LightSource_ObjectLinkBase final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable;                            // 0x0004(0x0010)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable_1;                          // 0x0014(0x0010)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A93[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasMatchingGameplayTag_self_CastInput;    // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue;       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A94[0x3];                                     // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_PostAkEvent_ReturnValue;                  // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_PostAkEvent_ReturnValue_1;                // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A95[0x4];                                     // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent_1;  // 0x0048(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor_1;           // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp_1;            // 0x0058(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex_1;       // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep;             // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A96[0x3];                                     // 0x0065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult;            // 0x0068(0x00E8)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent;    // 0x0150(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor;             // 0x0158(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp;              // 0x0160(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex;         // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A97[0x4];                                     // 0x016C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerCharacter_C*                  K2Node_DynamicCast_AsBP_Player_Character;          // 0x0170(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A98[0x7];                                     // 0x0179(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerCharacter_C*                  K2Node_DynamicCast_AsBP_Player_Character_1;        // 0x0180(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue;          // 0x0189(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue_1;        // 0x018A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A99[0x1];                                     // 0x018B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           K2Node_Event_InGameplayTag;                        // 0x018C(0x0008)(ConstParm, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_InCount;                              // 0x0194(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess;   // 0x0199(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A9A[0x6];                                     // 0x019A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SetLightIntensity_Value_ImplicitCast;     // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SetLightIntensity_Value_ImplicitCast_1;   // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LightSource_ObjectLinkBase_C_ExecuteUbergraph_BP_LightSource_ObjectLinkBase) == 0x000008, "Wrong alignment on BP_LightSource_ObjectLinkBase_C_ExecuteUbergraph_BP_LightSource_ObjectLinkBase");
static_assert(sizeof(BP_LightSource_ObjectLinkBase_C_ExecuteUbergraph_BP_LightSource_ObjectLinkBase) == 0x0001B0, "Wrong size on BP_LightSource_ObjectLinkBase_C_ExecuteUbergraph_BP_LightSource_ObjectLinkBase");
static_assert(offsetof(BP_LightSource_ObjectLinkBase_C_ExecuteUbergraph_BP_LightSource_ObjectLinkBase, EntryPoint) == 0x000000, "Member 'BP_LightSource_ObjectLinkBase_C_ExecuteUbergraph_BP_LightSource_ObjectLinkBase::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_LightSource_ObjectLinkBase_C_ExecuteUbergraph_BP_LightSource_ObjectLinkBase, Temp_delegate_Variable) == 0x000004, "Member 'BP_LightSource_ObjectLinkBase_C_ExecuteUbergraph_BP_LightSource_ObjectLinkBase::Temp_delegate_Variable' has a wrong offset!");
static_assert(offsetof(BP_LightSource_ObjectLinkBase_C_ExecuteUbergraph_BP_LightSource_ObjectLinkBase, Temp_delegate_Variable_1) == 0x000014, "Member 'BP_LightSource_ObjectLinkBase_C_ExecuteUbergraph_BP_LightSource_ObjectLinkBase::Temp_delegate_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_LightSource_ObjectLinkBase_C_ExecuteUbergraph_BP_LightSource_ObjectLinkBase, CallFunc_HasMatchingGameplayTag_self_CastInput) == 0x000028, "Member 'BP_LightSource_ObjectLinkBase_C_ExecuteUbergraph_BP_LightSource_ObjectLinkBase::CallFunc_HasMatchingGameplayTag_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_LightSource_ObjectLinkBase_C_ExecuteUbergraph_BP_LightSource_ObjectLinkBase, CallFunc_HasMatchingGameplayTag_ReturnValue) == 0x000038, "Member 'BP_LightSource_ObjectLinkBase_C_ExecuteUbergraph_BP_LightSource_ObjectLinkBase::CallFunc_HasMatchingGameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LightSource_ObjectLinkBase_C_ExecuteUbergraph_BP_LightSource_ObjectLinkBase, CallFunc_PostAkEvent_ReturnValue) == 0x00003C, "Member 'BP_LightSource_ObjectLinkBase_C_ExecuteUbergraph_BP_LightSource_ObjectLinkBase::CallFunc_PostAkEvent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LightSource_ObjectLinkBase_C_ExecuteUbergraph_BP_LightSource_ObjectLinkBase, CallFunc_PostAkEvent_ReturnValue_1) == 0x000040, "Member 'BP_LightSource_ObjectLinkBase_C_ExecuteUbergraph_BP_LightSource_ObjectLinkBase::CallFunc_PostAkEvent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LightSource_ObjectLinkBase_C_ExecuteUbergraph_BP_LightSource_ObjectLinkBase, K2Node_ComponentBoundEvent_OverlappedComponent_1) == 0x000048, "Member 'BP_LightSource_ObjectLinkBase_C_ExecuteUbergraph_BP_LightSource_ObjectLinkBase::K2Node_ComponentBoundEvent_OverlappedComponent_1' has a wrong offset!");
static_assert(offsetof(BP_LightSource_ObjectLinkBase_C_ExecuteUbergraph_BP_LightSource_ObjectLinkBase, K2Node_ComponentBoundEvent_OtherActor_1) == 0x000050, "Member 'BP_LightSource_ObjectLinkBase_C_ExecuteUbergraph_BP_LightSource_ObjectLinkBase::K2Node_ComponentBoundEvent_OtherActor_1' has a wrong offset!");
static_assert(offsetof(BP_LightSource_ObjectLinkBase_C_ExecuteUbergraph_BP_LightSource_ObjectLinkBase, K2Node_ComponentBoundEvent_OtherComp_1) == 0x000058, "Member 'BP_LightSource_ObjectLinkBase_C_ExecuteUbergraph_BP_LightSource_ObjectLinkBase::K2Node_ComponentBoundEvent_OtherComp_1' has a wrong offset!");
static_assert(offsetof(BP_LightSource_ObjectLinkBase_C_ExecuteUbergraph_BP_LightSource_ObjectLinkBase, K2Node_ComponentBoundEvent_OtherBodyIndex_1) == 0x000060, "Member 'BP_LightSource_ObjectLinkBase_C_ExecuteUbergraph_BP_LightSource_ObjectLinkBase::K2Node_ComponentBoundEvent_OtherBodyIndex_1' has a wrong offset!");
static_assert(offsetof(BP_LightSource_ObjectLinkBase_C_ExecuteUbergraph_BP_LightSource_ObjectLinkBase, K2Node_ComponentBoundEvent_bFromSweep) == 0x000064, "Member 'BP_LightSource_ObjectLinkBase_C_ExecuteUbergraph_BP_LightSource_ObjectLinkBase::K2Node_ComponentBoundEvent_bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_LightSource_ObjectLinkBase_C_ExecuteUbergraph_BP_LightSource_ObjectLinkBase, K2Node_ComponentBoundEvent_SweepResult) == 0x000068, "Member 'BP_LightSource_ObjectLinkBase_C_ExecuteUbergraph_BP_LightSource_ObjectLinkBase::K2Node_ComponentBoundEvent_SweepResult' has a wrong offset!");
static_assert(offsetof(BP_LightSource_ObjectLinkBase_C_ExecuteUbergraph_BP_LightSource_ObjectLinkBase, K2Node_ComponentBoundEvent_OverlappedComponent) == 0x000150, "Member 'BP_LightSource_ObjectLinkBase_C_ExecuteUbergraph_BP_LightSource_ObjectLinkBase::K2Node_ComponentBoundEvent_OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_LightSource_ObjectLinkBase_C_ExecuteUbergraph_BP_LightSource_ObjectLinkBase, K2Node_ComponentBoundEvent_OtherActor) == 0x000158, "Member 'BP_LightSource_ObjectLinkBase_C_ExecuteUbergraph_BP_LightSource_ObjectLinkBase::K2Node_ComponentBoundEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(BP_LightSource_ObjectLinkBase_C_ExecuteUbergraph_BP_LightSource_ObjectLinkBase, K2Node_ComponentBoundEvent_OtherComp) == 0x000160, "Member 'BP_LightSource_ObjectLinkBase_C_ExecuteUbergraph_BP_LightSource_ObjectLinkBase::K2Node_ComponentBoundEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(BP_LightSource_ObjectLinkBase_C_ExecuteUbergraph_BP_LightSource_ObjectLinkBase, K2Node_ComponentBoundEvent_OtherBodyIndex) == 0x000168, "Member 'BP_LightSource_ObjectLinkBase_C_ExecuteUbergraph_BP_LightSource_ObjectLinkBase::K2Node_ComponentBoundEvent_OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_LightSource_ObjectLinkBase_C_ExecuteUbergraph_BP_LightSource_ObjectLinkBase, K2Node_DynamicCast_AsBP_Player_Character) == 0x000170, "Member 'BP_LightSource_ObjectLinkBase_C_ExecuteUbergraph_BP_LightSource_ObjectLinkBase::K2Node_DynamicCast_AsBP_Player_Character' has a wrong offset!");
static_assert(offsetof(BP_LightSource_ObjectLinkBase_C_ExecuteUbergraph_BP_LightSource_ObjectLinkBase, K2Node_DynamicCast_bSuccess) == 0x000178, "Member 'BP_LightSource_ObjectLinkBase_C_ExecuteUbergraph_BP_LightSource_ObjectLinkBase::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_LightSource_ObjectLinkBase_C_ExecuteUbergraph_BP_LightSource_ObjectLinkBase, K2Node_DynamicCast_AsBP_Player_Character_1) == 0x000180, "Member 'BP_LightSource_ObjectLinkBase_C_ExecuteUbergraph_BP_LightSource_ObjectLinkBase::K2Node_DynamicCast_AsBP_Player_Character_1' has a wrong offset!");
static_assert(offsetof(BP_LightSource_ObjectLinkBase_C_ExecuteUbergraph_BP_LightSource_ObjectLinkBase, K2Node_DynamicCast_bSuccess_1) == 0x000188, "Member 'BP_LightSource_ObjectLinkBase_C_ExecuteUbergraph_BP_LightSource_ObjectLinkBase::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_LightSource_ObjectLinkBase_C_ExecuteUbergraph_BP_LightSource_ObjectLinkBase, CallFunc_IsLocallyControlled_ReturnValue) == 0x000189, "Member 'BP_LightSource_ObjectLinkBase_C_ExecuteUbergraph_BP_LightSource_ObjectLinkBase::CallFunc_IsLocallyControlled_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LightSource_ObjectLinkBase_C_ExecuteUbergraph_BP_LightSource_ObjectLinkBase, CallFunc_IsLocallyControlled_ReturnValue_1) == 0x00018A, "Member 'BP_LightSource_ObjectLinkBase_C_ExecuteUbergraph_BP_LightSource_ObjectLinkBase::CallFunc_IsLocallyControlled_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LightSource_ObjectLinkBase_C_ExecuteUbergraph_BP_LightSource_ObjectLinkBase, K2Node_Event_InGameplayTag) == 0x00018C, "Member 'BP_LightSource_ObjectLinkBase_C_ExecuteUbergraph_BP_LightSource_ObjectLinkBase::K2Node_Event_InGameplayTag' has a wrong offset!");
static_assert(offsetof(BP_LightSource_ObjectLinkBase_C_ExecuteUbergraph_BP_LightSource_ObjectLinkBase, K2Node_Event_InCount) == 0x000194, "Member 'BP_LightSource_ObjectLinkBase_C_ExecuteUbergraph_BP_LightSource_ObjectLinkBase::K2Node_Event_InCount' has a wrong offset!");
static_assert(offsetof(BP_LightSource_ObjectLinkBase_C_ExecuteUbergraph_BP_LightSource_ObjectLinkBase, CallFunc_Greater_IntInt_ReturnValue) == 0x000198, "Member 'BP_LightSource_ObjectLinkBase_C_ExecuteUbergraph_BP_LightSource_ObjectLinkBase::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LightSource_ObjectLinkBase_C_ExecuteUbergraph_BP_LightSource_ObjectLinkBase, GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess) == 0x000199, "Member 'BP_LightSource_ObjectLinkBase_C_ExecuteUbergraph_BP_LightSource_ObjectLinkBase::GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_LightSource_ObjectLinkBase_C_ExecuteUbergraph_BP_LightSource_ObjectLinkBase, CallFunc_SetLightIntensity_Value_ImplicitCast) == 0x0001A0, "Member 'BP_LightSource_ObjectLinkBase_C_ExecuteUbergraph_BP_LightSource_ObjectLinkBase::CallFunc_SetLightIntensity_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_LightSource_ObjectLinkBase_C_ExecuteUbergraph_BP_LightSource_ObjectLinkBase, CallFunc_SetLightIntensity_Value_ImplicitCast_1) == 0x0001A8, "Member 'BP_LightSource_ObjectLinkBase_C_ExecuteUbergraph_BP_LightSource_ObjectLinkBase::CallFunc_SetLightIntensity_Value_ImplicitCast_1' has a wrong offset!");

// Function BP_LightSource_ObjectLinkBase.BP_LightSource_ObjectLinkBase_C.GameplayTagUpdated
// 0x000C (0x000C - 0x0000)
struct BP_LightSource_ObjectLinkBase_C_GameplayTagUpdated final
{
public:
	struct FGameplayTag                           InGameplayTag;                                     // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	int32                                         InCount;                                           // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LightSource_ObjectLinkBase_C_GameplayTagUpdated) == 0x000004, "Wrong alignment on BP_LightSource_ObjectLinkBase_C_GameplayTagUpdated");
static_assert(sizeof(BP_LightSource_ObjectLinkBase_C_GameplayTagUpdated) == 0x00000C, "Wrong size on BP_LightSource_ObjectLinkBase_C_GameplayTagUpdated");
static_assert(offsetof(BP_LightSource_ObjectLinkBase_C_GameplayTagUpdated, InGameplayTag) == 0x000000, "Member 'BP_LightSource_ObjectLinkBase_C_GameplayTagUpdated::InGameplayTag' has a wrong offset!");
static_assert(offsetof(BP_LightSource_ObjectLinkBase_C_GameplayTagUpdated, InCount) == 0x000008, "Member 'BP_LightSource_ObjectLinkBase_C_GameplayTagUpdated::InCount' has a wrong offset!");

// Function BP_LightSource_ObjectLinkBase.BP_LightSource_ObjectLinkBase_C.OnBurst_AKEvent
// 0x0028 (0x0028 - 0x0000)
struct BP_LightSource_ObjectLinkBase_C_OnBurst_AKEvent final
{
public:
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable;                            // 0x0000(0x0010)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable_1;                          // 0x0010(0x0010)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_PostAkEvent_ReturnValue;                  // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_PostAkEvent_ReturnValue_1;                // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LightSource_ObjectLinkBase_C_OnBurst_AKEvent) == 0x000004, "Wrong alignment on BP_LightSource_ObjectLinkBase_C_OnBurst_AKEvent");
static_assert(sizeof(BP_LightSource_ObjectLinkBase_C_OnBurst_AKEvent) == 0x000028, "Wrong size on BP_LightSource_ObjectLinkBase_C_OnBurst_AKEvent");
static_assert(offsetof(BP_LightSource_ObjectLinkBase_C_OnBurst_AKEvent, Temp_delegate_Variable) == 0x000000, "Member 'BP_LightSource_ObjectLinkBase_C_OnBurst_AKEvent::Temp_delegate_Variable' has a wrong offset!");
static_assert(offsetof(BP_LightSource_ObjectLinkBase_C_OnBurst_AKEvent, Temp_delegate_Variable_1) == 0x000010, "Member 'BP_LightSource_ObjectLinkBase_C_OnBurst_AKEvent::Temp_delegate_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_LightSource_ObjectLinkBase_C_OnBurst_AKEvent, CallFunc_PostAkEvent_ReturnValue) == 0x000020, "Member 'BP_LightSource_ObjectLinkBase_C_OnBurst_AKEvent::CallFunc_PostAkEvent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LightSource_ObjectLinkBase_C_OnBurst_AKEvent, CallFunc_PostAkEvent_ReturnValue_1) == 0x000024, "Member 'BP_LightSource_ObjectLinkBase_C_OnBurst_AKEvent::CallFunc_PostAkEvent_ReturnValue_1' has a wrong offset!");

// Function BP_LightSource_ObjectLinkBase.BP_LightSource_ObjectLinkBase_C.OnExtinguish_AKEvent
// 0x0028 (0x0028 - 0x0000)
struct BP_LightSource_ObjectLinkBase_C_OnExtinguish_AKEvent final
{
public:
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable;                            // 0x0000(0x0010)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable_1;                          // 0x0010(0x0010)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_PostAkEvent_ReturnValue;                  // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_PostAkEvent_ReturnValue_1;                // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LightSource_ObjectLinkBase_C_OnExtinguish_AKEvent) == 0x000004, "Wrong alignment on BP_LightSource_ObjectLinkBase_C_OnExtinguish_AKEvent");
static_assert(sizeof(BP_LightSource_ObjectLinkBase_C_OnExtinguish_AKEvent) == 0x000028, "Wrong size on BP_LightSource_ObjectLinkBase_C_OnExtinguish_AKEvent");
static_assert(offsetof(BP_LightSource_ObjectLinkBase_C_OnExtinguish_AKEvent, Temp_delegate_Variable) == 0x000000, "Member 'BP_LightSource_ObjectLinkBase_C_OnExtinguish_AKEvent::Temp_delegate_Variable' has a wrong offset!");
static_assert(offsetof(BP_LightSource_ObjectLinkBase_C_OnExtinguish_AKEvent, Temp_delegate_Variable_1) == 0x000010, "Member 'BP_LightSource_ObjectLinkBase_C_OnExtinguish_AKEvent::Temp_delegate_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_LightSource_ObjectLinkBase_C_OnExtinguish_AKEvent, CallFunc_PostAkEvent_ReturnValue) == 0x000020, "Member 'BP_LightSource_ObjectLinkBase_C_OnExtinguish_AKEvent::CallFunc_PostAkEvent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LightSource_ObjectLinkBase_C_OnExtinguish_AKEvent, CallFunc_PostAkEvent_ReturnValue_1) == 0x000024, "Member 'BP_LightSource_ObjectLinkBase_C_OnExtinguish_AKEvent::CallFunc_PostAkEvent_ReturnValue_1' has a wrong offset!");

// Function BP_LightSource_ObjectLinkBase.BP_LightSource_ObjectLinkBase_C.SetLightIntensity
// 0x0010 (0x0010 - 0x0000)
struct BP_LightSource_ObjectLinkBase_C_SetLightIntensity final
{
public:
	double                                        Value;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetIntensity_NewIntensity_ImplicitCast;   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LightSource_ObjectLinkBase_C_SetLightIntensity) == 0x000008, "Wrong alignment on BP_LightSource_ObjectLinkBase_C_SetLightIntensity");
static_assert(sizeof(BP_LightSource_ObjectLinkBase_C_SetLightIntensity) == 0x000010, "Wrong size on BP_LightSource_ObjectLinkBase_C_SetLightIntensity");
static_assert(offsetof(BP_LightSource_ObjectLinkBase_C_SetLightIntensity, Value) == 0x000000, "Member 'BP_LightSource_ObjectLinkBase_C_SetLightIntensity::Value' has a wrong offset!");
static_assert(offsetof(BP_LightSource_ObjectLinkBase_C_SetLightIntensity, CallFunc_SetIntensity_NewIntensity_ImplicitCast) == 0x000008, "Member 'BP_LightSource_ObjectLinkBase_C_SetLightIntensity::CallFunc_SetIntensity_NewIntensity_ImplicitCast' has a wrong offset!");

// Function BP_LightSource_ObjectLinkBase.BP_LightSource_ObjectLinkBase_C.SetParticleActive
// 0x0002 (0x0002 - 0x0000)
struct BP_LightSource_ObjectLinkBase_C_SetParticleActive final
{
public:
	bool                                          New_Active;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Reset;                                             // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LightSource_ObjectLinkBase_C_SetParticleActive) == 0x000001, "Wrong alignment on BP_LightSource_ObjectLinkBase_C_SetParticleActive");
static_assert(sizeof(BP_LightSource_ObjectLinkBase_C_SetParticleActive) == 0x000002, "Wrong size on BP_LightSource_ObjectLinkBase_C_SetParticleActive");
static_assert(offsetof(BP_LightSource_ObjectLinkBase_C_SetParticleActive, New_Active) == 0x000000, "Member 'BP_LightSource_ObjectLinkBase_C_SetParticleActive::New_Active' has a wrong offset!");
static_assert(offsetof(BP_LightSource_ObjectLinkBase_C_SetParticleActive, Reset) == 0x000001, "Member 'BP_LightSource_ObjectLinkBase_C_SetParticleActive::Reset' has a wrong offset!");

}

