#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_Creep

#include "Basic.hpp"

#include "GameplayAbilities_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function GA_Creep.GA_Creep_C.AddedOnTarget_F80A4BBA4BA462AEF8D07FAEB8CE8D78
// 0x0008 (0x0008 - 0x0000)
struct GA_Creep_C_AddedOnTarget_F80A4BBA4BA462AEF8D07FAEB8CE8D78 final
{
public:
	class AActor*                                 TargetActor;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Creep_C_AddedOnTarget_F80A4BBA4BA462AEF8D07FAEB8CE8D78) == 0x000008, "Wrong alignment on GA_Creep_C_AddedOnTarget_F80A4BBA4BA462AEF8D07FAEB8CE8D78");
static_assert(sizeof(GA_Creep_C_AddedOnTarget_F80A4BBA4BA462AEF8D07FAEB8CE8D78) == 0x000008, "Wrong size on GA_Creep_C_AddedOnTarget_F80A4BBA4BA462AEF8D07FAEB8CE8D78");
static_assert(offsetof(GA_Creep_C_AddedOnTarget_F80A4BBA4BA462AEF8D07FAEB8CE8D78, TargetActor) == 0x000000, "Member 'GA_Creep_C_AddedOnTarget_F80A4BBA4BA462AEF8D07FAEB8CE8D78::TargetActor' has a wrong offset!");

// Function GA_Creep.GA_Creep_C.AddOrRemoveCreepStates
// 0x00D8 (0x00D8 - 0x0000)
struct GA_Creep_C_AddOrRemoveCreepStates final
{
public:
	TArray<struct FActiveGameplayEffectHandle>    ActiveGameplayEffectHandles;                       // 0x0000(0x0010)(Parm, OutParm)
	struct FGameplayEventData                     Temp_struct_Variable;                              // 0x0010(0x00B0)(ConstParm)
	TArray<struct FActiveGameplayEffectHandle>    CallFunc_ApplyEffectContainer_ReturnValue;         // 0x00C0(0x0010)(ReferenceParm)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Creep_C_AddOrRemoveCreepStates) == 0x000008, "Wrong alignment on GA_Creep_C_AddOrRemoveCreepStates");
static_assert(sizeof(GA_Creep_C_AddOrRemoveCreepStates) == 0x0000D8, "Wrong size on GA_Creep_C_AddOrRemoveCreepStates");
static_assert(offsetof(GA_Creep_C_AddOrRemoveCreepStates, ActiveGameplayEffectHandles) == 0x000000, "Member 'GA_Creep_C_AddOrRemoveCreepStates::ActiveGameplayEffectHandles' has a wrong offset!");
static_assert(offsetof(GA_Creep_C_AddOrRemoveCreepStates, Temp_struct_Variable) == 0x000010, "Member 'GA_Creep_C_AddOrRemoveCreepStates::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(GA_Creep_C_AddOrRemoveCreepStates, CallFunc_ApplyEffectContainer_ReturnValue) == 0x0000C0, "Member 'GA_Creep_C_AddOrRemoveCreepStates::CallFunc_ApplyEffectContainer_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Creep_C_AddOrRemoveCreepStates, CallFunc_BooleanAND_ReturnValue) == 0x0000D0, "Member 'GA_Creep_C_AddOrRemoveCreepStates::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function GA_Creep.GA_Creep_C.ExecuteUbergraph_GA_Creep
// 0x0300 (0x0300 - 0x0000)
struct GA_Creep_C_ExecuteUbergraph_GA_Creep final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMovementMode                                 K2Node_CustomEvent_PrevMovementMode_1;             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMovementMode                                 K2Node_CustomEvent_NewMovementMode_1;              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5593[0x2];                                     // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UDCAT_WaitGameplayTagsAdded*            CallFunc_WaitGameplayTagsAdded_ReturnValue;        // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UDCAT_WaitGameplayTagsRemoved*          CallFunc_WaitGameplayTagsRemoved_ReturnValue;      // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMovementMode                                 Temp_byte_Variable;                                // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMovementMode                                 Temp_byte_Variable_1;                              // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5594[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UDCAT_WaitMovementModeChange*           CallFunc_WaitMovementModeChange_ReturnValue;       // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(EMovementMode PrevMovementMode, EMovementMode NewMovementMode)> K2Node_CreateDelegate_OutputDelegate;              // 0x0028(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMovementMode                                 K2Node_CustomEvent_PrevMovementMode;               // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMovementMode                                 K2Node_CustomEvent_NewMovementMode;                // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMovementMode                                 Temp_byte_Variable_2;                              // 0x003B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMovementMode                                 Temp_byte_Variable_3;                              // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5595[0x3];                                     // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UDCAT_WaitMovementModeChange*           CallFunc_WaitMovementModeChange_ReturnValue_1;     // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(struct FGameplayEffectRemovalInfo& GameplayEffectRemovalInfo)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x0048(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5596[0x7];                                     // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayEffectRemovalInfo             K2Node_CustomEvent_GameplayEffectRemovalInfo_1;    // 0x0060(0x0028)(ConstParm)
	struct FGameplayEffectRemovalInfo             K2Node_CustomEvent_GameplayEffectRemovalInfo;      // 0x0088(0x0028)(ConstParm)
	TDelegate<void(struct FGameplayEffectRemovalInfo& GameplayEffectRemovalInfo)> K2Node_CreateDelegate_OutputDelegate_2;            // 0x00B0(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEffectRemovalInfo             Temp_struct_Variable;                              // 0x00C0(0x0028)()
	struct FGameplayEventData                     Temp_struct_Variable_1;                            // 0x00E8(0x00B0)(ConstParm)
	TArray<struct FActiveGameplayEffectHandle>    CallFunc_ApplyEffectContainer_ReturnValue;         // 0x0198(0x0010)(ReferenceParm)
	TDelegate<void(class AActor* TargetActor)>    K2Node_CreateDelegate_OutputDelegate_3;            // 0x01A8(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_TargetActor_1;                  // 0x01B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_4;            // 0x01C0(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class AActor* TargetActor)>    K2Node_CreateDelegate_OutputDelegate_5;            // 0x01D0(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_TargetActor;                    // 0x01E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_6;            // 0x01E8(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x01F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x01FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0200(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5597[0x4];                                     // 0x0204(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayEventData                     K2Node_Event_EventData;                            // 0x0208(0x00B0)(ConstParm)
	bool                                          K2Node_Event_bWasCancelled;                        // 0x02B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5598[0x3];                                     // 0x02B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(EMovementMode PrevMovementMode, EMovementMode NewMovementMode)> K2Node_CreateDelegate_OutputDelegate_7;            // 0x02BC(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5599[0x4];                                     // 0x02CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FActiveGameplayEffectHandle>    CallFunc_AddOrRemoveCreepStates_ActiveGameplayEffectHandles; // 0x02D0(0x0010)(ReferenceParm)
	bool                                          CallFunc_K2_HasAuthority_ReturnValue;              // 0x02E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_559A[0x3];                                     // 0x02E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FActiveGameplayEffectHandle            CallFunc_Array_Get_Item;                           // 0x02E4(0x0008)(NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_559B[0x4];                                     // 0x02EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAbilityTask_WaitGameplayEffectRemoved* CallFunc_WaitForGameplayEffectRemoved_ReturnValue; // 0x02F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x02F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x02FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x02FD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsEmpty_ReturnValue;                // 0x02FE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_HasAuthority_ReturnValue_1;            // 0x02FF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Creep_C_ExecuteUbergraph_GA_Creep) == 0x000008, "Wrong alignment on GA_Creep_C_ExecuteUbergraph_GA_Creep");
static_assert(sizeof(GA_Creep_C_ExecuteUbergraph_GA_Creep) == 0x000300, "Wrong size on GA_Creep_C_ExecuteUbergraph_GA_Creep");
static_assert(offsetof(GA_Creep_C_ExecuteUbergraph_GA_Creep, EntryPoint) == 0x000000, "Member 'GA_Creep_C_ExecuteUbergraph_GA_Creep::EntryPoint' has a wrong offset!");
static_assert(offsetof(GA_Creep_C_ExecuteUbergraph_GA_Creep, K2Node_CustomEvent_PrevMovementMode_1) == 0x000004, "Member 'GA_Creep_C_ExecuteUbergraph_GA_Creep::K2Node_CustomEvent_PrevMovementMode_1' has a wrong offset!");
static_assert(offsetof(GA_Creep_C_ExecuteUbergraph_GA_Creep, K2Node_CustomEvent_NewMovementMode_1) == 0x000005, "Member 'GA_Creep_C_ExecuteUbergraph_GA_Creep::K2Node_CustomEvent_NewMovementMode_1' has a wrong offset!");
static_assert(offsetof(GA_Creep_C_ExecuteUbergraph_GA_Creep, CallFunc_WaitGameplayTagsAdded_ReturnValue) == 0x000008, "Member 'GA_Creep_C_ExecuteUbergraph_GA_Creep::CallFunc_WaitGameplayTagsAdded_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Creep_C_ExecuteUbergraph_GA_Creep, CallFunc_WaitGameplayTagsRemoved_ReturnValue) == 0x000010, "Member 'GA_Creep_C_ExecuteUbergraph_GA_Creep::CallFunc_WaitGameplayTagsRemoved_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Creep_C_ExecuteUbergraph_GA_Creep, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'GA_Creep_C_ExecuteUbergraph_GA_Creep::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Creep_C_ExecuteUbergraph_GA_Creep, CallFunc_IsValid_ReturnValue_1) == 0x000019, "Member 'GA_Creep_C_ExecuteUbergraph_GA_Creep::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_Creep_C_ExecuteUbergraph_GA_Creep, Temp_byte_Variable) == 0x00001A, "Member 'GA_Creep_C_ExecuteUbergraph_GA_Creep::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(GA_Creep_C_ExecuteUbergraph_GA_Creep, Temp_byte_Variable_1) == 0x00001B, "Member 'GA_Creep_C_ExecuteUbergraph_GA_Creep::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(GA_Creep_C_ExecuteUbergraph_GA_Creep, CallFunc_WaitMovementModeChange_ReturnValue) == 0x000020, "Member 'GA_Creep_C_ExecuteUbergraph_GA_Creep::CallFunc_WaitMovementModeChange_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Creep_C_ExecuteUbergraph_GA_Creep, K2Node_CreateDelegate_OutputDelegate) == 0x000028, "Member 'GA_Creep_C_ExecuteUbergraph_GA_Creep::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(GA_Creep_C_ExecuteUbergraph_GA_Creep, CallFunc_IsValid_ReturnValue_2) == 0x000038, "Member 'GA_Creep_C_ExecuteUbergraph_GA_Creep::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GA_Creep_C_ExecuteUbergraph_GA_Creep, K2Node_CustomEvent_PrevMovementMode) == 0x000039, "Member 'GA_Creep_C_ExecuteUbergraph_GA_Creep::K2Node_CustomEvent_PrevMovementMode' has a wrong offset!");
static_assert(offsetof(GA_Creep_C_ExecuteUbergraph_GA_Creep, K2Node_CustomEvent_NewMovementMode) == 0x00003A, "Member 'GA_Creep_C_ExecuteUbergraph_GA_Creep::K2Node_CustomEvent_NewMovementMode' has a wrong offset!");
static_assert(offsetof(GA_Creep_C_ExecuteUbergraph_GA_Creep, Temp_byte_Variable_2) == 0x00003B, "Member 'GA_Creep_C_ExecuteUbergraph_GA_Creep::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(GA_Creep_C_ExecuteUbergraph_GA_Creep, Temp_byte_Variable_3) == 0x00003C, "Member 'GA_Creep_C_ExecuteUbergraph_GA_Creep::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(GA_Creep_C_ExecuteUbergraph_GA_Creep, CallFunc_WaitMovementModeChange_ReturnValue_1) == 0x000040, "Member 'GA_Creep_C_ExecuteUbergraph_GA_Creep::CallFunc_WaitMovementModeChange_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_Creep_C_ExecuteUbergraph_GA_Creep, K2Node_CreateDelegate_OutputDelegate_1) == 0x000048, "Member 'GA_Creep_C_ExecuteUbergraph_GA_Creep::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(GA_Creep_C_ExecuteUbergraph_GA_Creep, CallFunc_IsValid_ReturnValue_3) == 0x000058, "Member 'GA_Creep_C_ExecuteUbergraph_GA_Creep::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(GA_Creep_C_ExecuteUbergraph_GA_Creep, K2Node_CustomEvent_GameplayEffectRemovalInfo_1) == 0x000060, "Member 'GA_Creep_C_ExecuteUbergraph_GA_Creep::K2Node_CustomEvent_GameplayEffectRemovalInfo_1' has a wrong offset!");
static_assert(offsetof(GA_Creep_C_ExecuteUbergraph_GA_Creep, K2Node_CustomEvent_GameplayEffectRemovalInfo) == 0x000088, "Member 'GA_Creep_C_ExecuteUbergraph_GA_Creep::K2Node_CustomEvent_GameplayEffectRemovalInfo' has a wrong offset!");
static_assert(offsetof(GA_Creep_C_ExecuteUbergraph_GA_Creep, K2Node_CreateDelegate_OutputDelegate_2) == 0x0000B0, "Member 'GA_Creep_C_ExecuteUbergraph_GA_Creep::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(GA_Creep_C_ExecuteUbergraph_GA_Creep, Temp_struct_Variable) == 0x0000C0, "Member 'GA_Creep_C_ExecuteUbergraph_GA_Creep::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(GA_Creep_C_ExecuteUbergraph_GA_Creep, Temp_struct_Variable_1) == 0x0000E8, "Member 'GA_Creep_C_ExecuteUbergraph_GA_Creep::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(GA_Creep_C_ExecuteUbergraph_GA_Creep, CallFunc_ApplyEffectContainer_ReturnValue) == 0x000198, "Member 'GA_Creep_C_ExecuteUbergraph_GA_Creep::CallFunc_ApplyEffectContainer_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Creep_C_ExecuteUbergraph_GA_Creep, K2Node_CreateDelegate_OutputDelegate_3) == 0x0001A8, "Member 'GA_Creep_C_ExecuteUbergraph_GA_Creep::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(GA_Creep_C_ExecuteUbergraph_GA_Creep, K2Node_CustomEvent_TargetActor_1) == 0x0001B8, "Member 'GA_Creep_C_ExecuteUbergraph_GA_Creep::K2Node_CustomEvent_TargetActor_1' has a wrong offset!");
static_assert(offsetof(GA_Creep_C_ExecuteUbergraph_GA_Creep, K2Node_CreateDelegate_OutputDelegate_4) == 0x0001C0, "Member 'GA_Creep_C_ExecuteUbergraph_GA_Creep::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(GA_Creep_C_ExecuteUbergraph_GA_Creep, K2Node_CreateDelegate_OutputDelegate_5) == 0x0001D0, "Member 'GA_Creep_C_ExecuteUbergraph_GA_Creep::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(GA_Creep_C_ExecuteUbergraph_GA_Creep, K2Node_CustomEvent_TargetActor) == 0x0001E0, "Member 'GA_Creep_C_ExecuteUbergraph_GA_Creep::K2Node_CustomEvent_TargetActor' has a wrong offset!");
static_assert(offsetof(GA_Creep_C_ExecuteUbergraph_GA_Creep, K2Node_CreateDelegate_OutputDelegate_6) == 0x0001E8, "Member 'GA_Creep_C_ExecuteUbergraph_GA_Creep::K2Node_CreateDelegate_OutputDelegate_6' has a wrong offset!");
static_assert(offsetof(GA_Creep_C_ExecuteUbergraph_GA_Creep, Temp_int_Array_Index_Variable) == 0x0001F8, "Member 'GA_Creep_C_ExecuteUbergraph_GA_Creep::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(GA_Creep_C_ExecuteUbergraph_GA_Creep, Temp_int_Loop_Counter_Variable) == 0x0001FC, "Member 'GA_Creep_C_ExecuteUbergraph_GA_Creep::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(GA_Creep_C_ExecuteUbergraph_GA_Creep, CallFunc_Add_IntInt_ReturnValue) == 0x000200, "Member 'GA_Creep_C_ExecuteUbergraph_GA_Creep::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Creep_C_ExecuteUbergraph_GA_Creep, K2Node_Event_EventData) == 0x000208, "Member 'GA_Creep_C_ExecuteUbergraph_GA_Creep::K2Node_Event_EventData' has a wrong offset!");
static_assert(offsetof(GA_Creep_C_ExecuteUbergraph_GA_Creep, K2Node_Event_bWasCancelled) == 0x0002B8, "Member 'GA_Creep_C_ExecuteUbergraph_GA_Creep::K2Node_Event_bWasCancelled' has a wrong offset!");
static_assert(offsetof(GA_Creep_C_ExecuteUbergraph_GA_Creep, K2Node_CreateDelegate_OutputDelegate_7) == 0x0002BC, "Member 'GA_Creep_C_ExecuteUbergraph_GA_Creep::K2Node_CreateDelegate_OutputDelegate_7' has a wrong offset!");
static_assert(offsetof(GA_Creep_C_ExecuteUbergraph_GA_Creep, CallFunc_AddOrRemoveCreepStates_ActiveGameplayEffectHandles) == 0x0002D0, "Member 'GA_Creep_C_ExecuteUbergraph_GA_Creep::CallFunc_AddOrRemoveCreepStates_ActiveGameplayEffectHandles' has a wrong offset!");
static_assert(offsetof(GA_Creep_C_ExecuteUbergraph_GA_Creep, CallFunc_K2_HasAuthority_ReturnValue) == 0x0002E0, "Member 'GA_Creep_C_ExecuteUbergraph_GA_Creep::CallFunc_K2_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Creep_C_ExecuteUbergraph_GA_Creep, CallFunc_Array_Get_Item) == 0x0002E4, "Member 'GA_Creep_C_ExecuteUbergraph_GA_Creep::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(GA_Creep_C_ExecuteUbergraph_GA_Creep, CallFunc_WaitForGameplayEffectRemoved_ReturnValue) == 0x0002F0, "Member 'GA_Creep_C_ExecuteUbergraph_GA_Creep::CallFunc_WaitForGameplayEffectRemoved_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Creep_C_ExecuteUbergraph_GA_Creep, CallFunc_Array_Length_ReturnValue) == 0x0002F8, "Member 'GA_Creep_C_ExecuteUbergraph_GA_Creep::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Creep_C_ExecuteUbergraph_GA_Creep, CallFunc_Less_IntInt_ReturnValue) == 0x0002FC, "Member 'GA_Creep_C_ExecuteUbergraph_GA_Creep::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Creep_C_ExecuteUbergraph_GA_Creep, CallFunc_IsValid_ReturnValue_4) == 0x0002FD, "Member 'GA_Creep_C_ExecuteUbergraph_GA_Creep::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(GA_Creep_C_ExecuteUbergraph_GA_Creep, CallFunc_Array_IsEmpty_ReturnValue) == 0x0002FE, "Member 'GA_Creep_C_ExecuteUbergraph_GA_Creep::CallFunc_Array_IsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Creep_C_ExecuteUbergraph_GA_Creep, CallFunc_K2_HasAuthority_ReturnValue_1) == 0x0002FF, "Member 'GA_Creep_C_ExecuteUbergraph_GA_Creep::CallFunc_K2_HasAuthority_ReturnValue_1' has a wrong offset!");

// Function GA_Creep.GA_Creep_C.InvalidHandle_E18E3E8E49D86F06DA65538E151266F5
// 0x0028 (0x0028 - 0x0000)
struct GA_Creep_C_InvalidHandle_E18E3E8E49D86F06DA65538E151266F5 final
{
public:
	struct FGameplayEffectRemovalInfo             GameplayEffectRemovalInfo;                         // 0x0000(0x0028)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(GA_Creep_C_InvalidHandle_E18E3E8E49D86F06DA65538E151266F5) == 0x000008, "Wrong alignment on GA_Creep_C_InvalidHandle_E18E3E8E49D86F06DA65538E151266F5");
static_assert(sizeof(GA_Creep_C_InvalidHandle_E18E3E8E49D86F06DA65538E151266F5) == 0x000028, "Wrong size on GA_Creep_C_InvalidHandle_E18E3E8E49D86F06DA65538E151266F5");
static_assert(offsetof(GA_Creep_C_InvalidHandle_E18E3E8E49D86F06DA65538E151266F5, GameplayEffectRemovalInfo) == 0x000000, "Member 'GA_Creep_C_InvalidHandle_E18E3E8E49D86F06DA65538E151266F5::GameplayEffectRemovalInfo' has a wrong offset!");

// Function GA_Creep.GA_Creep_C.K2_ActivateAbilityFromEvent
// 0x00B0 (0x00B0 - 0x0000)
struct GA_Creep_C_K2_ActivateAbilityFromEvent final
{
public:
	struct FGameplayEventData                     EventData;                                         // 0x0000(0x00B0)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(GA_Creep_C_K2_ActivateAbilityFromEvent) == 0x000008, "Wrong alignment on GA_Creep_C_K2_ActivateAbilityFromEvent");
static_assert(sizeof(GA_Creep_C_K2_ActivateAbilityFromEvent) == 0x0000B0, "Wrong size on GA_Creep_C_K2_ActivateAbilityFromEvent");
static_assert(offsetof(GA_Creep_C_K2_ActivateAbilityFromEvent, EventData) == 0x000000, "Member 'GA_Creep_C_K2_ActivateAbilityFromEvent::EventData' has a wrong offset!");

// Function GA_Creep.GA_Creep_C.K2_OnEndAbility
// 0x0001 (0x0001 - 0x0000)
struct GA_Creep_C_K2_OnEndAbility final
{
public:
	bool                                          bWasCancelled;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Creep_C_K2_OnEndAbility) == 0x000001, "Wrong alignment on GA_Creep_C_K2_OnEndAbility");
static_assert(sizeof(GA_Creep_C_K2_OnEndAbility) == 0x000001, "Wrong size on GA_Creep_C_K2_OnEndAbility");
static_assert(offsetof(GA_Creep_C_K2_OnEndAbility, bWasCancelled) == 0x000000, "Member 'GA_Creep_C_K2_OnEndAbility::bWasCancelled' has a wrong offset!");

// Function GA_Creep.GA_Creep_C.OnMovementModeChanged_513A5D0B49F0FB55031E7AB53AA4AAA6
// 0x0002 (0x0002 - 0x0000)
struct GA_Creep_C_OnMovementModeChanged_513A5D0B49F0FB55031E7AB53AA4AAA6 final
{
public:
	EMovementMode                                 PrevMovementMode;                                  // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMovementMode                                 NewMovementMode;                                   // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Creep_C_OnMovementModeChanged_513A5D0B49F0FB55031E7AB53AA4AAA6) == 0x000001, "Wrong alignment on GA_Creep_C_OnMovementModeChanged_513A5D0B49F0FB55031E7AB53AA4AAA6");
static_assert(sizeof(GA_Creep_C_OnMovementModeChanged_513A5D0B49F0FB55031E7AB53AA4AAA6) == 0x000002, "Wrong size on GA_Creep_C_OnMovementModeChanged_513A5D0B49F0FB55031E7AB53AA4AAA6");
static_assert(offsetof(GA_Creep_C_OnMovementModeChanged_513A5D0B49F0FB55031E7AB53AA4AAA6, PrevMovementMode) == 0x000000, "Member 'GA_Creep_C_OnMovementModeChanged_513A5D0B49F0FB55031E7AB53AA4AAA6::PrevMovementMode' has a wrong offset!");
static_assert(offsetof(GA_Creep_C_OnMovementModeChanged_513A5D0B49F0FB55031E7AB53AA4AAA6, NewMovementMode) == 0x000001, "Member 'GA_Creep_C_OnMovementModeChanged_513A5D0B49F0FB55031E7AB53AA4AAA6::NewMovementMode' has a wrong offset!");

// Function GA_Creep.GA_Creep_C.OnMovementModeChanged_935FA2BA4A9B2D47F35B2D84B794EED0
// 0x0002 (0x0002 - 0x0000)
struct GA_Creep_C_OnMovementModeChanged_935FA2BA4A9B2D47F35B2D84B794EED0 final
{
public:
	EMovementMode                                 PrevMovementMode;                                  // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMovementMode                                 NewMovementMode;                                   // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Creep_C_OnMovementModeChanged_935FA2BA4A9B2D47F35B2D84B794EED0) == 0x000001, "Wrong alignment on GA_Creep_C_OnMovementModeChanged_935FA2BA4A9B2D47F35B2D84B794EED0");
static_assert(sizeof(GA_Creep_C_OnMovementModeChanged_935FA2BA4A9B2D47F35B2D84B794EED0) == 0x000002, "Wrong size on GA_Creep_C_OnMovementModeChanged_935FA2BA4A9B2D47F35B2D84B794EED0");
static_assert(offsetof(GA_Creep_C_OnMovementModeChanged_935FA2BA4A9B2D47F35B2D84B794EED0, PrevMovementMode) == 0x000000, "Member 'GA_Creep_C_OnMovementModeChanged_935FA2BA4A9B2D47F35B2D84B794EED0::PrevMovementMode' has a wrong offset!");
static_assert(offsetof(GA_Creep_C_OnMovementModeChanged_935FA2BA4A9B2D47F35B2D84B794EED0, NewMovementMode) == 0x000001, "Member 'GA_Creep_C_OnMovementModeChanged_935FA2BA4A9B2D47F35B2D84B794EED0::NewMovementMode' has a wrong offset!");

// Function GA_Creep.GA_Creep_C.OnRemoved_E18E3E8E49D86F06DA65538E151266F5
// 0x0028 (0x0028 - 0x0000)
struct GA_Creep_C_OnRemoved_E18E3E8E49D86F06DA65538E151266F5 final
{
public:
	struct FGameplayEffectRemovalInfo             GameplayEffectRemovalInfo;                         // 0x0000(0x0028)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(GA_Creep_C_OnRemoved_E18E3E8E49D86F06DA65538E151266F5) == 0x000008, "Wrong alignment on GA_Creep_C_OnRemoved_E18E3E8E49D86F06DA65538E151266F5");
static_assert(sizeof(GA_Creep_C_OnRemoved_E18E3E8E49D86F06DA65538E151266F5) == 0x000028, "Wrong size on GA_Creep_C_OnRemoved_E18E3E8E49D86F06DA65538E151266F5");
static_assert(offsetof(GA_Creep_C_OnRemoved_E18E3E8E49D86F06DA65538E151266F5, GameplayEffectRemovalInfo) == 0x000000, "Member 'GA_Creep_C_OnRemoved_E18E3E8E49D86F06DA65538E151266F5::GameplayEffectRemovalInfo' has a wrong offset!");

// Function GA_Creep.GA_Creep_C.RemovedOnTarget_E81EB63142901C4858A96D8C15224028
// 0x0008 (0x0008 - 0x0000)
struct GA_Creep_C_RemovedOnTarget_E81EB63142901C4858A96D8C15224028 final
{
public:
	class AActor*                                 TargetActor;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Creep_C_RemovedOnTarget_E81EB63142901C4858A96D8C15224028) == 0x000008, "Wrong alignment on GA_Creep_C_RemovedOnTarget_E81EB63142901C4858A96D8C15224028");
static_assert(sizeof(GA_Creep_C_RemovedOnTarget_E81EB63142901C4858A96D8C15224028) == 0x000008, "Wrong size on GA_Creep_C_RemovedOnTarget_E81EB63142901C4858A96D8C15224028");
static_assert(offsetof(GA_Creep_C_RemovedOnTarget_E81EB63142901C4858A96D8C15224028, TargetActor) == 0x000000, "Member 'GA_Creep_C_RemovedOnTarget_E81EB63142901C4858A96D8C15224028::TargetActor' has a wrong offset!");

}

