#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_LivingArmor

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_LivingArmor.BP_LivingArmor_C.Add Combo Count
// 0x0008 (0x0008 - 0x0000)
struct BP_LivingArmor_C_Add_Combo_Count final
{
public:
	int32                                         Temp_int_Variable;                                 // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LivingArmor_C_Add_Combo_Count) == 0x000004, "Wrong alignment on BP_LivingArmor_C_Add_Combo_Count");
static_assert(sizeof(BP_LivingArmor_C_Add_Combo_Count) == 0x000008, "Wrong size on BP_LivingArmor_C_Add_Combo_Count");
static_assert(offsetof(BP_LivingArmor_C_Add_Combo_Count, Temp_int_Variable) == 0x000000, "Member 'BP_LivingArmor_C_Add_Combo_Count::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_LivingArmor_C_Add_Combo_Count, CallFunc_Add_IntInt_ReturnValue) == 0x000004, "Member 'BP_LivingArmor_C_Add_Combo_Count::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BP_LivingArmor.BP_LivingArmor_C.ExecuteUbergraph_BP_LivingArmor
// 0x01E0 (0x01E0 - 0x0000)
struct BP_LivingArmor_C_ExecuteUbergraph_BP_LivingArmor final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_485E[0x3];                                     // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_485F[0x3];                                     // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4860[0x4];                                     // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_DCHitBox_C*                         CallFunc_Array_Get_Item;                           // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0040(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_AddGameplayTag_ReturnValue;               // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4861[0x7];                                     // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0058(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_AddGameplayTag_ReturnValue_1;             // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4862[0x3];                                     // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Get_Enemies_In_Range_And_Angle_From_Actor_Result; // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4863[0x7];                                     // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ADCCharacterBase*>               CallFunc_Get_Enemies_In_Range_And_Angle_From_Actor_DCCharacterBase; // 0x0070(0x0010)(ReferenceParm)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0080(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ADCCharacterBase*                       CallFunc_Array_Get_Item_1;                         // 0x0098(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4864[0x4];                                     // 0x00A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x00A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4865[0x4];                                     // 0x00C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x00C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue;                          // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4866[0xC];                                     // 0x00E4(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x00F0(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_FindRelativeLookAtRotation_ReturnValue;   // 0x0150(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x016C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0174(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_InRange_FloatFloat_ReturnValue;           // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0179(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_InRange_FloatFloat_ReturnValue_1;         // 0x017A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x017B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x017C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_1;        // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4867[0x3];                                     // 0x0181(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0184(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetCollisionProfileName_ReturnValue;      // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4868[0x3];                                     // 0x0191(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_GetCollisionProfileName_ReturnValue_1;    // 0x0194(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue_1;        // 0x019C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4869[0x3];                                     // 0x019D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_GetCollisionProfileName_ReturnValue_2;    // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_Event_InGameplayTag;                        // 0x01A8(0x0008)(ConstParm, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_InCount;                              // 0x01B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue_2;        // 0x01B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x01B5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x01B6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess;   // 0x01B7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_DCHitBox_C*                         CallFunc_Array_Get_Item_2;                         // 0x01B8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x01C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue;       // 0x01C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x01C5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_486A[0x2];                                     // 0x01C6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_InRange_FloatFloat_Value_ImplicitCast;    // 0x01C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_InRange_FloatFloat_Value_ImplicitCast_1;  // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LivingArmor_C_ExecuteUbergraph_BP_LivingArmor) == 0x000010, "Wrong alignment on BP_LivingArmor_C_ExecuteUbergraph_BP_LivingArmor");
static_assert(sizeof(BP_LivingArmor_C_ExecuteUbergraph_BP_LivingArmor) == 0x0001E0, "Wrong size on BP_LivingArmor_C_ExecuteUbergraph_BP_LivingArmor");
static_assert(offsetof(BP_LivingArmor_C_ExecuteUbergraph_BP_LivingArmor, EntryPoint) == 0x000000, "Member 'BP_LivingArmor_C_ExecuteUbergraph_BP_LivingArmor::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_LivingArmor_C_ExecuteUbergraph_BP_LivingArmor, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_LivingArmor_C_ExecuteUbergraph_BP_LivingArmor::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_LivingArmor_C_ExecuteUbergraph_BP_LivingArmor, CallFunc_Array_Length_ReturnValue) == 0x000008, "Member 'BP_LivingArmor_C_ExecuteUbergraph_BP_LivingArmor::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LivingArmor_C_ExecuteUbergraph_BP_LivingArmor, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BP_LivingArmor_C_ExecuteUbergraph_BP_LivingArmor::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LivingArmor_C_ExecuteUbergraph_BP_LivingArmor, Temp_int_Array_Index_Variable) == 0x000010, "Member 'BP_LivingArmor_C_ExecuteUbergraph_BP_LivingArmor::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_LivingArmor_C_ExecuteUbergraph_BP_LivingArmor, Temp_int_Array_Index_Variable_1) == 0x000014, "Member 'BP_LivingArmor_C_ExecuteUbergraph_BP_LivingArmor::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_LivingArmor_C_ExecuteUbergraph_BP_LivingArmor, Temp_int_Loop_Counter_Variable_1) == 0x000018, "Member 'BP_LivingArmor_C_ExecuteUbergraph_BP_LivingArmor::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_LivingArmor_C_ExecuteUbergraph_BP_LivingArmor, Temp_int_Loop_Counter_Variable_2) == 0x00001C, "Member 'BP_LivingArmor_C_ExecuteUbergraph_BP_LivingArmor::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_LivingArmor_C_ExecuteUbergraph_BP_LivingArmor, CallFunc_Subtract_IntInt_ReturnValue) == 0x000020, "Member 'BP_LivingArmor_C_ExecuteUbergraph_BP_LivingArmor::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LivingArmor_C_ExecuteUbergraph_BP_LivingArmor, CallFunc_Less_IntInt_ReturnValue) == 0x000024, "Member 'BP_LivingArmor_C_ExecuteUbergraph_BP_LivingArmor::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LivingArmor_C_ExecuteUbergraph_BP_LivingArmor, CallFunc_Add_IntInt_ReturnValue_1) == 0x000028, "Member 'BP_LivingArmor_C_ExecuteUbergraph_BP_LivingArmor::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LivingArmor_C_ExecuteUbergraph_BP_LivingArmor, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x00002C, "Member 'BP_LivingArmor_C_ExecuteUbergraph_BP_LivingArmor::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LivingArmor_C_ExecuteUbergraph_BP_LivingArmor, Temp_int_Array_Index_Variable_2) == 0x000030, "Member 'BP_LivingArmor_C_ExecuteUbergraph_BP_LivingArmor::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_LivingArmor_C_ExecuteUbergraph_BP_LivingArmor, CallFunc_Array_Get_Item) == 0x000038, "Member 'BP_LivingArmor_C_ExecuteUbergraph_BP_LivingArmor::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_LivingArmor_C_ExecuteUbergraph_BP_LivingArmor, K2Node_CreateDelegate_OutputDelegate) == 0x000040, "Member 'BP_LivingArmor_C_ExecuteUbergraph_BP_LivingArmor::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_LivingArmor_C_ExecuteUbergraph_BP_LivingArmor, CallFunc_AddGameplayTag_ReturnValue) == 0x000050, "Member 'BP_LivingArmor_C_ExecuteUbergraph_BP_LivingArmor::CallFunc_AddGameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LivingArmor_C_ExecuteUbergraph_BP_LivingArmor, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000058, "Member 'BP_LivingArmor_C_ExecuteUbergraph_BP_LivingArmor::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LivingArmor_C_ExecuteUbergraph_BP_LivingArmor, CallFunc_AddGameplayTag_ReturnValue_1) == 0x000060, "Member 'BP_LivingArmor_C_ExecuteUbergraph_BP_LivingArmor::CallFunc_AddGameplayTag_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LivingArmor_C_ExecuteUbergraph_BP_LivingArmor, Temp_int_Variable) == 0x000064, "Member 'BP_LivingArmor_C_ExecuteUbergraph_BP_LivingArmor::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_LivingArmor_C_ExecuteUbergraph_BP_LivingArmor, CallFunc_Get_Enemies_In_Range_And_Angle_From_Actor_Result) == 0x000068, "Member 'BP_LivingArmor_C_ExecuteUbergraph_BP_LivingArmor::CallFunc_Get_Enemies_In_Range_And_Angle_From_Actor_Result' has a wrong offset!");
static_assert(offsetof(BP_LivingArmor_C_ExecuteUbergraph_BP_LivingArmor, CallFunc_Get_Enemies_In_Range_And_Angle_From_Actor_DCCharacterBase) == 0x000070, "Member 'BP_LivingArmor_C_ExecuteUbergraph_BP_LivingArmor::CallFunc_Get_Enemies_In_Range_And_Angle_From_Actor_DCCharacterBase' has a wrong offset!");
static_assert(offsetof(BP_LivingArmor_C_ExecuteUbergraph_BP_LivingArmor, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000080, "Member 'BP_LivingArmor_C_ExecuteUbergraph_BP_LivingArmor::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LivingArmor_C_ExecuteUbergraph_BP_LivingArmor, CallFunc_Array_Get_Item_1) == 0x000098, "Member 'BP_LivingArmor_C_ExecuteUbergraph_BP_LivingArmor::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_LivingArmor_C_ExecuteUbergraph_BP_LivingArmor, CallFunc_Array_Length_ReturnValue_1) == 0x0000A0, "Member 'BP_LivingArmor_C_ExecuteUbergraph_BP_LivingArmor::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LivingArmor_C_ExecuteUbergraph_BP_LivingArmor, CallFunc_K2_GetActorRotation_ReturnValue) == 0x0000A8, "Member 'BP_LivingArmor_C_ExecuteUbergraph_BP_LivingArmor::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LivingArmor_C_ExecuteUbergraph_BP_LivingArmor, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x0000C0, "Member 'BP_LivingArmor_C_ExecuteUbergraph_BP_LivingArmor::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LivingArmor_C_ExecuteUbergraph_BP_LivingArmor, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x0000C8, "Member 'BP_LivingArmor_C_ExecuteUbergraph_BP_LivingArmor::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LivingArmor_C_ExecuteUbergraph_BP_LivingArmor, CallFunc_Max_ReturnValue) == 0x0000E0, "Member 'BP_LivingArmor_C_ExecuteUbergraph_BP_LivingArmor::CallFunc_Max_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LivingArmor_C_ExecuteUbergraph_BP_LivingArmor, CallFunc_MakeTransform_ReturnValue) == 0x0000F0, "Member 'BP_LivingArmor_C_ExecuteUbergraph_BP_LivingArmor::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LivingArmor_C_ExecuteUbergraph_BP_LivingArmor, CallFunc_FindRelativeLookAtRotation_ReturnValue) == 0x000150, "Member 'BP_LivingArmor_C_ExecuteUbergraph_BP_LivingArmor::CallFunc_FindRelativeLookAtRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LivingArmor_C_ExecuteUbergraph_BP_LivingArmor, CallFunc_BreakRotator_Roll) == 0x000168, "Member 'BP_LivingArmor_C_ExecuteUbergraph_BP_LivingArmor::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BP_LivingArmor_C_ExecuteUbergraph_BP_LivingArmor, CallFunc_BreakRotator_Pitch) == 0x00016C, "Member 'BP_LivingArmor_C_ExecuteUbergraph_BP_LivingArmor::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BP_LivingArmor_C_ExecuteUbergraph_BP_LivingArmor, CallFunc_BreakRotator_Yaw) == 0x000170, "Member 'BP_LivingArmor_C_ExecuteUbergraph_BP_LivingArmor::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BP_LivingArmor_C_ExecuteUbergraph_BP_LivingArmor, CallFunc_Array_Length_ReturnValue_2) == 0x000174, "Member 'BP_LivingArmor_C_ExecuteUbergraph_BP_LivingArmor::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_LivingArmor_C_ExecuteUbergraph_BP_LivingArmor, CallFunc_InRange_FloatFloat_ReturnValue) == 0x000178, "Member 'BP_LivingArmor_C_ExecuteUbergraph_BP_LivingArmor::CallFunc_InRange_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LivingArmor_C_ExecuteUbergraph_BP_LivingArmor, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000179, "Member 'BP_LivingArmor_C_ExecuteUbergraph_BP_LivingArmor::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LivingArmor_C_ExecuteUbergraph_BP_LivingArmor, CallFunc_InRange_FloatFloat_ReturnValue_1) == 0x00017A, "Member 'BP_LivingArmor_C_ExecuteUbergraph_BP_LivingArmor::CallFunc_InRange_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LivingArmor_C_ExecuteUbergraph_BP_LivingArmor, CallFunc_BooleanOR_ReturnValue) == 0x00017B, "Member 'BP_LivingArmor_C_ExecuteUbergraph_BP_LivingArmor::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LivingArmor_C_ExecuteUbergraph_BP_LivingArmor, CallFunc_Add_IntInt_ReturnValue_2) == 0x00017C, "Member 'BP_LivingArmor_C_ExecuteUbergraph_BP_LivingArmor::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_LivingArmor_C_ExecuteUbergraph_BP_LivingArmor, CallFunc_GreaterEqual_IntInt_ReturnValue_1) == 0x000180, "Member 'BP_LivingArmor_C_ExecuteUbergraph_BP_LivingArmor::CallFunc_GreaterEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LivingArmor_C_ExecuteUbergraph_BP_LivingArmor, K2Node_Event_DeltaSeconds) == 0x000184, "Member 'BP_LivingArmor_C_ExecuteUbergraph_BP_LivingArmor::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_LivingArmor_C_ExecuteUbergraph_BP_LivingArmor, CallFunc_GetCollisionProfileName_ReturnValue) == 0x000188, "Member 'BP_LivingArmor_C_ExecuteUbergraph_BP_LivingArmor::CallFunc_GetCollisionProfileName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LivingArmor_C_ExecuteUbergraph_BP_LivingArmor, CallFunc_EqualEqual_NameName_ReturnValue) == 0x000190, "Member 'BP_LivingArmor_C_ExecuteUbergraph_BP_LivingArmor::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LivingArmor_C_ExecuteUbergraph_BP_LivingArmor, CallFunc_GetCollisionProfileName_ReturnValue_1) == 0x000194, "Member 'BP_LivingArmor_C_ExecuteUbergraph_BP_LivingArmor::CallFunc_GetCollisionProfileName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LivingArmor_C_ExecuteUbergraph_BP_LivingArmor, CallFunc_EqualEqual_NameName_ReturnValue_1) == 0x00019C, "Member 'BP_LivingArmor_C_ExecuteUbergraph_BP_LivingArmor::CallFunc_EqualEqual_NameName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LivingArmor_C_ExecuteUbergraph_BP_LivingArmor, CallFunc_GetCollisionProfileName_ReturnValue_2) == 0x0001A0, "Member 'BP_LivingArmor_C_ExecuteUbergraph_BP_LivingArmor::CallFunc_GetCollisionProfileName_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_LivingArmor_C_ExecuteUbergraph_BP_LivingArmor, K2Node_Event_InGameplayTag) == 0x0001A8, "Member 'BP_LivingArmor_C_ExecuteUbergraph_BP_LivingArmor::K2Node_Event_InGameplayTag' has a wrong offset!");
static_assert(offsetof(BP_LivingArmor_C_ExecuteUbergraph_BP_LivingArmor, K2Node_Event_InCount) == 0x0001B0, "Member 'BP_LivingArmor_C_ExecuteUbergraph_BP_LivingArmor::K2Node_Event_InCount' has a wrong offset!");
static_assert(offsetof(BP_LivingArmor_C_ExecuteUbergraph_BP_LivingArmor, CallFunc_EqualEqual_NameName_ReturnValue_2) == 0x0001B4, "Member 'BP_LivingArmor_C_ExecuteUbergraph_BP_LivingArmor::CallFunc_EqualEqual_NameName_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_LivingArmor_C_ExecuteUbergraph_BP_LivingArmor, CallFunc_Greater_IntInt_ReturnValue) == 0x0001B5, "Member 'BP_LivingArmor_C_ExecuteUbergraph_BP_LivingArmor::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LivingArmor_C_ExecuteUbergraph_BP_LivingArmor, CallFunc_BooleanOR_ReturnValue_1) == 0x0001B6, "Member 'BP_LivingArmor_C_ExecuteUbergraph_BP_LivingArmor::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LivingArmor_C_ExecuteUbergraph_BP_LivingArmor, GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess) == 0x0001B7, "Member 'BP_LivingArmor_C_ExecuteUbergraph_BP_LivingArmor::GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_LivingArmor_C_ExecuteUbergraph_BP_LivingArmor, CallFunc_Array_Get_Item_2) == 0x0001B8, "Member 'BP_LivingArmor_C_ExecuteUbergraph_BP_LivingArmor::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_LivingArmor_C_ExecuteUbergraph_BP_LivingArmor, CallFunc_Array_Length_ReturnValue_3) == 0x0001C0, "Member 'BP_LivingArmor_C_ExecuteUbergraph_BP_LivingArmor::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_LivingArmor_C_ExecuteUbergraph_BP_LivingArmor, CallFunc_HasMatchingGameplayTag_ReturnValue) == 0x0001C4, "Member 'BP_LivingArmor_C_ExecuteUbergraph_BP_LivingArmor::CallFunc_HasMatchingGameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LivingArmor_C_ExecuteUbergraph_BP_LivingArmor, CallFunc_Less_IntInt_ReturnValue_1) == 0x0001C5, "Member 'BP_LivingArmor_C_ExecuteUbergraph_BP_LivingArmor::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LivingArmor_C_ExecuteUbergraph_BP_LivingArmor, CallFunc_InRange_FloatFloat_Value_ImplicitCast) == 0x0001C8, "Member 'BP_LivingArmor_C_ExecuteUbergraph_BP_LivingArmor::CallFunc_InRange_FloatFloat_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_LivingArmor_C_ExecuteUbergraph_BP_LivingArmor, CallFunc_InRange_FloatFloat_Value_ImplicitCast_1) == 0x0001D0, "Member 'BP_LivingArmor_C_ExecuteUbergraph_BP_LivingArmor::CallFunc_InRange_FloatFloat_Value_ImplicitCast_1' has a wrong offset!");

// Function BP_LivingArmor.BP_LivingArmor_C.GameplayTagUpdated
// 0x000C (0x000C - 0x0000)
struct BP_LivingArmor_C_GameplayTagUpdated final
{
public:
	struct FGameplayTag                           InGameplayTag;                                     // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	int32                                         InCount;                                           // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LivingArmor_C_GameplayTagUpdated) == 0x000004, "Wrong alignment on BP_LivingArmor_C_GameplayTagUpdated");
static_assert(sizeof(BP_LivingArmor_C_GameplayTagUpdated) == 0x00000C, "Wrong size on BP_LivingArmor_C_GameplayTagUpdated");
static_assert(offsetof(BP_LivingArmor_C_GameplayTagUpdated, InGameplayTag) == 0x000000, "Member 'BP_LivingArmor_C_GameplayTagUpdated::InGameplayTag' has a wrong offset!");
static_assert(offsetof(BP_LivingArmor_C_GameplayTagUpdated, InCount) == 0x000008, "Member 'BP_LivingArmor_C_GameplayTagUpdated::InCount' has a wrong offset!");

// Function BP_LivingArmor.BP_LivingArmor_C.Get Next Combo Possibility
// 0x0018 (0x0018 - 0x0000)
struct BP_LivingArmor_C_Get_Next_Combo_Possibility final
{
public:
	class AActor*                                 InActor;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 LivingArmor;                                       // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Return;                                            // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue;       // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue_1;     // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_1;        // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LivingArmor_C_Get_Next_Combo_Possibility) == 0x000008, "Wrong alignment on BP_LivingArmor_C_Get_Next_Combo_Possibility");
static_assert(sizeof(BP_LivingArmor_C_Get_Next_Combo_Possibility) == 0x000018, "Wrong size on BP_LivingArmor_C_Get_Next_Combo_Possibility");
static_assert(offsetof(BP_LivingArmor_C_Get_Next_Combo_Possibility, InActor) == 0x000000, "Member 'BP_LivingArmor_C_Get_Next_Combo_Possibility::InActor' has a wrong offset!");
static_assert(offsetof(BP_LivingArmor_C_Get_Next_Combo_Possibility, LivingArmor) == 0x000008, "Member 'BP_LivingArmor_C_Get_Next_Combo_Possibility::LivingArmor' has a wrong offset!");
static_assert(offsetof(BP_LivingArmor_C_Get_Next_Combo_Possibility, Return) == 0x000010, "Member 'BP_LivingArmor_C_Get_Next_Combo_Possibility::Return' has a wrong offset!");
static_assert(offsetof(BP_LivingArmor_C_Get_Next_Combo_Possibility, CallFunc_HasMatchingGameplayTag_ReturnValue) == 0x000011, "Member 'BP_LivingArmor_C_Get_Next_Combo_Possibility::CallFunc_HasMatchingGameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LivingArmor_C_Get_Next_Combo_Possibility, CallFunc_HasMatchingGameplayTag_ReturnValue_1) == 0x000012, "Member 'BP_LivingArmor_C_Get_Next_Combo_Possibility::CallFunc_HasMatchingGameplayTag_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LivingArmor_C_Get_Next_Combo_Possibility, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000013, "Member 'BP_LivingArmor_C_Get_Next_Combo_Possibility::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LivingArmor_C_Get_Next_Combo_Possibility, CallFunc_GreaterEqual_IntInt_ReturnValue_1) == 0x000014, "Member 'BP_LivingArmor_C_Get_Next_Combo_Possibility::CallFunc_GreaterEqual_IntInt_ReturnValue_1' has a wrong offset!");

// Function BP_LivingArmor.BP_LivingArmor_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_LivingArmor_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LivingArmor_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_LivingArmor_C_ReceiveTick");
static_assert(sizeof(BP_LivingArmor_C_ReceiveTick) == 0x000004, "Wrong size on BP_LivingArmor_C_ReceiveTick");
static_assert(offsetof(BP_LivingArmor_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_LivingArmor_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_LivingArmor.BP_LivingArmor_C.UserConstructionScript
// 0x003C (0x003C - 0x0000)
struct BP_LivingArmor_C_UserConstructionScript final
{
public:
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue_1;            // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue_2;            // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue_3;            // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue_4;            // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue_5;            // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue_6;            // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue_7;            // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue_8;            // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue_9;            // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue_10;           // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue_11;           // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue_12;           // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue_13;           // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue_14;           // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LivingArmor_C_UserConstructionScript) == 0x000004, "Wrong alignment on BP_LivingArmor_C_UserConstructionScript");
static_assert(sizeof(BP_LivingArmor_C_UserConstructionScript) == 0x00003C, "Wrong size on BP_LivingArmor_C_UserConstructionScript");
static_assert(offsetof(BP_LivingArmor_C_UserConstructionScript, CallFunc_Array_AddUnique_ReturnValue) == 0x000000, "Member 'BP_LivingArmor_C_UserConstructionScript::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LivingArmor_C_UserConstructionScript, CallFunc_Array_AddUnique_ReturnValue_1) == 0x000004, "Member 'BP_LivingArmor_C_UserConstructionScript::CallFunc_Array_AddUnique_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LivingArmor_C_UserConstructionScript, CallFunc_Array_AddUnique_ReturnValue_2) == 0x000008, "Member 'BP_LivingArmor_C_UserConstructionScript::CallFunc_Array_AddUnique_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_LivingArmor_C_UserConstructionScript, CallFunc_Array_AddUnique_ReturnValue_3) == 0x00000C, "Member 'BP_LivingArmor_C_UserConstructionScript::CallFunc_Array_AddUnique_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_LivingArmor_C_UserConstructionScript, CallFunc_Array_AddUnique_ReturnValue_4) == 0x000010, "Member 'BP_LivingArmor_C_UserConstructionScript::CallFunc_Array_AddUnique_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_LivingArmor_C_UserConstructionScript, CallFunc_Array_AddUnique_ReturnValue_5) == 0x000014, "Member 'BP_LivingArmor_C_UserConstructionScript::CallFunc_Array_AddUnique_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_LivingArmor_C_UserConstructionScript, CallFunc_Array_AddUnique_ReturnValue_6) == 0x000018, "Member 'BP_LivingArmor_C_UserConstructionScript::CallFunc_Array_AddUnique_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_LivingArmor_C_UserConstructionScript, CallFunc_Array_AddUnique_ReturnValue_7) == 0x00001C, "Member 'BP_LivingArmor_C_UserConstructionScript::CallFunc_Array_AddUnique_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_LivingArmor_C_UserConstructionScript, CallFunc_Array_AddUnique_ReturnValue_8) == 0x000020, "Member 'BP_LivingArmor_C_UserConstructionScript::CallFunc_Array_AddUnique_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_LivingArmor_C_UserConstructionScript, CallFunc_Array_AddUnique_ReturnValue_9) == 0x000024, "Member 'BP_LivingArmor_C_UserConstructionScript::CallFunc_Array_AddUnique_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_LivingArmor_C_UserConstructionScript, CallFunc_Array_AddUnique_ReturnValue_10) == 0x000028, "Member 'BP_LivingArmor_C_UserConstructionScript::CallFunc_Array_AddUnique_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_LivingArmor_C_UserConstructionScript, CallFunc_Array_AddUnique_ReturnValue_11) == 0x00002C, "Member 'BP_LivingArmor_C_UserConstructionScript::CallFunc_Array_AddUnique_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BP_LivingArmor_C_UserConstructionScript, CallFunc_Array_AddUnique_ReturnValue_12) == 0x000030, "Member 'BP_LivingArmor_C_UserConstructionScript::CallFunc_Array_AddUnique_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(BP_LivingArmor_C_UserConstructionScript, CallFunc_Array_AddUnique_ReturnValue_13) == 0x000034, "Member 'BP_LivingArmor_C_UserConstructionScript::CallFunc_Array_AddUnique_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(BP_LivingArmor_C_UserConstructionScript, CallFunc_Array_AddUnique_ReturnValue_14) == 0x000038, "Member 'BP_LivingArmor_C_UserConstructionScript::CallFunc_Array_AddUnique_ReturnValue_14' has a wrong offset!");

}

