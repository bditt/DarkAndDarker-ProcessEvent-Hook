#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ThornBarrier

#include "Basic.hpp"

#include "DungeonCrawler_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_ThornBarrier.BP_ThornBarrier_C.ExecuteUbergraph_BP_ThornBarrier
// 0x0450 (0x0450 - 0x0000)
struct BP_ThornBarrier_C_ExecuteUbergraph_BP_ThornBarrier final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_418A[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           K2Node_Event_InGameplayTag;                        // 0x0008(0x0008)(ConstParm, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_InCount;                              // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess;   // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_1;               // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_2;               // 0x0017(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_ExhaustedTime;                        // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_418B[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class UGameplayEffect>            K2Node_Event_GameplayEffectClass;                  // 0x0020(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	struct FDCGameplayEffectContext               K2Node_Event_EffectContext;                        // 0x0028(0x0420)(ContainsInstancedReference)
	int32                                         CallFunc_RemoveActiveEffectsWithGrantedTags_ReturnValue; // 0x0448(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ThornBarrier_C_ExecuteUbergraph_BP_ThornBarrier) == 0x000008, "Wrong alignment on BP_ThornBarrier_C_ExecuteUbergraph_BP_ThornBarrier");
static_assert(sizeof(BP_ThornBarrier_C_ExecuteUbergraph_BP_ThornBarrier) == 0x000450, "Wrong size on BP_ThornBarrier_C_ExecuteUbergraph_BP_ThornBarrier");
static_assert(offsetof(BP_ThornBarrier_C_ExecuteUbergraph_BP_ThornBarrier, EntryPoint) == 0x000000, "Member 'BP_ThornBarrier_C_ExecuteUbergraph_BP_ThornBarrier::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_ThornBarrier_C_ExecuteUbergraph_BP_ThornBarrier, CallFunc_HasAuthority_ReturnValue) == 0x000004, "Member 'BP_ThornBarrier_C_ExecuteUbergraph_BP_ThornBarrier::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ThornBarrier_C_ExecuteUbergraph_BP_ThornBarrier, K2Node_Event_InGameplayTag) == 0x000008, "Member 'BP_ThornBarrier_C_ExecuteUbergraph_BP_ThornBarrier::K2Node_Event_InGameplayTag' has a wrong offset!");
static_assert(offsetof(BP_ThornBarrier_C_ExecuteUbergraph_BP_ThornBarrier, K2Node_Event_InCount) == 0x000010, "Member 'BP_ThornBarrier_C_ExecuteUbergraph_BP_ThornBarrier::K2Node_Event_InCount' has a wrong offset!");
static_assert(offsetof(BP_ThornBarrier_C_ExecuteUbergraph_BP_ThornBarrier, CallFunc_Greater_IntInt_ReturnValue) == 0x000014, "Member 'BP_ThornBarrier_C_ExecuteUbergraph_BP_ThornBarrier::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ThornBarrier_C_ExecuteUbergraph_BP_ThornBarrier, GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess) == 0x000015, "Member 'BP_ThornBarrier_C_ExecuteUbergraph_BP_ThornBarrier::GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_ThornBarrier_C_ExecuteUbergraph_BP_ThornBarrier, CallFunc_HasAuthority_ReturnValue_1) == 0x000016, "Member 'BP_ThornBarrier_C_ExecuteUbergraph_BP_ThornBarrier::CallFunc_HasAuthority_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ThornBarrier_C_ExecuteUbergraph_BP_ThornBarrier, CallFunc_HasAuthority_ReturnValue_2) == 0x000017, "Member 'BP_ThornBarrier_C_ExecuteUbergraph_BP_ThornBarrier::CallFunc_HasAuthority_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ThornBarrier_C_ExecuteUbergraph_BP_ThornBarrier, K2Node_Event_ExhaustedTime) == 0x000018, "Member 'BP_ThornBarrier_C_ExecuteUbergraph_BP_ThornBarrier::K2Node_Event_ExhaustedTime' has a wrong offset!");
static_assert(offsetof(BP_ThornBarrier_C_ExecuteUbergraph_BP_ThornBarrier, K2Node_Event_GameplayEffectClass) == 0x000020, "Member 'BP_ThornBarrier_C_ExecuteUbergraph_BP_ThornBarrier::K2Node_Event_GameplayEffectClass' has a wrong offset!");
static_assert(offsetof(BP_ThornBarrier_C_ExecuteUbergraph_BP_ThornBarrier, K2Node_Event_EffectContext) == 0x000028, "Member 'BP_ThornBarrier_C_ExecuteUbergraph_BP_ThornBarrier::K2Node_Event_EffectContext' has a wrong offset!");
static_assert(offsetof(BP_ThornBarrier_C_ExecuteUbergraph_BP_ThornBarrier, CallFunc_RemoveActiveEffectsWithGrantedTags_ReturnValue) == 0x000448, "Member 'BP_ThornBarrier_C_ExecuteUbergraph_BP_ThornBarrier::CallFunc_RemoveActiveEffectsWithGrantedTags_ReturnValue' has a wrong offset!");

// Function BP_ThornBarrier.BP_ThornBarrier_C.GameplayTagUpdated
// 0x000C (0x000C - 0x0000)
struct BP_ThornBarrier_C_GameplayTagUpdated final
{
public:
	struct FGameplayTag                           InGameplayTag;                                     // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	int32                                         InCount;                                           // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ThornBarrier_C_GameplayTagUpdated) == 0x000004, "Wrong alignment on BP_ThornBarrier_C_GameplayTagUpdated");
static_assert(sizeof(BP_ThornBarrier_C_GameplayTagUpdated) == 0x00000C, "Wrong size on BP_ThornBarrier_C_GameplayTagUpdated");
static_assert(offsetof(BP_ThornBarrier_C_GameplayTagUpdated, InGameplayTag) == 0x000000, "Member 'BP_ThornBarrier_C_GameplayTagUpdated::InGameplayTag' has a wrong offset!");
static_assert(offsetof(BP_ThornBarrier_C_GameplayTagUpdated, InCount) == 0x000008, "Member 'BP_ThornBarrier_C_GameplayTagUpdated::InCount' has a wrong offset!");

// Function BP_ThornBarrier.BP_ThornBarrier_C.OnImpactEnduranceExhausted
// 0x0430 (0x0430 - 0x0000)
struct BP_ThornBarrier_C_OnImpactEnduranceExhausted final
{
public:
	float                                         ExhaustedTime;                                     // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_418C[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class UGameplayEffect>            GameplayEffectClass;                               // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	struct FDCGameplayEffectContext               EffectContext;                                     // 0x0010(0x0420)(BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference)
};
static_assert(alignof(BP_ThornBarrier_C_OnImpactEnduranceExhausted) == 0x000008, "Wrong alignment on BP_ThornBarrier_C_OnImpactEnduranceExhausted");
static_assert(sizeof(BP_ThornBarrier_C_OnImpactEnduranceExhausted) == 0x000430, "Wrong size on BP_ThornBarrier_C_OnImpactEnduranceExhausted");
static_assert(offsetof(BP_ThornBarrier_C_OnImpactEnduranceExhausted, ExhaustedTime) == 0x000000, "Member 'BP_ThornBarrier_C_OnImpactEnduranceExhausted::ExhaustedTime' has a wrong offset!");
static_assert(offsetof(BP_ThornBarrier_C_OnImpactEnduranceExhausted, GameplayEffectClass) == 0x000008, "Member 'BP_ThornBarrier_C_OnImpactEnduranceExhausted::GameplayEffectClass' has a wrong offset!");
static_assert(offsetof(BP_ThornBarrier_C_OnImpactEnduranceExhausted, EffectContext) == 0x000010, "Member 'BP_ThornBarrier_C_OnImpactEnduranceExhausted::EffectContext' has a wrong offset!");

// Function BP_ThornBarrier.BP_ThornBarrier_C.SetSizes
// 0x0058 (0x0058 - 0x0000)
struct BP_ThornBarrier_C_SetSizes final
{
public:
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_418D[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector_X;                            // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0028(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x0040(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ThornBarrier_C_SetSizes) == 0x000008, "Wrong alignment on BP_ThornBarrier_C_SetSizes");
static_assert(sizeof(BP_ThornBarrier_C_SetSizes) == 0x000058, "Wrong size on BP_ThornBarrier_C_SetSizes");
static_assert(offsetof(BP_ThornBarrier_C_SetSizes, CallFunc_HasAuthority_ReturnValue) == 0x000000, "Member 'BP_ThornBarrier_C_SetSizes::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ThornBarrier_C_SetSizes, CallFunc_BreakVector_X) == 0x000008, "Member 'BP_ThornBarrier_C_SetSizes::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_ThornBarrier_C_SetSizes, CallFunc_BreakVector_Y) == 0x000010, "Member 'BP_ThornBarrier_C_SetSizes::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_ThornBarrier_C_SetSizes, CallFunc_BreakVector_Z) == 0x000018, "Member 'BP_ThornBarrier_C_SetSizes::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_ThornBarrier_C_SetSizes, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000020, "Member 'BP_ThornBarrier_C_SetSizes::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ThornBarrier_C_SetSizes, CallFunc_MakeVector_ReturnValue) == 0x000028, "Member 'BP_ThornBarrier_C_SetSizes::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ThornBarrier_C_SetSizes, CallFunc_MakeVector_ReturnValue_1) == 0x000040, "Member 'BP_ThornBarrier_C_SetSizes::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");

}

