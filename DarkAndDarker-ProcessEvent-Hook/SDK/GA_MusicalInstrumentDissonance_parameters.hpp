#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_MusicalInstrumentDissonance

#include "Basic.hpp"

#include "GameplayAbilities_structs.hpp"
#include "GameplayTags_structs.hpp"


namespace SDK::Params
{

// Function GA_MusicalInstrumentDissonance.GA_MusicalInstrumentDissonance_C.AbilityActivated
// 0x00B0 (0x00B0 - 0x0000)
struct GA_MusicalInstrumentDissonance_C_AbilityActivated final
{
public:
	struct FGameplayEventData                     TriggerEventData;                                  // 0x0000(0x00B0)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(GA_MusicalInstrumentDissonance_C_AbilityActivated) == 0x000008, "Wrong alignment on GA_MusicalInstrumentDissonance_C_AbilityActivated");
static_assert(sizeof(GA_MusicalInstrumentDissonance_C_AbilityActivated) == 0x0000B0, "Wrong size on GA_MusicalInstrumentDissonance_C_AbilityActivated");
static_assert(offsetof(GA_MusicalInstrumentDissonance_C_AbilityActivated, TriggerEventData) == 0x000000, "Member 'GA_MusicalInstrumentDissonance_C_AbilityActivated::TriggerEventData' has a wrong offset!");

// Function GA_MusicalInstrumentDissonance.GA_MusicalInstrumentDissonance_C.ExecuteUbergraph_GA_MusicalInstrumentDissonance
// 0x0398 (0x0398 - 0x0000)
struct GA_MusicalInstrumentDissonance_C_ExecuteUbergraph_GA_MusicalInstrumentDissonance final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4687[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         K2Node_CustomEvent_RadiusInActors;                 // 0x0008(0x0010)(ConstParm, ReferenceParm)
	TDelegate<void(TArray<class AActor*>& RadiusInActors)> K2Node_CreateDelegate_OutputDelegate;              // 0x0018(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0028(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_HasAuthority_ReturnValue;              // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4688[0x3];                                     // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4689[0x3];                                     // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetAvatarActorFromActorInfo_ReturnValue;  // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetAvatarActorFromActorInfo_ReturnValue_1; // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEventData                     K2Node_MakeStruct_GameplayEventData;               // 0x0068(0x00B0)()
	bool                                          CallFunc_IsSameTeam_ReturnValue;                   // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_468A[0x7];                                     // 0x0119(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FActiveGameplayEffectHandle>    CallFunc_ApplyEffectContainer_ReturnValue;         // 0x0120(0x0010)(ReferenceParm)
	struct FGameplayEventData                     K2Node_Event_TriggerEventData;                     // 0x0130(0x00B0)(ConstParm)
	struct FGameplayTag                           K2Node_Event_EventTag;                             // 0x01E0(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayEventData                     K2Node_Event_EventData;                            // 0x01E8(0x00B0)()
	bool                                          GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess;   // 0x0298(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_468B[0x7];                                     // 0x0299(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetAvatarActorFromActorInfo_ReturnValue_2; // 0x02A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UDCAT_TargetActorRadius*                CallFunc_TargetActorRadius_ReturnValue;            // 0x02A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x02B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x02B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_468C[0x6];                                     // 0x02B2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 CallFunc_GetComponentByClass_ReturnValue;          // 0x02B8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 CallFunc_MakeGameplayCueParameters_ReturnValue;    // 0x02C0(0x00D8)(ContainsInstancedReference)
};
static_assert(alignof(GA_MusicalInstrumentDissonance_C_ExecuteUbergraph_GA_MusicalInstrumentDissonance) == 0x000008, "Wrong alignment on GA_MusicalInstrumentDissonance_C_ExecuteUbergraph_GA_MusicalInstrumentDissonance");
static_assert(sizeof(GA_MusicalInstrumentDissonance_C_ExecuteUbergraph_GA_MusicalInstrumentDissonance) == 0x000398, "Wrong size on GA_MusicalInstrumentDissonance_C_ExecuteUbergraph_GA_MusicalInstrumentDissonance");
static_assert(offsetof(GA_MusicalInstrumentDissonance_C_ExecuteUbergraph_GA_MusicalInstrumentDissonance, EntryPoint) == 0x000000, "Member 'GA_MusicalInstrumentDissonance_C_ExecuteUbergraph_GA_MusicalInstrumentDissonance::EntryPoint' has a wrong offset!");
static_assert(offsetof(GA_MusicalInstrumentDissonance_C_ExecuteUbergraph_GA_MusicalInstrumentDissonance, K2Node_CustomEvent_RadiusInActors) == 0x000008, "Member 'GA_MusicalInstrumentDissonance_C_ExecuteUbergraph_GA_MusicalInstrumentDissonance::K2Node_CustomEvent_RadiusInActors' has a wrong offset!");
static_assert(offsetof(GA_MusicalInstrumentDissonance_C_ExecuteUbergraph_GA_MusicalInstrumentDissonance, K2Node_CreateDelegate_OutputDelegate) == 0x000018, "Member 'GA_MusicalInstrumentDissonance_C_ExecuteUbergraph_GA_MusicalInstrumentDissonance::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(GA_MusicalInstrumentDissonance_C_ExecuteUbergraph_GA_MusicalInstrumentDissonance, Temp_object_Variable) == 0x000028, "Member 'GA_MusicalInstrumentDissonance_C_ExecuteUbergraph_GA_MusicalInstrumentDissonance::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(GA_MusicalInstrumentDissonance_C_ExecuteUbergraph_GA_MusicalInstrumentDissonance, CallFunc_Array_Length_ReturnValue) == 0x000038, "Member 'GA_MusicalInstrumentDissonance_C_ExecuteUbergraph_GA_MusicalInstrumentDissonance::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_MusicalInstrumentDissonance_C_ExecuteUbergraph_GA_MusicalInstrumentDissonance, Temp_int_Array_Index_Variable) == 0x00003C, "Member 'GA_MusicalInstrumentDissonance_C_ExecuteUbergraph_GA_MusicalInstrumentDissonance::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(GA_MusicalInstrumentDissonance_C_ExecuteUbergraph_GA_MusicalInstrumentDissonance, CallFunc_Array_Get_Item) == 0x000040, "Member 'GA_MusicalInstrumentDissonance_C_ExecuteUbergraph_GA_MusicalInstrumentDissonance::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(GA_MusicalInstrumentDissonance_C_ExecuteUbergraph_GA_MusicalInstrumentDissonance, CallFunc_K2_HasAuthority_ReturnValue) == 0x000048, "Member 'GA_MusicalInstrumentDissonance_C_ExecuteUbergraph_GA_MusicalInstrumentDissonance::CallFunc_K2_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_MusicalInstrumentDissonance_C_ExecuteUbergraph_GA_MusicalInstrumentDissonance, Temp_int_Loop_Counter_Variable) == 0x00004C, "Member 'GA_MusicalInstrumentDissonance_C_ExecuteUbergraph_GA_MusicalInstrumentDissonance::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(GA_MusicalInstrumentDissonance_C_ExecuteUbergraph_GA_MusicalInstrumentDissonance, CallFunc_Less_IntInt_ReturnValue) == 0x000050, "Member 'GA_MusicalInstrumentDissonance_C_ExecuteUbergraph_GA_MusicalInstrumentDissonance::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_MusicalInstrumentDissonance_C_ExecuteUbergraph_GA_MusicalInstrumentDissonance, CallFunc_Add_IntInt_ReturnValue) == 0x000054, "Member 'GA_MusicalInstrumentDissonance_C_ExecuteUbergraph_GA_MusicalInstrumentDissonance::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_MusicalInstrumentDissonance_C_ExecuteUbergraph_GA_MusicalInstrumentDissonance, CallFunc_GetAvatarActorFromActorInfo_ReturnValue) == 0x000058, "Member 'GA_MusicalInstrumentDissonance_C_ExecuteUbergraph_GA_MusicalInstrumentDissonance::CallFunc_GetAvatarActorFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_MusicalInstrumentDissonance_C_ExecuteUbergraph_GA_MusicalInstrumentDissonance, CallFunc_GetAvatarActorFromActorInfo_ReturnValue_1) == 0x000060, "Member 'GA_MusicalInstrumentDissonance_C_ExecuteUbergraph_GA_MusicalInstrumentDissonance::CallFunc_GetAvatarActorFromActorInfo_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_MusicalInstrumentDissonance_C_ExecuteUbergraph_GA_MusicalInstrumentDissonance, K2Node_MakeStruct_GameplayEventData) == 0x000068, "Member 'GA_MusicalInstrumentDissonance_C_ExecuteUbergraph_GA_MusicalInstrumentDissonance::K2Node_MakeStruct_GameplayEventData' has a wrong offset!");
static_assert(offsetof(GA_MusicalInstrumentDissonance_C_ExecuteUbergraph_GA_MusicalInstrumentDissonance, CallFunc_IsSameTeam_ReturnValue) == 0x000118, "Member 'GA_MusicalInstrumentDissonance_C_ExecuteUbergraph_GA_MusicalInstrumentDissonance::CallFunc_IsSameTeam_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_MusicalInstrumentDissonance_C_ExecuteUbergraph_GA_MusicalInstrumentDissonance, CallFunc_ApplyEffectContainer_ReturnValue) == 0x000120, "Member 'GA_MusicalInstrumentDissonance_C_ExecuteUbergraph_GA_MusicalInstrumentDissonance::CallFunc_ApplyEffectContainer_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_MusicalInstrumentDissonance_C_ExecuteUbergraph_GA_MusicalInstrumentDissonance, K2Node_Event_TriggerEventData) == 0x000130, "Member 'GA_MusicalInstrumentDissonance_C_ExecuteUbergraph_GA_MusicalInstrumentDissonance::K2Node_Event_TriggerEventData' has a wrong offset!");
static_assert(offsetof(GA_MusicalInstrumentDissonance_C_ExecuteUbergraph_GA_MusicalInstrumentDissonance, K2Node_Event_EventTag) == 0x0001E0, "Member 'GA_MusicalInstrumentDissonance_C_ExecuteUbergraph_GA_MusicalInstrumentDissonance::K2Node_Event_EventTag' has a wrong offset!");
static_assert(offsetof(GA_MusicalInstrumentDissonance_C_ExecuteUbergraph_GA_MusicalInstrumentDissonance, K2Node_Event_EventData) == 0x0001E8, "Member 'GA_MusicalInstrumentDissonance_C_ExecuteUbergraph_GA_MusicalInstrumentDissonance::K2Node_Event_EventData' has a wrong offset!");
static_assert(offsetof(GA_MusicalInstrumentDissonance_C_ExecuteUbergraph_GA_MusicalInstrumentDissonance, GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess) == 0x000298, "Member 'GA_MusicalInstrumentDissonance_C_ExecuteUbergraph_GA_MusicalInstrumentDissonance::GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess' has a wrong offset!");
static_assert(offsetof(GA_MusicalInstrumentDissonance_C_ExecuteUbergraph_GA_MusicalInstrumentDissonance, CallFunc_GetAvatarActorFromActorInfo_ReturnValue_2) == 0x0002A0, "Member 'GA_MusicalInstrumentDissonance_C_ExecuteUbergraph_GA_MusicalInstrumentDissonance::CallFunc_GetAvatarActorFromActorInfo_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GA_MusicalInstrumentDissonance_C_ExecuteUbergraph_GA_MusicalInstrumentDissonance, CallFunc_TargetActorRadius_ReturnValue) == 0x0002A8, "Member 'GA_MusicalInstrumentDissonance_C_ExecuteUbergraph_GA_MusicalInstrumentDissonance::CallFunc_TargetActorRadius_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_MusicalInstrumentDissonance_C_ExecuteUbergraph_GA_MusicalInstrumentDissonance, CallFunc_IsValid_ReturnValue) == 0x0002B0, "Member 'GA_MusicalInstrumentDissonance_C_ExecuteUbergraph_GA_MusicalInstrumentDissonance::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_MusicalInstrumentDissonance_C_ExecuteUbergraph_GA_MusicalInstrumentDissonance, CallFunc_IsValid_ReturnValue_1) == 0x0002B1, "Member 'GA_MusicalInstrumentDissonance_C_ExecuteUbergraph_GA_MusicalInstrumentDissonance::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_MusicalInstrumentDissonance_C_ExecuteUbergraph_GA_MusicalInstrumentDissonance, CallFunc_GetComponentByClass_ReturnValue) == 0x0002B8, "Member 'GA_MusicalInstrumentDissonance_C_ExecuteUbergraph_GA_MusicalInstrumentDissonance::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_MusicalInstrumentDissonance_C_ExecuteUbergraph_GA_MusicalInstrumentDissonance, CallFunc_MakeGameplayCueParameters_ReturnValue) == 0x0002C0, "Member 'GA_MusicalInstrumentDissonance_C_ExecuteUbergraph_GA_MusicalInstrumentDissonance::CallFunc_MakeGameplayCueParameters_ReturnValue' has a wrong offset!");

// Function GA_MusicalInstrumentDissonance.GA_MusicalInstrumentDissonance_C.OnTargetActorOverlap_56331A2B438701138DFEA3A1849CC096
// 0x0010 (0x0010 - 0x0000)
struct GA_MusicalInstrumentDissonance_C_OnTargetActorOverlap_56331A2B438701138DFEA3A1849CC096 final
{
public:
	TArray<class AActor*>                         RadiusInActors;                                    // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(GA_MusicalInstrumentDissonance_C_OnTargetActorOverlap_56331A2B438701138DFEA3A1849CC096) == 0x000008, "Wrong alignment on GA_MusicalInstrumentDissonance_C_OnTargetActorOverlap_56331A2B438701138DFEA3A1849CC096");
static_assert(sizeof(GA_MusicalInstrumentDissonance_C_OnTargetActorOverlap_56331A2B438701138DFEA3A1849CC096) == 0x000010, "Wrong size on GA_MusicalInstrumentDissonance_C_OnTargetActorOverlap_56331A2B438701138DFEA3A1849CC096");
static_assert(offsetof(GA_MusicalInstrumentDissonance_C_OnTargetActorOverlap_56331A2B438701138DFEA3A1849CC096, RadiusInActors) == 0x000000, "Member 'GA_MusicalInstrumentDissonance_C_OnTargetActorOverlap_56331A2B438701138DFEA3A1849CC096::RadiusInActors' has a wrong offset!");

// Function GA_MusicalInstrumentDissonance.GA_MusicalInstrumentDissonance_C.ReceivedEvent
// 0x00B8 (0x00B8 - 0x0000)
struct GA_MusicalInstrumentDissonance_C_ReceivedEvent final
{
public:
	struct FGameplayTag                           EventTag;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEventData                     EventData;                                         // 0x0008(0x00B0)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(GA_MusicalInstrumentDissonance_C_ReceivedEvent) == 0x000008, "Wrong alignment on GA_MusicalInstrumentDissonance_C_ReceivedEvent");
static_assert(sizeof(GA_MusicalInstrumentDissonance_C_ReceivedEvent) == 0x0000B8, "Wrong size on GA_MusicalInstrumentDissonance_C_ReceivedEvent");
static_assert(offsetof(GA_MusicalInstrumentDissonance_C_ReceivedEvent, EventTag) == 0x000000, "Member 'GA_MusicalInstrumentDissonance_C_ReceivedEvent::EventTag' has a wrong offset!");
static_assert(offsetof(GA_MusicalInstrumentDissonance_C_ReceivedEvent, EventData) == 0x000008, "Member 'GA_MusicalInstrumentDissonance_C_ReceivedEvent::EventData' has a wrong offset!");

}

