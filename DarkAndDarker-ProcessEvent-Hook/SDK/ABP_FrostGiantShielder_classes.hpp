#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ABP_FrostGiantShielder

#include "Basic.hpp"

#include "AnimGraphRuntime_structs.hpp"
#include "Engine_structs.hpp"
#include "ABP_FrostGiantShielder_structs.hpp"
#include "DungeonCrawler_classes.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass ABP_FrostGiantShielder.ABP_FrostGiantShielder_C
// 0x0EB0 (0x13E0 - 0x0530)
class UABP_FrostGiantShielder_C final : public UDCMonsterAnimInstanceBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0530(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct ABP_FrostGiantShielder::FAnimBlueprintGeneratedMutableData __AnimBlueprintMutables;                           // 0x0538(0x0010)(HasGetValueTypeHash)
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_PropertyAccess;             // 0x0548(0x0008)()
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_Base;                       // 0x0550(0x0008)()
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x0558(0x0020)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot;                                // 0x0578(0x0048)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_12;                 // 0x05C0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_11;                 // 0x05E8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_10;                 // 0x0610(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_9;                  // 0x0638(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_8;                  // 0x0660(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_7;                  // 0x0688(0x0028)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_1;                  // 0x06B0(0x0070)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_6;                       // 0x0720(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_4;                    // 0x0740(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_5;                       // 0x0788(0x0020)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer;                    // 0x07A8(0x0070)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_4;                       // 0x0818(0x0020)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine_1;                      // 0x0838(0x00C8)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_6;                  // 0x0900(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_5;                  // 0x0928(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_4;                  // 0x0950(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_3;                  // 0x0978(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_2;                  // 0x09A0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_1;                  // 0x09C8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult;                    // 0x09F0(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_7;                     // 0x0A18(0x0028)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_3;                       // 0x0A40(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_3;                    // 0x0A60(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_2;                    // 0x0AA8(0x0048)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_6;                     // 0x0AF0(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_5;                     // 0x0B18(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_4;                     // 0x0B40(0x0028)()
	struct FAnimNode_ApplyAdditive                AnimGraphNode_ApplyAdditive_3;                     // 0x0B68(0x00C8)()
	struct FAnimNode_ApplyAdditive                AnimGraphNode_ApplyAdditive_2;                     // 0x0C30(0x00C8)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_1;                   // 0x0CF8(0x0048)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend_1;                  // 0x0D40(0x00F0)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_2;                       // 0x0E30(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_1;                    // 0x0E50(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x0E98(0x0048)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_3;                     // 0x0EE0(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_2;                     // 0x0F08(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_1;                     // 0x0F30(0x0028)()
	struct FAnimNode_ApplyAdditive                AnimGraphNode_ApplyAdditive_1;                     // 0x0F58(0x00C8)()
	struct FAnimNode_ApplyAdditive                AnimGraphNode_ApplyAdditive;                       // 0x1020(0x00C8)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool;                     // 0x10E8(0x0048)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend;                    // 0x1130(0x00F0)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_1;                       // 0x1220(0x0020)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose;                       // 0x1240(0x0028)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult;                         // 0x1268(0x0020)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine;                        // 0x1288(0x00C8)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose;                      // 0x1350(0x0080)()
	bool                                          IsCombat;                                          // 0x13D0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void AnimGraph(struct FPoseLink* Param_AnimGraph);
	void ExecuteUbergraph_ABP_FrostGiantShielder(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ABP_FrostGiantShielder_C">();
	}
	static class UABP_FrostGiantShielder_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UABP_FrostGiantShielder_C>();
	}
};
static_assert(alignof(UABP_FrostGiantShielder_C) == 0x000010, "Wrong alignment on UABP_FrostGiantShielder_C");
static_assert(sizeof(UABP_FrostGiantShielder_C) == 0x0013E0, "Wrong size on UABP_FrostGiantShielder_C");
static_assert(offsetof(UABP_FrostGiantShielder_C, UberGraphFrame) == 0x000530, "Member 'UABP_FrostGiantShielder_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UABP_FrostGiantShielder_C, __AnimBlueprintMutables) == 0x000538, "Member 'UABP_FrostGiantShielder_C::__AnimBlueprintMutables' has a wrong offset!");
static_assert(offsetof(UABP_FrostGiantShielder_C, AnimBlueprintExtension_PropertyAccess) == 0x000548, "Member 'UABP_FrostGiantShielder_C::AnimBlueprintExtension_PropertyAccess' has a wrong offset!");
static_assert(offsetof(UABP_FrostGiantShielder_C, AnimBlueprintExtension_Base) == 0x000550, "Member 'UABP_FrostGiantShielder_C::AnimBlueprintExtension_Base' has a wrong offset!");
static_assert(offsetof(UABP_FrostGiantShielder_C, AnimGraphNode_Root) == 0x000558, "Member 'UABP_FrostGiantShielder_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UABP_FrostGiantShielder_C, AnimGraphNode_Slot) == 0x000578, "Member 'UABP_FrostGiantShielder_C::AnimGraphNode_Slot' has a wrong offset!");
static_assert(offsetof(UABP_FrostGiantShielder_C, AnimGraphNode_TransitionResult_12) == 0x0005C0, "Member 'UABP_FrostGiantShielder_C::AnimGraphNode_TransitionResult_12' has a wrong offset!");
static_assert(offsetof(UABP_FrostGiantShielder_C, AnimGraphNode_TransitionResult_11) == 0x0005E8, "Member 'UABP_FrostGiantShielder_C::AnimGraphNode_TransitionResult_11' has a wrong offset!");
static_assert(offsetof(UABP_FrostGiantShielder_C, AnimGraphNode_TransitionResult_10) == 0x000610, "Member 'UABP_FrostGiantShielder_C::AnimGraphNode_TransitionResult_10' has a wrong offset!");
static_assert(offsetof(UABP_FrostGiantShielder_C, AnimGraphNode_TransitionResult_9) == 0x000638, "Member 'UABP_FrostGiantShielder_C::AnimGraphNode_TransitionResult_9' has a wrong offset!");
static_assert(offsetof(UABP_FrostGiantShielder_C, AnimGraphNode_TransitionResult_8) == 0x000660, "Member 'UABP_FrostGiantShielder_C::AnimGraphNode_TransitionResult_8' has a wrong offset!");
static_assert(offsetof(UABP_FrostGiantShielder_C, AnimGraphNode_TransitionResult_7) == 0x000688, "Member 'UABP_FrostGiantShielder_C::AnimGraphNode_TransitionResult_7' has a wrong offset!");
static_assert(offsetof(UABP_FrostGiantShielder_C, AnimGraphNode_BlendSpacePlayer_1) == 0x0006B0, "Member 'UABP_FrostGiantShielder_C::AnimGraphNode_BlendSpacePlayer_1' has a wrong offset!");
static_assert(offsetof(UABP_FrostGiantShielder_C, AnimGraphNode_StateResult_6) == 0x000720, "Member 'UABP_FrostGiantShielder_C::AnimGraphNode_StateResult_6' has a wrong offset!");
static_assert(offsetof(UABP_FrostGiantShielder_C, AnimGraphNode_SequencePlayer_4) == 0x000740, "Member 'UABP_FrostGiantShielder_C::AnimGraphNode_SequencePlayer_4' has a wrong offset!");
static_assert(offsetof(UABP_FrostGiantShielder_C, AnimGraphNode_StateResult_5) == 0x000788, "Member 'UABP_FrostGiantShielder_C::AnimGraphNode_StateResult_5' has a wrong offset!");
static_assert(offsetof(UABP_FrostGiantShielder_C, AnimGraphNode_BlendSpacePlayer) == 0x0007A8, "Member 'UABP_FrostGiantShielder_C::AnimGraphNode_BlendSpacePlayer' has a wrong offset!");
static_assert(offsetof(UABP_FrostGiantShielder_C, AnimGraphNode_StateResult_4) == 0x000818, "Member 'UABP_FrostGiantShielder_C::AnimGraphNode_StateResult_4' has a wrong offset!");
static_assert(offsetof(UABP_FrostGiantShielder_C, AnimGraphNode_StateMachine_1) == 0x000838, "Member 'UABP_FrostGiantShielder_C::AnimGraphNode_StateMachine_1' has a wrong offset!");
static_assert(offsetof(UABP_FrostGiantShielder_C, AnimGraphNode_TransitionResult_6) == 0x000900, "Member 'UABP_FrostGiantShielder_C::AnimGraphNode_TransitionResult_6' has a wrong offset!");
static_assert(offsetof(UABP_FrostGiantShielder_C, AnimGraphNode_TransitionResult_5) == 0x000928, "Member 'UABP_FrostGiantShielder_C::AnimGraphNode_TransitionResult_5' has a wrong offset!");
static_assert(offsetof(UABP_FrostGiantShielder_C, AnimGraphNode_TransitionResult_4) == 0x000950, "Member 'UABP_FrostGiantShielder_C::AnimGraphNode_TransitionResult_4' has a wrong offset!");
static_assert(offsetof(UABP_FrostGiantShielder_C, AnimGraphNode_TransitionResult_3) == 0x000978, "Member 'UABP_FrostGiantShielder_C::AnimGraphNode_TransitionResult_3' has a wrong offset!");
static_assert(offsetof(UABP_FrostGiantShielder_C, AnimGraphNode_TransitionResult_2) == 0x0009A0, "Member 'UABP_FrostGiantShielder_C::AnimGraphNode_TransitionResult_2' has a wrong offset!");
static_assert(offsetof(UABP_FrostGiantShielder_C, AnimGraphNode_TransitionResult_1) == 0x0009C8, "Member 'UABP_FrostGiantShielder_C::AnimGraphNode_TransitionResult_1' has a wrong offset!");
static_assert(offsetof(UABP_FrostGiantShielder_C, AnimGraphNode_TransitionResult) == 0x0009F0, "Member 'UABP_FrostGiantShielder_C::AnimGraphNode_TransitionResult' has a wrong offset!");
static_assert(offsetof(UABP_FrostGiantShielder_C, AnimGraphNode_UseCachedPose_7) == 0x000A18, "Member 'UABP_FrostGiantShielder_C::AnimGraphNode_UseCachedPose_7' has a wrong offset!");
static_assert(offsetof(UABP_FrostGiantShielder_C, AnimGraphNode_StateResult_3) == 0x000A40, "Member 'UABP_FrostGiantShielder_C::AnimGraphNode_StateResult_3' has a wrong offset!");
static_assert(offsetof(UABP_FrostGiantShielder_C, AnimGraphNode_SequencePlayer_3) == 0x000A60, "Member 'UABP_FrostGiantShielder_C::AnimGraphNode_SequencePlayer_3' has a wrong offset!");
static_assert(offsetof(UABP_FrostGiantShielder_C, AnimGraphNode_SequencePlayer_2) == 0x000AA8, "Member 'UABP_FrostGiantShielder_C::AnimGraphNode_SequencePlayer_2' has a wrong offset!");
static_assert(offsetof(UABP_FrostGiantShielder_C, AnimGraphNode_UseCachedPose_6) == 0x000AF0, "Member 'UABP_FrostGiantShielder_C::AnimGraphNode_UseCachedPose_6' has a wrong offset!");
static_assert(offsetof(UABP_FrostGiantShielder_C, AnimGraphNode_UseCachedPose_5) == 0x000B18, "Member 'UABP_FrostGiantShielder_C::AnimGraphNode_UseCachedPose_5' has a wrong offset!");
static_assert(offsetof(UABP_FrostGiantShielder_C, AnimGraphNode_UseCachedPose_4) == 0x000B40, "Member 'UABP_FrostGiantShielder_C::AnimGraphNode_UseCachedPose_4' has a wrong offset!");
static_assert(offsetof(UABP_FrostGiantShielder_C, AnimGraphNode_ApplyAdditive_3) == 0x000B68, "Member 'UABP_FrostGiantShielder_C::AnimGraphNode_ApplyAdditive_3' has a wrong offset!");
static_assert(offsetof(UABP_FrostGiantShielder_C, AnimGraphNode_ApplyAdditive_2) == 0x000C30, "Member 'UABP_FrostGiantShielder_C::AnimGraphNode_ApplyAdditive_2' has a wrong offset!");
static_assert(offsetof(UABP_FrostGiantShielder_C, AnimGraphNode_BlendListByBool_1) == 0x000CF8, "Member 'UABP_FrostGiantShielder_C::AnimGraphNode_BlendListByBool_1' has a wrong offset!");
static_assert(offsetof(UABP_FrostGiantShielder_C, AnimGraphNode_LayeredBoneBlend_1) == 0x000D40, "Member 'UABP_FrostGiantShielder_C::AnimGraphNode_LayeredBoneBlend_1' has a wrong offset!");
static_assert(offsetof(UABP_FrostGiantShielder_C, AnimGraphNode_StateResult_2) == 0x000E30, "Member 'UABP_FrostGiantShielder_C::AnimGraphNode_StateResult_2' has a wrong offset!");
static_assert(offsetof(UABP_FrostGiantShielder_C, AnimGraphNode_SequencePlayer_1) == 0x000E50, "Member 'UABP_FrostGiantShielder_C::AnimGraphNode_SequencePlayer_1' has a wrong offset!");
static_assert(offsetof(UABP_FrostGiantShielder_C, AnimGraphNode_SequencePlayer) == 0x000E98, "Member 'UABP_FrostGiantShielder_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(UABP_FrostGiantShielder_C, AnimGraphNode_UseCachedPose_3) == 0x000EE0, "Member 'UABP_FrostGiantShielder_C::AnimGraphNode_UseCachedPose_3' has a wrong offset!");
static_assert(offsetof(UABP_FrostGiantShielder_C, AnimGraphNode_UseCachedPose_2) == 0x000F08, "Member 'UABP_FrostGiantShielder_C::AnimGraphNode_UseCachedPose_2' has a wrong offset!");
static_assert(offsetof(UABP_FrostGiantShielder_C, AnimGraphNode_UseCachedPose_1) == 0x000F30, "Member 'UABP_FrostGiantShielder_C::AnimGraphNode_UseCachedPose_1' has a wrong offset!");
static_assert(offsetof(UABP_FrostGiantShielder_C, AnimGraphNode_ApplyAdditive_1) == 0x000F58, "Member 'UABP_FrostGiantShielder_C::AnimGraphNode_ApplyAdditive_1' has a wrong offset!");
static_assert(offsetof(UABP_FrostGiantShielder_C, AnimGraphNode_ApplyAdditive) == 0x001020, "Member 'UABP_FrostGiantShielder_C::AnimGraphNode_ApplyAdditive' has a wrong offset!");
static_assert(offsetof(UABP_FrostGiantShielder_C, AnimGraphNode_BlendListByBool) == 0x0010E8, "Member 'UABP_FrostGiantShielder_C::AnimGraphNode_BlendListByBool' has a wrong offset!");
static_assert(offsetof(UABP_FrostGiantShielder_C, AnimGraphNode_LayeredBoneBlend) == 0x001130, "Member 'UABP_FrostGiantShielder_C::AnimGraphNode_LayeredBoneBlend' has a wrong offset!");
static_assert(offsetof(UABP_FrostGiantShielder_C, AnimGraphNode_StateResult_1) == 0x001220, "Member 'UABP_FrostGiantShielder_C::AnimGraphNode_StateResult_1' has a wrong offset!");
static_assert(offsetof(UABP_FrostGiantShielder_C, AnimGraphNode_UseCachedPose) == 0x001240, "Member 'UABP_FrostGiantShielder_C::AnimGraphNode_UseCachedPose' has a wrong offset!");
static_assert(offsetof(UABP_FrostGiantShielder_C, AnimGraphNode_StateResult) == 0x001268, "Member 'UABP_FrostGiantShielder_C::AnimGraphNode_StateResult' has a wrong offset!");
static_assert(offsetof(UABP_FrostGiantShielder_C, AnimGraphNode_StateMachine) == 0x001288, "Member 'UABP_FrostGiantShielder_C::AnimGraphNode_StateMachine' has a wrong offset!");
static_assert(offsetof(UABP_FrostGiantShielder_C, AnimGraphNode_SaveCachedPose) == 0x001350, "Member 'UABP_FrostGiantShielder_C::AnimGraphNode_SaveCachedPose' has a wrong offset!");
static_assert(offsetof(UABP_FrostGiantShielder_C, IsCombat) == 0x0013D0, "Member 'UABP_FrostGiantShielder_C::IsCombat' has a wrong offset!");

}

