#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_GoblinArcher_QuickShot_Nightmare

#include "Basic.hpp"

#include "GameplayAbilities_structs.hpp"


namespace SDK::Params
{

// Function GA_GoblinArcher_QuickShot_Nightmare.GA_GoblinArcher_QuickShot_Nightmare_C.AbilityActivated
// 0x00B0 (0x00B0 - 0x0000)
struct GA_GoblinArcher_QuickShot_Nightmare_C_AbilityActivated final
{
public:
	struct FGameplayEventData                     TriggerEventData;                                  // 0x0000(0x00B0)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(GA_GoblinArcher_QuickShot_Nightmare_C_AbilityActivated) == 0x000008, "Wrong alignment on GA_GoblinArcher_QuickShot_Nightmare_C_AbilityActivated");
static_assert(sizeof(GA_GoblinArcher_QuickShot_Nightmare_C_AbilityActivated) == 0x0000B0, "Wrong size on GA_GoblinArcher_QuickShot_Nightmare_C_AbilityActivated");
static_assert(offsetof(GA_GoblinArcher_QuickShot_Nightmare_C_AbilityActivated, TriggerEventData) == 0x000000, "Member 'GA_GoblinArcher_QuickShot_Nightmare_C_AbilityActivated::TriggerEventData' has a wrong offset!");

// Function GA_GoblinArcher_QuickShot_Nightmare.GA_GoblinArcher_QuickShot_Nightmare_C.ExecuteUbergraph_GA_GoblinArcher_QuickShot_Nightmare
// 0x0100 (0x0100 - 0x0000)
struct GA_GoblinArcher_QuickShot_Nightmare_C_ExecuteUbergraph_GA_GoblinArcher_QuickShot_Nightmare final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bWasCancelled;                        // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F60[0x2];                                     // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetAvatarActorFromActorInfo_ReturnValue;  // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IGameplayTagAssetInterface> K2Node_DynamicCast_As_________________;            // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F61[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayEventData                     K2Node_Event_TriggerEventData;                     // 0x0028(0x00B0)(ConstParm)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue;       // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F62[0x7];                                     // 0x00D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetAvatarActorFromActorInfo_ReturnValue_1; // 0x00E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_GoblinArcher_Nightmare_C*           K2Node_DynamicCast_AsBP_Goblin_Archer_Nightmare;   // 0x00E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F63[0x3];                                     // 0x00F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Get_BB_Phase_Phase;                       // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_GoblinArcher_QuickShot_Nightmare_C_ExecuteUbergraph_GA_GoblinArcher_QuickShot_Nightmare) == 0x000008, "Wrong alignment on GA_GoblinArcher_QuickShot_Nightmare_C_ExecuteUbergraph_GA_GoblinArcher_QuickShot_Nightmare");
static_assert(sizeof(GA_GoblinArcher_QuickShot_Nightmare_C_ExecuteUbergraph_GA_GoblinArcher_QuickShot_Nightmare) == 0x000100, "Wrong size on GA_GoblinArcher_QuickShot_Nightmare_C_ExecuteUbergraph_GA_GoblinArcher_QuickShot_Nightmare");
static_assert(offsetof(GA_GoblinArcher_QuickShot_Nightmare_C_ExecuteUbergraph_GA_GoblinArcher_QuickShot_Nightmare, EntryPoint) == 0x000000, "Member 'GA_GoblinArcher_QuickShot_Nightmare_C_ExecuteUbergraph_GA_GoblinArcher_QuickShot_Nightmare::EntryPoint' has a wrong offset!");
static_assert(offsetof(GA_GoblinArcher_QuickShot_Nightmare_C_ExecuteUbergraph_GA_GoblinArcher_QuickShot_Nightmare, Temp_bool_Variable) == 0x000004, "Member 'GA_GoblinArcher_QuickShot_Nightmare_C_ExecuteUbergraph_GA_GoblinArcher_QuickShot_Nightmare::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(GA_GoblinArcher_QuickShot_Nightmare_C_ExecuteUbergraph_GA_GoblinArcher_QuickShot_Nightmare, K2Node_Event_bWasCancelled) == 0x000005, "Member 'GA_GoblinArcher_QuickShot_Nightmare_C_ExecuteUbergraph_GA_GoblinArcher_QuickShot_Nightmare::K2Node_Event_bWasCancelled' has a wrong offset!");
static_assert(offsetof(GA_GoblinArcher_QuickShot_Nightmare_C_ExecuteUbergraph_GA_GoblinArcher_QuickShot_Nightmare, CallFunc_GetAvatarActorFromActorInfo_ReturnValue) == 0x000008, "Member 'GA_GoblinArcher_QuickShot_Nightmare_C_ExecuteUbergraph_GA_GoblinArcher_QuickShot_Nightmare::CallFunc_GetAvatarActorFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_GoblinArcher_QuickShot_Nightmare_C_ExecuteUbergraph_GA_GoblinArcher_QuickShot_Nightmare, K2Node_DynamicCast_As_________________) == 0x000010, "Member 'GA_GoblinArcher_QuickShot_Nightmare_C_ExecuteUbergraph_GA_GoblinArcher_QuickShot_Nightmare::K2Node_DynamicCast_As_________________' has a wrong offset!");
static_assert(offsetof(GA_GoblinArcher_QuickShot_Nightmare_C_ExecuteUbergraph_GA_GoblinArcher_QuickShot_Nightmare, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'GA_GoblinArcher_QuickShot_Nightmare_C_ExecuteUbergraph_GA_GoblinArcher_QuickShot_Nightmare::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GA_GoblinArcher_QuickShot_Nightmare_C_ExecuteUbergraph_GA_GoblinArcher_QuickShot_Nightmare, K2Node_Event_TriggerEventData) == 0x000028, "Member 'GA_GoblinArcher_QuickShot_Nightmare_C_ExecuteUbergraph_GA_GoblinArcher_QuickShot_Nightmare::K2Node_Event_TriggerEventData' has a wrong offset!");
static_assert(offsetof(GA_GoblinArcher_QuickShot_Nightmare_C_ExecuteUbergraph_GA_GoblinArcher_QuickShot_Nightmare, CallFunc_HasMatchingGameplayTag_ReturnValue) == 0x0000D8, "Member 'GA_GoblinArcher_QuickShot_Nightmare_C_ExecuteUbergraph_GA_GoblinArcher_QuickShot_Nightmare::CallFunc_HasMatchingGameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_GoblinArcher_QuickShot_Nightmare_C_ExecuteUbergraph_GA_GoblinArcher_QuickShot_Nightmare, CallFunc_GetAvatarActorFromActorInfo_ReturnValue_1) == 0x0000E0, "Member 'GA_GoblinArcher_QuickShot_Nightmare_C_ExecuteUbergraph_GA_GoblinArcher_QuickShot_Nightmare::CallFunc_GetAvatarActorFromActorInfo_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_GoblinArcher_QuickShot_Nightmare_C_ExecuteUbergraph_GA_GoblinArcher_QuickShot_Nightmare, K2Node_DynamicCast_AsBP_Goblin_Archer_Nightmare) == 0x0000E8, "Member 'GA_GoblinArcher_QuickShot_Nightmare_C_ExecuteUbergraph_GA_GoblinArcher_QuickShot_Nightmare::K2Node_DynamicCast_AsBP_Goblin_Archer_Nightmare' has a wrong offset!");
static_assert(offsetof(GA_GoblinArcher_QuickShot_Nightmare_C_ExecuteUbergraph_GA_GoblinArcher_QuickShot_Nightmare, K2Node_DynamicCast_bSuccess_1) == 0x0000F0, "Member 'GA_GoblinArcher_QuickShot_Nightmare_C_ExecuteUbergraph_GA_GoblinArcher_QuickShot_Nightmare::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(GA_GoblinArcher_QuickShot_Nightmare_C_ExecuteUbergraph_GA_GoblinArcher_QuickShot_Nightmare, CallFunc_Get_BB_Phase_Phase) == 0x0000F4, "Member 'GA_GoblinArcher_QuickShot_Nightmare_C_ExecuteUbergraph_GA_GoblinArcher_QuickShot_Nightmare::CallFunc_Get_BB_Phase_Phase' has a wrong offset!");
static_assert(offsetof(GA_GoblinArcher_QuickShot_Nightmare_C_ExecuteUbergraph_GA_GoblinArcher_QuickShot_Nightmare, CallFunc_Subtract_IntInt_ReturnValue) == 0x0000F8, "Member 'GA_GoblinArcher_QuickShot_Nightmare_C_ExecuteUbergraph_GA_GoblinArcher_QuickShot_Nightmare::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");

// Function GA_GoblinArcher_QuickShot_Nightmare.GA_GoblinArcher_QuickShot_Nightmare_C.K2_OnEndAbility
// 0x0001 (0x0001 - 0x0000)
struct GA_GoblinArcher_QuickShot_Nightmare_C_K2_OnEndAbility final
{
public:
	bool                                          bWasCancelled;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_GoblinArcher_QuickShot_Nightmare_C_K2_OnEndAbility) == 0x000001, "Wrong alignment on GA_GoblinArcher_QuickShot_Nightmare_C_K2_OnEndAbility");
static_assert(sizeof(GA_GoblinArcher_QuickShot_Nightmare_C_K2_OnEndAbility) == 0x000001, "Wrong size on GA_GoblinArcher_QuickShot_Nightmare_C_K2_OnEndAbility");
static_assert(offsetof(GA_GoblinArcher_QuickShot_Nightmare_C_K2_OnEndAbility, bWasCancelled) == 0x000000, "Member 'GA_GoblinArcher_QuickShot_Nightmare_C_K2_OnEndAbility::bWasCancelled' has a wrong offset!");

}

