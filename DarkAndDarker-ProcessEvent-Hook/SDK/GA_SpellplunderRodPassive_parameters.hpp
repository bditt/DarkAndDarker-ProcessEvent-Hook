#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_SpellplunderRodPassive

#include "Basic.hpp"

#include "GameplayAbilities_structs.hpp"
#include "DungeonCrawler_structs.hpp"


namespace SDK::Params
{

// Function GA_SpellplunderRodPassive.GA_SpellplunderRodPassive_C.EventReceived_23C5616B4BB78968E0A802AE823DFE9F
// 0x00B0 (0x00B0 - 0x0000)
struct GA_SpellplunderRodPassive_C_EventReceived_23C5616B4BB78968E0A802AE823DFE9F final
{
public:
	struct FGameplayEventData                     Payload;                                           // 0x0000(0x00B0)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(GA_SpellplunderRodPassive_C_EventReceived_23C5616B4BB78968E0A802AE823DFE9F) == 0x000008, "Wrong alignment on GA_SpellplunderRodPassive_C_EventReceived_23C5616B4BB78968E0A802AE823DFE9F");
static_assert(sizeof(GA_SpellplunderRodPassive_C_EventReceived_23C5616B4BB78968E0A802AE823DFE9F) == 0x0000B0, "Wrong size on GA_SpellplunderRodPassive_C_EventReceived_23C5616B4BB78968E0A802AE823DFE9F");
static_assert(offsetof(GA_SpellplunderRodPassive_C_EventReceived_23C5616B4BB78968E0A802AE823DFE9F, Payload) == 0x000000, "Member 'GA_SpellplunderRodPassive_C_EventReceived_23C5616B4BB78968E0A802AE823DFE9F::Payload' has a wrong offset!");

// Function GA_SpellplunderRodPassive.GA_SpellplunderRodPassive_C.ExecuteUbergraph_GA_SpellplunderRodPassive
// 0x0290 (0x0290 - 0x0000)
struct GA_SpellplunderRodPassive_C_ExecuteUbergraph_GA_SpellplunderRodPassive final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_48C1[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMsgSpellRecharge                      K2Node_MakeStruct_MsgSpellRecharge;                // 0x0008(0x0020)()
	TDelegate<void(const struct FGameplayEventData& Payload)> K2Node_CreateDelegate_OutputDelegate;              // 0x0028(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEventData                     K2Node_CustomEvent_Payload;                        // 0x0038(0x00B0)()
	struct FGameplayEventData                     Temp_struct_Variable;                              // 0x00E8(0x00B0)()
	class UAbilityTask_WaitGameplayEvent*         CallFunc_WaitGameplayEvent_ReturnValue;            // 0x0198(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsMeleeAttackHit_ReturnValue;             // 0x01A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_48C2[0x6];                                     // 0x01A2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ADCCharacterBase*                       K2Node_DynamicCast_AsDCCharacter_Base;             // 0x01A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_48C3[0x7];                                     // 0x01B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayEventData                     K2Node_Event_EventData;                            // 0x01B8(0x00B0)(ConstParm)
	class AActor*                                 CallFunc_GetAvatarActorFromActorInfo_ReturnValue;  // 0x0268(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0270(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_48C4[0x3];                                     // 0x0271(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetConstantInt32_ReturnValue;             // 0x0274(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBaseInterface>        K2Node_DynamicCast_AsBase_Interface;               // 0x0278(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0288(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_SpellplunderRodPassive_C_ExecuteUbergraph_GA_SpellplunderRodPassive) == 0x000008, "Wrong alignment on GA_SpellplunderRodPassive_C_ExecuteUbergraph_GA_SpellplunderRodPassive");
static_assert(sizeof(GA_SpellplunderRodPassive_C_ExecuteUbergraph_GA_SpellplunderRodPassive) == 0x000290, "Wrong size on GA_SpellplunderRodPassive_C_ExecuteUbergraph_GA_SpellplunderRodPassive");
static_assert(offsetof(GA_SpellplunderRodPassive_C_ExecuteUbergraph_GA_SpellplunderRodPassive, EntryPoint) == 0x000000, "Member 'GA_SpellplunderRodPassive_C_ExecuteUbergraph_GA_SpellplunderRodPassive::EntryPoint' has a wrong offset!");
static_assert(offsetof(GA_SpellplunderRodPassive_C_ExecuteUbergraph_GA_SpellplunderRodPassive, K2Node_MakeStruct_MsgSpellRecharge) == 0x000008, "Member 'GA_SpellplunderRodPassive_C_ExecuteUbergraph_GA_SpellplunderRodPassive::K2Node_MakeStruct_MsgSpellRecharge' has a wrong offset!");
static_assert(offsetof(GA_SpellplunderRodPassive_C_ExecuteUbergraph_GA_SpellplunderRodPassive, K2Node_CreateDelegate_OutputDelegate) == 0x000028, "Member 'GA_SpellplunderRodPassive_C_ExecuteUbergraph_GA_SpellplunderRodPassive::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(GA_SpellplunderRodPassive_C_ExecuteUbergraph_GA_SpellplunderRodPassive, K2Node_CustomEvent_Payload) == 0x000038, "Member 'GA_SpellplunderRodPassive_C_ExecuteUbergraph_GA_SpellplunderRodPassive::K2Node_CustomEvent_Payload' has a wrong offset!");
static_assert(offsetof(GA_SpellplunderRodPassive_C_ExecuteUbergraph_GA_SpellplunderRodPassive, Temp_struct_Variable) == 0x0000E8, "Member 'GA_SpellplunderRodPassive_C_ExecuteUbergraph_GA_SpellplunderRodPassive::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(GA_SpellplunderRodPassive_C_ExecuteUbergraph_GA_SpellplunderRodPassive, CallFunc_WaitGameplayEvent_ReturnValue) == 0x000198, "Member 'GA_SpellplunderRodPassive_C_ExecuteUbergraph_GA_SpellplunderRodPassive::CallFunc_WaitGameplayEvent_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_SpellplunderRodPassive_C_ExecuteUbergraph_GA_SpellplunderRodPassive, CallFunc_IsValid_ReturnValue) == 0x0001A0, "Member 'GA_SpellplunderRodPassive_C_ExecuteUbergraph_GA_SpellplunderRodPassive::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_SpellplunderRodPassive_C_ExecuteUbergraph_GA_SpellplunderRodPassive, CallFunc_IsMeleeAttackHit_ReturnValue) == 0x0001A1, "Member 'GA_SpellplunderRodPassive_C_ExecuteUbergraph_GA_SpellplunderRodPassive::CallFunc_IsMeleeAttackHit_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_SpellplunderRodPassive_C_ExecuteUbergraph_GA_SpellplunderRodPassive, K2Node_DynamicCast_AsDCCharacter_Base) == 0x0001A8, "Member 'GA_SpellplunderRodPassive_C_ExecuteUbergraph_GA_SpellplunderRodPassive::K2Node_DynamicCast_AsDCCharacter_Base' has a wrong offset!");
static_assert(offsetof(GA_SpellplunderRodPassive_C_ExecuteUbergraph_GA_SpellplunderRodPassive, K2Node_DynamicCast_bSuccess) == 0x0001B0, "Member 'GA_SpellplunderRodPassive_C_ExecuteUbergraph_GA_SpellplunderRodPassive::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GA_SpellplunderRodPassive_C_ExecuteUbergraph_GA_SpellplunderRodPassive, K2Node_Event_EventData) == 0x0001B8, "Member 'GA_SpellplunderRodPassive_C_ExecuteUbergraph_GA_SpellplunderRodPassive::K2Node_Event_EventData' has a wrong offset!");
static_assert(offsetof(GA_SpellplunderRodPassive_C_ExecuteUbergraph_GA_SpellplunderRodPassive, CallFunc_GetAvatarActorFromActorInfo_ReturnValue) == 0x000268, "Member 'GA_SpellplunderRodPassive_C_ExecuteUbergraph_GA_SpellplunderRodPassive::CallFunc_GetAvatarActorFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_SpellplunderRodPassive_C_ExecuteUbergraph_GA_SpellplunderRodPassive, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000270, "Member 'GA_SpellplunderRodPassive_C_ExecuteUbergraph_GA_SpellplunderRodPassive::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_SpellplunderRodPassive_C_ExecuteUbergraph_GA_SpellplunderRodPassive, CallFunc_GetConstantInt32_ReturnValue) == 0x000274, "Member 'GA_SpellplunderRodPassive_C_ExecuteUbergraph_GA_SpellplunderRodPassive::CallFunc_GetConstantInt32_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_SpellplunderRodPassive_C_ExecuteUbergraph_GA_SpellplunderRodPassive, K2Node_DynamicCast_AsBase_Interface) == 0x000278, "Member 'GA_SpellplunderRodPassive_C_ExecuteUbergraph_GA_SpellplunderRodPassive::K2Node_DynamicCast_AsBase_Interface' has a wrong offset!");
static_assert(offsetof(GA_SpellplunderRodPassive_C_ExecuteUbergraph_GA_SpellplunderRodPassive, K2Node_DynamicCast_bSuccess_1) == 0x000288, "Member 'GA_SpellplunderRodPassive_C_ExecuteUbergraph_GA_SpellplunderRodPassive::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

// Function GA_SpellplunderRodPassive.GA_SpellplunderRodPassive_C.K2_ActivateAbilityFromEvent
// 0x00B0 (0x00B0 - 0x0000)
struct GA_SpellplunderRodPassive_C_K2_ActivateAbilityFromEvent final
{
public:
	struct FGameplayEventData                     EventData;                                         // 0x0000(0x00B0)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(GA_SpellplunderRodPassive_C_K2_ActivateAbilityFromEvent) == 0x000008, "Wrong alignment on GA_SpellplunderRodPassive_C_K2_ActivateAbilityFromEvent");
static_assert(sizeof(GA_SpellplunderRodPassive_C_K2_ActivateAbilityFromEvent) == 0x0000B0, "Wrong size on GA_SpellplunderRodPassive_C_K2_ActivateAbilityFromEvent");
static_assert(offsetof(GA_SpellplunderRodPassive_C_K2_ActivateAbilityFromEvent, EventData) == 0x000000, "Member 'GA_SpellplunderRodPassive_C_K2_ActivateAbilityFromEvent::EventData' has a wrong offset!");

}

