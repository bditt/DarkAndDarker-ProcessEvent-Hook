#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BTT_SkillOn

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "AIModule_structs.hpp"
#include "AIModule_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BTT_SkillOn.BTT_SkillOn_C
// 0x0088 (0x0130 - 0x00A8)
class UBTT_SkillOn_C final : public UBTTask_BlueprintBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x00A8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FBlackboardKeySelector                 TargetActor;                                       // 0x00B0(0x0028)(Edit, BlueprintVisible)
	TArray<struct FGameplayTag>                   AbilityTags;                                       // 0x00D8(0x0010)(Edit, BlueprintVisible)
	TArray<int32>                                 AbilityRates;                                      // 0x00E8(0x0010)(Edit, BlueprintVisible)
	bool                                          WaitState;                                         // 0x00F8(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51FB[0x7];                                     // 0x00F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FGameplayTag>                   StateTags;                                         // 0x0100(0x0010)(Edit, BlueprintVisible)
	int32                                         Count;                                             // 0x0110(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Rate;                                              // 0x0114(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           AbilityTag;                                        // 0x0118(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	int32                                         RateTemp;                                          // 0x0120(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           StateTag;                                          // 0x0124(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BTT_SkillOn(int32 EntryPoint);
	void ReceiveExecuteAI(class AAIController* OwnerController, class APawn* ControlledPawn);
	void ReceiveTickAI(class AAIController* OwnerController, class APawn* ControlledPawn, float DeltaSeconds);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BTT_SkillOn_C">();
	}
	static class UBTT_SkillOn_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBTT_SkillOn_C>();
	}
};
static_assert(alignof(UBTT_SkillOn_C) == 0x000008, "Wrong alignment on UBTT_SkillOn_C");
static_assert(sizeof(UBTT_SkillOn_C) == 0x000130, "Wrong size on UBTT_SkillOn_C");
static_assert(offsetof(UBTT_SkillOn_C, UberGraphFrame) == 0x0000A8, "Member 'UBTT_SkillOn_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBTT_SkillOn_C, TargetActor) == 0x0000B0, "Member 'UBTT_SkillOn_C::TargetActor' has a wrong offset!");
static_assert(offsetof(UBTT_SkillOn_C, AbilityTags) == 0x0000D8, "Member 'UBTT_SkillOn_C::AbilityTags' has a wrong offset!");
static_assert(offsetof(UBTT_SkillOn_C, AbilityRates) == 0x0000E8, "Member 'UBTT_SkillOn_C::AbilityRates' has a wrong offset!");
static_assert(offsetof(UBTT_SkillOn_C, WaitState) == 0x0000F8, "Member 'UBTT_SkillOn_C::WaitState' has a wrong offset!");
static_assert(offsetof(UBTT_SkillOn_C, StateTags) == 0x000100, "Member 'UBTT_SkillOn_C::StateTags' has a wrong offset!");
static_assert(offsetof(UBTT_SkillOn_C, Count) == 0x000110, "Member 'UBTT_SkillOn_C::Count' has a wrong offset!");
static_assert(offsetof(UBTT_SkillOn_C, Rate) == 0x000114, "Member 'UBTT_SkillOn_C::Rate' has a wrong offset!");
static_assert(offsetof(UBTT_SkillOn_C, AbilityTag) == 0x000118, "Member 'UBTT_SkillOn_C::AbilityTag' has a wrong offset!");
static_assert(offsetof(UBTT_SkillOn_C, RateTemp) == 0x000120, "Member 'UBTT_SkillOn_C::RateTemp' has a wrong offset!");
static_assert(offsetof(UBTT_SkillOn_C, StateTag) == 0x000124, "Member 'UBTT_SkillOn_C::StateTag' has a wrong offset!");

}

