#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_SpikeLog_Aura

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "GameplayAbilities_structs.hpp"


namespace SDK::Params
{

// Function GA_SpikeLog_Aura.GA_SpikeLog_Aura_C.ExecuteUbergraph_GA_SpikeLog_Aura
// 0x0198 (0x0198 - 0x0000)
struct GA_SpikeLog_Aura_C_ExecuteUbergraph_GA_SpikeLog_Aura final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_567E[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayCueParameters                 Temp_struct_Variable;                              // 0x0008(0x00D8)(ConstParm, ContainsInstancedReference)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x00E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue;          // 0x00F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_TargetActor;                          // 0x0110(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetAvatarActorFromActorInfo_ReturnValue;  // 0x0118(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ADCCharacterBase*                       K2Node_DynamicCast_AsDCCharacter_Base;             // 0x0120(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_567F[0x7];                                     // 0x0129(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x0130(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue; // 0x0148(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x0160(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsMovingOnGround_ReturnValue;             // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5680[0x7];                                     // 0x0179(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0180(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_SpikeLog_Aura_C_ExecuteUbergraph_GA_SpikeLog_Aura) == 0x000008, "Wrong alignment on GA_SpikeLog_Aura_C_ExecuteUbergraph_GA_SpikeLog_Aura");
static_assert(sizeof(GA_SpikeLog_Aura_C_ExecuteUbergraph_GA_SpikeLog_Aura) == 0x000198, "Wrong size on GA_SpikeLog_Aura_C_ExecuteUbergraph_GA_SpikeLog_Aura");
static_assert(offsetof(GA_SpikeLog_Aura_C_ExecuteUbergraph_GA_SpikeLog_Aura, EntryPoint) == 0x000000, "Member 'GA_SpikeLog_Aura_C_ExecuteUbergraph_GA_SpikeLog_Aura::EntryPoint' has a wrong offset!");
static_assert(offsetof(GA_SpikeLog_Aura_C_ExecuteUbergraph_GA_SpikeLog_Aura, Temp_struct_Variable) == 0x000008, "Member 'GA_SpikeLog_Aura_C_ExecuteUbergraph_GA_SpikeLog_Aura::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(GA_SpikeLog_Aura_C_ExecuteUbergraph_GA_SpikeLog_Aura, CallFunc_MakeVector_ReturnValue) == 0x0000E0, "Member 'GA_SpikeLog_Aura_C_ExecuteUbergraph_GA_SpikeLog_Aura::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_SpikeLog_Aura_C_ExecuteUbergraph_GA_SpikeLog_Aura, CallFunc_Conv_DoubleToVector_ReturnValue) == 0x0000F8, "Member 'GA_SpikeLog_Aura_C_ExecuteUbergraph_GA_SpikeLog_Aura::CallFunc_Conv_DoubleToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_SpikeLog_Aura_C_ExecuteUbergraph_GA_SpikeLog_Aura, K2Node_Event_TargetActor) == 0x000110, "Member 'GA_SpikeLog_Aura_C_ExecuteUbergraph_GA_SpikeLog_Aura::K2Node_Event_TargetActor' has a wrong offset!");
static_assert(offsetof(GA_SpikeLog_Aura_C_ExecuteUbergraph_GA_SpikeLog_Aura, CallFunc_GetAvatarActorFromActorInfo_ReturnValue) == 0x000118, "Member 'GA_SpikeLog_Aura_C_ExecuteUbergraph_GA_SpikeLog_Aura::CallFunc_GetAvatarActorFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_SpikeLog_Aura_C_ExecuteUbergraph_GA_SpikeLog_Aura, K2Node_DynamicCast_AsDCCharacter_Base) == 0x000120, "Member 'GA_SpikeLog_Aura_C_ExecuteUbergraph_GA_SpikeLog_Aura::K2Node_DynamicCast_AsDCCharacter_Base' has a wrong offset!");
static_assert(offsetof(GA_SpikeLog_Aura_C_ExecuteUbergraph_GA_SpikeLog_Aura, K2Node_DynamicCast_bSuccess) == 0x000128, "Member 'GA_SpikeLog_Aura_C_ExecuteUbergraph_GA_SpikeLog_Aura::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GA_SpikeLog_Aura_C_ExecuteUbergraph_GA_SpikeLog_Aura, CallFunc_GetActorForwardVector_ReturnValue) == 0x000130, "Member 'GA_SpikeLog_Aura_C_ExecuteUbergraph_GA_SpikeLog_Aura::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_SpikeLog_Aura_C_ExecuteUbergraph_GA_SpikeLog_Aura, CallFunc_GreaterGreater_VectorRotator_ReturnValue) == 0x000148, "Member 'GA_SpikeLog_Aura_C_ExecuteUbergraph_GA_SpikeLog_Aura::CallFunc_GreaterGreater_VectorRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_SpikeLog_Aura_C_ExecuteUbergraph_GA_SpikeLog_Aura, CallFunc_Multiply_VectorVector_ReturnValue) == 0x000160, "Member 'GA_SpikeLog_Aura_C_ExecuteUbergraph_GA_SpikeLog_Aura::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_SpikeLog_Aura_C_ExecuteUbergraph_GA_SpikeLog_Aura, CallFunc_IsMovingOnGround_ReturnValue) == 0x000178, "Member 'GA_SpikeLog_Aura_C_ExecuteUbergraph_GA_SpikeLog_Aura::CallFunc_IsMovingOnGround_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_SpikeLog_Aura_C_ExecuteUbergraph_GA_SpikeLog_Aura, CallFunc_Add_VectorVector_ReturnValue) == 0x000180, "Member 'GA_SpikeLog_Aura_C_ExecuteUbergraph_GA_SpikeLog_Aura::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");

// Function GA_SpikeLog_Aura.GA_SpikeLog_Aura_C.OnAuraOverlapBeginEvent
// 0x0008 (0x0008 - 0x0000)
struct GA_SpikeLog_Aura_C_OnAuraOverlapBeginEvent final
{
public:
	class AActor*                                 TargetActor;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_SpikeLog_Aura_C_OnAuraOverlapBeginEvent) == 0x000008, "Wrong alignment on GA_SpikeLog_Aura_C_OnAuraOverlapBeginEvent");
static_assert(sizeof(GA_SpikeLog_Aura_C_OnAuraOverlapBeginEvent) == 0x000008, "Wrong size on GA_SpikeLog_Aura_C_OnAuraOverlapBeginEvent");
static_assert(offsetof(GA_SpikeLog_Aura_C_OnAuraOverlapBeginEvent, TargetActor) == 0x000000, "Member 'GA_SpikeLog_Aura_C_OnAuraOverlapBeginEvent::TargetActor' has a wrong offset!");

}

