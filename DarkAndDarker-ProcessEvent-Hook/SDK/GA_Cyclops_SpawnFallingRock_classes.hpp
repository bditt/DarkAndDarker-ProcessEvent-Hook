#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_Cyclops_SpawnFallingRock

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "GA_MonsterProjectileAttackBase_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass GA_Cyclops_SpawnFallingRock.GA_Cyclops_SpawnFallingRock_C
// 0x0118 (0x0960 - 0x0848)
class UGA_Cyclops_SpawnFallingRock_C final : public UGA_MonsterProjectileAttackBase_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_GA_Cyclops_SpawnFallingRock_C;      // 0x0848(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	int32                                         Spawn_Count;                                       // 0x0850(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Interval;                                          // 0x0854(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FVector>                        Center_Of_Spawn_Locations;                         // 0x0858(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<struct FVector>                        Spawn_Locations;                                   // 0x0868(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FRotator                               Spawn_Rotation;                                    // 0x0878(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class ABP_Cyclops_Common_C*                   As_BP_Cyclops;                                     // 0x0890(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEventData                     Trigger_Event_Data;                                // 0x0898(0x00B0)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FTimerHandle                           Interval_TimerHandle;                              // 0x0948(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	int32                                         Rock_Index;                                        // 0x0950(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_43B9[0x4];                                     // 0x0954(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Spawn_Correction_Height;                           // 0x0958(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void AbilityActivated(const struct FGameplayEventData& TriggerEventData);
	void ExecuteUbergraph_GA_Cyclops_SpawnFallingRock(int32 EntryPoint);
	bool Get_Ceilling_Z(const struct FVector& Start, struct FVector* Out_Hit_Location);
	void Get_Center_Of_Spawn_Locations();
	void Get_Spawn_Locations();
	void Get_Spawn_Rotation();
	void K2_OnEndAbility(bool bWasCancelled);
	void OnSuccess_01FB1AAC4A54A5E4253A518D70E9E688(class AActor* ProjectileActor);
	void OnSuccess_DFF3287646B041B0A5CD3A8F583869D4(class AActor* ProjectileActor);
	void Spawn_Rock();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GA_Cyclops_SpawnFallingRock_C">();
	}
	static class UGA_Cyclops_SpawnFallingRock_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGA_Cyclops_SpawnFallingRock_C>();
	}
};
static_assert(alignof(UGA_Cyclops_SpawnFallingRock_C) == 0x000008, "Wrong alignment on UGA_Cyclops_SpawnFallingRock_C");
static_assert(sizeof(UGA_Cyclops_SpawnFallingRock_C) == 0x000960, "Wrong size on UGA_Cyclops_SpawnFallingRock_C");
static_assert(offsetof(UGA_Cyclops_SpawnFallingRock_C, UberGraphFrame_GA_Cyclops_SpawnFallingRock_C) == 0x000848, "Member 'UGA_Cyclops_SpawnFallingRock_C::UberGraphFrame_GA_Cyclops_SpawnFallingRock_C' has a wrong offset!");
static_assert(offsetof(UGA_Cyclops_SpawnFallingRock_C, Spawn_Count) == 0x000850, "Member 'UGA_Cyclops_SpawnFallingRock_C::Spawn_Count' has a wrong offset!");
static_assert(offsetof(UGA_Cyclops_SpawnFallingRock_C, Interval) == 0x000854, "Member 'UGA_Cyclops_SpawnFallingRock_C::Interval' has a wrong offset!");
static_assert(offsetof(UGA_Cyclops_SpawnFallingRock_C, Center_Of_Spawn_Locations) == 0x000858, "Member 'UGA_Cyclops_SpawnFallingRock_C::Center_Of_Spawn_Locations' has a wrong offset!");
static_assert(offsetof(UGA_Cyclops_SpawnFallingRock_C, Spawn_Locations) == 0x000868, "Member 'UGA_Cyclops_SpawnFallingRock_C::Spawn_Locations' has a wrong offset!");
static_assert(offsetof(UGA_Cyclops_SpawnFallingRock_C, Spawn_Rotation) == 0x000878, "Member 'UGA_Cyclops_SpawnFallingRock_C::Spawn_Rotation' has a wrong offset!");
static_assert(offsetof(UGA_Cyclops_SpawnFallingRock_C, As_BP_Cyclops) == 0x000890, "Member 'UGA_Cyclops_SpawnFallingRock_C::As_BP_Cyclops' has a wrong offset!");
static_assert(offsetof(UGA_Cyclops_SpawnFallingRock_C, Trigger_Event_Data) == 0x000898, "Member 'UGA_Cyclops_SpawnFallingRock_C::Trigger_Event_Data' has a wrong offset!");
static_assert(offsetof(UGA_Cyclops_SpawnFallingRock_C, Interval_TimerHandle) == 0x000948, "Member 'UGA_Cyclops_SpawnFallingRock_C::Interval_TimerHandle' has a wrong offset!");
static_assert(offsetof(UGA_Cyclops_SpawnFallingRock_C, Rock_Index) == 0x000950, "Member 'UGA_Cyclops_SpawnFallingRock_C::Rock_Index' has a wrong offset!");
static_assert(offsetof(UGA_Cyclops_SpawnFallingRock_C, Spawn_Correction_Height) == 0x000958, "Member 'UGA_Cyclops_SpawnFallingRock_C::Spawn_Correction_Height' has a wrong offset!");

}

