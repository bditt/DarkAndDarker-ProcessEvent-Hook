#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_TradeCommonPopup

#include "Basic.hpp"

#include "DungeonCrawler_structs.hpp"


namespace SDK::Params
{

// Function WB_TradeCommonPopup.WB_TradeCommonPopup_C.OnCreatePopup
// 0x0020 (0x0020 - 0x0000)
struct WB_TradeCommonPopup_C_OnCreatePopup final
{
public:
	struct FPopupSWidgetData                      PopupSWidgetData;                                  // 0x0000(0x0020)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(WB_TradeCommonPopup_C_OnCreatePopup) == 0x000008, "Wrong alignment on WB_TradeCommonPopup_C_OnCreatePopup");
static_assert(sizeof(WB_TradeCommonPopup_C_OnCreatePopup) == 0x000020, "Wrong size on WB_TradeCommonPopup_C_OnCreatePopup");
static_assert(offsetof(WB_TradeCommonPopup_C_OnCreatePopup, PopupSWidgetData) == 0x000000, "Member 'WB_TradeCommonPopup_C_OnCreatePopup::PopupSWidgetData' has a wrong offset!");

// Function WB_TradeCommonPopup.WB_TradeCommonPopup_C.ExecuteUbergraph_WB_TradeCommonPopup
// 0x0038 (0x0038 - 0x0000)
struct WB_TradeCommonPopup_C_ExecuteUbergraph_WB_TradeCommonPopup final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54DA[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FPopupSWidgetData                      K2Node_Event_PopupSWidgetData;                     // 0x0010(0x0020)(ConstParm)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_TradeCommonPopup_C_ExecuteUbergraph_WB_TradeCommonPopup) == 0x000008, "Wrong alignment on WB_TradeCommonPopup_C_ExecuteUbergraph_WB_TradeCommonPopup");
static_assert(sizeof(WB_TradeCommonPopup_C_ExecuteUbergraph_WB_TradeCommonPopup) == 0x000038, "Wrong size on WB_TradeCommonPopup_C_ExecuteUbergraph_WB_TradeCommonPopup");
static_assert(offsetof(WB_TradeCommonPopup_C_ExecuteUbergraph_WB_TradeCommonPopup, EntryPoint) == 0x000000, "Member 'WB_TradeCommonPopup_C_ExecuteUbergraph_WB_TradeCommonPopup::EntryPoint' has a wrong offset!");
static_assert(offsetof(WB_TradeCommonPopup_C_ExecuteUbergraph_WB_TradeCommonPopup, CallFunc_PlayAnimation_ReturnValue) == 0x000008, "Member 'WB_TradeCommonPopup_C_ExecuteUbergraph_WB_TradeCommonPopup::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TradeCommonPopup_C_ExecuteUbergraph_WB_TradeCommonPopup, K2Node_Event_PopupSWidgetData) == 0x000010, "Member 'WB_TradeCommonPopup_C_ExecuteUbergraph_WB_TradeCommonPopup::K2Node_Event_PopupSWidgetData' has a wrong offset!");
static_assert(offsetof(WB_TradeCommonPopup_C_ExecuteUbergraph_WB_TradeCommonPopup, K2Node_SwitchEnum_CmpSuccess) == 0x000030, "Member 'WB_TradeCommonPopup_C_ExecuteUbergraph_WB_TradeCommonPopup::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function WB_TradeCommonPopup.WB_TradeCommonPopup_C.BP_GetDesiredFocusTarget
// 0x0010 (0x0010 - 0x0000)
struct WB_TradeCommonPopup_C_BP_GetDesiredFocusTarget final
{
public:
	class UWidget*                                ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetActiveWidgetIndex_ReturnValue;         // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_TradeCommonPopup_C_BP_GetDesiredFocusTarget) == 0x000008, "Wrong alignment on WB_TradeCommonPopup_C_BP_GetDesiredFocusTarget");
static_assert(sizeof(WB_TradeCommonPopup_C_BP_GetDesiredFocusTarget) == 0x000010, "Wrong size on WB_TradeCommonPopup_C_BP_GetDesiredFocusTarget");
static_assert(offsetof(WB_TradeCommonPopup_C_BP_GetDesiredFocusTarget, ReturnValue) == 0x000000, "Member 'WB_TradeCommonPopup_C_BP_GetDesiredFocusTarget::ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TradeCommonPopup_C_BP_GetDesiredFocusTarget, CallFunc_GetActiveWidgetIndex_ReturnValue) == 0x000008, "Member 'WB_TradeCommonPopup_C_BP_GetDesiredFocusTarget::CallFunc_GetActiveWidgetIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TradeCommonPopup_C_BP_GetDesiredFocusTarget, K2Node_SwitchInteger_CmpSuccess) == 0x00000C, "Member 'WB_TradeCommonPopup_C_BP_GetDesiredFocusTarget::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");

}

