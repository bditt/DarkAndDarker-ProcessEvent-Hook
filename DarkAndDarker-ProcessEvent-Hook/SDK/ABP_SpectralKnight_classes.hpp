#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ABP_SpectralKnight

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "ABP_SpectralKnight_structs.hpp"
#include "AnimGraphRuntime_structs.hpp"
#include "DungeonCrawler_classes.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass ABP_SpectralKnight.ABP_SpectralKnight_C
// 0x0510 (0x0A40 - 0x0530)
class UABP_SpectralKnight_C final : public UDCMonsterAnimInstanceBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0530(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct ABP_SpectralKnight::FAnimBlueprintGeneratedMutableData __AnimBlueprintMutables;                           // 0x0538(0x000C)(HasGetValueTypeHash)
	uint8                                         Pad_5434[0x4];                                     // 0x0544(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_PropertyAccess;             // 0x0548(0x0008)()
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_Base;                       // 0x0550(0x0008)()
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x0558(0x0020)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_4;                  // 0x0578(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_3;                  // 0x05A0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_2;                  // 0x05C8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_1;                  // 0x05F0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult;                    // 0x0618(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_1;                    // 0x0640(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_3;                       // 0x0688(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x06A8(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_2;                       // 0x06F0(0x0020)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer;                    // 0x0710(0x0070)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_1;                       // 0x0780(0x0020)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine_1;                      // 0x07A0(0x00C8)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot;                                // 0x0868(0x0048)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose;                      // 0x08B0(0x0080)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose;                       // 0x0930(0x0028)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult;                         // 0x0958(0x0020)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine;                        // 0x0978(0x00C8)()

public:
	void AnimGraph(struct FPoseLink* Param_AnimGraph);
	void BlueprintThreadSafeUpdateAnimation(float DeltaTime);
	void ExecuteUbergraph_ABP_SpectralKnight(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ABP_SpectralKnight_C">();
	}
	static class UABP_SpectralKnight_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UABP_SpectralKnight_C>();
	}
};
static_assert(alignof(UABP_SpectralKnight_C) == 0x000010, "Wrong alignment on UABP_SpectralKnight_C");
static_assert(sizeof(UABP_SpectralKnight_C) == 0x000A40, "Wrong size on UABP_SpectralKnight_C");
static_assert(offsetof(UABP_SpectralKnight_C, UberGraphFrame) == 0x000530, "Member 'UABP_SpectralKnight_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UABP_SpectralKnight_C, __AnimBlueprintMutables) == 0x000538, "Member 'UABP_SpectralKnight_C::__AnimBlueprintMutables' has a wrong offset!");
static_assert(offsetof(UABP_SpectralKnight_C, AnimBlueprintExtension_PropertyAccess) == 0x000548, "Member 'UABP_SpectralKnight_C::AnimBlueprintExtension_PropertyAccess' has a wrong offset!");
static_assert(offsetof(UABP_SpectralKnight_C, AnimBlueprintExtension_Base) == 0x000550, "Member 'UABP_SpectralKnight_C::AnimBlueprintExtension_Base' has a wrong offset!");
static_assert(offsetof(UABP_SpectralKnight_C, AnimGraphNode_Root) == 0x000558, "Member 'UABP_SpectralKnight_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UABP_SpectralKnight_C, AnimGraphNode_TransitionResult_4) == 0x000578, "Member 'UABP_SpectralKnight_C::AnimGraphNode_TransitionResult_4' has a wrong offset!");
static_assert(offsetof(UABP_SpectralKnight_C, AnimGraphNode_TransitionResult_3) == 0x0005A0, "Member 'UABP_SpectralKnight_C::AnimGraphNode_TransitionResult_3' has a wrong offset!");
static_assert(offsetof(UABP_SpectralKnight_C, AnimGraphNode_TransitionResult_2) == 0x0005C8, "Member 'UABP_SpectralKnight_C::AnimGraphNode_TransitionResult_2' has a wrong offset!");
static_assert(offsetof(UABP_SpectralKnight_C, AnimGraphNode_TransitionResult_1) == 0x0005F0, "Member 'UABP_SpectralKnight_C::AnimGraphNode_TransitionResult_1' has a wrong offset!");
static_assert(offsetof(UABP_SpectralKnight_C, AnimGraphNode_TransitionResult) == 0x000618, "Member 'UABP_SpectralKnight_C::AnimGraphNode_TransitionResult' has a wrong offset!");
static_assert(offsetof(UABP_SpectralKnight_C, AnimGraphNode_SequencePlayer_1) == 0x000640, "Member 'UABP_SpectralKnight_C::AnimGraphNode_SequencePlayer_1' has a wrong offset!");
static_assert(offsetof(UABP_SpectralKnight_C, AnimGraphNode_StateResult_3) == 0x000688, "Member 'UABP_SpectralKnight_C::AnimGraphNode_StateResult_3' has a wrong offset!");
static_assert(offsetof(UABP_SpectralKnight_C, AnimGraphNode_SequencePlayer) == 0x0006A8, "Member 'UABP_SpectralKnight_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(UABP_SpectralKnight_C, AnimGraphNode_StateResult_2) == 0x0006F0, "Member 'UABP_SpectralKnight_C::AnimGraphNode_StateResult_2' has a wrong offset!");
static_assert(offsetof(UABP_SpectralKnight_C, AnimGraphNode_BlendSpacePlayer) == 0x000710, "Member 'UABP_SpectralKnight_C::AnimGraphNode_BlendSpacePlayer' has a wrong offset!");
static_assert(offsetof(UABP_SpectralKnight_C, AnimGraphNode_StateResult_1) == 0x000780, "Member 'UABP_SpectralKnight_C::AnimGraphNode_StateResult_1' has a wrong offset!");
static_assert(offsetof(UABP_SpectralKnight_C, AnimGraphNode_StateMachine_1) == 0x0007A0, "Member 'UABP_SpectralKnight_C::AnimGraphNode_StateMachine_1' has a wrong offset!");
static_assert(offsetof(UABP_SpectralKnight_C, AnimGraphNode_Slot) == 0x000868, "Member 'UABP_SpectralKnight_C::AnimGraphNode_Slot' has a wrong offset!");
static_assert(offsetof(UABP_SpectralKnight_C, AnimGraphNode_SaveCachedPose) == 0x0008B0, "Member 'UABP_SpectralKnight_C::AnimGraphNode_SaveCachedPose' has a wrong offset!");
static_assert(offsetof(UABP_SpectralKnight_C, AnimGraphNode_UseCachedPose) == 0x000930, "Member 'UABP_SpectralKnight_C::AnimGraphNode_UseCachedPose' has a wrong offset!");
static_assert(offsetof(UABP_SpectralKnight_C, AnimGraphNode_StateResult) == 0x000958, "Member 'UABP_SpectralKnight_C::AnimGraphNode_StateResult' has a wrong offset!");
static_assert(offsetof(UABP_SpectralKnight_C, AnimGraphNode_StateMachine) == 0x000978, "Member 'UABP_SpectralKnight_C::AnimGraphNode_StateMachine' has a wrong offset!");

}

