#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BTD_CheckFloatAttributeCondition

#include "Basic.hpp"

#include "BTD_CheckFloatAttributeCondition_classes.hpp"
#include "BTD_CheckFloatAttributeCondition_parameters.hpp"


namespace SDK
{

// Function BTD_CheckFloatAttributeCondition.BTD_CheckFloatAttributeCondition_C.Compare Float Value
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  CompareFloatValue                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Bool                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBTD_CheckFloatAttributeCondition_C::Compare_Float_Value(double CompareFloatValue, bool* Bool)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BTD_CheckFloatAttributeCondition_C", "Compare Float Value");

	Params::BTD_CheckFloatAttributeCondition_C_Compare_Float_Value Parms{};

	Parms.CompareFloatValue = CompareFloatValue;

	UObject::ProcessEvent(Func, &Parms);

	if (Bool != nullptr)
		*Bool = Parms.Bool;
}


// Function BTD_CheckFloatAttributeCondition.BTD_CheckFloatAttributeCondition_C.Compare Move Speed
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Move_Speed                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Bool                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBTD_CheckFloatAttributeCondition_C::Compare_Move_Speed(double Move_Speed, bool* Bool)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BTD_CheckFloatAttributeCondition_C", "Compare Move Speed");

	Params::BTD_CheckFloatAttributeCondition_C_Compare_Move_Speed Parms{};

	Parms.Move_Speed = Move_Speed;

	UObject::ProcessEvent(Func, &Parms);

	if (Bool != nullptr)
		*Bool = Parms.Bool;
}


// Function BTD_CheckFloatAttributeCondition.BTD_CheckFloatAttributeCondition_C.Compare Primary Attack Power
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Primary_Attack_Power                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Bool                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBTD_CheckFloatAttributeCondition_C::Compare_Primary_Attack_Power(double Primary_Attack_Power, bool* Bool)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BTD_CheckFloatAttributeCondition_C", "Compare Primary Attack Power");

	Params::BTD_CheckFloatAttributeCondition_C_Compare_Primary_Attack_Power Parms{};

	Parms.Primary_Attack_Power = Primary_Attack_Power;

	UObject::ProcessEvent(Func, &Parms);

	if (Bool != nullptr)
		*Bool = Parms.Bool;
}


// Function BTD_CheckFloatAttributeCondition.BTD_CheckFloatAttributeCondition_C.Compare Secondary Attack Power
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Secondary_Attack_Power                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Bool                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBTD_CheckFloatAttributeCondition_C::Compare_Secondary_Attack_Power(double Secondary_Attack_Power, bool* Bool)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BTD_CheckFloatAttributeCondition_C", "Compare Secondary Attack Power");

	Params::BTD_CheckFloatAttributeCondition_C_Compare_Secondary_Attack_Power Parms{};

	Parms.Secondary_Attack_Power = Secondary_Attack_Power;

	UObject::ProcessEvent(Func, &Parms);

	if (Bool != nullptr)
		*Bool = Parms.Bool;
}


// Function BTD_CheckFloatAttributeCondition.BTD_CheckFloatAttributeCondition_C.PerformConditionCheckAI
// (Event, Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AAIController*                    OwnerController                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class APawn*                            ControlledPawn                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool UBTD_CheckFloatAttributeCondition_C::PerformConditionCheckAI(class AAIController* OwnerController, class APawn* ControlledPawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BTD_CheckFloatAttributeCondition_C", "PerformConditionCheckAI");

	Params::BTD_CheckFloatAttributeCondition_C_PerformConditionCheckAI Parms{};

	Parms.OwnerController = OwnerController;
	Parms.ControlledPawn = ControlledPawn;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

