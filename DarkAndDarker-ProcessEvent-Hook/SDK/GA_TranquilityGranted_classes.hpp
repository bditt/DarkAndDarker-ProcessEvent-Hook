#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_TranquilityGranted

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "GA_MusicGranted_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass GA_TranquilityGranted.GA_TranquilityGranted_C
// 0x0020 (0x05D8 - 0x05B8)
class UGA_TranquilityGranted_C final : public UGA_MusicGranted_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_GA_TranquilityGranted_C;            // 0x05B8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FGameplayTag                           Perfect_State_Tag;                                 // 0x05C0(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Good_State_Tag;                                    // 0x05C8(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Bad_State_Tag;                                     // 0x05D0(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_GA_TranquilityGranted(int32 EntryPoint);
	void K2_ActivateAbilityFromEvent(const struct FGameplayEventData& EventData);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GA_TranquilityGranted_C">();
	}
	static class UGA_TranquilityGranted_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGA_TranquilityGranted_C>();
	}
};
static_assert(alignof(UGA_TranquilityGranted_C) == 0x000008, "Wrong alignment on UGA_TranquilityGranted_C");
static_assert(sizeof(UGA_TranquilityGranted_C) == 0x0005D8, "Wrong size on UGA_TranquilityGranted_C");
static_assert(offsetof(UGA_TranquilityGranted_C, UberGraphFrame_GA_TranquilityGranted_C) == 0x0005B8, "Member 'UGA_TranquilityGranted_C::UberGraphFrame_GA_TranquilityGranted_C' has a wrong offset!");
static_assert(offsetof(UGA_TranquilityGranted_C, Perfect_State_Tag) == 0x0005C0, "Member 'UGA_TranquilityGranted_C::Perfect_State_Tag' has a wrong offset!");
static_assert(offsetof(UGA_TranquilityGranted_C, Good_State_Tag) == 0x0005C8, "Member 'UGA_TranquilityGranted_C::Good_State_Tag' has a wrong offset!");
static_assert(offsetof(UGA_TranquilityGranted_C, Bad_State_Tag) == 0x0005D0, "Member 'UGA_TranquilityGranted_C::Bad_State_Tag' has a wrong offset!");

}

