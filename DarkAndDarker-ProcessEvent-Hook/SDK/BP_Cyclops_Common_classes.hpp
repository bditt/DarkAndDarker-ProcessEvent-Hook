#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Cyclops_Common

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "BP_DCMonsterBaseWithOptions_Boss_GoblinCave_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Cyclops_Common.BP_Cyclops_Common_C
// 0x0130 (0x1530 - 0x1400)
#pragma pack(push, 0x1)
class alignas(0x10) ABP_Cyclops_Common_C : public ABP_DCMonsterBaseWithOptions_Boss_GoblinCave_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_Cyclops_Common_C;                // 0x13F8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBP_DCHitBox_C*                         BP_DCHitBox11;                                     // 0x1400(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_DCHitBox_C*                         BP_DCHitBox10;                                     // 0x1408(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_DCHitBox_C*                         BP_DCHitBox9;                                      // 0x1410(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_DCHitBox_C*                         BP_DCHitBox8;                                      // 0x1418(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_DCHitBox_C*                         BP_DCHitBox7;                                      // 0x1420(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_DCHitBox_C*                         BP_DCHitBox6;                                      // 0x1428(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_DCHitBox_C*                         BP_DCHitBox5;                                      // 0x1430(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_DCHitBox_C*                         BP_DCHitBox4;                                      // 0x1438(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_DCHitBox_C*                         BP_DCHitBox3;                                      // 0x1440(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_DCHitBox_C*                         BP_DCHitBox2;                                      // 0x1448(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_DCHitBox_C*                         BP_DCHitBox1;                                      // 0x1450(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_DCHitBox_C*                         BP_DCHitBox;                                       // 0x1458(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        Riot_Cancel_HP;                                    // 0x1460(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Stomp_Timer;                                       // 0x1468(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Combo_Ratio;                                       // 0x1470(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Combo_Started;                                     // 0x1478(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Riot_Started;                                      // 0x1479(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_419D[0x6];                                     // 0x147A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Riot_Start_HP;                                     // 0x1480(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAbilityAsync_WaitGameplayEvent*        Wait_Riot_Event;                                   // 0x1488(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UAbilityAsync_WaitGameplayEvent*        CameraShake_Event;                                 // 0x1490(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	double                                        Blackboard_HPRatio_Initial_Value;                  // 0x1498(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Blackboard_HPRatio_Subtract_Value;                 // 0x14A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Rock_Spawn_Count;                                  // 0x14A8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_419E[0x4];                                     // 0x14AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Rock_Spawn_Adding_Height;                          // 0x14B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FVector>                        Center_Of_Rock_Spawn_Locations;                    // 0x14B8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<struct FVector>                        Rock_Spawn_Random_Locations;                       // 0x14C8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<struct FVector>                        Rock_Shadow_Spawn_Random_Locations;                // 0x14D8(0x0010)(Edit, BlueprintVisible, Net, DisableEditOnInstance, RepNotify)
	TArray<struct FVector>                        Rock_Spawn_Target_Locations;                       // 0x14E8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<struct FVector>                        Rock_Shadow_Spawn_Target_Locations;                // 0x14F8(0x0010)(Edit, BlueprintVisible, Net, DisableEditOnInstance, RepNotify)
	struct FRotator                               Rock_Spawn_Rotation;                               // 0x1508(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	double                                        Rock_Shadow_Preceding_Time;                        // 0x1520(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void Combat_Activated();
	void EventReceived_6C90E5EB497A422388A0E4B869E57359(const struct FGameplayEventData& Payload);
	void EventReceived_6CA911E64CA8655B6CAABEB9D6635DD4(const struct FGameplayEventData& Payload);
	void ExecuteUbergraph_BP_Cyclops_Common(int32 EntryPoint);
	void GameplayTagUpdated(const struct FGameplayTag& InGameplayTag, int32 InCount);
	void Get_Ceilling_Z(const struct FVector& Start, struct FVector* Out_Hit_Location);
	void Get_Center_Of_Rock_Spawn_Locations();
	void Get_Falling_Rock_Shadow_Spawn_Location(const struct FVector& Rock_Spawn_Location, struct FVector* Out_Hit_Impact_Point);
	void Get_Falling_Rock_Spawn_Location();
	void OnBeforeDeath();
	void OnFMsgGASAttributeNotifyBlueprint(const struct FMsgGASAttributeNotify& InMsg);
	void OnRep_Rock_Shadow_Spawn_Random_Locations();
	void OnRep_Rock_Shadow_Spawn_Target_Locations();
	void ReceiveBeginPlay();
	void Set_Variables();
	void Stop_Riot(float InputPin);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Cyclops_Common_C">();
	}
	static class ABP_Cyclops_Common_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_Cyclops_Common_C>();
	}
};
#pragma pack(pop)
static_assert(alignof(ABP_Cyclops_Common_C) == 0x000010, "Wrong alignment on ABP_Cyclops_Common_C");
static_assert(sizeof(ABP_Cyclops_Common_C) == 0x001530, "Wrong size on ABP_Cyclops_Common_C");
static_assert(offsetof(ABP_Cyclops_Common_C, UberGraphFrame_BP_Cyclops_Common_C) == 0x0013F8, "Member 'ABP_Cyclops_Common_C::UberGraphFrame_BP_Cyclops_Common_C' has a wrong offset!");
static_assert(offsetof(ABP_Cyclops_Common_C, BP_DCHitBox11) == 0x001400, "Member 'ABP_Cyclops_Common_C::BP_DCHitBox11' has a wrong offset!");
static_assert(offsetof(ABP_Cyclops_Common_C, BP_DCHitBox10) == 0x001408, "Member 'ABP_Cyclops_Common_C::BP_DCHitBox10' has a wrong offset!");
static_assert(offsetof(ABP_Cyclops_Common_C, BP_DCHitBox9) == 0x001410, "Member 'ABP_Cyclops_Common_C::BP_DCHitBox9' has a wrong offset!");
static_assert(offsetof(ABP_Cyclops_Common_C, BP_DCHitBox8) == 0x001418, "Member 'ABP_Cyclops_Common_C::BP_DCHitBox8' has a wrong offset!");
static_assert(offsetof(ABP_Cyclops_Common_C, BP_DCHitBox7) == 0x001420, "Member 'ABP_Cyclops_Common_C::BP_DCHitBox7' has a wrong offset!");
static_assert(offsetof(ABP_Cyclops_Common_C, BP_DCHitBox6) == 0x001428, "Member 'ABP_Cyclops_Common_C::BP_DCHitBox6' has a wrong offset!");
static_assert(offsetof(ABP_Cyclops_Common_C, BP_DCHitBox5) == 0x001430, "Member 'ABP_Cyclops_Common_C::BP_DCHitBox5' has a wrong offset!");
static_assert(offsetof(ABP_Cyclops_Common_C, BP_DCHitBox4) == 0x001438, "Member 'ABP_Cyclops_Common_C::BP_DCHitBox4' has a wrong offset!");
static_assert(offsetof(ABP_Cyclops_Common_C, BP_DCHitBox3) == 0x001440, "Member 'ABP_Cyclops_Common_C::BP_DCHitBox3' has a wrong offset!");
static_assert(offsetof(ABP_Cyclops_Common_C, BP_DCHitBox2) == 0x001448, "Member 'ABP_Cyclops_Common_C::BP_DCHitBox2' has a wrong offset!");
static_assert(offsetof(ABP_Cyclops_Common_C, BP_DCHitBox1) == 0x001450, "Member 'ABP_Cyclops_Common_C::BP_DCHitBox1' has a wrong offset!");
static_assert(offsetof(ABP_Cyclops_Common_C, BP_DCHitBox) == 0x001458, "Member 'ABP_Cyclops_Common_C::BP_DCHitBox' has a wrong offset!");
static_assert(offsetof(ABP_Cyclops_Common_C, Riot_Cancel_HP) == 0x001460, "Member 'ABP_Cyclops_Common_C::Riot_Cancel_HP' has a wrong offset!");
static_assert(offsetof(ABP_Cyclops_Common_C, Stomp_Timer) == 0x001468, "Member 'ABP_Cyclops_Common_C::Stomp_Timer' has a wrong offset!");
static_assert(offsetof(ABP_Cyclops_Common_C, Combo_Ratio) == 0x001470, "Member 'ABP_Cyclops_Common_C::Combo_Ratio' has a wrong offset!");
static_assert(offsetof(ABP_Cyclops_Common_C, Combo_Started) == 0x001478, "Member 'ABP_Cyclops_Common_C::Combo_Started' has a wrong offset!");
static_assert(offsetof(ABP_Cyclops_Common_C, Riot_Started) == 0x001479, "Member 'ABP_Cyclops_Common_C::Riot_Started' has a wrong offset!");
static_assert(offsetof(ABP_Cyclops_Common_C, Riot_Start_HP) == 0x001480, "Member 'ABP_Cyclops_Common_C::Riot_Start_HP' has a wrong offset!");
static_assert(offsetof(ABP_Cyclops_Common_C, Wait_Riot_Event) == 0x001488, "Member 'ABP_Cyclops_Common_C::Wait_Riot_Event' has a wrong offset!");
static_assert(offsetof(ABP_Cyclops_Common_C, CameraShake_Event) == 0x001490, "Member 'ABP_Cyclops_Common_C::CameraShake_Event' has a wrong offset!");
static_assert(offsetof(ABP_Cyclops_Common_C, Blackboard_HPRatio_Initial_Value) == 0x001498, "Member 'ABP_Cyclops_Common_C::Blackboard_HPRatio_Initial_Value' has a wrong offset!");
static_assert(offsetof(ABP_Cyclops_Common_C, Blackboard_HPRatio_Subtract_Value) == 0x0014A0, "Member 'ABP_Cyclops_Common_C::Blackboard_HPRatio_Subtract_Value' has a wrong offset!");
static_assert(offsetof(ABP_Cyclops_Common_C, Rock_Spawn_Count) == 0x0014A8, "Member 'ABP_Cyclops_Common_C::Rock_Spawn_Count' has a wrong offset!");
static_assert(offsetof(ABP_Cyclops_Common_C, Rock_Spawn_Adding_Height) == 0x0014B0, "Member 'ABP_Cyclops_Common_C::Rock_Spawn_Adding_Height' has a wrong offset!");
static_assert(offsetof(ABP_Cyclops_Common_C, Center_Of_Rock_Spawn_Locations) == 0x0014B8, "Member 'ABP_Cyclops_Common_C::Center_Of_Rock_Spawn_Locations' has a wrong offset!");
static_assert(offsetof(ABP_Cyclops_Common_C, Rock_Spawn_Random_Locations) == 0x0014C8, "Member 'ABP_Cyclops_Common_C::Rock_Spawn_Random_Locations' has a wrong offset!");
static_assert(offsetof(ABP_Cyclops_Common_C, Rock_Shadow_Spawn_Random_Locations) == 0x0014D8, "Member 'ABP_Cyclops_Common_C::Rock_Shadow_Spawn_Random_Locations' has a wrong offset!");
static_assert(offsetof(ABP_Cyclops_Common_C, Rock_Spawn_Target_Locations) == 0x0014E8, "Member 'ABP_Cyclops_Common_C::Rock_Spawn_Target_Locations' has a wrong offset!");
static_assert(offsetof(ABP_Cyclops_Common_C, Rock_Shadow_Spawn_Target_Locations) == 0x0014F8, "Member 'ABP_Cyclops_Common_C::Rock_Shadow_Spawn_Target_Locations' has a wrong offset!");
static_assert(offsetof(ABP_Cyclops_Common_C, Rock_Spawn_Rotation) == 0x001508, "Member 'ABP_Cyclops_Common_C::Rock_Spawn_Rotation' has a wrong offset!");
static_assert(offsetof(ABP_Cyclops_Common_C, Rock_Shadow_Preceding_Time) == 0x001520, "Member 'ABP_Cyclops_Common_C::Rock_Shadow_Preceding_Time' has a wrong offset!");

}

