#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_IceFloorBase

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "BP_PropsActorBase_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_IceFloorBase.BP_IceFloorBase_C
// 0x0040 (0x04F8 - 0x04B8)
class ABP_IceFloorBase_C : public ABP_PropsActorBase_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_IceFloorBase_C;                  // 0x04B8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UDCGeometryCollectionComponent*         DCGeometryCollection_Default;                      // 0x04C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   CollisioinMesh;                                    // 0x04C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   StaticMesh;                                        // 0x04D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         OverlapCharacters;                                 // 0x04D8(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	double                                        DestroyCount;                                      // 0x04E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        DestroySignCount;                                  // 0x04F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void BndEvt__BP_IceFloor_01_StaticMesh1_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void BndEvt__BP_IceFloor_01_StaticMesh1_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void ExecuteUbergraph_BP_IceFloorBase(int32 EntryPoint);
	void GameplayTagUpdated(const struct FGameplayTag& InGameplayTag, int32 InCount);
	void OnFloorCracking();
	void ReceiveBeginPlay();
	void ReceiveTick(float DeltaSeconds);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_IceFloorBase_C">();
	}
	static class ABP_IceFloorBase_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_IceFloorBase_C>();
	}
};
static_assert(alignof(ABP_IceFloorBase_C) == 0x000008, "Wrong alignment on ABP_IceFloorBase_C");
static_assert(sizeof(ABP_IceFloorBase_C) == 0x0004F8, "Wrong size on ABP_IceFloorBase_C");
static_assert(offsetof(ABP_IceFloorBase_C, UberGraphFrame_BP_IceFloorBase_C) == 0x0004B8, "Member 'ABP_IceFloorBase_C::UberGraphFrame_BP_IceFloorBase_C' has a wrong offset!");
static_assert(offsetof(ABP_IceFloorBase_C, DCGeometryCollection_Default) == 0x0004C0, "Member 'ABP_IceFloorBase_C::DCGeometryCollection_Default' has a wrong offset!");
static_assert(offsetof(ABP_IceFloorBase_C, CollisioinMesh) == 0x0004C8, "Member 'ABP_IceFloorBase_C::CollisioinMesh' has a wrong offset!");
static_assert(offsetof(ABP_IceFloorBase_C, StaticMesh) == 0x0004D0, "Member 'ABP_IceFloorBase_C::StaticMesh' has a wrong offset!");
static_assert(offsetof(ABP_IceFloorBase_C, OverlapCharacters) == 0x0004D8, "Member 'ABP_IceFloorBase_C::OverlapCharacters' has a wrong offset!");
static_assert(offsetof(ABP_IceFloorBase_C, DestroyCount) == 0x0004E8, "Member 'ABP_IceFloorBase_C::DestroyCount' has a wrong offset!");
static_assert(offsetof(ABP_IceFloorBase_C, DestroySignCount) == 0x0004F0, "Member 'ABP_IceFloorBase_C::DestroySignCount' has a wrong offset!");

}

