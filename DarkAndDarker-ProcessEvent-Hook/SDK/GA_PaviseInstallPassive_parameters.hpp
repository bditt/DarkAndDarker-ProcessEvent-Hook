#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_PaviseInstallPassive

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "GameplayAbilities_structs.hpp"


namespace SDK::Params
{

// Function GA_PaviseInstallPassive.GA_PaviseInstallPassive_C.BroadcastSystemMessage
// 0x0048 (0x0048 - 0x0000)
struct GA_PaviseInstallPassive_C_BroadcastSystemMessage final
{
public:
	class FText                                   SystemMessage;                                     // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	class AActor*                                 CallFunc_GetAvatarActorFromActorInfo_ReturnValue;  // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_PlayerCharacter_C*                  K2Node_DynamicCast_AsBP_Player_Character;          // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7[0x7];                                        // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      K2Node_DynamicCast_As_________;                    // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_PaviseInstallPassive_C_BroadcastSystemMessage) == 0x000008, "Wrong alignment on GA_PaviseInstallPassive_C_BroadcastSystemMessage");
static_assert(sizeof(GA_PaviseInstallPassive_C_BroadcastSystemMessage) == 0x000048, "Wrong size on GA_PaviseInstallPassive_C_BroadcastSystemMessage");
static_assert(offsetof(GA_PaviseInstallPassive_C_BroadcastSystemMessage, SystemMessage) == 0x000000, "Member 'GA_PaviseInstallPassive_C_BroadcastSystemMessage::SystemMessage' has a wrong offset!");
static_assert(offsetof(GA_PaviseInstallPassive_C_BroadcastSystemMessage, CallFunc_GetAvatarActorFromActorInfo_ReturnValue) == 0x000018, "Member 'GA_PaviseInstallPassive_C_BroadcastSystemMessage::CallFunc_GetAvatarActorFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_PaviseInstallPassive_C_BroadcastSystemMessage, K2Node_DynamicCast_AsBP_Player_Character) == 0x000020, "Member 'GA_PaviseInstallPassive_C_BroadcastSystemMessage::K2Node_DynamicCast_AsBP_Player_Character' has a wrong offset!");
static_assert(offsetof(GA_PaviseInstallPassive_C_BroadcastSystemMessage, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'GA_PaviseInstallPassive_C_BroadcastSystemMessage::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GA_PaviseInstallPassive_C_BroadcastSystemMessage, CallFunc_GetController_ReturnValue) == 0x000030, "Member 'GA_PaviseInstallPassive_C_BroadcastSystemMessage::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_PaviseInstallPassive_C_BroadcastSystemMessage, K2Node_DynamicCast_As_________) == 0x000038, "Member 'GA_PaviseInstallPassive_C_BroadcastSystemMessage::K2Node_DynamicCast_As_________' has a wrong offset!");
static_assert(offsetof(GA_PaviseInstallPassive_C_BroadcastSystemMessage, K2Node_DynamicCast_bSuccess_1) == 0x000040, "Member 'GA_PaviseInstallPassive_C_BroadcastSystemMessage::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

// Function GA_PaviseInstallPassive.GA_PaviseInstallPassive_C.CheckGround
// 0x0548 (0x0548 - 0x0000)
struct GA_PaviseInstallPassive_C_CheckGround final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                GroundHalfSize;                                    // 0x0008(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ForwardHalfSize;                                   // 0x0020(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetAvatarActorFromActorInfo_ReturnValue;  // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x0040(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0058(0x0010)(ConstParm, ReferenceParm)
	class AActor*                                 CallFunc_GetAvatarActorFromActorInfo_ReturnValue_1; // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue_1;        // 0x0070(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<class AActor*>                         Temp_object_Variable_1;                            // 0x0088(0x0010)(ConstParm, ReferenceParm)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue;          // 0x0098(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetAvatarActorFromActorInfo_ReturnValue_2; // 0x00B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue_1;        // 0x00B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorUpVector_ReturnValue;             // 0x00D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x00E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x0100(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_1;      // 0x0118(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0130(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0148(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x0160(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_BoxTraceSingle_OutHit;                    // 0x0178(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_BoxTraceSingle_ReturnValue;               // 0x0260(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0261(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_2;           // 0x0268(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0280(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0281(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A[0x2];                                        // 0x0282(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0284(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0288(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B[0x4];                                        // 0x028C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0290(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x02A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x02C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x02D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x02F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x02F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0300(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0308(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x0310(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0318(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x031C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0320(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x0324(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0328(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0340(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_BoxTraceSingle_OutHit_1;                  // 0x0358(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_BoxTraceSingle_ReturnValue_1;             // 0x0440(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0441(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit_1;            // 0x0442(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap_1;         // 0x0443(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Time_1;                    // 0x0444(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance_1;                // 0x0448(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D[0x4];                                        // 0x044C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location_1;                // 0x0450(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint_1;             // 0x0468(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal_1;                  // 0x0480(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal_1;            // 0x0498(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat_1;                 // 0x04B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor_1;                // 0x04B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent_1;            // 0x04C0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName_1;             // 0x04C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName_1;                // 0x04D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem_1;                 // 0x04D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex_1;            // 0x04DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex_1;               // 0x04E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E[0x4];                                        // 0x04E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart_1;              // 0x04E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd_1;                // 0x0500(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PaviseProp_C*                       K2Node_DynamicCast_AsBP_Pavise_Prop;               // 0x0518(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0520(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F[0x7];                                        // 0x0521(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_LightSourceBase_C*                  K2Node_DynamicCast_AsBP_Light_Source_Base;         // 0x0528(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0530(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0531(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10[0x6];                                       // 0x0532(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_StaticMeshItemHolder_C*             K2Node_DynamicCast_AsBP_Static_Mesh_Item_Holder;   // 0x0538(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0540(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_PaviseInstallPassive_C_CheckGround) == 0x000008, "Wrong alignment on GA_PaviseInstallPassive_C_CheckGround");
static_assert(sizeof(GA_PaviseInstallPassive_C_CheckGround) == 0x000548, "Wrong size on GA_PaviseInstallPassive_C_CheckGround");
static_assert(offsetof(GA_PaviseInstallPassive_C_CheckGround, Result) == 0x000000, "Member 'GA_PaviseInstallPassive_C_CheckGround::Result' has a wrong offset!");
static_assert(offsetof(GA_PaviseInstallPassive_C_CheckGround, GroundHalfSize) == 0x000008, "Member 'GA_PaviseInstallPassive_C_CheckGround::GroundHalfSize' has a wrong offset!");
static_assert(offsetof(GA_PaviseInstallPassive_C_CheckGround, ForwardHalfSize) == 0x000020, "Member 'GA_PaviseInstallPassive_C_CheckGround::ForwardHalfSize' has a wrong offset!");
static_assert(offsetof(GA_PaviseInstallPassive_C_CheckGround, CallFunc_GetAvatarActorFromActorInfo_ReturnValue) == 0x000038, "Member 'GA_PaviseInstallPassive_C_CheckGround::CallFunc_GetAvatarActorFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_PaviseInstallPassive_C_CheckGround, CallFunc_K2_GetActorRotation_ReturnValue) == 0x000040, "Member 'GA_PaviseInstallPassive_C_CheckGround::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_PaviseInstallPassive_C_CheckGround, Temp_object_Variable) == 0x000058, "Member 'GA_PaviseInstallPassive_C_CheckGround::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(GA_PaviseInstallPassive_C_CheckGround, CallFunc_GetAvatarActorFromActorInfo_ReturnValue_1) == 0x000068, "Member 'GA_PaviseInstallPassive_C_CheckGround::CallFunc_GetAvatarActorFromActorInfo_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_PaviseInstallPassive_C_CheckGround, CallFunc_K2_GetActorRotation_ReturnValue_1) == 0x000070, "Member 'GA_PaviseInstallPassive_C_CheckGround::CallFunc_K2_GetActorRotation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_PaviseInstallPassive_C_CheckGround, Temp_object_Variable_1) == 0x000088, "Member 'GA_PaviseInstallPassive_C_CheckGround::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(GA_PaviseInstallPassive_C_CheckGround, CallFunc_Conv_DoubleToVector_ReturnValue) == 0x000098, "Member 'GA_PaviseInstallPassive_C_CheckGround::CallFunc_Conv_DoubleToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_PaviseInstallPassive_C_CheckGround, CallFunc_GetAvatarActorFromActorInfo_ReturnValue_2) == 0x0000B0, "Member 'GA_PaviseInstallPassive_C_CheckGround::CallFunc_GetAvatarActorFromActorInfo_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GA_PaviseInstallPassive_C_CheckGround, CallFunc_Conv_DoubleToVector_ReturnValue_1) == 0x0000B8, "Member 'GA_PaviseInstallPassive_C_CheckGround::CallFunc_Conv_DoubleToVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_PaviseInstallPassive_C_CheckGround, CallFunc_GetActorUpVector_ReturnValue) == 0x0000D0, "Member 'GA_PaviseInstallPassive_C_CheckGround::CallFunc_GetActorUpVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_PaviseInstallPassive_C_CheckGround, CallFunc_GetActorForwardVector_ReturnValue) == 0x0000E8, "Member 'GA_PaviseInstallPassive_C_CheckGround::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_PaviseInstallPassive_C_CheckGround, CallFunc_Multiply_VectorVector_ReturnValue) == 0x000100, "Member 'GA_PaviseInstallPassive_C_CheckGround::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_PaviseInstallPassive_C_CheckGround, CallFunc_Multiply_VectorVector_ReturnValue_1) == 0x000118, "Member 'GA_PaviseInstallPassive_C_CheckGround::CallFunc_Multiply_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_PaviseInstallPassive_C_CheckGround, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000130, "Member 'GA_PaviseInstallPassive_C_CheckGround::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_PaviseInstallPassive_C_CheckGround, CallFunc_Add_VectorVector_ReturnValue) == 0x000148, "Member 'GA_PaviseInstallPassive_C_CheckGround::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_PaviseInstallPassive_C_CheckGround, CallFunc_Add_VectorVector_ReturnValue_1) == 0x000160, "Member 'GA_PaviseInstallPassive_C_CheckGround::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_PaviseInstallPassive_C_CheckGround, CallFunc_BoxTraceSingle_OutHit) == 0x000178, "Member 'GA_PaviseInstallPassive_C_CheckGround::CallFunc_BoxTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(GA_PaviseInstallPassive_C_CheckGround, CallFunc_BoxTraceSingle_ReturnValue) == 0x000260, "Member 'GA_PaviseInstallPassive_C_CheckGround::CallFunc_BoxTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_PaviseInstallPassive_C_CheckGround, CallFunc_Add_VectorVector_ReturnValue_2) == 0x000268, "Member 'GA_PaviseInstallPassive_C_CheckGround::CallFunc_Add_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GA_PaviseInstallPassive_C_CheckGround, CallFunc_BreakHitResult_bBlockingHit) == 0x000280, "Member 'GA_PaviseInstallPassive_C_CheckGround::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(GA_PaviseInstallPassive_C_CheckGround, CallFunc_BreakHitResult_bInitialOverlap) == 0x000281, "Member 'GA_PaviseInstallPassive_C_CheckGround::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(GA_PaviseInstallPassive_C_CheckGround, CallFunc_BreakHitResult_Time) == 0x000284, "Member 'GA_PaviseInstallPassive_C_CheckGround::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(GA_PaviseInstallPassive_C_CheckGround, CallFunc_BreakHitResult_Distance) == 0x000288, "Member 'GA_PaviseInstallPassive_C_CheckGround::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(GA_PaviseInstallPassive_C_CheckGround, CallFunc_BreakHitResult_Location) == 0x000290, "Member 'GA_PaviseInstallPassive_C_CheckGround::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(GA_PaviseInstallPassive_C_CheckGround, CallFunc_BreakHitResult_ImpactPoint) == 0x0002A8, "Member 'GA_PaviseInstallPassive_C_CheckGround::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(GA_PaviseInstallPassive_C_CheckGround, CallFunc_BreakHitResult_Normal) == 0x0002C0, "Member 'GA_PaviseInstallPassive_C_CheckGround::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(GA_PaviseInstallPassive_C_CheckGround, CallFunc_BreakHitResult_ImpactNormal) == 0x0002D8, "Member 'GA_PaviseInstallPassive_C_CheckGround::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(GA_PaviseInstallPassive_C_CheckGround, CallFunc_BreakHitResult_PhysMat) == 0x0002F0, "Member 'GA_PaviseInstallPassive_C_CheckGround::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(GA_PaviseInstallPassive_C_CheckGround, CallFunc_BreakHitResult_HitActor) == 0x0002F8, "Member 'GA_PaviseInstallPassive_C_CheckGround::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(GA_PaviseInstallPassive_C_CheckGround, CallFunc_BreakHitResult_HitComponent) == 0x000300, "Member 'GA_PaviseInstallPassive_C_CheckGround::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(GA_PaviseInstallPassive_C_CheckGround, CallFunc_BreakHitResult_HitBoneName) == 0x000308, "Member 'GA_PaviseInstallPassive_C_CheckGround::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(GA_PaviseInstallPassive_C_CheckGround, CallFunc_BreakHitResult_BoneName) == 0x000310, "Member 'GA_PaviseInstallPassive_C_CheckGround::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(GA_PaviseInstallPassive_C_CheckGround, CallFunc_BreakHitResult_HitItem) == 0x000318, "Member 'GA_PaviseInstallPassive_C_CheckGround::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(GA_PaviseInstallPassive_C_CheckGround, CallFunc_BreakHitResult_ElementIndex) == 0x00031C, "Member 'GA_PaviseInstallPassive_C_CheckGround::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(GA_PaviseInstallPassive_C_CheckGround, CallFunc_BreakHitResult_FaceIndex) == 0x000320, "Member 'GA_PaviseInstallPassive_C_CheckGround::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(GA_PaviseInstallPassive_C_CheckGround, CallFunc_BreakHitResult_TraceStart) == 0x000328, "Member 'GA_PaviseInstallPassive_C_CheckGround::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(GA_PaviseInstallPassive_C_CheckGround, CallFunc_BreakHitResult_TraceEnd) == 0x000340, "Member 'GA_PaviseInstallPassive_C_CheckGround::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(GA_PaviseInstallPassive_C_CheckGround, CallFunc_BoxTraceSingle_OutHit_1) == 0x000358, "Member 'GA_PaviseInstallPassive_C_CheckGround::CallFunc_BoxTraceSingle_OutHit_1' has a wrong offset!");
static_assert(offsetof(GA_PaviseInstallPassive_C_CheckGround, CallFunc_BoxTraceSingle_ReturnValue_1) == 0x000440, "Member 'GA_PaviseInstallPassive_C_CheckGround::CallFunc_BoxTraceSingle_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_PaviseInstallPassive_C_CheckGround, CallFunc_IsValid_ReturnValue) == 0x000441, "Member 'GA_PaviseInstallPassive_C_CheckGround::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_PaviseInstallPassive_C_CheckGround, CallFunc_BreakHitResult_bBlockingHit_1) == 0x000442, "Member 'GA_PaviseInstallPassive_C_CheckGround::CallFunc_BreakHitResult_bBlockingHit_1' has a wrong offset!");
static_assert(offsetof(GA_PaviseInstallPassive_C_CheckGround, CallFunc_BreakHitResult_bInitialOverlap_1) == 0x000443, "Member 'GA_PaviseInstallPassive_C_CheckGround::CallFunc_BreakHitResult_bInitialOverlap_1' has a wrong offset!");
static_assert(offsetof(GA_PaviseInstallPassive_C_CheckGround, CallFunc_BreakHitResult_Time_1) == 0x000444, "Member 'GA_PaviseInstallPassive_C_CheckGround::CallFunc_BreakHitResult_Time_1' has a wrong offset!");
static_assert(offsetof(GA_PaviseInstallPassive_C_CheckGround, CallFunc_BreakHitResult_Distance_1) == 0x000448, "Member 'GA_PaviseInstallPassive_C_CheckGround::CallFunc_BreakHitResult_Distance_1' has a wrong offset!");
static_assert(offsetof(GA_PaviseInstallPassive_C_CheckGround, CallFunc_BreakHitResult_Location_1) == 0x000450, "Member 'GA_PaviseInstallPassive_C_CheckGround::CallFunc_BreakHitResult_Location_1' has a wrong offset!");
static_assert(offsetof(GA_PaviseInstallPassive_C_CheckGround, CallFunc_BreakHitResult_ImpactPoint_1) == 0x000468, "Member 'GA_PaviseInstallPassive_C_CheckGround::CallFunc_BreakHitResult_ImpactPoint_1' has a wrong offset!");
static_assert(offsetof(GA_PaviseInstallPassive_C_CheckGround, CallFunc_BreakHitResult_Normal_1) == 0x000480, "Member 'GA_PaviseInstallPassive_C_CheckGround::CallFunc_BreakHitResult_Normal_1' has a wrong offset!");
static_assert(offsetof(GA_PaviseInstallPassive_C_CheckGround, CallFunc_BreakHitResult_ImpactNormal_1) == 0x000498, "Member 'GA_PaviseInstallPassive_C_CheckGround::CallFunc_BreakHitResult_ImpactNormal_1' has a wrong offset!");
static_assert(offsetof(GA_PaviseInstallPassive_C_CheckGround, CallFunc_BreakHitResult_PhysMat_1) == 0x0004B0, "Member 'GA_PaviseInstallPassive_C_CheckGround::CallFunc_BreakHitResult_PhysMat_1' has a wrong offset!");
static_assert(offsetof(GA_PaviseInstallPassive_C_CheckGround, CallFunc_BreakHitResult_HitActor_1) == 0x0004B8, "Member 'GA_PaviseInstallPassive_C_CheckGround::CallFunc_BreakHitResult_HitActor_1' has a wrong offset!");
static_assert(offsetof(GA_PaviseInstallPassive_C_CheckGround, CallFunc_BreakHitResult_HitComponent_1) == 0x0004C0, "Member 'GA_PaviseInstallPassive_C_CheckGround::CallFunc_BreakHitResult_HitComponent_1' has a wrong offset!");
static_assert(offsetof(GA_PaviseInstallPassive_C_CheckGround, CallFunc_BreakHitResult_HitBoneName_1) == 0x0004C8, "Member 'GA_PaviseInstallPassive_C_CheckGround::CallFunc_BreakHitResult_HitBoneName_1' has a wrong offset!");
static_assert(offsetof(GA_PaviseInstallPassive_C_CheckGround, CallFunc_BreakHitResult_BoneName_1) == 0x0004D0, "Member 'GA_PaviseInstallPassive_C_CheckGround::CallFunc_BreakHitResult_BoneName_1' has a wrong offset!");
static_assert(offsetof(GA_PaviseInstallPassive_C_CheckGround, CallFunc_BreakHitResult_HitItem_1) == 0x0004D8, "Member 'GA_PaviseInstallPassive_C_CheckGround::CallFunc_BreakHitResult_HitItem_1' has a wrong offset!");
static_assert(offsetof(GA_PaviseInstallPassive_C_CheckGround, CallFunc_BreakHitResult_ElementIndex_1) == 0x0004DC, "Member 'GA_PaviseInstallPassive_C_CheckGround::CallFunc_BreakHitResult_ElementIndex_1' has a wrong offset!");
static_assert(offsetof(GA_PaviseInstallPassive_C_CheckGround, CallFunc_BreakHitResult_FaceIndex_1) == 0x0004E0, "Member 'GA_PaviseInstallPassive_C_CheckGround::CallFunc_BreakHitResult_FaceIndex_1' has a wrong offset!");
static_assert(offsetof(GA_PaviseInstallPassive_C_CheckGround, CallFunc_BreakHitResult_TraceStart_1) == 0x0004E8, "Member 'GA_PaviseInstallPassive_C_CheckGround::CallFunc_BreakHitResult_TraceStart_1' has a wrong offset!");
static_assert(offsetof(GA_PaviseInstallPassive_C_CheckGround, CallFunc_BreakHitResult_TraceEnd_1) == 0x000500, "Member 'GA_PaviseInstallPassive_C_CheckGround::CallFunc_BreakHitResult_TraceEnd_1' has a wrong offset!");
static_assert(offsetof(GA_PaviseInstallPassive_C_CheckGround, K2Node_DynamicCast_AsBP_Pavise_Prop) == 0x000518, "Member 'GA_PaviseInstallPassive_C_CheckGround::K2Node_DynamicCast_AsBP_Pavise_Prop' has a wrong offset!");
static_assert(offsetof(GA_PaviseInstallPassive_C_CheckGround, K2Node_DynamicCast_bSuccess) == 0x000520, "Member 'GA_PaviseInstallPassive_C_CheckGround::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GA_PaviseInstallPassive_C_CheckGround, K2Node_DynamicCast_AsBP_Light_Source_Base) == 0x000528, "Member 'GA_PaviseInstallPassive_C_CheckGround::K2Node_DynamicCast_AsBP_Light_Source_Base' has a wrong offset!");
static_assert(offsetof(GA_PaviseInstallPassive_C_CheckGround, K2Node_DynamicCast_bSuccess_1) == 0x000530, "Member 'GA_PaviseInstallPassive_C_CheckGround::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(GA_PaviseInstallPassive_C_CheckGround, CallFunc_IsValid_ReturnValue_1) == 0x000531, "Member 'GA_PaviseInstallPassive_C_CheckGround::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_PaviseInstallPassive_C_CheckGround, K2Node_DynamicCast_AsBP_Static_Mesh_Item_Holder) == 0x000538, "Member 'GA_PaviseInstallPassive_C_CheckGround::K2Node_DynamicCast_AsBP_Static_Mesh_Item_Holder' has a wrong offset!");
static_assert(offsetof(GA_PaviseInstallPassive_C_CheckGround, K2Node_DynamicCast_bSuccess_2) == 0x000540, "Member 'GA_PaviseInstallPassive_C_CheckGround::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");

// Function GA_PaviseInstallPassive.GA_PaviseInstallPassive_C.EventReceived_78022699479DE1103E04748305A25585
// 0x00B8 (0x00B8 - 0x0000)
struct GA_PaviseInstallPassive_C_EventReceived_78022699479DE1103E04748305A25585 final
{
public:
	struct FGameplayTag                           EventTag;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEventData                     EventData;                                         // 0x0008(0x00B0)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(GA_PaviseInstallPassive_C_EventReceived_78022699479DE1103E04748305A25585) == 0x000008, "Wrong alignment on GA_PaviseInstallPassive_C_EventReceived_78022699479DE1103E04748305A25585");
static_assert(sizeof(GA_PaviseInstallPassive_C_EventReceived_78022699479DE1103E04748305A25585) == 0x0000B8, "Wrong size on GA_PaviseInstallPassive_C_EventReceived_78022699479DE1103E04748305A25585");
static_assert(offsetof(GA_PaviseInstallPassive_C_EventReceived_78022699479DE1103E04748305A25585, EventTag) == 0x000000, "Member 'GA_PaviseInstallPassive_C_EventReceived_78022699479DE1103E04748305A25585::EventTag' has a wrong offset!");
static_assert(offsetof(GA_PaviseInstallPassive_C_EventReceived_78022699479DE1103E04748305A25585, EventData) == 0x000008, "Member 'GA_PaviseInstallPassive_C_EventReceived_78022699479DE1103E04748305A25585::EventData' has a wrong offset!");

// Function GA_PaviseInstallPassive.GA_PaviseInstallPassive_C.ExecuteUbergraph_GA_PaviseInstallPassive
// 0x0218 (0x0218 - 0x0000)
struct GA_PaviseInstallPassive_C_ExecuteUbergraph_GA_PaviseInstallPassive final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckGround_Result;                       // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(const struct FGameplayTag& EventTag, const struct FGameplayEventData& EventData)> K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_CustomEvent_EventTag;                       // 0x0018(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayEventData                     K2Node_CustomEvent_EventData;                      // 0x0020(0x00B0)()
	struct FGameplayEventData                     Temp_struct_Variable;                              // 0x00D0(0x00B0)()
	struct FGameplayTag                           Temp_struct_Variable_1;                            // 0x0180(0x0008)(NoDestructor, HasGetValueTypeHash)
	class UDCAT_WaitForGameplayEvents*            CallFunc_WaitForGameplayEvents_ReturnValue;        // 0x0188(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0191(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_CommitAbility_ReturnValue;             // 0x0192(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12[0x5];                                       // 0x0193(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetAvatarActorFromActorInfo_ReturnValue;  // 0x0198(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAbilitySystemComponent*                CallFunc_GetAbilitySystemComponentFromActorInfo_ReturnValue; // 0x01A0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IGameplayTagAssetInterface> K2Node_DynamicCast_As_________________;            // 0x01A8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x01B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13[0x7];                                       // 0x01B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetAvatarActorFromActorInfo_ReturnValue_1; // 0x01C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetVelocity_ReturnValue;                  // 0x01C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_VSizeSquared_ReturnValue;                 // 0x01E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x01E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x7];                                       // 0x01E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  CallFunc_MakeLiteralGameplayTagContainer_ReturnValue; // 0x01F0(0x0020)()
	bool                                          CallFunc_HasAnyMatchingGameplayTags_ReturnValue;   // 0x0210(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_PaviseInstallPassive_C_ExecuteUbergraph_GA_PaviseInstallPassive) == 0x000008, "Wrong alignment on GA_PaviseInstallPassive_C_ExecuteUbergraph_GA_PaviseInstallPassive");
static_assert(sizeof(GA_PaviseInstallPassive_C_ExecuteUbergraph_GA_PaviseInstallPassive) == 0x000218, "Wrong size on GA_PaviseInstallPassive_C_ExecuteUbergraph_GA_PaviseInstallPassive");
static_assert(offsetof(GA_PaviseInstallPassive_C_ExecuteUbergraph_GA_PaviseInstallPassive, EntryPoint) == 0x000000, "Member 'GA_PaviseInstallPassive_C_ExecuteUbergraph_GA_PaviseInstallPassive::EntryPoint' has a wrong offset!");
static_assert(offsetof(GA_PaviseInstallPassive_C_ExecuteUbergraph_GA_PaviseInstallPassive, CallFunc_CheckGround_Result) == 0x000004, "Member 'GA_PaviseInstallPassive_C_ExecuteUbergraph_GA_PaviseInstallPassive::CallFunc_CheckGround_Result' has a wrong offset!");
static_assert(offsetof(GA_PaviseInstallPassive_C_ExecuteUbergraph_GA_PaviseInstallPassive, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'GA_PaviseInstallPassive_C_ExecuteUbergraph_GA_PaviseInstallPassive::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(GA_PaviseInstallPassive_C_ExecuteUbergraph_GA_PaviseInstallPassive, K2Node_CustomEvent_EventTag) == 0x000018, "Member 'GA_PaviseInstallPassive_C_ExecuteUbergraph_GA_PaviseInstallPassive::K2Node_CustomEvent_EventTag' has a wrong offset!");
static_assert(offsetof(GA_PaviseInstallPassive_C_ExecuteUbergraph_GA_PaviseInstallPassive, K2Node_CustomEvent_EventData) == 0x000020, "Member 'GA_PaviseInstallPassive_C_ExecuteUbergraph_GA_PaviseInstallPassive::K2Node_CustomEvent_EventData' has a wrong offset!");
static_assert(offsetof(GA_PaviseInstallPassive_C_ExecuteUbergraph_GA_PaviseInstallPassive, Temp_struct_Variable) == 0x0000D0, "Member 'GA_PaviseInstallPassive_C_ExecuteUbergraph_GA_PaviseInstallPassive::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(GA_PaviseInstallPassive_C_ExecuteUbergraph_GA_PaviseInstallPassive, Temp_struct_Variable_1) == 0x000180, "Member 'GA_PaviseInstallPassive_C_ExecuteUbergraph_GA_PaviseInstallPassive::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(GA_PaviseInstallPassive_C_ExecuteUbergraph_GA_PaviseInstallPassive, CallFunc_WaitForGameplayEvents_ReturnValue) == 0x000188, "Member 'GA_PaviseInstallPassive_C_ExecuteUbergraph_GA_PaviseInstallPassive::CallFunc_WaitForGameplayEvents_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_PaviseInstallPassive_C_ExecuteUbergraph_GA_PaviseInstallPassive, Temp_bool_Variable) == 0x000190, "Member 'GA_PaviseInstallPassive_C_ExecuteUbergraph_GA_PaviseInstallPassive::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(GA_PaviseInstallPassive_C_ExecuteUbergraph_GA_PaviseInstallPassive, CallFunc_IsValid_ReturnValue) == 0x000191, "Member 'GA_PaviseInstallPassive_C_ExecuteUbergraph_GA_PaviseInstallPassive::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_PaviseInstallPassive_C_ExecuteUbergraph_GA_PaviseInstallPassive, CallFunc_K2_CommitAbility_ReturnValue) == 0x000192, "Member 'GA_PaviseInstallPassive_C_ExecuteUbergraph_GA_PaviseInstallPassive::CallFunc_K2_CommitAbility_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_PaviseInstallPassive_C_ExecuteUbergraph_GA_PaviseInstallPassive, CallFunc_GetAvatarActorFromActorInfo_ReturnValue) == 0x000198, "Member 'GA_PaviseInstallPassive_C_ExecuteUbergraph_GA_PaviseInstallPassive::CallFunc_GetAvatarActorFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_PaviseInstallPassive_C_ExecuteUbergraph_GA_PaviseInstallPassive, CallFunc_GetAbilitySystemComponentFromActorInfo_ReturnValue) == 0x0001A0, "Member 'GA_PaviseInstallPassive_C_ExecuteUbergraph_GA_PaviseInstallPassive::CallFunc_GetAbilitySystemComponentFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_PaviseInstallPassive_C_ExecuteUbergraph_GA_PaviseInstallPassive, K2Node_DynamicCast_As_________________) == 0x0001A8, "Member 'GA_PaviseInstallPassive_C_ExecuteUbergraph_GA_PaviseInstallPassive::K2Node_DynamicCast_As_________________' has a wrong offset!");
static_assert(offsetof(GA_PaviseInstallPassive_C_ExecuteUbergraph_GA_PaviseInstallPassive, K2Node_DynamicCast_bSuccess) == 0x0001B8, "Member 'GA_PaviseInstallPassive_C_ExecuteUbergraph_GA_PaviseInstallPassive::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GA_PaviseInstallPassive_C_ExecuteUbergraph_GA_PaviseInstallPassive, CallFunc_GetAvatarActorFromActorInfo_ReturnValue_1) == 0x0001C0, "Member 'GA_PaviseInstallPassive_C_ExecuteUbergraph_GA_PaviseInstallPassive::CallFunc_GetAvatarActorFromActorInfo_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_PaviseInstallPassive_C_ExecuteUbergraph_GA_PaviseInstallPassive, CallFunc_GetVelocity_ReturnValue) == 0x0001C8, "Member 'GA_PaviseInstallPassive_C_ExecuteUbergraph_GA_PaviseInstallPassive::CallFunc_GetVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_PaviseInstallPassive_C_ExecuteUbergraph_GA_PaviseInstallPassive, CallFunc_VSizeSquared_ReturnValue) == 0x0001E0, "Member 'GA_PaviseInstallPassive_C_ExecuteUbergraph_GA_PaviseInstallPassive::CallFunc_VSizeSquared_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_PaviseInstallPassive_C_ExecuteUbergraph_GA_PaviseInstallPassive, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x0001E8, "Member 'GA_PaviseInstallPassive_C_ExecuteUbergraph_GA_PaviseInstallPassive::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_PaviseInstallPassive_C_ExecuteUbergraph_GA_PaviseInstallPassive, CallFunc_MakeLiteralGameplayTagContainer_ReturnValue) == 0x0001F0, "Member 'GA_PaviseInstallPassive_C_ExecuteUbergraph_GA_PaviseInstallPassive::CallFunc_MakeLiteralGameplayTagContainer_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_PaviseInstallPassive_C_ExecuteUbergraph_GA_PaviseInstallPassive, CallFunc_HasAnyMatchingGameplayTags_ReturnValue) == 0x000210, "Member 'GA_PaviseInstallPassive_C_ExecuteUbergraph_GA_PaviseInstallPassive::CallFunc_HasAnyMatchingGameplayTags_ReturnValue' has a wrong offset!");

}

