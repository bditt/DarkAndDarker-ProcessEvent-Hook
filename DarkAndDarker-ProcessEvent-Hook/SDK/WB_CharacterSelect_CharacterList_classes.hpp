#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_CharacterSelect_CharacterList

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "DungeonCrawler_classes.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WB_CharacterSelect_CharacterList.WB_CharacterSelect_CharacterList_C
// 0x0048 (0x03D0 - 0x0388)
class UWB_CharacterSelect_CharacterList_C final : public UCharacterSelectCharListWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0388(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UTextBlock*                             CurrentPage;                                       // 0x0390(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         HBox_ListPagePrevNext;                             // 0x0398(0x0008)(ExportObject, ZeroConstructor, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         HorizontalBox_0;                                   // 0x03A0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             MaxPage;                                           // 0x03A8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_CommonBtn_M_C*                      WB_Btn_CreateCharacter;                            // 0x03B0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_CommonBtn_S_C*                      WB_Btn_DeleteCharacter;                            // 0x03B8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_CommonBtn_Arrow_C*                  WB_CommonBtn_Arrow_L;                              // 0x03C0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_CommonBtn_Arrow_C*                  WB_CommonBtn_Arrow_R;                              // 0x03C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	void OnPageNumber(const int32 Param_CurrentPage, const int32 Param_MaxPage);
	void OnMessageReceived_4E9C9CDB4FAD9424B435B5BAC35B9390(class UMsgBaseNode* ProxyObject);
	void OnButtonBaseClicked_t___0(class UCommonButtonBase* Button);
	void ExecuteUbergraph_WB_CharacterSelect_CharacterList(int32 EntryPoint);
	void EventCharacterDeleteClicked();
	void Construct();
	void CharacterListRightButtonClicked(class UCommonButtonBase* Button);
	void CharacterListLeftButtonClicked(class UCommonButtonBase* Button);
	void CharacterCreateButtonClicked(class UCommonButtonBase* Button);
	void BndEvt__WB_CharacterSelect_CharacterList_WB_CommonBtn_Arrow_K2Node_ComponentBoundEvent_2_OnVisibilityChangedEvent__DelegateSignature(ESlateVisibility Invisibility);
	void BndEvt__WB_CharacterSelect_CharacterList_WB_CommonBtn_Arrow_201_K2Node_ComponentBoundEvent_3_OnVisibilityChangedEvent__DelegateSignature(ESlateVisibility Invisibility);
	void BndEvt__WB_CharacterSelect_CharacterList_CharacterSlotListView_K2Node_ComponentBoundEvent_0_SimpleListItemEventDynamic__DelegateSignature(class UObject* Item);

	class UWidget* BP_GetDesiredFocusTarget() const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WB_CharacterSelect_CharacterList_C">();
	}
	static class UWB_CharacterSelect_CharacterList_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWB_CharacterSelect_CharacterList_C>();
	}
};
static_assert(alignof(UWB_CharacterSelect_CharacterList_C) == 0x000008, "Wrong alignment on UWB_CharacterSelect_CharacterList_C");
static_assert(sizeof(UWB_CharacterSelect_CharacterList_C) == 0x0003D0, "Wrong size on UWB_CharacterSelect_CharacterList_C");
static_assert(offsetof(UWB_CharacterSelect_CharacterList_C, UberGraphFrame) == 0x000388, "Member 'UWB_CharacterSelect_CharacterList_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWB_CharacterSelect_CharacterList_C, CurrentPage) == 0x000390, "Member 'UWB_CharacterSelect_CharacterList_C::CurrentPage' has a wrong offset!");
static_assert(offsetof(UWB_CharacterSelect_CharacterList_C, HBox_ListPagePrevNext) == 0x000398, "Member 'UWB_CharacterSelect_CharacterList_C::HBox_ListPagePrevNext' has a wrong offset!");
static_assert(offsetof(UWB_CharacterSelect_CharacterList_C, HorizontalBox_0) == 0x0003A0, "Member 'UWB_CharacterSelect_CharacterList_C::HorizontalBox_0' has a wrong offset!");
static_assert(offsetof(UWB_CharacterSelect_CharacterList_C, MaxPage) == 0x0003A8, "Member 'UWB_CharacterSelect_CharacterList_C::MaxPage' has a wrong offset!");
static_assert(offsetof(UWB_CharacterSelect_CharacterList_C, WB_Btn_CreateCharacter) == 0x0003B0, "Member 'UWB_CharacterSelect_CharacterList_C::WB_Btn_CreateCharacter' has a wrong offset!");
static_assert(offsetof(UWB_CharacterSelect_CharacterList_C, WB_Btn_DeleteCharacter) == 0x0003B8, "Member 'UWB_CharacterSelect_CharacterList_C::WB_Btn_DeleteCharacter' has a wrong offset!");
static_assert(offsetof(UWB_CharacterSelect_CharacterList_C, WB_CommonBtn_Arrow_L) == 0x0003C0, "Member 'UWB_CharacterSelect_CharacterList_C::WB_CommonBtn_Arrow_L' has a wrong offset!");
static_assert(offsetof(UWB_CharacterSelect_CharacterList_C, WB_CommonBtn_Arrow_R) == 0x0003C8, "Member 'UWB_CharacterSelect_CharacterList_C::WB_CommonBtn_Arrow_R' has a wrong offset!");

}

