#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_FloorSpikes

#include "Basic.hpp"

#include "DungeonCrawler_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_FloorSpikes.BP_FloorSpikes_C.BndEvt__BP_FloorSpikeTrap_ActiveBox_K2Node_ComponentBoundEvent_4_ComponentBeginOverlapSignature__DelegateSignature
// 0x0108 (0x0108 - 0x0000)
struct BP_FloorSpikes_C_BndEvt__BP_FloorSpikeTrap_ActiveBox_K2Node_ComponentBoundEvent_4_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5ADF[0x3];                                     // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x00E8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_FloorSpikes_C_BndEvt__BP_FloorSpikeTrap_ActiveBox_K2Node_ComponentBoundEvent_4_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_FloorSpikes_C_BndEvt__BP_FloorSpikeTrap_ActiveBox_K2Node_ComponentBoundEvent_4_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(BP_FloorSpikes_C_BndEvt__BP_FloorSpikeTrap_ActiveBox_K2Node_ComponentBoundEvent_4_ComponentBeginOverlapSignature__DelegateSignature) == 0x000108, "Wrong size on BP_FloorSpikes_C_BndEvt__BP_FloorSpikeTrap_ActiveBox_K2Node_ComponentBoundEvent_4_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(BP_FloorSpikes_C_BndEvt__BP_FloorSpikeTrap_ActiveBox_K2Node_ComponentBoundEvent_4_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'BP_FloorSpikes_C_BndEvt__BP_FloorSpikeTrap_ActiveBox_K2Node_ComponentBoundEvent_4_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_FloorSpikes_C_BndEvt__BP_FloorSpikeTrap_ActiveBox_K2Node_ComponentBoundEvent_4_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BP_FloorSpikes_C_BndEvt__BP_FloorSpikeTrap_ActiveBox_K2Node_ComponentBoundEvent_4_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_FloorSpikes_C_BndEvt__BP_FloorSpikeTrap_ActiveBox_K2Node_ComponentBoundEvent_4_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BP_FloorSpikes_C_BndEvt__BP_FloorSpikeTrap_ActiveBox_K2Node_ComponentBoundEvent_4_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_FloorSpikes_C_BndEvt__BP_FloorSpikeTrap_ActiveBox_K2Node_ComponentBoundEvent_4_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'BP_FloorSpikes_C_BndEvt__BP_FloorSpikeTrap_ActiveBox_K2Node_ComponentBoundEvent_4_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_FloorSpikes_C_BndEvt__BP_FloorSpikeTrap_ActiveBox_K2Node_ComponentBoundEvent_4_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'BP_FloorSpikes_C_BndEvt__BP_FloorSpikeTrap_ActiveBox_K2Node_ComponentBoundEvent_4_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_FloorSpikes_C_BndEvt__BP_FloorSpikeTrap_ActiveBox_K2Node_ComponentBoundEvent_4_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'BP_FloorSpikes_C_BndEvt__BP_FloorSpikeTrap_ActiveBox_K2Node_ComponentBoundEvent_4_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function BP_FloorSpikes.BP_FloorSpikes_C.EventFMsgSoundEvent
// 0x0028 (0x0028 - 0x0000)
struct BP_FloorSpikes_C_EventFMsgSoundEvent final
{
public:
	struct FMsgSoundEvent                         Msg;                                               // 0x0000(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(BP_FloorSpikes_C_EventFMsgSoundEvent) == 0x000008, "Wrong alignment on BP_FloorSpikes_C_EventFMsgSoundEvent");
static_assert(sizeof(BP_FloorSpikes_C_EventFMsgSoundEvent) == 0x000028, "Wrong size on BP_FloorSpikes_C_EventFMsgSoundEvent");
static_assert(offsetof(BP_FloorSpikes_C_EventFMsgSoundEvent, Msg) == 0x000000, "Member 'BP_FloorSpikes_C_EventFMsgSoundEvent::Msg' has a wrong offset!");

// Function BP_FloorSpikes.BP_FloorSpikes_C.ExecuteUbergraph_BP_FloorSpikes
// 0x0588 (0x0588 - 0x0000)
struct BP_FloorSpikes_C_ExecuteUbergraph_BP_FloorSpikes final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5AE0[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_ObjectToText_ReturnValue;            // 0x0008(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0020(0x0050)(HasGetValueTypeHash)
	struct FMsgSoundEvent                         Temp_struct_Variable;                              // 0x0070(0x0028)()
	class UMsgBaseNode*                           Temp_object_Variable;                              // 0x0098(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5AE1[0x2];                                     // 0x00A2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5AE2[0x7];                                     // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_Interacter;                           // 0x00B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_Event_StateTag;                             // 0x00C0(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_Event_TriggerTag;                           // 0x00C8(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_Event_HitResult;                            // 0x00D0(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess;   // 0x01B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5AE3[0x3];                                     // 0x01B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           K2Node_Event_InGameplayTag;                        // 0x01BC(0x0008)(ConstParm, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_InCount;                              // 0x01C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x01C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess_1; // 0x01C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5AE4[0x6];                                     // 0x01CA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent;    // 0x01D0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor;             // 0x01D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp;              // 0x01E0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex;         // 0x01E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep;             // 0x01EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5AE5[0x3];                                     // 0x01ED(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult;            // 0x01F0(0x00E8)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	TScriptInterface<class IGameplayTagAssetInterface> K2Node_DynamicCast_As_________________;            // 0x02D8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x02E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5AE6[0x7];                                     // 0x02E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_ObjectToText_ReturnValue_1;          // 0x02F0(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0308(0x0050)(HasGetValueTypeHash)
	class UMsgBaseNode*                           K2Node_CustomEvent_ProxyObject;                    // 0x0358(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UMsgBaseNode* ProxyObject)> K2Node_CreateDelegate_OutputDelegate;              // 0x0360(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetAbilityTriggerTag_Result;              // 0x0370(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetAbilityTriggerTag_Result_1;            // 0x0371(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5AE7[0x6];                                     // 0x0372(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMsgSoundEvent                         K2Node_CustomEvent_Msg;                            // 0x0378(0x0028)()
	TScriptInterface<class IBaseInterface>        CallFunc_BindMsgNode_BaseInterface_CastInput;      // 0x03A0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UBindMsgNode*                           CallFunc_BindMsgNode_ReturnValue;                  // 0x03B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_PlaySoundWithTag_ReturnValue;             // 0x03B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x03B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5AE8[0x6];                                     // 0x03BA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         CallFunc_GetOverlappingActors_OverlappingActors;   // 0x03C0(0x0010)(ReferenceParm)
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x03D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAnyMatchingGameplayTags_ReturnValue;   // 0x03D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5AE9[0x7];                                     // 0x03D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> K2Node_DynamicCast_As__________________1;          // 0x03E0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x03F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5AEA[0x7];                                     // 0x03F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_ObjectToText_ReturnValue_2;          // 0x03F8(0x0018)()
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0410(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5AEB[0x4];                                     // 0x0414(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x0418(0x0050)(HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0468(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5AEC[0x7];                                     // 0x0469(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0470(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0480(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0498(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAnyMatchingGameplayTags_ReturnValue_1; // 0x04A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5AED[0x7];                                     // 0x04A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMsgSoundEvent                         Temp_struct_Variable_1;                            // 0x04B0(0x0028)()
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x04D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetPayload_ReturnValue;                   // 0x04D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5AEE[0x6];                                     // 0x04DA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_ObjectToText_ReturnValue_3;          // 0x04E0(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_3;            // 0x04F8(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x0548(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x0558(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_1;          // 0x0570(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	float                                         CallFunc_Delay_Duration_ImplicitCast;              // 0x0580(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Delay_Duration_ImplicitCast_1;            // 0x0584(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FloorSpikes_C_ExecuteUbergraph_BP_FloorSpikes) == 0x000008, "Wrong alignment on BP_FloorSpikes_C_ExecuteUbergraph_BP_FloorSpikes");
static_assert(sizeof(BP_FloorSpikes_C_ExecuteUbergraph_BP_FloorSpikes) == 0x000588, "Wrong size on BP_FloorSpikes_C_ExecuteUbergraph_BP_FloorSpikes");
static_assert(offsetof(BP_FloorSpikes_C_ExecuteUbergraph_BP_FloorSpikes, EntryPoint) == 0x000000, "Member 'BP_FloorSpikes_C_ExecuteUbergraph_BP_FloorSpikes::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_FloorSpikes_C_ExecuteUbergraph_BP_FloorSpikes, CallFunc_Conv_ObjectToText_ReturnValue) == 0x000008, "Member 'BP_FloorSpikes_C_ExecuteUbergraph_BP_FloorSpikes::CallFunc_Conv_ObjectToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FloorSpikes_C_ExecuteUbergraph_BP_FloorSpikes, K2Node_MakeStruct_FormatArgumentData) == 0x000020, "Member 'BP_FloorSpikes_C_ExecuteUbergraph_BP_FloorSpikes::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_FloorSpikes_C_ExecuteUbergraph_BP_FloorSpikes, Temp_struct_Variable) == 0x000070, "Member 'BP_FloorSpikes_C_ExecuteUbergraph_BP_FloorSpikes::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_FloorSpikes_C_ExecuteUbergraph_BP_FloorSpikes, Temp_object_Variable) == 0x000098, "Member 'BP_FloorSpikes_C_ExecuteUbergraph_BP_FloorSpikes::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_FloorSpikes_C_ExecuteUbergraph_BP_FloorSpikes, Temp_bool_Variable) == 0x0000A0, "Member 'BP_FloorSpikes_C_ExecuteUbergraph_BP_FloorSpikes::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_FloorSpikes_C_ExecuteUbergraph_BP_FloorSpikes, Temp_bool_Variable_1) == 0x0000A1, "Member 'BP_FloorSpikes_C_ExecuteUbergraph_BP_FloorSpikes::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_FloorSpikes_C_ExecuteUbergraph_BP_FloorSpikes, Temp_int_Loop_Counter_Variable) == 0x0000A4, "Member 'BP_FloorSpikes_C_ExecuteUbergraph_BP_FloorSpikes::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_FloorSpikes_C_ExecuteUbergraph_BP_FloorSpikes, CallFunc_Add_IntInt_ReturnValue) == 0x0000A8, "Member 'BP_FloorSpikes_C_ExecuteUbergraph_BP_FloorSpikes::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FloorSpikes_C_ExecuteUbergraph_BP_FloorSpikes, Temp_int_Array_Index_Variable) == 0x0000AC, "Member 'BP_FloorSpikes_C_ExecuteUbergraph_BP_FloorSpikes::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_FloorSpikes_C_ExecuteUbergraph_BP_FloorSpikes, CallFunc_HasAuthority_ReturnValue) == 0x0000B0, "Member 'BP_FloorSpikes_C_ExecuteUbergraph_BP_FloorSpikes::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FloorSpikes_C_ExecuteUbergraph_BP_FloorSpikes, K2Node_Event_Interacter) == 0x0000B8, "Member 'BP_FloorSpikes_C_ExecuteUbergraph_BP_FloorSpikes::K2Node_Event_Interacter' has a wrong offset!");
static_assert(offsetof(BP_FloorSpikes_C_ExecuteUbergraph_BP_FloorSpikes, K2Node_Event_StateTag) == 0x0000C0, "Member 'BP_FloorSpikes_C_ExecuteUbergraph_BP_FloorSpikes::K2Node_Event_StateTag' has a wrong offset!");
static_assert(offsetof(BP_FloorSpikes_C_ExecuteUbergraph_BP_FloorSpikes, K2Node_Event_TriggerTag) == 0x0000C8, "Member 'BP_FloorSpikes_C_ExecuteUbergraph_BP_FloorSpikes::K2Node_Event_TriggerTag' has a wrong offset!");
static_assert(offsetof(BP_FloorSpikes_C_ExecuteUbergraph_BP_FloorSpikes, K2Node_Event_HitResult) == 0x0000D0, "Member 'BP_FloorSpikes_C_ExecuteUbergraph_BP_FloorSpikes::K2Node_Event_HitResult' has a wrong offset!");
static_assert(offsetof(BP_FloorSpikes_C_ExecuteUbergraph_BP_FloorSpikes, GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess) == 0x0001B8, "Member 'BP_FloorSpikes_C_ExecuteUbergraph_BP_FloorSpikes::GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_FloorSpikes_C_ExecuteUbergraph_BP_FloorSpikes, K2Node_Event_InGameplayTag) == 0x0001BC, "Member 'BP_FloorSpikes_C_ExecuteUbergraph_BP_FloorSpikes::K2Node_Event_InGameplayTag' has a wrong offset!");
static_assert(offsetof(BP_FloorSpikes_C_ExecuteUbergraph_BP_FloorSpikes, K2Node_Event_InCount) == 0x0001C4, "Member 'BP_FloorSpikes_C_ExecuteUbergraph_BP_FloorSpikes::K2Node_Event_InCount' has a wrong offset!");
static_assert(offsetof(BP_FloorSpikes_C_ExecuteUbergraph_BP_FloorSpikes, CallFunc_Greater_IntInt_ReturnValue) == 0x0001C8, "Member 'BP_FloorSpikes_C_ExecuteUbergraph_BP_FloorSpikes::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FloorSpikes_C_ExecuteUbergraph_BP_FloorSpikes, GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess_1) == 0x0001C9, "Member 'BP_FloorSpikes_C_ExecuteUbergraph_BP_FloorSpikes::GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_FloorSpikes_C_ExecuteUbergraph_BP_FloorSpikes, K2Node_ComponentBoundEvent_OverlappedComponent) == 0x0001D0, "Member 'BP_FloorSpikes_C_ExecuteUbergraph_BP_FloorSpikes::K2Node_ComponentBoundEvent_OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_FloorSpikes_C_ExecuteUbergraph_BP_FloorSpikes, K2Node_ComponentBoundEvent_OtherActor) == 0x0001D8, "Member 'BP_FloorSpikes_C_ExecuteUbergraph_BP_FloorSpikes::K2Node_ComponentBoundEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(BP_FloorSpikes_C_ExecuteUbergraph_BP_FloorSpikes, K2Node_ComponentBoundEvent_OtherComp) == 0x0001E0, "Member 'BP_FloorSpikes_C_ExecuteUbergraph_BP_FloorSpikes::K2Node_ComponentBoundEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(BP_FloorSpikes_C_ExecuteUbergraph_BP_FloorSpikes, K2Node_ComponentBoundEvent_OtherBodyIndex) == 0x0001E8, "Member 'BP_FloorSpikes_C_ExecuteUbergraph_BP_FloorSpikes::K2Node_ComponentBoundEvent_OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_FloorSpikes_C_ExecuteUbergraph_BP_FloorSpikes, K2Node_ComponentBoundEvent_bFromSweep) == 0x0001EC, "Member 'BP_FloorSpikes_C_ExecuteUbergraph_BP_FloorSpikes::K2Node_ComponentBoundEvent_bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_FloorSpikes_C_ExecuteUbergraph_BP_FloorSpikes, K2Node_ComponentBoundEvent_SweepResult) == 0x0001F0, "Member 'BP_FloorSpikes_C_ExecuteUbergraph_BP_FloorSpikes::K2Node_ComponentBoundEvent_SweepResult' has a wrong offset!");
static_assert(offsetof(BP_FloorSpikes_C_ExecuteUbergraph_BP_FloorSpikes, K2Node_DynamicCast_As_________________) == 0x0002D8, "Member 'BP_FloorSpikes_C_ExecuteUbergraph_BP_FloorSpikes::K2Node_DynamicCast_As_________________' has a wrong offset!");
static_assert(offsetof(BP_FloorSpikes_C_ExecuteUbergraph_BP_FloorSpikes, K2Node_DynamicCast_bSuccess) == 0x0002E8, "Member 'BP_FloorSpikes_C_ExecuteUbergraph_BP_FloorSpikes::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_FloorSpikes_C_ExecuteUbergraph_BP_FloorSpikes, CallFunc_Conv_ObjectToText_ReturnValue_1) == 0x0002F0, "Member 'BP_FloorSpikes_C_ExecuteUbergraph_BP_FloorSpikes::CallFunc_Conv_ObjectToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FloorSpikes_C_ExecuteUbergraph_BP_FloorSpikes, K2Node_MakeStruct_FormatArgumentData_1) == 0x000308, "Member 'BP_FloorSpikes_C_ExecuteUbergraph_BP_FloorSpikes::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BP_FloorSpikes_C_ExecuteUbergraph_BP_FloorSpikes, K2Node_CustomEvent_ProxyObject) == 0x000358, "Member 'BP_FloorSpikes_C_ExecuteUbergraph_BP_FloorSpikes::K2Node_CustomEvent_ProxyObject' has a wrong offset!");
static_assert(offsetof(BP_FloorSpikes_C_ExecuteUbergraph_BP_FloorSpikes, K2Node_CreateDelegate_OutputDelegate) == 0x000360, "Member 'BP_FloorSpikes_C_ExecuteUbergraph_BP_FloorSpikes::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_FloorSpikes_C_ExecuteUbergraph_BP_FloorSpikes, CallFunc_SetAbilityTriggerTag_Result) == 0x000370, "Member 'BP_FloorSpikes_C_ExecuteUbergraph_BP_FloorSpikes::CallFunc_SetAbilityTriggerTag_Result' has a wrong offset!");
static_assert(offsetof(BP_FloorSpikes_C_ExecuteUbergraph_BP_FloorSpikes, CallFunc_SetAbilityTriggerTag_Result_1) == 0x000371, "Member 'BP_FloorSpikes_C_ExecuteUbergraph_BP_FloorSpikes::CallFunc_SetAbilityTriggerTag_Result_1' has a wrong offset!");
static_assert(offsetof(BP_FloorSpikes_C_ExecuteUbergraph_BP_FloorSpikes, K2Node_CustomEvent_Msg) == 0x000378, "Member 'BP_FloorSpikes_C_ExecuteUbergraph_BP_FloorSpikes::K2Node_CustomEvent_Msg' has a wrong offset!");
static_assert(offsetof(BP_FloorSpikes_C_ExecuteUbergraph_BP_FloorSpikes, CallFunc_BindMsgNode_BaseInterface_CastInput) == 0x0003A0, "Member 'BP_FloorSpikes_C_ExecuteUbergraph_BP_FloorSpikes::CallFunc_BindMsgNode_BaseInterface_CastInput' has a wrong offset!");
static_assert(offsetof(BP_FloorSpikes_C_ExecuteUbergraph_BP_FloorSpikes, CallFunc_BindMsgNode_ReturnValue) == 0x0003B0, "Member 'BP_FloorSpikes_C_ExecuteUbergraph_BP_FloorSpikes::CallFunc_BindMsgNode_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FloorSpikes_C_ExecuteUbergraph_BP_FloorSpikes, CallFunc_PlaySoundWithTag_ReturnValue) == 0x0003B8, "Member 'BP_FloorSpikes_C_ExecuteUbergraph_BP_FloorSpikes::CallFunc_PlaySoundWithTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FloorSpikes_C_ExecuteUbergraph_BP_FloorSpikes, CallFunc_IsValid_ReturnValue) == 0x0003B9, "Member 'BP_FloorSpikes_C_ExecuteUbergraph_BP_FloorSpikes::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FloorSpikes_C_ExecuteUbergraph_BP_FloorSpikes, CallFunc_GetOverlappingActors_OverlappingActors) == 0x0003C0, "Member 'BP_FloorSpikes_C_ExecuteUbergraph_BP_FloorSpikes::CallFunc_GetOverlappingActors_OverlappingActors' has a wrong offset!");
static_assert(offsetof(BP_FloorSpikes_C_ExecuteUbergraph_BP_FloorSpikes, CallFunc_Array_Get_Item) == 0x0003D0, "Member 'BP_FloorSpikes_C_ExecuteUbergraph_BP_FloorSpikes::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_FloorSpikes_C_ExecuteUbergraph_BP_FloorSpikes, CallFunc_HasAnyMatchingGameplayTags_ReturnValue) == 0x0003D8, "Member 'BP_FloorSpikes_C_ExecuteUbergraph_BP_FloorSpikes::CallFunc_HasAnyMatchingGameplayTags_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FloorSpikes_C_ExecuteUbergraph_BP_FloorSpikes, K2Node_DynamicCast_As__________________1) == 0x0003E0, "Member 'BP_FloorSpikes_C_ExecuteUbergraph_BP_FloorSpikes::K2Node_DynamicCast_As__________________1' has a wrong offset!");
static_assert(offsetof(BP_FloorSpikes_C_ExecuteUbergraph_BP_FloorSpikes, K2Node_DynamicCast_bSuccess_1) == 0x0003F0, "Member 'BP_FloorSpikes_C_ExecuteUbergraph_BP_FloorSpikes::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_FloorSpikes_C_ExecuteUbergraph_BP_FloorSpikes, CallFunc_Conv_ObjectToText_ReturnValue_2) == 0x0003F8, "Member 'BP_FloorSpikes_C_ExecuteUbergraph_BP_FloorSpikes::CallFunc_Conv_ObjectToText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_FloorSpikes_C_ExecuteUbergraph_BP_FloorSpikes, CallFunc_Array_Length_ReturnValue) == 0x000410, "Member 'BP_FloorSpikes_C_ExecuteUbergraph_BP_FloorSpikes::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FloorSpikes_C_ExecuteUbergraph_BP_FloorSpikes, K2Node_MakeStruct_FormatArgumentData_2) == 0x000418, "Member 'BP_FloorSpikes_C_ExecuteUbergraph_BP_FloorSpikes::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(BP_FloorSpikes_C_ExecuteUbergraph_BP_FloorSpikes, CallFunc_Less_IntInt_ReturnValue) == 0x000468, "Member 'BP_FloorSpikes_C_ExecuteUbergraph_BP_FloorSpikes::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FloorSpikes_C_ExecuteUbergraph_BP_FloorSpikes, K2Node_MakeArray_Array) == 0x000470, "Member 'BP_FloorSpikes_C_ExecuteUbergraph_BP_FloorSpikes::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_FloorSpikes_C_ExecuteUbergraph_BP_FloorSpikes, CallFunc_Format_ReturnValue) == 0x000480, "Member 'BP_FloorSpikes_C_ExecuteUbergraph_BP_FloorSpikes::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FloorSpikes_C_ExecuteUbergraph_BP_FloorSpikes, CallFunc_Conv_TextToString_ReturnValue) == 0x000498, "Member 'BP_FloorSpikes_C_ExecuteUbergraph_BP_FloorSpikes::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FloorSpikes_C_ExecuteUbergraph_BP_FloorSpikes, CallFunc_HasAnyMatchingGameplayTags_ReturnValue_1) == 0x0004A8, "Member 'BP_FloorSpikes_C_ExecuteUbergraph_BP_FloorSpikes::CallFunc_HasAnyMatchingGameplayTags_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FloorSpikes_C_ExecuteUbergraph_BP_FloorSpikes, Temp_struct_Variable_1) == 0x0004B0, "Member 'BP_FloorSpikes_C_ExecuteUbergraph_BP_FloorSpikes::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_FloorSpikes_C_ExecuteUbergraph_BP_FloorSpikes, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x0004D8, "Member 'BP_FloorSpikes_C_ExecuteUbergraph_BP_FloorSpikes::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FloorSpikes_C_ExecuteUbergraph_BP_FloorSpikes, CallFunc_GetPayload_ReturnValue) == 0x0004D9, "Member 'BP_FloorSpikes_C_ExecuteUbergraph_BP_FloorSpikes::CallFunc_GetPayload_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FloorSpikes_C_ExecuteUbergraph_BP_FloorSpikes, CallFunc_Conv_ObjectToText_ReturnValue_3) == 0x0004E0, "Member 'BP_FloorSpikes_C_ExecuteUbergraph_BP_FloorSpikes::CallFunc_Conv_ObjectToText_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_FloorSpikes_C_ExecuteUbergraph_BP_FloorSpikes, K2Node_MakeStruct_FormatArgumentData_3) == 0x0004F8, "Member 'BP_FloorSpikes_C_ExecuteUbergraph_BP_FloorSpikes::K2Node_MakeStruct_FormatArgumentData_3' has a wrong offset!");
static_assert(offsetof(BP_FloorSpikes_C_ExecuteUbergraph_BP_FloorSpikes, K2Node_MakeArray_Array_1) == 0x000548, "Member 'BP_FloorSpikes_C_ExecuteUbergraph_BP_FloorSpikes::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_FloorSpikes_C_ExecuteUbergraph_BP_FloorSpikes, CallFunc_Format_ReturnValue_1) == 0x000558, "Member 'BP_FloorSpikes_C_ExecuteUbergraph_BP_FloorSpikes::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FloorSpikes_C_ExecuteUbergraph_BP_FloorSpikes, CallFunc_Conv_TextToString_ReturnValue_1) == 0x000570, "Member 'BP_FloorSpikes_C_ExecuteUbergraph_BP_FloorSpikes::CallFunc_Conv_TextToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FloorSpikes_C_ExecuteUbergraph_BP_FloorSpikes, CallFunc_Delay_Duration_ImplicitCast) == 0x000580, "Member 'BP_FloorSpikes_C_ExecuteUbergraph_BP_FloorSpikes::CallFunc_Delay_Duration_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_FloorSpikes_C_ExecuteUbergraph_BP_FloorSpikes, CallFunc_Delay_Duration_ImplicitCast_1) == 0x000584, "Member 'BP_FloorSpikes_C_ExecuteUbergraph_BP_FloorSpikes::CallFunc_Delay_Duration_ImplicitCast_1' has a wrong offset!");

// Function BP_FloorSpikes.BP_FloorSpikes_C.GameplayTagUpdated
// 0x000C (0x000C - 0x0000)
struct BP_FloorSpikes_C_GameplayTagUpdated final
{
public:
	struct FGameplayTag                           InGameplayTag;                                     // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	int32                                         InCount;                                           // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FloorSpikes_C_GameplayTagUpdated) == 0x000004, "Wrong alignment on BP_FloorSpikes_C_GameplayTagUpdated");
static_assert(sizeof(BP_FloorSpikes_C_GameplayTagUpdated) == 0x00000C, "Wrong size on BP_FloorSpikes_C_GameplayTagUpdated");
static_assert(offsetof(BP_FloorSpikes_C_GameplayTagUpdated, InGameplayTag) == 0x000000, "Member 'BP_FloorSpikes_C_GameplayTagUpdated::InGameplayTag' has a wrong offset!");
static_assert(offsetof(BP_FloorSpikes_C_GameplayTagUpdated, InCount) == 0x000008, "Member 'BP_FloorSpikes_C_GameplayTagUpdated::InCount' has a wrong offset!");

// Function BP_FloorSpikes.BP_FloorSpikes_C.InteractSucceed
// 0x0100 (0x0100 - 0x0000)
struct BP_FloorSpikes_C_InteractSucceed final
{
public:
	class AActor*                                 Interacter;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           StateTag;                                          // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           TriggerTag;                                        // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             HitResult;                                         // 0x0018(0x00E8)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_FloorSpikes_C_InteractSucceed) == 0x000008, "Wrong alignment on BP_FloorSpikes_C_InteractSucceed");
static_assert(sizeof(BP_FloorSpikes_C_InteractSucceed) == 0x000100, "Wrong size on BP_FloorSpikes_C_InteractSucceed");
static_assert(offsetof(BP_FloorSpikes_C_InteractSucceed, Interacter) == 0x000000, "Member 'BP_FloorSpikes_C_InteractSucceed::Interacter' has a wrong offset!");
static_assert(offsetof(BP_FloorSpikes_C_InteractSucceed, StateTag) == 0x000008, "Member 'BP_FloorSpikes_C_InteractSucceed::StateTag' has a wrong offset!");
static_assert(offsetof(BP_FloorSpikes_C_InteractSucceed, TriggerTag) == 0x000010, "Member 'BP_FloorSpikes_C_InteractSucceed::TriggerTag' has a wrong offset!");
static_assert(offsetof(BP_FloorSpikes_C_InteractSucceed, HitResult) == 0x000018, "Member 'BP_FloorSpikes_C_InteractSucceed::HitResult' has a wrong offset!");

// Function BP_FloorSpikes.BP_FloorSpikes_C.OnMessageReceived_6C1E7AB946EFC9996E4677A2C7074582
// 0x0008 (0x0008 - 0x0000)
struct BP_FloorSpikes_C_OnMessageReceived_6C1E7AB946EFC9996E4677A2C7074582 final
{
public:
	class UMsgBaseNode*                           ProxyObject;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FloorSpikes_C_OnMessageReceived_6C1E7AB946EFC9996E4677A2C7074582) == 0x000008, "Wrong alignment on BP_FloorSpikes_C_OnMessageReceived_6C1E7AB946EFC9996E4677A2C7074582");
static_assert(sizeof(BP_FloorSpikes_C_OnMessageReceived_6C1E7AB946EFC9996E4677A2C7074582) == 0x000008, "Wrong size on BP_FloorSpikes_C_OnMessageReceived_6C1E7AB946EFC9996E4677A2C7074582");
static_assert(offsetof(BP_FloorSpikes_C_OnMessageReceived_6C1E7AB946EFC9996E4677A2C7074582, ProxyObject) == 0x000000, "Member 'BP_FloorSpikes_C_OnMessageReceived_6C1E7AB946EFC9996E4677A2C7074582::ProxyObject' has a wrong offset!");

// Function BP_FloorSpikes.BP_FloorSpikes_C.SetAbilityTriggerTag
// 0x000C (0x000C - 0x0000)
struct BP_FloorSpikes_C_SetAbilityTriggerTag final
{
public:
	struct FGameplayTag                           New_Trigger_Tag;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_GameplayTag_ReturnValue;         // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FloorSpikes_C_SetAbilityTriggerTag) == 0x000004, "Wrong alignment on BP_FloorSpikes_C_SetAbilityTriggerTag");
static_assert(sizeof(BP_FloorSpikes_C_SetAbilityTriggerTag) == 0x00000C, "Wrong size on BP_FloorSpikes_C_SetAbilityTriggerTag");
static_assert(offsetof(BP_FloorSpikes_C_SetAbilityTriggerTag, New_Trigger_Tag) == 0x000000, "Member 'BP_FloorSpikes_C_SetAbilityTriggerTag::New_Trigger_Tag' has a wrong offset!");
static_assert(offsetof(BP_FloorSpikes_C_SetAbilityTriggerTag, Result) == 0x000008, "Member 'BP_FloorSpikes_C_SetAbilityTriggerTag::Result' has a wrong offset!");
static_assert(offsetof(BP_FloorSpikes_C_SetAbilityTriggerTag, CallFunc_NotEqual_GameplayTag_ReturnValue) == 0x000009, "Member 'BP_FloorSpikes_C_SetAbilityTriggerTag::CallFunc_NotEqual_GameplayTag_ReturnValue' has a wrong offset!");

}

