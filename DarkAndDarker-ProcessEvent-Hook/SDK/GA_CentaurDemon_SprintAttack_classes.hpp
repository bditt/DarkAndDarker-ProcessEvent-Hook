#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_CentaurDemon_SprintAttack

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "GA_MonsterMeleeAttackBaseWithOptions_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass GA_CentaurDemon_SprintAttack.GA_CentaurDemon_SprintAttack_C
// 0x0028 (0x0748 - 0x0720)
class UGA_CentaurDemon_SprintAttack_C final : public UGA_MonsterMeleeAttackBaseWithOptions_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_GA_CentaurDemon_SprintAttack_C;     // 0x0720(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class ABP_DCMonsterBaseWithOptions_C*         Caster;                                            // 0x0728(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class ADCCharacterBase*                       Target;                                            // 0x0730(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           Rotate_Caster_TimerHandle;                         // 0x0738(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           Rotation_Finish_TimerHandle;                       // 0x0740(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void AbilityActivated(const struct FGameplayEventData& TriggerEventData);
	void EventReceived_0564A4534D1BD80A4E8FDE9503060BD8(const struct FGameplayEventData& Payload);
	void ExecuteUbergraph_GA_CentaurDemon_SprintAttack(int32 EntryPoint);
	void Rotate_To_Side_Of_Target();
	void Rotation_Timer();
	void K2_OnEndAbility(bool bWasCancelled);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GA_CentaurDemon_SprintAttack_C">();
	}
	static class UGA_CentaurDemon_SprintAttack_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGA_CentaurDemon_SprintAttack_C>();
	}
};
static_assert(alignof(UGA_CentaurDemon_SprintAttack_C) == 0x000008, "Wrong alignment on UGA_CentaurDemon_SprintAttack_C");
static_assert(sizeof(UGA_CentaurDemon_SprintAttack_C) == 0x000748, "Wrong size on UGA_CentaurDemon_SprintAttack_C");
static_assert(offsetof(UGA_CentaurDemon_SprintAttack_C, UberGraphFrame_GA_CentaurDemon_SprintAttack_C) == 0x000720, "Member 'UGA_CentaurDemon_SprintAttack_C::UberGraphFrame_GA_CentaurDemon_SprintAttack_C' has a wrong offset!");
static_assert(offsetof(UGA_CentaurDemon_SprintAttack_C, Caster) == 0x000728, "Member 'UGA_CentaurDemon_SprintAttack_C::Caster' has a wrong offset!");
static_assert(offsetof(UGA_CentaurDemon_SprintAttack_C, Target) == 0x000730, "Member 'UGA_CentaurDemon_SprintAttack_C::Target' has a wrong offset!");
static_assert(offsetof(UGA_CentaurDemon_SprintAttack_C, Rotate_Caster_TimerHandle) == 0x000738, "Member 'UGA_CentaurDemon_SprintAttack_C::Rotate_Caster_TimerHandle' has a wrong offset!");
static_assert(offsetof(UGA_CentaurDemon_SprintAttack_C, Rotation_Finish_TimerHandle) == 0x000740, "Member 'UGA_CentaurDemon_SprintAttack_C::Rotation_Finish_TimerHandle' has a wrong offset!");

}

