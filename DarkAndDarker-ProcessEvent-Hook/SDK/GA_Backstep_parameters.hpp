#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_Backstep

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "GameplayTags_structs.hpp"


namespace SDK::Params
{

// Function GA_Backstep.GA_Backstep_C.ExecuteUbergraph_GA_Backstep
// 0x0110 (0x0110 - 0x0000)
struct GA_Backstep_C_ExecuteUbergraph_GA_Backstep final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMovementMode                                 K2Node_CustomEvent_PrevMovementMode;               // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMovementMode                                 K2Node_CustomEvent_NewMovementMode;                // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4805[0x2];                                     // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(EMovementMode PrevMovementMode, EMovementMode NewMovementMode)> K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EMovementMode                                 Temp_byte_Variable;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMovementMode                                 Temp_byte_Variable_1;                              // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4806[0x6];                                     // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UDCAT_WaitMovementModeChange*           CallFunc_WaitMovementModeChange_ReturnValue;       // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4807[0x3];                                     // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           K2Node_Event_SkillTag;                             // 0x002C(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_Event_CooldownTag;                          // 0x0034(0x0008)(NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4808[0x4];                                     // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetAvatarActorFromActorInfo_ReturnValue;  // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetRange_ReturnValue;                     // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4809[0x4];                                     // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ADCCharacterBase*                       K2Node_DynamicCast_AsDCCharacter_Base;             // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_480A[0x7];                                     // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue;          // 0x0060(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x0078(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue_1;        // 0x0090(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x00A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_1;      // 0x00C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x00F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_DoubleToVector_InDouble_ImplicitCast; // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Backstep_C_ExecuteUbergraph_GA_Backstep) == 0x000008, "Wrong alignment on GA_Backstep_C_ExecuteUbergraph_GA_Backstep");
static_assert(sizeof(GA_Backstep_C_ExecuteUbergraph_GA_Backstep) == 0x000110, "Wrong size on GA_Backstep_C_ExecuteUbergraph_GA_Backstep");
static_assert(offsetof(GA_Backstep_C_ExecuteUbergraph_GA_Backstep, EntryPoint) == 0x000000, "Member 'GA_Backstep_C_ExecuteUbergraph_GA_Backstep::EntryPoint' has a wrong offset!");
static_assert(offsetof(GA_Backstep_C_ExecuteUbergraph_GA_Backstep, K2Node_CustomEvent_PrevMovementMode) == 0x000004, "Member 'GA_Backstep_C_ExecuteUbergraph_GA_Backstep::K2Node_CustomEvent_PrevMovementMode' has a wrong offset!");
static_assert(offsetof(GA_Backstep_C_ExecuteUbergraph_GA_Backstep, K2Node_CustomEvent_NewMovementMode) == 0x000005, "Member 'GA_Backstep_C_ExecuteUbergraph_GA_Backstep::K2Node_CustomEvent_NewMovementMode' has a wrong offset!");
static_assert(offsetof(GA_Backstep_C_ExecuteUbergraph_GA_Backstep, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'GA_Backstep_C_ExecuteUbergraph_GA_Backstep::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(GA_Backstep_C_ExecuteUbergraph_GA_Backstep, Temp_byte_Variable) == 0x000018, "Member 'GA_Backstep_C_ExecuteUbergraph_GA_Backstep::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(GA_Backstep_C_ExecuteUbergraph_GA_Backstep, Temp_byte_Variable_1) == 0x000019, "Member 'GA_Backstep_C_ExecuteUbergraph_GA_Backstep::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(GA_Backstep_C_ExecuteUbergraph_GA_Backstep, CallFunc_WaitMovementModeChange_ReturnValue) == 0x000020, "Member 'GA_Backstep_C_ExecuteUbergraph_GA_Backstep::CallFunc_WaitMovementModeChange_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Backstep_C_ExecuteUbergraph_GA_Backstep, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'GA_Backstep_C_ExecuteUbergraph_GA_Backstep::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Backstep_C_ExecuteUbergraph_GA_Backstep, K2Node_Event_SkillTag) == 0x00002C, "Member 'GA_Backstep_C_ExecuteUbergraph_GA_Backstep::K2Node_Event_SkillTag' has a wrong offset!");
static_assert(offsetof(GA_Backstep_C_ExecuteUbergraph_GA_Backstep, K2Node_Event_CooldownTag) == 0x000034, "Member 'GA_Backstep_C_ExecuteUbergraph_GA_Backstep::K2Node_Event_CooldownTag' has a wrong offset!");
static_assert(offsetof(GA_Backstep_C_ExecuteUbergraph_GA_Backstep, CallFunc_GetAvatarActorFromActorInfo_ReturnValue) == 0x000040, "Member 'GA_Backstep_C_ExecuteUbergraph_GA_Backstep::CallFunc_GetAvatarActorFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Backstep_C_ExecuteUbergraph_GA_Backstep, CallFunc_GetRange_ReturnValue) == 0x000048, "Member 'GA_Backstep_C_ExecuteUbergraph_GA_Backstep::CallFunc_GetRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Backstep_C_ExecuteUbergraph_GA_Backstep, K2Node_DynamicCast_AsDCCharacter_Base) == 0x000050, "Member 'GA_Backstep_C_ExecuteUbergraph_GA_Backstep::K2Node_DynamicCast_AsDCCharacter_Base' has a wrong offset!");
static_assert(offsetof(GA_Backstep_C_ExecuteUbergraph_GA_Backstep, K2Node_DynamicCast_bSuccess) == 0x000058, "Member 'GA_Backstep_C_ExecuteUbergraph_GA_Backstep::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GA_Backstep_C_ExecuteUbergraph_GA_Backstep, CallFunc_Conv_DoubleToVector_ReturnValue) == 0x000060, "Member 'GA_Backstep_C_ExecuteUbergraph_GA_Backstep::CallFunc_Conv_DoubleToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Backstep_C_ExecuteUbergraph_GA_Backstep, CallFunc_GetActorForwardVector_ReturnValue) == 0x000078, "Member 'GA_Backstep_C_ExecuteUbergraph_GA_Backstep::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Backstep_C_ExecuteUbergraph_GA_Backstep, CallFunc_Conv_DoubleToVector_ReturnValue_1) == 0x000090, "Member 'GA_Backstep_C_ExecuteUbergraph_GA_Backstep::CallFunc_Conv_DoubleToVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_Backstep_C_ExecuteUbergraph_GA_Backstep, CallFunc_Multiply_VectorVector_ReturnValue) == 0x0000A8, "Member 'GA_Backstep_C_ExecuteUbergraph_GA_Backstep::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Backstep_C_ExecuteUbergraph_GA_Backstep, CallFunc_Multiply_VectorVector_ReturnValue_1) == 0x0000C0, "Member 'GA_Backstep_C_ExecuteUbergraph_GA_Backstep::CallFunc_Multiply_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_Backstep_C_ExecuteUbergraph_GA_Backstep, CallFunc_BreakVector_X) == 0x0000D8, "Member 'GA_Backstep_C_ExecuteUbergraph_GA_Backstep::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(GA_Backstep_C_ExecuteUbergraph_GA_Backstep, CallFunc_BreakVector_Y) == 0x0000E0, "Member 'GA_Backstep_C_ExecuteUbergraph_GA_Backstep::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(GA_Backstep_C_ExecuteUbergraph_GA_Backstep, CallFunc_BreakVector_Z) == 0x0000E8, "Member 'GA_Backstep_C_ExecuteUbergraph_GA_Backstep::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(GA_Backstep_C_ExecuteUbergraph_GA_Backstep, CallFunc_MakeVector_ReturnValue) == 0x0000F0, "Member 'GA_Backstep_C_ExecuteUbergraph_GA_Backstep::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Backstep_C_ExecuteUbergraph_GA_Backstep, CallFunc_Conv_DoubleToVector_InDouble_ImplicitCast) == 0x000108, "Member 'GA_Backstep_C_ExecuteUbergraph_GA_Backstep::CallFunc_Conv_DoubleToVector_InDouble_ImplicitCast' has a wrong offset!");

// Function GA_Backstep.GA_Backstep_C.OnMovementModeChanged_FEDF92D84E71845950F099BA81D066CB
// 0x0002 (0x0002 - 0x0000)
struct GA_Backstep_C_OnMovementModeChanged_FEDF92D84E71845950F099BA81D066CB final
{
public:
	EMovementMode                                 PrevMovementMode;                                  // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMovementMode                                 NewMovementMode;                                   // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Backstep_C_OnMovementModeChanged_FEDF92D84E71845950F099BA81D066CB) == 0x000001, "Wrong alignment on GA_Backstep_C_OnMovementModeChanged_FEDF92D84E71845950F099BA81D066CB");
static_assert(sizeof(GA_Backstep_C_OnMovementModeChanged_FEDF92D84E71845950F099BA81D066CB) == 0x000002, "Wrong size on GA_Backstep_C_OnMovementModeChanged_FEDF92D84E71845950F099BA81D066CB");
static_assert(offsetof(GA_Backstep_C_OnMovementModeChanged_FEDF92D84E71845950F099BA81D066CB, PrevMovementMode) == 0x000000, "Member 'GA_Backstep_C_OnMovementModeChanged_FEDF92D84E71845950F099BA81D066CB::PrevMovementMode' has a wrong offset!");
static_assert(offsetof(GA_Backstep_C_OnMovementModeChanged_FEDF92D84E71845950F099BA81D066CB, NewMovementMode) == 0x000001, "Member 'GA_Backstep_C_OnMovementModeChanged_FEDF92D84E71845950F099BA81D066CB::NewMovementMode' has a wrong offset!");

// Function GA_Backstep.GA_Backstep_C.ServerOnSkillActivate
// 0x0010 (0x0010 - 0x0000)
struct GA_Backstep_C_ServerOnSkillActivate final
{
public:
	struct FGameplayTag                           SkillTag;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           CooldownTag;                                       // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Backstep_C_ServerOnSkillActivate) == 0x000004, "Wrong alignment on GA_Backstep_C_ServerOnSkillActivate");
static_assert(sizeof(GA_Backstep_C_ServerOnSkillActivate) == 0x000010, "Wrong size on GA_Backstep_C_ServerOnSkillActivate");
static_assert(offsetof(GA_Backstep_C_ServerOnSkillActivate, SkillTag) == 0x000000, "Member 'GA_Backstep_C_ServerOnSkillActivate::SkillTag' has a wrong offset!");
static_assert(offsetof(GA_Backstep_C_ServerOnSkillActivate, CooldownTag) == 0x000008, "Member 'GA_Backstep_C_ServerOnSkillActivate::CooldownTag' has a wrong offset!");

}

