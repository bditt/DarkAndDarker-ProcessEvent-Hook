#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Slime

#include "Basic.hpp"

#include "BP_Slime_classes.hpp"
#include "BP_Slime_parameters.hpp"


namespace SDK
{

// Function BP_Slime.BP_Slime_C.ExecuteUbergraph_BP_Slime
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Slime_C::ExecuteUbergraph_BP_Slime(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Slime_C", "ExecuteUbergraph_BP_Slime");

	Params::BP_Slime_C_ExecuteUbergraph_BP_Slime Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Slime.BP_Slime_C.FX_OnDeath
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_Slime_C::FX_OnDeath()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Slime_C", "FX_OnDeath");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Slime.BP_Slime_C.GameplayTagUpdated
// (Event, Protected, BlueprintEvent)
// Parameters:
// struct FGameplayTag                     InGameplayTag                                          (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// int32                                   InCount                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Slime_C::GameplayTagUpdated(const struct FGameplayTag& InGameplayTag, int32 InCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Slime_C", "GameplayTagUpdated");

	Params::BP_Slime_C_GameplayTagUpdated Parms{};

	Parms.InGameplayTag = std::move(InGameplayTag);
	Parms.InCount = InCount;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Slime.BP_Slime_C.OnFMsgGASActorDieNotifyBlueprint
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// struct FMsgGASActorDieNotify            InMsg                                                  (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)

void ABP_Slime_C::OnFMsgGASActorDieNotifyBlueprint(const struct FMsgGASActorDieNotify& InMsg)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Slime_C", "OnFMsgGASActorDieNotifyBlueprint");

	Params::BP_Slime_C_OnFMsgGASActorDieNotifyBlueprint Parms{};

	Parms.InMsg = std::move(InMsg);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Slime.BP_Slime_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_Slime_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Slime_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Slime.BP_Slime_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Slime_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Slime_C", "ReceiveTick");

	Params::BP_Slime_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Slime.BP_Slime_C.SetCharacterFXState
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Does_Activate                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Slime_C::SetCharacterFXState(bool Does_Activate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Slime_C", "SetCharacterFXState");

	Params::BP_Slime_C_SetCharacterFXState Parms{};

	Parms.Does_Activate = Does_Activate;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Slime.BP_Slime_C.TriggerSkill
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Param_Index                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Slime_C::TriggerSkill(int32 Param_Index)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Slime_C", "TriggerSkill");

	Params::BP_Slime_C_TriggerSkill Parms{};

	Parms.Param_Index = Param_Index;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Slime.BP_Slime_C.UserConstructionScript
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ABP_Slime_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Slime_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}

}

