#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: DCUIFunctionLibrary

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "DungeonCrawler_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "SlateCore_structs.hpp"
#include "InputCore_structs.hpp"


namespace SDK::Params
{

// Function DCUIFunctionLibrary.DCUIFunctionLibrary_C.UpdateRadialDirectionWithMousePosition
// 0x0100 (0x0100 - 0x0000)
struct DCUIFunctionLibrary_C_UpdateRadialDirectionWithMousePosition final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Direction;                                         // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FPrimaryAssetId                        CallFunc_GetPrimaryAssetIdFromObject_ReturnValue;  // 0x0020(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetViewportScale_ReturnValue;             // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetConstantFloat_ReturnValue;             // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetViewportSize_ReturnValue;              // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X;                          // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Divide_Vector2DFloat_ReturnValue;         // 0x0060(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetViewportScale_ReturnValue_1;           // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3832[0x4];                                     // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_GetMousePositionOnViewport_ReturnValue;   // 0x0078(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Multiply_Vector2DFloat_ReturnValue;       // 0x0088(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Add_Vector2DVector2D_ReturnValue;         // 0x0098(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_1;                        // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_1;                        // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x00C8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_VSize2D_ReturnValue;                      // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3833[0x7];                                     // 0x00E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_B_ImplicitCast;     // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast;     // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_Vector2DFloat_B_ImplicitCast;    // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DCUIFunctionLibrary_C_UpdateRadialDirectionWithMousePosition) == 0x000008, "Wrong alignment on DCUIFunctionLibrary_C_UpdateRadialDirectionWithMousePosition");
static_assert(sizeof(DCUIFunctionLibrary_C_UpdateRadialDirectionWithMousePosition) == 0x000100, "Wrong size on DCUIFunctionLibrary_C_UpdateRadialDirectionWithMousePosition");
static_assert(offsetof(DCUIFunctionLibrary_C_UpdateRadialDirectionWithMousePosition, WorldContextObject) == 0x000000, "Member 'DCUIFunctionLibrary_C_UpdateRadialDirectionWithMousePosition::WorldContextObject' has a wrong offset!");
static_assert(offsetof(DCUIFunctionLibrary_C_UpdateRadialDirectionWithMousePosition, __WorldContext) == 0x000008, "Member 'DCUIFunctionLibrary_C_UpdateRadialDirectionWithMousePosition::__WorldContext' has a wrong offset!");
static_assert(offsetof(DCUIFunctionLibrary_C_UpdateRadialDirectionWithMousePosition, Direction) == 0x000010, "Member 'DCUIFunctionLibrary_C_UpdateRadialDirectionWithMousePosition::Direction' has a wrong offset!");
static_assert(offsetof(DCUIFunctionLibrary_C_UpdateRadialDirectionWithMousePosition, CallFunc_GetPrimaryAssetIdFromObject_ReturnValue) == 0x000020, "Member 'DCUIFunctionLibrary_C_UpdateRadialDirectionWithMousePosition::CallFunc_GetPrimaryAssetIdFromObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(DCUIFunctionLibrary_C_UpdateRadialDirectionWithMousePosition, CallFunc_GetViewportScale_ReturnValue) == 0x000030, "Member 'DCUIFunctionLibrary_C_UpdateRadialDirectionWithMousePosition::CallFunc_GetViewportScale_ReturnValue' has a wrong offset!");
static_assert(offsetof(DCUIFunctionLibrary_C_UpdateRadialDirectionWithMousePosition, CallFunc_GetConstantFloat_ReturnValue) == 0x000034, "Member 'DCUIFunctionLibrary_C_UpdateRadialDirectionWithMousePosition::CallFunc_GetConstantFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(DCUIFunctionLibrary_C_UpdateRadialDirectionWithMousePosition, CallFunc_GetViewportSize_ReturnValue) == 0x000038, "Member 'DCUIFunctionLibrary_C_UpdateRadialDirectionWithMousePosition::CallFunc_GetViewportSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(DCUIFunctionLibrary_C_UpdateRadialDirectionWithMousePosition, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000048, "Member 'DCUIFunctionLibrary_C_UpdateRadialDirectionWithMousePosition::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(DCUIFunctionLibrary_C_UpdateRadialDirectionWithMousePosition, CallFunc_BreakVector2D_X) == 0x000050, "Member 'DCUIFunctionLibrary_C_UpdateRadialDirectionWithMousePosition::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(DCUIFunctionLibrary_C_UpdateRadialDirectionWithMousePosition, CallFunc_BreakVector2D_Y) == 0x000058, "Member 'DCUIFunctionLibrary_C_UpdateRadialDirectionWithMousePosition::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(DCUIFunctionLibrary_C_UpdateRadialDirectionWithMousePosition, CallFunc_Divide_Vector2DFloat_ReturnValue) == 0x000060, "Member 'DCUIFunctionLibrary_C_UpdateRadialDirectionWithMousePosition::CallFunc_Divide_Vector2DFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(DCUIFunctionLibrary_C_UpdateRadialDirectionWithMousePosition, CallFunc_GetViewportScale_ReturnValue_1) == 0x000070, "Member 'DCUIFunctionLibrary_C_UpdateRadialDirectionWithMousePosition::CallFunc_GetViewportScale_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DCUIFunctionLibrary_C_UpdateRadialDirectionWithMousePosition, CallFunc_GetMousePositionOnViewport_ReturnValue) == 0x000078, "Member 'DCUIFunctionLibrary_C_UpdateRadialDirectionWithMousePosition::CallFunc_GetMousePositionOnViewport_ReturnValue' has a wrong offset!");
static_assert(offsetof(DCUIFunctionLibrary_C_UpdateRadialDirectionWithMousePosition, CallFunc_Multiply_Vector2DFloat_ReturnValue) == 0x000088, "Member 'DCUIFunctionLibrary_C_UpdateRadialDirectionWithMousePosition::CallFunc_Multiply_Vector2DFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(DCUIFunctionLibrary_C_UpdateRadialDirectionWithMousePosition, CallFunc_Add_Vector2DVector2D_ReturnValue) == 0x000098, "Member 'DCUIFunctionLibrary_C_UpdateRadialDirectionWithMousePosition::CallFunc_Add_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(DCUIFunctionLibrary_C_UpdateRadialDirectionWithMousePosition, CallFunc_BreakVector2D_X_1) == 0x0000A8, "Member 'DCUIFunctionLibrary_C_UpdateRadialDirectionWithMousePosition::CallFunc_BreakVector2D_X_1' has a wrong offset!");
static_assert(offsetof(DCUIFunctionLibrary_C_UpdateRadialDirectionWithMousePosition, CallFunc_BreakVector2D_Y_1) == 0x0000B0, "Member 'DCUIFunctionLibrary_C_UpdateRadialDirectionWithMousePosition::CallFunc_BreakVector2D_Y_1' has a wrong offset!");
static_assert(offsetof(DCUIFunctionLibrary_C_UpdateRadialDirectionWithMousePosition, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x0000B8, "Member 'DCUIFunctionLibrary_C_UpdateRadialDirectionWithMousePosition::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(DCUIFunctionLibrary_C_UpdateRadialDirectionWithMousePosition, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x0000C0, "Member 'DCUIFunctionLibrary_C_UpdateRadialDirectionWithMousePosition::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DCUIFunctionLibrary_C_UpdateRadialDirectionWithMousePosition, CallFunc_MakeVector2D_ReturnValue) == 0x0000C8, "Member 'DCUIFunctionLibrary_C_UpdateRadialDirectionWithMousePosition::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(DCUIFunctionLibrary_C_UpdateRadialDirectionWithMousePosition, CallFunc_VSize2D_ReturnValue) == 0x0000D8, "Member 'DCUIFunctionLibrary_C_UpdateRadialDirectionWithMousePosition::CallFunc_VSize2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(DCUIFunctionLibrary_C_UpdateRadialDirectionWithMousePosition, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x0000E0, "Member 'DCUIFunctionLibrary_C_UpdateRadialDirectionWithMousePosition::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(DCUIFunctionLibrary_C_UpdateRadialDirectionWithMousePosition, CallFunc_Multiply_DoubleDouble_B_ImplicitCast) == 0x0000E8, "Member 'DCUIFunctionLibrary_C_UpdateRadialDirectionWithMousePosition::CallFunc_Multiply_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(DCUIFunctionLibrary_C_UpdateRadialDirectionWithMousePosition, CallFunc_Multiply_DoubleDouble_A_ImplicitCast) == 0x0000F0, "Member 'DCUIFunctionLibrary_C_UpdateRadialDirectionWithMousePosition::CallFunc_Multiply_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(DCUIFunctionLibrary_C_UpdateRadialDirectionWithMousePosition, CallFunc_Multiply_Vector2DFloat_B_ImplicitCast) == 0x0000F8, "Member 'DCUIFunctionLibrary_C_UpdateRadialDirectionWithMousePosition::CallFunc_Multiply_Vector2DFloat_B_ImplicitCast' has a wrong offset!");

// Function DCUIFunctionLibrary.DCUIFunctionLibrary_C.GetTwoUnitDHMSTextFromTimespan
// 0x0390 (0x0390 - 0x0000)
struct DCUIFunctionLibrary_C_GetTwoUnitDHMSTextFromTimespan final
{
public:
	struct FTimespan                              InTimespan;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   DHMSText;                                          // 0x0010(0x0018)(Parm, OutParm)
	int32                                         CallFunc_BreakTimespan_Days;                       // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakTimespan_Hours;                      // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakTimespan_Minutes;                    // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakTimespan_Seconds;                    // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakTimespan_Milliseconds;               // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3834[0x4];                                     // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0040(0x0018)()
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3835[0x7];                                     // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0060(0x0050)(HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_IntToText_ReturnValue_1;             // 0x00B0(0x0018)()
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3836[0x7];                                     // 0x00C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x00D0(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0120(0x0010)(ReferenceParm)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x0130(0x0050)(HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0180(0x0018)()
	class FText                                   CallFunc_Conv_IntToText_ReturnValue_2;             // 0x0198(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_3;            // 0x01B0(0x0050)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_4;            // 0x0200(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x0250(0x0010)(ReferenceParm)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_2;          // 0x0260(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3837[0x7];                                     // 0x0261(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x0268(0x0018)()
	class FText                                   CallFunc_Conv_IntToText_ReturnValue_3;             // 0x0280(0x0018)()
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_3;          // 0x0298(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3838[0x7];                                     // 0x0299(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_5;            // 0x02A0(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_2;                          // 0x02F0(0x0010)(ReferenceParm)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_6;            // 0x0300(0x0050)(HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue_2;                     // 0x0350(0x0018)()
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_3;                          // 0x0368(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_3;                     // 0x0378(0x0018)()
};
static_assert(alignof(DCUIFunctionLibrary_C_GetTwoUnitDHMSTextFromTimespan) == 0x000008, "Wrong alignment on DCUIFunctionLibrary_C_GetTwoUnitDHMSTextFromTimespan");
static_assert(sizeof(DCUIFunctionLibrary_C_GetTwoUnitDHMSTextFromTimespan) == 0x000390, "Wrong size on DCUIFunctionLibrary_C_GetTwoUnitDHMSTextFromTimespan");
static_assert(offsetof(DCUIFunctionLibrary_C_GetTwoUnitDHMSTextFromTimespan, InTimespan) == 0x000000, "Member 'DCUIFunctionLibrary_C_GetTwoUnitDHMSTextFromTimespan::InTimespan' has a wrong offset!");
static_assert(offsetof(DCUIFunctionLibrary_C_GetTwoUnitDHMSTextFromTimespan, __WorldContext) == 0x000008, "Member 'DCUIFunctionLibrary_C_GetTwoUnitDHMSTextFromTimespan::__WorldContext' has a wrong offset!");
static_assert(offsetof(DCUIFunctionLibrary_C_GetTwoUnitDHMSTextFromTimespan, DHMSText) == 0x000010, "Member 'DCUIFunctionLibrary_C_GetTwoUnitDHMSTextFromTimespan::DHMSText' has a wrong offset!");
static_assert(offsetof(DCUIFunctionLibrary_C_GetTwoUnitDHMSTextFromTimespan, CallFunc_BreakTimespan_Days) == 0x000028, "Member 'DCUIFunctionLibrary_C_GetTwoUnitDHMSTextFromTimespan::CallFunc_BreakTimespan_Days' has a wrong offset!");
static_assert(offsetof(DCUIFunctionLibrary_C_GetTwoUnitDHMSTextFromTimespan, CallFunc_BreakTimespan_Hours) == 0x00002C, "Member 'DCUIFunctionLibrary_C_GetTwoUnitDHMSTextFromTimespan::CallFunc_BreakTimespan_Hours' has a wrong offset!");
static_assert(offsetof(DCUIFunctionLibrary_C_GetTwoUnitDHMSTextFromTimespan, CallFunc_BreakTimespan_Minutes) == 0x000030, "Member 'DCUIFunctionLibrary_C_GetTwoUnitDHMSTextFromTimespan::CallFunc_BreakTimespan_Minutes' has a wrong offset!");
static_assert(offsetof(DCUIFunctionLibrary_C_GetTwoUnitDHMSTextFromTimespan, CallFunc_BreakTimespan_Seconds) == 0x000034, "Member 'DCUIFunctionLibrary_C_GetTwoUnitDHMSTextFromTimespan::CallFunc_BreakTimespan_Seconds' has a wrong offset!");
static_assert(offsetof(DCUIFunctionLibrary_C_GetTwoUnitDHMSTextFromTimespan, CallFunc_BreakTimespan_Milliseconds) == 0x000038, "Member 'DCUIFunctionLibrary_C_GetTwoUnitDHMSTextFromTimespan::CallFunc_BreakTimespan_Milliseconds' has a wrong offset!");
static_assert(offsetof(DCUIFunctionLibrary_C_GetTwoUnitDHMSTextFromTimespan, CallFunc_Conv_IntToText_ReturnValue) == 0x000040, "Member 'DCUIFunctionLibrary_C_GetTwoUnitDHMSTextFromTimespan::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(DCUIFunctionLibrary_C_GetTwoUnitDHMSTextFromTimespan, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000058, "Member 'DCUIFunctionLibrary_C_GetTwoUnitDHMSTextFromTimespan::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(DCUIFunctionLibrary_C_GetTwoUnitDHMSTextFromTimespan, K2Node_MakeStruct_FormatArgumentData) == 0x000060, "Member 'DCUIFunctionLibrary_C_GetTwoUnitDHMSTextFromTimespan::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(DCUIFunctionLibrary_C_GetTwoUnitDHMSTextFromTimespan, CallFunc_Conv_IntToText_ReturnValue_1) == 0x0000B0, "Member 'DCUIFunctionLibrary_C_GetTwoUnitDHMSTextFromTimespan::CallFunc_Conv_IntToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DCUIFunctionLibrary_C_GetTwoUnitDHMSTextFromTimespan, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x0000C8, "Member 'DCUIFunctionLibrary_C_GetTwoUnitDHMSTextFromTimespan::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DCUIFunctionLibrary_C_GetTwoUnitDHMSTextFromTimespan, K2Node_MakeStruct_FormatArgumentData_1) == 0x0000D0, "Member 'DCUIFunctionLibrary_C_GetTwoUnitDHMSTextFromTimespan::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(DCUIFunctionLibrary_C_GetTwoUnitDHMSTextFromTimespan, K2Node_MakeArray_Array) == 0x000120, "Member 'DCUIFunctionLibrary_C_GetTwoUnitDHMSTextFromTimespan::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(DCUIFunctionLibrary_C_GetTwoUnitDHMSTextFromTimespan, K2Node_MakeStruct_FormatArgumentData_2) == 0x000130, "Member 'DCUIFunctionLibrary_C_GetTwoUnitDHMSTextFromTimespan::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(DCUIFunctionLibrary_C_GetTwoUnitDHMSTextFromTimespan, CallFunc_Format_ReturnValue) == 0x000180, "Member 'DCUIFunctionLibrary_C_GetTwoUnitDHMSTextFromTimespan::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(DCUIFunctionLibrary_C_GetTwoUnitDHMSTextFromTimespan, CallFunc_Conv_IntToText_ReturnValue_2) == 0x000198, "Member 'DCUIFunctionLibrary_C_GetTwoUnitDHMSTextFromTimespan::CallFunc_Conv_IntToText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(DCUIFunctionLibrary_C_GetTwoUnitDHMSTextFromTimespan, K2Node_MakeStruct_FormatArgumentData_3) == 0x0001B0, "Member 'DCUIFunctionLibrary_C_GetTwoUnitDHMSTextFromTimespan::K2Node_MakeStruct_FormatArgumentData_3' has a wrong offset!");
static_assert(offsetof(DCUIFunctionLibrary_C_GetTwoUnitDHMSTextFromTimespan, K2Node_MakeStruct_FormatArgumentData_4) == 0x000200, "Member 'DCUIFunctionLibrary_C_GetTwoUnitDHMSTextFromTimespan::K2Node_MakeStruct_FormatArgumentData_4' has a wrong offset!");
static_assert(offsetof(DCUIFunctionLibrary_C_GetTwoUnitDHMSTextFromTimespan, K2Node_MakeArray_Array_1) == 0x000250, "Member 'DCUIFunctionLibrary_C_GetTwoUnitDHMSTextFromTimespan::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(DCUIFunctionLibrary_C_GetTwoUnitDHMSTextFromTimespan, CallFunc_EqualEqual_IntInt_ReturnValue_2) == 0x000260, "Member 'DCUIFunctionLibrary_C_GetTwoUnitDHMSTextFromTimespan::CallFunc_EqualEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(DCUIFunctionLibrary_C_GetTwoUnitDHMSTextFromTimespan, CallFunc_Format_ReturnValue_1) == 0x000268, "Member 'DCUIFunctionLibrary_C_GetTwoUnitDHMSTextFromTimespan::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DCUIFunctionLibrary_C_GetTwoUnitDHMSTextFromTimespan, CallFunc_Conv_IntToText_ReturnValue_3) == 0x000280, "Member 'DCUIFunctionLibrary_C_GetTwoUnitDHMSTextFromTimespan::CallFunc_Conv_IntToText_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(DCUIFunctionLibrary_C_GetTwoUnitDHMSTextFromTimespan, CallFunc_EqualEqual_IntInt_ReturnValue_3) == 0x000298, "Member 'DCUIFunctionLibrary_C_GetTwoUnitDHMSTextFromTimespan::CallFunc_EqualEqual_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(DCUIFunctionLibrary_C_GetTwoUnitDHMSTextFromTimespan, K2Node_MakeStruct_FormatArgumentData_5) == 0x0002A0, "Member 'DCUIFunctionLibrary_C_GetTwoUnitDHMSTextFromTimespan::K2Node_MakeStruct_FormatArgumentData_5' has a wrong offset!");
static_assert(offsetof(DCUIFunctionLibrary_C_GetTwoUnitDHMSTextFromTimespan, K2Node_MakeArray_Array_2) == 0x0002F0, "Member 'DCUIFunctionLibrary_C_GetTwoUnitDHMSTextFromTimespan::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(DCUIFunctionLibrary_C_GetTwoUnitDHMSTextFromTimespan, K2Node_MakeStruct_FormatArgumentData_6) == 0x000300, "Member 'DCUIFunctionLibrary_C_GetTwoUnitDHMSTextFromTimespan::K2Node_MakeStruct_FormatArgumentData_6' has a wrong offset!");
static_assert(offsetof(DCUIFunctionLibrary_C_GetTwoUnitDHMSTextFromTimespan, CallFunc_Format_ReturnValue_2) == 0x000350, "Member 'DCUIFunctionLibrary_C_GetTwoUnitDHMSTextFromTimespan::CallFunc_Format_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(DCUIFunctionLibrary_C_GetTwoUnitDHMSTextFromTimespan, K2Node_MakeArray_Array_3) == 0x000368, "Member 'DCUIFunctionLibrary_C_GetTwoUnitDHMSTextFromTimespan::K2Node_MakeArray_Array_3' has a wrong offset!");
static_assert(offsetof(DCUIFunctionLibrary_C_GetTwoUnitDHMSTextFromTimespan, CallFunc_Format_ReturnValue_3) == 0x000378, "Member 'DCUIFunctionLibrary_C_GetTwoUnitDHMSTextFromTimespan::CallFunc_Format_ReturnValue_3' has a wrong offset!");

// Function DCUIFunctionLibrary.DCUIFunctionLibrary_C.GetSpellTypeColor
// 0x00F8 (0x00F8 - 0x0000)
struct DCUIFunctionLibrary_C_GetSpellTypeColor final
{
public:
	struct FGameplayTag                           SpellSourceType;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            OutlineColor;                                      // 0x0010(0x0014)(Parm, OutParm)
	uint8                                         Pad_3839[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<struct FGameplayTag, struct FSlateColor> ColorMap;                                          // 0x0028(0x0050)(Edit, BlueprintVisible)
	TMap<struct FGameplayTag, struct FSlateColor> K2Node_MakeVariable_MakeVariableOutput;            // 0x0078(0x0050)()
	struct FSlateColor                            CallFunc_Map_Find_Value;                           // 0x00C8(0x0014)()
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x00DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_383A[0x3];                                     // 0x00DD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x00E0(0x0014)()
};
static_assert(alignof(DCUIFunctionLibrary_C_GetSpellTypeColor) == 0x000008, "Wrong alignment on DCUIFunctionLibrary_C_GetSpellTypeColor");
static_assert(sizeof(DCUIFunctionLibrary_C_GetSpellTypeColor) == 0x0000F8, "Wrong size on DCUIFunctionLibrary_C_GetSpellTypeColor");
static_assert(offsetof(DCUIFunctionLibrary_C_GetSpellTypeColor, SpellSourceType) == 0x000000, "Member 'DCUIFunctionLibrary_C_GetSpellTypeColor::SpellSourceType' has a wrong offset!");
static_assert(offsetof(DCUIFunctionLibrary_C_GetSpellTypeColor, __WorldContext) == 0x000008, "Member 'DCUIFunctionLibrary_C_GetSpellTypeColor::__WorldContext' has a wrong offset!");
static_assert(offsetof(DCUIFunctionLibrary_C_GetSpellTypeColor, OutlineColor) == 0x000010, "Member 'DCUIFunctionLibrary_C_GetSpellTypeColor::OutlineColor' has a wrong offset!");
static_assert(offsetof(DCUIFunctionLibrary_C_GetSpellTypeColor, ColorMap) == 0x000028, "Member 'DCUIFunctionLibrary_C_GetSpellTypeColor::ColorMap' has a wrong offset!");
static_assert(offsetof(DCUIFunctionLibrary_C_GetSpellTypeColor, K2Node_MakeVariable_MakeVariableOutput) == 0x000078, "Member 'DCUIFunctionLibrary_C_GetSpellTypeColor::K2Node_MakeVariable_MakeVariableOutput' has a wrong offset!");
static_assert(offsetof(DCUIFunctionLibrary_C_GetSpellTypeColor, CallFunc_Map_Find_Value) == 0x0000C8, "Member 'DCUIFunctionLibrary_C_GetSpellTypeColor::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(DCUIFunctionLibrary_C_GetSpellTypeColor, CallFunc_Map_Find_ReturnValue) == 0x0000DC, "Member 'DCUIFunctionLibrary_C_GetSpellTypeColor::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(DCUIFunctionLibrary_C_GetSpellTypeColor, K2Node_MakeStruct_SlateColor) == 0x0000E0, "Member 'DCUIFunctionLibrary_C_GetSpellTypeColor::K2Node_MakeStruct_SlateColor' has a wrong offset!");

// Function DCUIFunctionLibrary.DCUIFunctionLibrary_C.GetShortDHMSTextFromTimespan
// 0x03E0 (0x03E0 - 0x0000)
struct DCUIFunctionLibrary_C_GetShortDHMSTextFromTimespan final
{
public:
	struct FTimespan                              InTimespan;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   DHMSText;                                          // 0x0010(0x0018)(Parm, OutParm)
	int32                                         CallFunc_BreakTimespan_Days;                       // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakTimespan_Hours;                      // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakTimespan_Minutes;                    // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakTimespan_Seconds;                    // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakTimespan_Milliseconds;               // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_383B[0x4];                                     // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0040(0x0018)()
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_383C[0x7];                                     // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0060(0x0050)(HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_IntToText_ReturnValue_1;             // 0x00B0(0x0018)()
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_383D[0x7];                                     // 0x00C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x00D0(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0120(0x0010)(ReferenceParm)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x0130(0x0050)(HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0180(0x0018)()
	class FText                                   CallFunc_Conv_IntToText_ReturnValue_2;             // 0x0198(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_3;            // 0x01B0(0x0050)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_4;            // 0x0200(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x0250(0x0010)(ReferenceParm)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_5;            // 0x0260(0x0050)(HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x02B0(0x0018)()
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_2;          // 0x02C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_383E[0x7];                                     // 0x02C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue_3;             // 0x02D0(0x0018)()
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_3;          // 0x02E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_383F[0x7];                                     // 0x02E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_6;            // 0x02F0(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_2;                          // 0x0340(0x0010)(ReferenceParm)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_7;            // 0x0350(0x0050)(HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue_2;                     // 0x03A0(0x0018)()
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_3;                          // 0x03B8(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_3;                     // 0x03C8(0x0018)()
};
static_assert(alignof(DCUIFunctionLibrary_C_GetShortDHMSTextFromTimespan) == 0x000008, "Wrong alignment on DCUIFunctionLibrary_C_GetShortDHMSTextFromTimespan");
static_assert(sizeof(DCUIFunctionLibrary_C_GetShortDHMSTextFromTimespan) == 0x0003E0, "Wrong size on DCUIFunctionLibrary_C_GetShortDHMSTextFromTimespan");
static_assert(offsetof(DCUIFunctionLibrary_C_GetShortDHMSTextFromTimespan, InTimespan) == 0x000000, "Member 'DCUIFunctionLibrary_C_GetShortDHMSTextFromTimespan::InTimespan' has a wrong offset!");
static_assert(offsetof(DCUIFunctionLibrary_C_GetShortDHMSTextFromTimespan, __WorldContext) == 0x000008, "Member 'DCUIFunctionLibrary_C_GetShortDHMSTextFromTimespan::__WorldContext' has a wrong offset!");
static_assert(offsetof(DCUIFunctionLibrary_C_GetShortDHMSTextFromTimespan, DHMSText) == 0x000010, "Member 'DCUIFunctionLibrary_C_GetShortDHMSTextFromTimespan::DHMSText' has a wrong offset!");
static_assert(offsetof(DCUIFunctionLibrary_C_GetShortDHMSTextFromTimespan, CallFunc_BreakTimespan_Days) == 0x000028, "Member 'DCUIFunctionLibrary_C_GetShortDHMSTextFromTimespan::CallFunc_BreakTimespan_Days' has a wrong offset!");
static_assert(offsetof(DCUIFunctionLibrary_C_GetShortDHMSTextFromTimespan, CallFunc_BreakTimespan_Hours) == 0x00002C, "Member 'DCUIFunctionLibrary_C_GetShortDHMSTextFromTimespan::CallFunc_BreakTimespan_Hours' has a wrong offset!");
static_assert(offsetof(DCUIFunctionLibrary_C_GetShortDHMSTextFromTimespan, CallFunc_BreakTimespan_Minutes) == 0x000030, "Member 'DCUIFunctionLibrary_C_GetShortDHMSTextFromTimespan::CallFunc_BreakTimespan_Minutes' has a wrong offset!");
static_assert(offsetof(DCUIFunctionLibrary_C_GetShortDHMSTextFromTimespan, CallFunc_BreakTimespan_Seconds) == 0x000034, "Member 'DCUIFunctionLibrary_C_GetShortDHMSTextFromTimespan::CallFunc_BreakTimespan_Seconds' has a wrong offset!");
static_assert(offsetof(DCUIFunctionLibrary_C_GetShortDHMSTextFromTimespan, CallFunc_BreakTimespan_Milliseconds) == 0x000038, "Member 'DCUIFunctionLibrary_C_GetShortDHMSTextFromTimespan::CallFunc_BreakTimespan_Milliseconds' has a wrong offset!");
static_assert(offsetof(DCUIFunctionLibrary_C_GetShortDHMSTextFromTimespan, CallFunc_Conv_IntToText_ReturnValue) == 0x000040, "Member 'DCUIFunctionLibrary_C_GetShortDHMSTextFromTimespan::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(DCUIFunctionLibrary_C_GetShortDHMSTextFromTimespan, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000058, "Member 'DCUIFunctionLibrary_C_GetShortDHMSTextFromTimespan::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(DCUIFunctionLibrary_C_GetShortDHMSTextFromTimespan, K2Node_MakeStruct_FormatArgumentData) == 0x000060, "Member 'DCUIFunctionLibrary_C_GetShortDHMSTextFromTimespan::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(DCUIFunctionLibrary_C_GetShortDHMSTextFromTimespan, CallFunc_Conv_IntToText_ReturnValue_1) == 0x0000B0, "Member 'DCUIFunctionLibrary_C_GetShortDHMSTextFromTimespan::CallFunc_Conv_IntToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DCUIFunctionLibrary_C_GetShortDHMSTextFromTimespan, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x0000C8, "Member 'DCUIFunctionLibrary_C_GetShortDHMSTextFromTimespan::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DCUIFunctionLibrary_C_GetShortDHMSTextFromTimespan, K2Node_MakeStruct_FormatArgumentData_1) == 0x0000D0, "Member 'DCUIFunctionLibrary_C_GetShortDHMSTextFromTimespan::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(DCUIFunctionLibrary_C_GetShortDHMSTextFromTimespan, K2Node_MakeArray_Array) == 0x000120, "Member 'DCUIFunctionLibrary_C_GetShortDHMSTextFromTimespan::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(DCUIFunctionLibrary_C_GetShortDHMSTextFromTimespan, K2Node_MakeStruct_FormatArgumentData_2) == 0x000130, "Member 'DCUIFunctionLibrary_C_GetShortDHMSTextFromTimespan::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(DCUIFunctionLibrary_C_GetShortDHMSTextFromTimespan, CallFunc_Format_ReturnValue) == 0x000180, "Member 'DCUIFunctionLibrary_C_GetShortDHMSTextFromTimespan::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(DCUIFunctionLibrary_C_GetShortDHMSTextFromTimespan, CallFunc_Conv_IntToText_ReturnValue_2) == 0x000198, "Member 'DCUIFunctionLibrary_C_GetShortDHMSTextFromTimespan::CallFunc_Conv_IntToText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(DCUIFunctionLibrary_C_GetShortDHMSTextFromTimespan, K2Node_MakeStruct_FormatArgumentData_3) == 0x0001B0, "Member 'DCUIFunctionLibrary_C_GetShortDHMSTextFromTimespan::K2Node_MakeStruct_FormatArgumentData_3' has a wrong offset!");
static_assert(offsetof(DCUIFunctionLibrary_C_GetShortDHMSTextFromTimespan, K2Node_MakeStruct_FormatArgumentData_4) == 0x000200, "Member 'DCUIFunctionLibrary_C_GetShortDHMSTextFromTimespan::K2Node_MakeStruct_FormatArgumentData_4' has a wrong offset!");
static_assert(offsetof(DCUIFunctionLibrary_C_GetShortDHMSTextFromTimespan, K2Node_MakeArray_Array_1) == 0x000250, "Member 'DCUIFunctionLibrary_C_GetShortDHMSTextFromTimespan::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(DCUIFunctionLibrary_C_GetShortDHMSTextFromTimespan, K2Node_MakeStruct_FormatArgumentData_5) == 0x000260, "Member 'DCUIFunctionLibrary_C_GetShortDHMSTextFromTimespan::K2Node_MakeStruct_FormatArgumentData_5' has a wrong offset!");
static_assert(offsetof(DCUIFunctionLibrary_C_GetShortDHMSTextFromTimespan, CallFunc_Format_ReturnValue_1) == 0x0002B0, "Member 'DCUIFunctionLibrary_C_GetShortDHMSTextFromTimespan::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DCUIFunctionLibrary_C_GetShortDHMSTextFromTimespan, CallFunc_EqualEqual_IntInt_ReturnValue_2) == 0x0002C8, "Member 'DCUIFunctionLibrary_C_GetShortDHMSTextFromTimespan::CallFunc_EqualEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(DCUIFunctionLibrary_C_GetShortDHMSTextFromTimespan, CallFunc_Conv_IntToText_ReturnValue_3) == 0x0002D0, "Member 'DCUIFunctionLibrary_C_GetShortDHMSTextFromTimespan::CallFunc_Conv_IntToText_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(DCUIFunctionLibrary_C_GetShortDHMSTextFromTimespan, CallFunc_EqualEqual_IntInt_ReturnValue_3) == 0x0002E8, "Member 'DCUIFunctionLibrary_C_GetShortDHMSTextFromTimespan::CallFunc_EqualEqual_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(DCUIFunctionLibrary_C_GetShortDHMSTextFromTimespan, K2Node_MakeStruct_FormatArgumentData_6) == 0x0002F0, "Member 'DCUIFunctionLibrary_C_GetShortDHMSTextFromTimespan::K2Node_MakeStruct_FormatArgumentData_6' has a wrong offset!");
static_assert(offsetof(DCUIFunctionLibrary_C_GetShortDHMSTextFromTimespan, K2Node_MakeArray_Array_2) == 0x000340, "Member 'DCUIFunctionLibrary_C_GetShortDHMSTextFromTimespan::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(DCUIFunctionLibrary_C_GetShortDHMSTextFromTimespan, K2Node_MakeStruct_FormatArgumentData_7) == 0x000350, "Member 'DCUIFunctionLibrary_C_GetShortDHMSTextFromTimespan::K2Node_MakeStruct_FormatArgumentData_7' has a wrong offset!");
static_assert(offsetof(DCUIFunctionLibrary_C_GetShortDHMSTextFromTimespan, CallFunc_Format_ReturnValue_2) == 0x0003A0, "Member 'DCUIFunctionLibrary_C_GetShortDHMSTextFromTimespan::CallFunc_Format_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(DCUIFunctionLibrary_C_GetShortDHMSTextFromTimespan, K2Node_MakeArray_Array_3) == 0x0003B8, "Member 'DCUIFunctionLibrary_C_GetShortDHMSTextFromTimespan::K2Node_MakeArray_Array_3' has a wrong offset!");
static_assert(offsetof(DCUIFunctionLibrary_C_GetShortDHMSTextFromTimespan, CallFunc_Format_ReturnValue_3) == 0x0003C8, "Member 'DCUIFunctionLibrary_C_GetShortDHMSTextFromTimespan::CallFunc_Format_ReturnValue_3' has a wrong offset!");

// Function DCUIFunctionLibrary.DCUIFunctionLibrary_C.GetSemicircleSelectedIndexByInputDirection
// 0x00E0 (0x00E0 - 0x0000)
struct DCUIFunctionLibrary_C_GetSemicircleSelectedIndexByInputDirection final
{
public:
	struct FVector2D                              Direction;                                         // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        SectionDegreeSize;                                 // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         RadialIndex;                                       // 0x0020(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3840[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_Normal2D_ReturnValue;                     // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_DegAtan2_ReturnValue;                     // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_NormalSafe2D_ReturnValue;                 // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_Vector2DToVector_ReturnValue;        // 0x0050(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X;                          // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_RotateAngleAxis_ReturnValue;              // 0x0078(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3841[0x7];                                     // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_Conv_VectorToVector2D_ReturnValue;        // 0x0098(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_1;                        // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_1;                        // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_DegAtan2_ReturnValue_1;                   // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DCUIFunctionLibrary_C_GetSemicircleSelectedIndexByInputDirection) == 0x000008, "Wrong alignment on DCUIFunctionLibrary_C_GetSemicircleSelectedIndexByInputDirection");
static_assert(sizeof(DCUIFunctionLibrary_C_GetSemicircleSelectedIndexByInputDirection) == 0x0000E0, "Wrong size on DCUIFunctionLibrary_C_GetSemicircleSelectedIndexByInputDirection");
static_assert(offsetof(DCUIFunctionLibrary_C_GetSemicircleSelectedIndexByInputDirection, Direction) == 0x000000, "Member 'DCUIFunctionLibrary_C_GetSemicircleSelectedIndexByInputDirection::Direction' has a wrong offset!");
static_assert(offsetof(DCUIFunctionLibrary_C_GetSemicircleSelectedIndexByInputDirection, SectionDegreeSize) == 0x000010, "Member 'DCUIFunctionLibrary_C_GetSemicircleSelectedIndexByInputDirection::SectionDegreeSize' has a wrong offset!");
static_assert(offsetof(DCUIFunctionLibrary_C_GetSemicircleSelectedIndexByInputDirection, __WorldContext) == 0x000018, "Member 'DCUIFunctionLibrary_C_GetSemicircleSelectedIndexByInputDirection::__WorldContext' has a wrong offset!");
static_assert(offsetof(DCUIFunctionLibrary_C_GetSemicircleSelectedIndexByInputDirection, RadialIndex) == 0x000020, "Member 'DCUIFunctionLibrary_C_GetSemicircleSelectedIndexByInputDirection::RadialIndex' has a wrong offset!");
static_assert(offsetof(DCUIFunctionLibrary_C_GetSemicircleSelectedIndexByInputDirection, CallFunc_Normal2D_ReturnValue) == 0x000028, "Member 'DCUIFunctionLibrary_C_GetSemicircleSelectedIndexByInputDirection::CallFunc_Normal2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(DCUIFunctionLibrary_C_GetSemicircleSelectedIndexByInputDirection, CallFunc_DegAtan2_ReturnValue) == 0x000038, "Member 'DCUIFunctionLibrary_C_GetSemicircleSelectedIndexByInputDirection::CallFunc_DegAtan2_ReturnValue' has a wrong offset!");
static_assert(offsetof(DCUIFunctionLibrary_C_GetSemicircleSelectedIndexByInputDirection, CallFunc_NormalSafe2D_ReturnValue) == 0x000040, "Member 'DCUIFunctionLibrary_C_GetSemicircleSelectedIndexByInputDirection::CallFunc_NormalSafe2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(DCUIFunctionLibrary_C_GetSemicircleSelectedIndexByInputDirection, CallFunc_Conv_Vector2DToVector_ReturnValue) == 0x000050, "Member 'DCUIFunctionLibrary_C_GetSemicircleSelectedIndexByInputDirection::CallFunc_Conv_Vector2DToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(DCUIFunctionLibrary_C_GetSemicircleSelectedIndexByInputDirection, CallFunc_BreakVector2D_X) == 0x000068, "Member 'DCUIFunctionLibrary_C_GetSemicircleSelectedIndexByInputDirection::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(DCUIFunctionLibrary_C_GetSemicircleSelectedIndexByInputDirection, CallFunc_BreakVector2D_Y) == 0x000070, "Member 'DCUIFunctionLibrary_C_GetSemicircleSelectedIndexByInputDirection::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(DCUIFunctionLibrary_C_GetSemicircleSelectedIndexByInputDirection, CallFunc_RotateAngleAxis_ReturnValue) == 0x000078, "Member 'DCUIFunctionLibrary_C_GetSemicircleSelectedIndexByInputDirection::CallFunc_RotateAngleAxis_ReturnValue' has a wrong offset!");
static_assert(offsetof(DCUIFunctionLibrary_C_GetSemicircleSelectedIndexByInputDirection, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000090, "Member 'DCUIFunctionLibrary_C_GetSemicircleSelectedIndexByInputDirection::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(DCUIFunctionLibrary_C_GetSemicircleSelectedIndexByInputDirection, CallFunc_Conv_VectorToVector2D_ReturnValue) == 0x000098, "Member 'DCUIFunctionLibrary_C_GetSemicircleSelectedIndexByInputDirection::CallFunc_Conv_VectorToVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(DCUIFunctionLibrary_C_GetSemicircleSelectedIndexByInputDirection, CallFunc_BreakVector2D_X_1) == 0x0000A8, "Member 'DCUIFunctionLibrary_C_GetSemicircleSelectedIndexByInputDirection::CallFunc_BreakVector2D_X_1' has a wrong offset!");
static_assert(offsetof(DCUIFunctionLibrary_C_GetSemicircleSelectedIndexByInputDirection, CallFunc_BreakVector2D_Y_1) == 0x0000B0, "Member 'DCUIFunctionLibrary_C_GetSemicircleSelectedIndexByInputDirection::CallFunc_BreakVector2D_Y_1' has a wrong offset!");
static_assert(offsetof(DCUIFunctionLibrary_C_GetSemicircleSelectedIndexByInputDirection, CallFunc_DegAtan2_ReturnValue_1) == 0x0000B8, "Member 'DCUIFunctionLibrary_C_GetSemicircleSelectedIndexByInputDirection::CallFunc_DegAtan2_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DCUIFunctionLibrary_C_GetSemicircleSelectedIndexByInputDirection, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x0000C0, "Member 'DCUIFunctionLibrary_C_GetSemicircleSelectedIndexByInputDirection::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(DCUIFunctionLibrary_C_GetSemicircleSelectedIndexByInputDirection, CallFunc_Add_DoubleDouble_ReturnValue) == 0x0000C8, "Member 'DCUIFunctionLibrary_C_GetSemicircleSelectedIndexByInputDirection::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(DCUIFunctionLibrary_C_GetSemicircleSelectedIndexByInputDirection, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x0000D0, "Member 'DCUIFunctionLibrary_C_GetSemicircleSelectedIndexByInputDirection::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(DCUIFunctionLibrary_C_GetSemicircleSelectedIndexByInputDirection, CallFunc_FTrunc_ReturnValue) == 0x0000D8, "Member 'DCUIFunctionLibrary_C_GetSemicircleSelectedIndexByInputDirection::CallFunc_FTrunc_ReturnValue' has a wrong offset!");

// Function DCUIFunctionLibrary.DCUIFunctionLibrary_C.GetRankColor
// 0x00D8 (0x00D8 - 0x0000)
struct DCUIFunctionLibrary_C_GetRankColor final
{
public:
	class UDCLeaderboardRankGroupDataAsset*       LeaderboardRankGroupData;                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           RankColor;                                         // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMap<class UDCLeaderboardRankGroupDataAsset*, struct FLinearColor> RankColorMap;                                      // 0x0020(0x0050)(Edit, BlueprintVisible)
	TMap<class UDCLeaderboardRankGroupDataAsset*, struct FLinearColor> K2Node_MakeVariable_MakeVariableOutput;            // 0x0070(0x0050)()
	struct FLinearColor                           CallFunc_Map_Find_Value;                           // 0x00C0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DCUIFunctionLibrary_C_GetRankColor) == 0x000008, "Wrong alignment on DCUIFunctionLibrary_C_GetRankColor");
static_assert(sizeof(DCUIFunctionLibrary_C_GetRankColor) == 0x0000D8, "Wrong size on DCUIFunctionLibrary_C_GetRankColor");
static_assert(offsetof(DCUIFunctionLibrary_C_GetRankColor, LeaderboardRankGroupData) == 0x000000, "Member 'DCUIFunctionLibrary_C_GetRankColor::LeaderboardRankGroupData' has a wrong offset!");
static_assert(offsetof(DCUIFunctionLibrary_C_GetRankColor, __WorldContext) == 0x000008, "Member 'DCUIFunctionLibrary_C_GetRankColor::__WorldContext' has a wrong offset!");
static_assert(offsetof(DCUIFunctionLibrary_C_GetRankColor, RankColor) == 0x000010, "Member 'DCUIFunctionLibrary_C_GetRankColor::RankColor' has a wrong offset!");
static_assert(offsetof(DCUIFunctionLibrary_C_GetRankColor, RankColorMap) == 0x000020, "Member 'DCUIFunctionLibrary_C_GetRankColor::RankColorMap' has a wrong offset!");
static_assert(offsetof(DCUIFunctionLibrary_C_GetRankColor, K2Node_MakeVariable_MakeVariableOutput) == 0x000070, "Member 'DCUIFunctionLibrary_C_GetRankColor::K2Node_MakeVariable_MakeVariableOutput' has a wrong offset!");
static_assert(offsetof(DCUIFunctionLibrary_C_GetRankColor, CallFunc_Map_Find_Value) == 0x0000C0, "Member 'DCUIFunctionLibrary_C_GetRankColor::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(DCUIFunctionLibrary_C_GetRankColor, CallFunc_Map_Find_ReturnValue) == 0x0000D0, "Member 'DCUIFunctionLibrary_C_GetRankColor::CallFunc_Map_Find_ReturnValue' has a wrong offset!");

// Function DCUIFunctionLibrary.DCUIFunctionLibrary_C.GetRadialSelectedIndexByInputDirection
// 0x00D0 (0x00D0 - 0x0000)
struct DCUIFunctionLibrary_C_GetRadialSelectedIndexByInputDirection final
{
public:
	struct FVector2D                              Direction;                                         // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        SectionDegreeSize;                                 // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         RadialIndex;                                       // 0x0020(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3842[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_Normal2D_ReturnValue;                     // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_NormalSafe2D_ReturnValue;                 // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_Vector2DToVector_ReturnValue;        // 0x0050(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_DegAtan2_ReturnValue;                     // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_RotateAngleAxis_ReturnValue;              // 0x0070(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Conv_VectorToVector2D_ReturnValue;        // 0x0088(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X;                          // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_DegAtan2_ReturnValue_1;                   // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RotateAngleAxis_AngleDeg_ImplicitCast;    // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DCUIFunctionLibrary_C_GetRadialSelectedIndexByInputDirection) == 0x000008, "Wrong alignment on DCUIFunctionLibrary_C_GetRadialSelectedIndexByInputDirection");
static_assert(sizeof(DCUIFunctionLibrary_C_GetRadialSelectedIndexByInputDirection) == 0x0000D0, "Wrong size on DCUIFunctionLibrary_C_GetRadialSelectedIndexByInputDirection");
static_assert(offsetof(DCUIFunctionLibrary_C_GetRadialSelectedIndexByInputDirection, Direction) == 0x000000, "Member 'DCUIFunctionLibrary_C_GetRadialSelectedIndexByInputDirection::Direction' has a wrong offset!");
static_assert(offsetof(DCUIFunctionLibrary_C_GetRadialSelectedIndexByInputDirection, SectionDegreeSize) == 0x000010, "Member 'DCUIFunctionLibrary_C_GetRadialSelectedIndexByInputDirection::SectionDegreeSize' has a wrong offset!");
static_assert(offsetof(DCUIFunctionLibrary_C_GetRadialSelectedIndexByInputDirection, __WorldContext) == 0x000018, "Member 'DCUIFunctionLibrary_C_GetRadialSelectedIndexByInputDirection::__WorldContext' has a wrong offset!");
static_assert(offsetof(DCUIFunctionLibrary_C_GetRadialSelectedIndexByInputDirection, RadialIndex) == 0x000020, "Member 'DCUIFunctionLibrary_C_GetRadialSelectedIndexByInputDirection::RadialIndex' has a wrong offset!");
static_assert(offsetof(DCUIFunctionLibrary_C_GetRadialSelectedIndexByInputDirection, CallFunc_Normal2D_ReturnValue) == 0x000028, "Member 'DCUIFunctionLibrary_C_GetRadialSelectedIndexByInputDirection::CallFunc_Normal2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(DCUIFunctionLibrary_C_GetRadialSelectedIndexByInputDirection, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000038, "Member 'DCUIFunctionLibrary_C_GetRadialSelectedIndexByInputDirection::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(DCUIFunctionLibrary_C_GetRadialSelectedIndexByInputDirection, CallFunc_NormalSafe2D_ReturnValue) == 0x000040, "Member 'DCUIFunctionLibrary_C_GetRadialSelectedIndexByInputDirection::CallFunc_NormalSafe2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(DCUIFunctionLibrary_C_GetRadialSelectedIndexByInputDirection, CallFunc_Conv_Vector2DToVector_ReturnValue) == 0x000050, "Member 'DCUIFunctionLibrary_C_GetRadialSelectedIndexByInputDirection::CallFunc_Conv_Vector2DToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(DCUIFunctionLibrary_C_GetRadialSelectedIndexByInputDirection, CallFunc_DegAtan2_ReturnValue) == 0x000068, "Member 'DCUIFunctionLibrary_C_GetRadialSelectedIndexByInputDirection::CallFunc_DegAtan2_ReturnValue' has a wrong offset!");
static_assert(offsetof(DCUIFunctionLibrary_C_GetRadialSelectedIndexByInputDirection, CallFunc_RotateAngleAxis_ReturnValue) == 0x000070, "Member 'DCUIFunctionLibrary_C_GetRadialSelectedIndexByInputDirection::CallFunc_RotateAngleAxis_ReturnValue' has a wrong offset!");
static_assert(offsetof(DCUIFunctionLibrary_C_GetRadialSelectedIndexByInputDirection, CallFunc_Conv_VectorToVector2D_ReturnValue) == 0x000088, "Member 'DCUIFunctionLibrary_C_GetRadialSelectedIndexByInputDirection::CallFunc_Conv_VectorToVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(DCUIFunctionLibrary_C_GetRadialSelectedIndexByInputDirection, CallFunc_BreakVector2D_X) == 0x000098, "Member 'DCUIFunctionLibrary_C_GetRadialSelectedIndexByInputDirection::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(DCUIFunctionLibrary_C_GetRadialSelectedIndexByInputDirection, CallFunc_BreakVector2D_Y) == 0x0000A0, "Member 'DCUIFunctionLibrary_C_GetRadialSelectedIndexByInputDirection::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(DCUIFunctionLibrary_C_GetRadialSelectedIndexByInputDirection, CallFunc_DegAtan2_ReturnValue_1) == 0x0000A8, "Member 'DCUIFunctionLibrary_C_GetRadialSelectedIndexByInputDirection::CallFunc_DegAtan2_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DCUIFunctionLibrary_C_GetRadialSelectedIndexByInputDirection, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x0000B0, "Member 'DCUIFunctionLibrary_C_GetRadialSelectedIndexByInputDirection::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(DCUIFunctionLibrary_C_GetRadialSelectedIndexByInputDirection, CallFunc_Add_DoubleDouble_ReturnValue) == 0x0000B8, "Member 'DCUIFunctionLibrary_C_GetRadialSelectedIndexByInputDirection::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(DCUIFunctionLibrary_C_GetRadialSelectedIndexByInputDirection, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x0000C0, "Member 'DCUIFunctionLibrary_C_GetRadialSelectedIndexByInputDirection::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DCUIFunctionLibrary_C_GetRadialSelectedIndexByInputDirection, CallFunc_FTrunc_ReturnValue) == 0x0000C8, "Member 'DCUIFunctionLibrary_C_GetRadialSelectedIndexByInputDirection::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(DCUIFunctionLibrary_C_GetRadialSelectedIndexByInputDirection, CallFunc_RotateAngleAxis_AngleDeg_ImplicitCast) == 0x0000CC, "Member 'DCUIFunctionLibrary_C_GetRadialSelectedIndexByInputDirection::CallFunc_RotateAngleAxis_AngleDeg_ImplicitCast' has a wrong offset!");

// Function DCUIFunctionLibrary.DCUIFunctionLibrary_C.GetPlayerCharacterEffectTypeText
// 0x00E8 (0x00E8 - 0x0000)
struct DCUIFunctionLibrary_C_GetPlayerCharacterEffectTypeText final
{
public:
	struct FGameplayTag                           GameplayTag;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   Text;                                              // 0x0010(0x0018)(Parm, OutParm)
	TMap<struct FGameplayTag, class FText>        TextMap;                                           // 0x0028(0x0050)(Edit, BlueprintVisible)
	TMap<struct FGameplayTag, class FText>        K2Node_MakeVariable_MakeVariableOutput;            // 0x0078(0x0050)()
	class FText                                   CallFunc_Map_Find_Value;                           // 0x00C8(0x0018)()
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DCUIFunctionLibrary_C_GetPlayerCharacterEffectTypeText) == 0x000008, "Wrong alignment on DCUIFunctionLibrary_C_GetPlayerCharacterEffectTypeText");
static_assert(sizeof(DCUIFunctionLibrary_C_GetPlayerCharacterEffectTypeText) == 0x0000E8, "Wrong size on DCUIFunctionLibrary_C_GetPlayerCharacterEffectTypeText");
static_assert(offsetof(DCUIFunctionLibrary_C_GetPlayerCharacterEffectTypeText, GameplayTag) == 0x000000, "Member 'DCUIFunctionLibrary_C_GetPlayerCharacterEffectTypeText::GameplayTag' has a wrong offset!");
static_assert(offsetof(DCUIFunctionLibrary_C_GetPlayerCharacterEffectTypeText, __WorldContext) == 0x000008, "Member 'DCUIFunctionLibrary_C_GetPlayerCharacterEffectTypeText::__WorldContext' has a wrong offset!");
static_assert(offsetof(DCUIFunctionLibrary_C_GetPlayerCharacterEffectTypeText, Text) == 0x000010, "Member 'DCUIFunctionLibrary_C_GetPlayerCharacterEffectTypeText::Text' has a wrong offset!");
static_assert(offsetof(DCUIFunctionLibrary_C_GetPlayerCharacterEffectTypeText, TextMap) == 0x000028, "Member 'DCUIFunctionLibrary_C_GetPlayerCharacterEffectTypeText::TextMap' has a wrong offset!");
static_assert(offsetof(DCUIFunctionLibrary_C_GetPlayerCharacterEffectTypeText, K2Node_MakeVariable_MakeVariableOutput) == 0x000078, "Member 'DCUIFunctionLibrary_C_GetPlayerCharacterEffectTypeText::K2Node_MakeVariable_MakeVariableOutput' has a wrong offset!");
static_assert(offsetof(DCUIFunctionLibrary_C_GetPlayerCharacterEffectTypeText, CallFunc_Map_Find_Value) == 0x0000C8, "Member 'DCUIFunctionLibrary_C_GetPlayerCharacterEffectTypeText::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(DCUIFunctionLibrary_C_GetPlayerCharacterEffectTypeText, CallFunc_Map_Find_ReturnValue) == 0x0000E0, "Member 'DCUIFunctionLibrary_C_GetPlayerCharacterEffectTypeText::CallFunc_Map_Find_ReturnValue' has a wrong offset!");

// Function DCUIFunctionLibrary.DCUIFunctionLibrary_C.GetMusicTypeColor
// 0x00F8 (0x00F8 - 0x0000)
struct DCUIFunctionLibrary_C_GetMusicTypeColor final
{
public:
	struct FGameplayTag                           MusicSourceType;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            OutlineColor;                                      // 0x0010(0x0014)(Parm, OutParm)
	uint8                                         Pad_3843[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<struct FGameplayTag, struct FSlateColor> ColorMap;                                          // 0x0028(0x0050)(Edit, BlueprintVisible)
	TMap<struct FGameplayTag, struct FSlateColor> K2Node_MakeVariable_MakeVariableOutput;            // 0x0078(0x0050)()
	struct FSlateColor                            CallFunc_Map_Find_Value;                           // 0x00C8(0x0014)()
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x00DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3844[0x3];                                     // 0x00DD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x00E0(0x0014)()
};
static_assert(alignof(DCUIFunctionLibrary_C_GetMusicTypeColor) == 0x000008, "Wrong alignment on DCUIFunctionLibrary_C_GetMusicTypeColor");
static_assert(sizeof(DCUIFunctionLibrary_C_GetMusicTypeColor) == 0x0000F8, "Wrong size on DCUIFunctionLibrary_C_GetMusicTypeColor");
static_assert(offsetof(DCUIFunctionLibrary_C_GetMusicTypeColor, MusicSourceType) == 0x000000, "Member 'DCUIFunctionLibrary_C_GetMusicTypeColor::MusicSourceType' has a wrong offset!");
static_assert(offsetof(DCUIFunctionLibrary_C_GetMusicTypeColor, __WorldContext) == 0x000008, "Member 'DCUIFunctionLibrary_C_GetMusicTypeColor::__WorldContext' has a wrong offset!");
static_assert(offsetof(DCUIFunctionLibrary_C_GetMusicTypeColor, OutlineColor) == 0x000010, "Member 'DCUIFunctionLibrary_C_GetMusicTypeColor::OutlineColor' has a wrong offset!");
static_assert(offsetof(DCUIFunctionLibrary_C_GetMusicTypeColor, ColorMap) == 0x000028, "Member 'DCUIFunctionLibrary_C_GetMusicTypeColor::ColorMap' has a wrong offset!");
static_assert(offsetof(DCUIFunctionLibrary_C_GetMusicTypeColor, K2Node_MakeVariable_MakeVariableOutput) == 0x000078, "Member 'DCUIFunctionLibrary_C_GetMusicTypeColor::K2Node_MakeVariable_MakeVariableOutput' has a wrong offset!");
static_assert(offsetof(DCUIFunctionLibrary_C_GetMusicTypeColor, CallFunc_Map_Find_Value) == 0x0000C8, "Member 'DCUIFunctionLibrary_C_GetMusicTypeColor::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(DCUIFunctionLibrary_C_GetMusicTypeColor, CallFunc_Map_Find_ReturnValue) == 0x0000DC, "Member 'DCUIFunctionLibrary_C_GetMusicTypeColor::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(DCUIFunctionLibrary_C_GetMusicTypeColor, K2Node_MakeStruct_SlateColor) == 0x0000E0, "Member 'DCUIFunctionLibrary_C_GetMusicTypeColor::K2Node_MakeStruct_SlateColor' has a wrong offset!");

// Function DCUIFunctionLibrary.DCUIFunctionLibrary_C.GetItemWeaponTypeText
// 0x0098 (0x0098 - 0x0000)
struct DCUIFunctionLibrary_C_GetItemWeaponTypeText final
{
public:
	struct FGameplayTag                           GameplayTag;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   Text;                                              // 0x0010(0x0018)(Parm, OutParm)
	TMap<struct FGameplayTag, class FText>        CallFunc_GetItemWeaponTypeTextMap_ReturnValue;     // 0x0028(0x0050)(ConstParm)
	class FText                                   CallFunc_Map_Find_Value;                           // 0x0078(0x0018)()
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DCUIFunctionLibrary_C_GetItemWeaponTypeText) == 0x000008, "Wrong alignment on DCUIFunctionLibrary_C_GetItemWeaponTypeText");
static_assert(sizeof(DCUIFunctionLibrary_C_GetItemWeaponTypeText) == 0x000098, "Wrong size on DCUIFunctionLibrary_C_GetItemWeaponTypeText");
static_assert(offsetof(DCUIFunctionLibrary_C_GetItemWeaponTypeText, GameplayTag) == 0x000000, "Member 'DCUIFunctionLibrary_C_GetItemWeaponTypeText::GameplayTag' has a wrong offset!");
static_assert(offsetof(DCUIFunctionLibrary_C_GetItemWeaponTypeText, __WorldContext) == 0x000008, "Member 'DCUIFunctionLibrary_C_GetItemWeaponTypeText::__WorldContext' has a wrong offset!");
static_assert(offsetof(DCUIFunctionLibrary_C_GetItemWeaponTypeText, Text) == 0x000010, "Member 'DCUIFunctionLibrary_C_GetItemWeaponTypeText::Text' has a wrong offset!");
static_assert(offsetof(DCUIFunctionLibrary_C_GetItemWeaponTypeText, CallFunc_GetItemWeaponTypeTextMap_ReturnValue) == 0x000028, "Member 'DCUIFunctionLibrary_C_GetItemWeaponTypeText::CallFunc_GetItemWeaponTypeTextMap_ReturnValue' has a wrong offset!");
static_assert(offsetof(DCUIFunctionLibrary_C_GetItemWeaponTypeText, CallFunc_Map_Find_Value) == 0x000078, "Member 'DCUIFunctionLibrary_C_GetItemWeaponTypeText::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(DCUIFunctionLibrary_C_GetItemWeaponTypeText, CallFunc_Map_Find_ReturnValue) == 0x000090, "Member 'DCUIFunctionLibrary_C_GetItemWeaponTypeText::CallFunc_Map_Find_ReturnValue' has a wrong offset!");

// Function DCUIFunctionLibrary.DCUIFunctionLibrary_C.GetItemUtilityTypeText
// 0x0098 (0x0098 - 0x0000)
struct DCUIFunctionLibrary_C_GetItemUtilityTypeText final
{
public:
	struct FGameplayTag                           GameplayTag;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   Text;                                              // 0x0010(0x0018)(Parm, OutParm)
	TMap<struct FGameplayTag, class FText>        CallFunc_GetItemUtilityTypeTextMap_ReturnValue;    // 0x0028(0x0050)(ConstParm)
	class FText                                   CallFunc_Map_Find_Value;                           // 0x0078(0x0018)()
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DCUIFunctionLibrary_C_GetItemUtilityTypeText) == 0x000008, "Wrong alignment on DCUIFunctionLibrary_C_GetItemUtilityTypeText");
static_assert(sizeof(DCUIFunctionLibrary_C_GetItemUtilityTypeText) == 0x000098, "Wrong size on DCUIFunctionLibrary_C_GetItemUtilityTypeText");
static_assert(offsetof(DCUIFunctionLibrary_C_GetItemUtilityTypeText, GameplayTag) == 0x000000, "Member 'DCUIFunctionLibrary_C_GetItemUtilityTypeText::GameplayTag' has a wrong offset!");
static_assert(offsetof(DCUIFunctionLibrary_C_GetItemUtilityTypeText, __WorldContext) == 0x000008, "Member 'DCUIFunctionLibrary_C_GetItemUtilityTypeText::__WorldContext' has a wrong offset!");
static_assert(offsetof(DCUIFunctionLibrary_C_GetItemUtilityTypeText, Text) == 0x000010, "Member 'DCUIFunctionLibrary_C_GetItemUtilityTypeText::Text' has a wrong offset!");
static_assert(offsetof(DCUIFunctionLibrary_C_GetItemUtilityTypeText, CallFunc_GetItemUtilityTypeTextMap_ReturnValue) == 0x000028, "Member 'DCUIFunctionLibrary_C_GetItemUtilityTypeText::CallFunc_GetItemUtilityTypeTextMap_ReturnValue' has a wrong offset!");
static_assert(offsetof(DCUIFunctionLibrary_C_GetItemUtilityTypeText, CallFunc_Map_Find_Value) == 0x000078, "Member 'DCUIFunctionLibrary_C_GetItemUtilityTypeText::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(DCUIFunctionLibrary_C_GetItemUtilityTypeText, CallFunc_Map_Find_ReturnValue) == 0x000090, "Member 'DCUIFunctionLibrary_C_GetItemUtilityTypeText::CallFunc_Map_Find_ReturnValue' has a wrong offset!");

// Function DCUIFunctionLibrary.DCUIFunctionLibrary_C.GetItemSlotTypeText
// 0x0098 (0x0098 - 0x0000)
struct DCUIFunctionLibrary_C_GetItemSlotTypeText final
{
public:
	struct FGameplayTag                           GameplayTag;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   Text;                                              // 0x0010(0x0018)(Parm, OutParm)
	TMap<struct FGameplayTag, class FText>        CallFunc_GetItemSlotTypeTextMap_ReturnValue;       // 0x0028(0x0050)(ConstParm)
	class FText                                   CallFunc_Map_Find_Value;                           // 0x0078(0x0018)()
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DCUIFunctionLibrary_C_GetItemSlotTypeText) == 0x000008, "Wrong alignment on DCUIFunctionLibrary_C_GetItemSlotTypeText");
static_assert(sizeof(DCUIFunctionLibrary_C_GetItemSlotTypeText) == 0x000098, "Wrong size on DCUIFunctionLibrary_C_GetItemSlotTypeText");
static_assert(offsetof(DCUIFunctionLibrary_C_GetItemSlotTypeText, GameplayTag) == 0x000000, "Member 'DCUIFunctionLibrary_C_GetItemSlotTypeText::GameplayTag' has a wrong offset!");
static_assert(offsetof(DCUIFunctionLibrary_C_GetItemSlotTypeText, __WorldContext) == 0x000008, "Member 'DCUIFunctionLibrary_C_GetItemSlotTypeText::__WorldContext' has a wrong offset!");
static_assert(offsetof(DCUIFunctionLibrary_C_GetItemSlotTypeText, Text) == 0x000010, "Member 'DCUIFunctionLibrary_C_GetItemSlotTypeText::Text' has a wrong offset!");
static_assert(offsetof(DCUIFunctionLibrary_C_GetItemSlotTypeText, CallFunc_GetItemSlotTypeTextMap_ReturnValue) == 0x000028, "Member 'DCUIFunctionLibrary_C_GetItemSlotTypeText::CallFunc_GetItemSlotTypeTextMap_ReturnValue' has a wrong offset!");
static_assert(offsetof(DCUIFunctionLibrary_C_GetItemSlotTypeText, CallFunc_Map_Find_Value) == 0x000078, "Member 'DCUIFunctionLibrary_C_GetItemSlotTypeText::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(DCUIFunctionLibrary_C_GetItemSlotTypeText, CallFunc_Map_Find_ReturnValue) == 0x000090, "Member 'DCUIFunctionLibrary_C_GetItemSlotTypeText::CallFunc_Map_Find_ReturnValue' has a wrong offset!");

// Function DCUIFunctionLibrary.DCUIFunctionLibrary_C.GetItemRaritySlateColor
// 0x00F8 (0x00F8 - 0x0000)
struct DCUIFunctionLibrary_C_GetItemRaritySlateColor final
{
public:
	struct FGameplayTag                           Rarity;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            SlateColor;                                        // 0x0010(0x0014)(Parm, OutParm)
	uint8                                         Pad_3845[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<struct FGameplayTag, struct FSlateColor> SlateColorMap;                                     // 0x0028(0x0050)(Edit, BlueprintVisible)
	TMap<struct FGameplayTag, struct FSlateColor> K2Node_MakeVariable_MakeVariableOutput;            // 0x0078(0x0050)()
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x00C8(0x0014)()
	struct FSlateColor                            CallFunc_Map_Find_Value;                           // 0x00DC(0x0014)()
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DCUIFunctionLibrary_C_GetItemRaritySlateColor) == 0x000008, "Wrong alignment on DCUIFunctionLibrary_C_GetItemRaritySlateColor");
static_assert(sizeof(DCUIFunctionLibrary_C_GetItemRaritySlateColor) == 0x0000F8, "Wrong size on DCUIFunctionLibrary_C_GetItemRaritySlateColor");
static_assert(offsetof(DCUIFunctionLibrary_C_GetItemRaritySlateColor, Rarity) == 0x000000, "Member 'DCUIFunctionLibrary_C_GetItemRaritySlateColor::Rarity' has a wrong offset!");
static_assert(offsetof(DCUIFunctionLibrary_C_GetItemRaritySlateColor, __WorldContext) == 0x000008, "Member 'DCUIFunctionLibrary_C_GetItemRaritySlateColor::__WorldContext' has a wrong offset!");
static_assert(offsetof(DCUIFunctionLibrary_C_GetItemRaritySlateColor, SlateColor) == 0x000010, "Member 'DCUIFunctionLibrary_C_GetItemRaritySlateColor::SlateColor' has a wrong offset!");
static_assert(offsetof(DCUIFunctionLibrary_C_GetItemRaritySlateColor, SlateColorMap) == 0x000028, "Member 'DCUIFunctionLibrary_C_GetItemRaritySlateColor::SlateColorMap' has a wrong offset!");
static_assert(offsetof(DCUIFunctionLibrary_C_GetItemRaritySlateColor, K2Node_MakeVariable_MakeVariableOutput) == 0x000078, "Member 'DCUIFunctionLibrary_C_GetItemRaritySlateColor::K2Node_MakeVariable_MakeVariableOutput' has a wrong offset!");
static_assert(offsetof(DCUIFunctionLibrary_C_GetItemRaritySlateColor, K2Node_MakeStruct_SlateColor) == 0x0000C8, "Member 'DCUIFunctionLibrary_C_GetItemRaritySlateColor::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(DCUIFunctionLibrary_C_GetItemRaritySlateColor, CallFunc_Map_Find_Value) == 0x0000DC, "Member 'DCUIFunctionLibrary_C_GetItemRaritySlateColor::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(DCUIFunctionLibrary_C_GetItemRaritySlateColor, CallFunc_Map_Find_ReturnValue) == 0x0000F0, "Member 'DCUIFunctionLibrary_C_GetItemRaritySlateColor::CallFunc_Map_Find_ReturnValue' has a wrong offset!");

// Function DCUIFunctionLibrary.DCUIFunctionLibrary_C.GetItemHandTypeText
// 0x0098 (0x0098 - 0x0000)
struct DCUIFunctionLibrary_C_GetItemHandTypeText final
{
public:
	struct FGameplayTag                           GameplayTag;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   Text;                                              // 0x0010(0x0018)(Parm, OutParm)
	TMap<struct FGameplayTag, class FText>        CallFunc_GetItemHandTypeTextMap_ReturnValue;       // 0x0028(0x0050)(ConstParm)
	class FText                                   CallFunc_Map_Find_Value;                           // 0x0078(0x0018)()
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DCUIFunctionLibrary_C_GetItemHandTypeText) == 0x000008, "Wrong alignment on DCUIFunctionLibrary_C_GetItemHandTypeText");
static_assert(sizeof(DCUIFunctionLibrary_C_GetItemHandTypeText) == 0x000098, "Wrong size on DCUIFunctionLibrary_C_GetItemHandTypeText");
static_assert(offsetof(DCUIFunctionLibrary_C_GetItemHandTypeText, GameplayTag) == 0x000000, "Member 'DCUIFunctionLibrary_C_GetItemHandTypeText::GameplayTag' has a wrong offset!");
static_assert(offsetof(DCUIFunctionLibrary_C_GetItemHandTypeText, __WorldContext) == 0x000008, "Member 'DCUIFunctionLibrary_C_GetItemHandTypeText::__WorldContext' has a wrong offset!");
static_assert(offsetof(DCUIFunctionLibrary_C_GetItemHandTypeText, Text) == 0x000010, "Member 'DCUIFunctionLibrary_C_GetItemHandTypeText::Text' has a wrong offset!");
static_assert(offsetof(DCUIFunctionLibrary_C_GetItemHandTypeText, CallFunc_GetItemHandTypeTextMap_ReturnValue) == 0x000028, "Member 'DCUIFunctionLibrary_C_GetItemHandTypeText::CallFunc_GetItemHandTypeTextMap_ReturnValue' has a wrong offset!");
static_assert(offsetof(DCUIFunctionLibrary_C_GetItemHandTypeText, CallFunc_Map_Find_Value) == 0x000078, "Member 'DCUIFunctionLibrary_C_GetItemHandTypeText::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(DCUIFunctionLibrary_C_GetItemHandTypeText, CallFunc_Map_Find_ReturnValue) == 0x000090, "Member 'DCUIFunctionLibrary_C_GetItemHandTypeText::CallFunc_Map_Find_ReturnValue' has a wrong offset!");

// Function DCUIFunctionLibrary.DCUIFunctionLibrary_C.GetItemEffectValueText
// 0x0050 (0x0050 - 0x0000)
struct DCUIFunctionLibrary_C_GetItemEffectValueText final
{
public:
	struct FGameplayTag                           EffectTag;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	int32                                         EffectValue;                                       // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3846[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   EffectValueText;                                   // 0x0018(0x0018)(Parm, OutParm)
	int32                                         Value;                                             // 0x0030(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3847[0x4];                                     // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetItemEffectValueText_ReturnValue;       // 0x0038(0x0018)()
};
static_assert(alignof(DCUIFunctionLibrary_C_GetItemEffectValueText) == 0x000008, "Wrong alignment on DCUIFunctionLibrary_C_GetItemEffectValueText");
static_assert(sizeof(DCUIFunctionLibrary_C_GetItemEffectValueText) == 0x000050, "Wrong size on DCUIFunctionLibrary_C_GetItemEffectValueText");
static_assert(offsetof(DCUIFunctionLibrary_C_GetItemEffectValueText, EffectTag) == 0x000000, "Member 'DCUIFunctionLibrary_C_GetItemEffectValueText::EffectTag' has a wrong offset!");
static_assert(offsetof(DCUIFunctionLibrary_C_GetItemEffectValueText, EffectValue) == 0x000008, "Member 'DCUIFunctionLibrary_C_GetItemEffectValueText::EffectValue' has a wrong offset!");
static_assert(offsetof(DCUIFunctionLibrary_C_GetItemEffectValueText, __WorldContext) == 0x000010, "Member 'DCUIFunctionLibrary_C_GetItemEffectValueText::__WorldContext' has a wrong offset!");
static_assert(offsetof(DCUIFunctionLibrary_C_GetItemEffectValueText, EffectValueText) == 0x000018, "Member 'DCUIFunctionLibrary_C_GetItemEffectValueText::EffectValueText' has a wrong offset!");
static_assert(offsetof(DCUIFunctionLibrary_C_GetItemEffectValueText, Value) == 0x000030, "Member 'DCUIFunctionLibrary_C_GetItemEffectValueText::Value' has a wrong offset!");
static_assert(offsetof(DCUIFunctionLibrary_C_GetItemEffectValueText, CallFunc_GetItemEffectValueText_ReturnValue) == 0x000038, "Member 'DCUIFunctionLibrary_C_GetItemEffectValueText::CallFunc_GetItemEffectValueText_ReturnValue' has a wrong offset!");

// Function DCUIFunctionLibrary.DCUIFunctionLibrary_C.GetItemEffectTypeText
// 0x0040 (0x0040 - 0x0000)
struct DCUIFunctionLibrary_C_GetItemEffectTypeText final
{
public:
	struct FGameplayTag                           GameplayTag;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   Text;                                              // 0x0010(0x0018)(Parm, OutParm)
	class FText                                   CallFunc_GetSetByCallerTagText_ReturnValue;        // 0x0028(0x0018)()
};
static_assert(alignof(DCUIFunctionLibrary_C_GetItemEffectTypeText) == 0x000008, "Wrong alignment on DCUIFunctionLibrary_C_GetItemEffectTypeText");
static_assert(sizeof(DCUIFunctionLibrary_C_GetItemEffectTypeText) == 0x000040, "Wrong size on DCUIFunctionLibrary_C_GetItemEffectTypeText");
static_assert(offsetof(DCUIFunctionLibrary_C_GetItemEffectTypeText, GameplayTag) == 0x000000, "Member 'DCUIFunctionLibrary_C_GetItemEffectTypeText::GameplayTag' has a wrong offset!");
static_assert(offsetof(DCUIFunctionLibrary_C_GetItemEffectTypeText, __WorldContext) == 0x000008, "Member 'DCUIFunctionLibrary_C_GetItemEffectTypeText::__WorldContext' has a wrong offset!");
static_assert(offsetof(DCUIFunctionLibrary_C_GetItemEffectTypeText, Text) == 0x000010, "Member 'DCUIFunctionLibrary_C_GetItemEffectTypeText::Text' has a wrong offset!");
static_assert(offsetof(DCUIFunctionLibrary_C_GetItemEffectTypeText, CallFunc_GetSetByCallerTagText_ReturnValue) == 0x000028, "Member 'DCUIFunctionLibrary_C_GetItemEffectTypeText::CallFunc_GetSetByCallerTagText_ReturnValue' has a wrong offset!");

// Function DCUIFunctionLibrary.DCUIFunctionLibrary_C.GetItemArmorTypeText
// 0x0098 (0x0098 - 0x0000)
struct DCUIFunctionLibrary_C_GetItemArmorTypeText final
{
public:
	struct FGameplayTag                           GameplayTag;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   Text;                                              // 0x0010(0x0018)(Parm, OutParm)
	TMap<struct FGameplayTag, class FText>        CallFunc_GetItemArmorTypeTextMap_ReturnValue;      // 0x0028(0x0050)(ConstParm)
	class FText                                   CallFunc_Map_Find_Value;                           // 0x0078(0x0018)()
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DCUIFunctionLibrary_C_GetItemArmorTypeText) == 0x000008, "Wrong alignment on DCUIFunctionLibrary_C_GetItemArmorTypeText");
static_assert(sizeof(DCUIFunctionLibrary_C_GetItemArmorTypeText) == 0x000098, "Wrong size on DCUIFunctionLibrary_C_GetItemArmorTypeText");
static_assert(offsetof(DCUIFunctionLibrary_C_GetItemArmorTypeText, GameplayTag) == 0x000000, "Member 'DCUIFunctionLibrary_C_GetItemArmorTypeText::GameplayTag' has a wrong offset!");
static_assert(offsetof(DCUIFunctionLibrary_C_GetItemArmorTypeText, __WorldContext) == 0x000008, "Member 'DCUIFunctionLibrary_C_GetItemArmorTypeText::__WorldContext' has a wrong offset!");
static_assert(offsetof(DCUIFunctionLibrary_C_GetItemArmorTypeText, Text) == 0x000010, "Member 'DCUIFunctionLibrary_C_GetItemArmorTypeText::Text' has a wrong offset!");
static_assert(offsetof(DCUIFunctionLibrary_C_GetItemArmorTypeText, CallFunc_GetItemArmorTypeTextMap_ReturnValue) == 0x000028, "Member 'DCUIFunctionLibrary_C_GetItemArmorTypeText::CallFunc_GetItemArmorTypeTextMap_ReturnValue' has a wrong offset!");
static_assert(offsetof(DCUIFunctionLibrary_C_GetItemArmorTypeText, CallFunc_Map_Find_Value) == 0x000078, "Member 'DCUIFunctionLibrary_C_GetItemArmorTypeText::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(DCUIFunctionLibrary_C_GetItemArmorTypeText, CallFunc_Map_Find_ReturnValue) == 0x000090, "Member 'DCUIFunctionLibrary_C_GetItemArmorTypeText::CallFunc_Map_Find_ReturnValue' has a wrong offset!");

// Function DCUIFunctionLibrary.DCUIFunctionLibrary_C.GetGamepadButtonImage
// 0x00D8 (0x00D8 - 0x0000)
struct DCUIFunctionLibrary_C_GetGamepadButtonImage final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Image;                                             // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TMap<struct FKey, class UTexture2D*>          ImageMapByKey;                                     // 0x0028(0x0050)(Edit, BlueprintVisible)
	TMap<struct FKey, class UTexture2D*>          K2Node_MakeVariable_MakeVariableOutput;            // 0x0078(0x0050)()
	class UTexture2D*                             CallFunc_Map_Find_Value;                           // 0x00C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DCUIFunctionLibrary_C_GetGamepadButtonImage) == 0x000008, "Wrong alignment on DCUIFunctionLibrary_C_GetGamepadButtonImage");
static_assert(sizeof(DCUIFunctionLibrary_C_GetGamepadButtonImage) == 0x0000D8, "Wrong size on DCUIFunctionLibrary_C_GetGamepadButtonImage");
static_assert(offsetof(DCUIFunctionLibrary_C_GetGamepadButtonImage, Key) == 0x000000, "Member 'DCUIFunctionLibrary_C_GetGamepadButtonImage::Key' has a wrong offset!");
static_assert(offsetof(DCUIFunctionLibrary_C_GetGamepadButtonImage, __WorldContext) == 0x000018, "Member 'DCUIFunctionLibrary_C_GetGamepadButtonImage::__WorldContext' has a wrong offset!");
static_assert(offsetof(DCUIFunctionLibrary_C_GetGamepadButtonImage, Image) == 0x000020, "Member 'DCUIFunctionLibrary_C_GetGamepadButtonImage::Image' has a wrong offset!");
static_assert(offsetof(DCUIFunctionLibrary_C_GetGamepadButtonImage, ImageMapByKey) == 0x000028, "Member 'DCUIFunctionLibrary_C_GetGamepadButtonImage::ImageMapByKey' has a wrong offset!");
static_assert(offsetof(DCUIFunctionLibrary_C_GetGamepadButtonImage, K2Node_MakeVariable_MakeVariableOutput) == 0x000078, "Member 'DCUIFunctionLibrary_C_GetGamepadButtonImage::K2Node_MakeVariable_MakeVariableOutput' has a wrong offset!");
static_assert(offsetof(DCUIFunctionLibrary_C_GetGamepadButtonImage, CallFunc_Map_Find_Value) == 0x0000C8, "Member 'DCUIFunctionLibrary_C_GetGamepadButtonImage::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(DCUIFunctionLibrary_C_GetGamepadButtonImage, CallFunc_Map_Find_ReturnValue) == 0x0000D0, "Member 'DCUIFunctionLibrary_C_GetGamepadButtonImage::CallFunc_Map_Find_ReturnValue' has a wrong offset!");

// Function DCUIFunctionLibrary.DCUIFunctionLibrary_C.GetFirstKeyByInputAction
// 0x0130 (0x0130 - 0x0000)
struct DCUIFunctionLibrary_C_GetFirstKeyByInputAction final
{
public:
	const class UInputAction*                     InputAction;                                       // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   KeyDisplayName;                                    // 0x0010(0x0018)(Parm, OutParm)
	class UTexture2D*                             KeyImage;                                          // 0x0028(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TMap<struct FKey, class UTexture2D*>          ImageMapByKey;                                     // 0x0030(0x0050)(Edit, BlueprintVisible)
	TMap<struct FKey, class UTexture2D*>          K2Node_MakeVariable_MakeVariableOutput;            // 0x0080(0x0050)()
	struct FKey                                   CallFunc_GetFirstMappedKeyFromRegisteredInputToAction_ReturnValue; // 0x00D0(0x0018)(HasGetValueTypeHash)
	class FText                                   CallFunc_Key_GetDisplayName_ReturnValue;           // 0x00E8(0x0018)()
	class FText                                   CallFunc_Key_GetDisplayName_ReturnValue_1;         // 0x0100(0x0018)()
	bool                                          CallFunc_TextIsEmpty_ReturnValue;                  // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TextIsEmpty_ReturnValue_1;                // 0x0119(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Key_IsGamepadKey_ReturnValue;             // 0x011A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Key_IsKeyboardKey_ReturnValue;            // 0x011B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Key_IsMouseButton_ReturnValue;            // 0x011C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x011D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3848[0x2];                                     // 0x011E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             CallFunc_Map_Find_Value;                           // 0x0120(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0129(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DCUIFunctionLibrary_C_GetFirstKeyByInputAction) == 0x000008, "Wrong alignment on DCUIFunctionLibrary_C_GetFirstKeyByInputAction");
static_assert(sizeof(DCUIFunctionLibrary_C_GetFirstKeyByInputAction) == 0x000130, "Wrong size on DCUIFunctionLibrary_C_GetFirstKeyByInputAction");
static_assert(offsetof(DCUIFunctionLibrary_C_GetFirstKeyByInputAction, InputAction) == 0x000000, "Member 'DCUIFunctionLibrary_C_GetFirstKeyByInputAction::InputAction' has a wrong offset!");
static_assert(offsetof(DCUIFunctionLibrary_C_GetFirstKeyByInputAction, __WorldContext) == 0x000008, "Member 'DCUIFunctionLibrary_C_GetFirstKeyByInputAction::__WorldContext' has a wrong offset!");
static_assert(offsetof(DCUIFunctionLibrary_C_GetFirstKeyByInputAction, KeyDisplayName) == 0x000010, "Member 'DCUIFunctionLibrary_C_GetFirstKeyByInputAction::KeyDisplayName' has a wrong offset!");
static_assert(offsetof(DCUIFunctionLibrary_C_GetFirstKeyByInputAction, KeyImage) == 0x000028, "Member 'DCUIFunctionLibrary_C_GetFirstKeyByInputAction::KeyImage' has a wrong offset!");
static_assert(offsetof(DCUIFunctionLibrary_C_GetFirstKeyByInputAction, ImageMapByKey) == 0x000030, "Member 'DCUIFunctionLibrary_C_GetFirstKeyByInputAction::ImageMapByKey' has a wrong offset!");
static_assert(offsetof(DCUIFunctionLibrary_C_GetFirstKeyByInputAction, K2Node_MakeVariable_MakeVariableOutput) == 0x000080, "Member 'DCUIFunctionLibrary_C_GetFirstKeyByInputAction::K2Node_MakeVariable_MakeVariableOutput' has a wrong offset!");
static_assert(offsetof(DCUIFunctionLibrary_C_GetFirstKeyByInputAction, CallFunc_GetFirstMappedKeyFromRegisteredInputToAction_ReturnValue) == 0x0000D0, "Member 'DCUIFunctionLibrary_C_GetFirstKeyByInputAction::CallFunc_GetFirstMappedKeyFromRegisteredInputToAction_ReturnValue' has a wrong offset!");
static_assert(offsetof(DCUIFunctionLibrary_C_GetFirstKeyByInputAction, CallFunc_Key_GetDisplayName_ReturnValue) == 0x0000E8, "Member 'DCUIFunctionLibrary_C_GetFirstKeyByInputAction::CallFunc_Key_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(DCUIFunctionLibrary_C_GetFirstKeyByInputAction, CallFunc_Key_GetDisplayName_ReturnValue_1) == 0x000100, "Member 'DCUIFunctionLibrary_C_GetFirstKeyByInputAction::CallFunc_Key_GetDisplayName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DCUIFunctionLibrary_C_GetFirstKeyByInputAction, CallFunc_TextIsEmpty_ReturnValue) == 0x000118, "Member 'DCUIFunctionLibrary_C_GetFirstKeyByInputAction::CallFunc_TextIsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(DCUIFunctionLibrary_C_GetFirstKeyByInputAction, CallFunc_TextIsEmpty_ReturnValue_1) == 0x000119, "Member 'DCUIFunctionLibrary_C_GetFirstKeyByInputAction::CallFunc_TextIsEmpty_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DCUIFunctionLibrary_C_GetFirstKeyByInputAction, CallFunc_Key_IsGamepadKey_ReturnValue) == 0x00011A, "Member 'DCUIFunctionLibrary_C_GetFirstKeyByInputAction::CallFunc_Key_IsGamepadKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(DCUIFunctionLibrary_C_GetFirstKeyByInputAction, CallFunc_Key_IsKeyboardKey_ReturnValue) == 0x00011B, "Member 'DCUIFunctionLibrary_C_GetFirstKeyByInputAction::CallFunc_Key_IsKeyboardKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(DCUIFunctionLibrary_C_GetFirstKeyByInputAction, CallFunc_Key_IsMouseButton_ReturnValue) == 0x00011C, "Member 'DCUIFunctionLibrary_C_GetFirstKeyByInputAction::CallFunc_Key_IsMouseButton_ReturnValue' has a wrong offset!");
static_assert(offsetof(DCUIFunctionLibrary_C_GetFirstKeyByInputAction, CallFunc_BooleanOR_ReturnValue) == 0x00011D, "Member 'DCUIFunctionLibrary_C_GetFirstKeyByInputAction::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(DCUIFunctionLibrary_C_GetFirstKeyByInputAction, CallFunc_Map_Find_Value) == 0x000120, "Member 'DCUIFunctionLibrary_C_GetFirstKeyByInputAction::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(DCUIFunctionLibrary_C_GetFirstKeyByInputAction, CallFunc_Map_Find_ReturnValue) == 0x000128, "Member 'DCUIFunctionLibrary_C_GetFirstKeyByInputAction::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(DCUIFunctionLibrary_C_GetFirstKeyByInputAction, K2Node_SwitchEnum_CmpSuccess) == 0x000129, "Member 'DCUIFunctionLibrary_C_GetFirstKeyByInputAction::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function DCUIFunctionLibrary.DCUIFunctionLibrary_C.GetDHMSTextFromTimespan
// 0x0208 (0x0208 - 0x0000)
struct DCUIFunctionLibrary_C_GetDHMSTextFromTimespan final
{
public:
	struct FTimespan                              InTimespan;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   DHMSText;                                          // 0x0010(0x0018)(Parm, OutParm)
	int32                                         CallFunc_BreakTimespan_Days;                       // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakTimespan_Hours;                      // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakTimespan_Minutes;                    // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakTimespan_Seconds;                    // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakTimespan_Milliseconds;               // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3849[0x4];                                     // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0040(0x0018)()
	class FText                                   CallFunc_Conv_IntToText_ReturnValue_1;             // 0x0058(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0070(0x0050)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x00C0(0x0050)(HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_IntToText_ReturnValue_2;             // 0x0110(0x0018)()
	class FText                                   CallFunc_Conv_IntToText_ReturnValue_3;             // 0x0128(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x0140(0x0050)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_3;            // 0x0190(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x01E0(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x01F0(0x0018)()
};
static_assert(alignof(DCUIFunctionLibrary_C_GetDHMSTextFromTimespan) == 0x000008, "Wrong alignment on DCUIFunctionLibrary_C_GetDHMSTextFromTimespan");
static_assert(sizeof(DCUIFunctionLibrary_C_GetDHMSTextFromTimespan) == 0x000208, "Wrong size on DCUIFunctionLibrary_C_GetDHMSTextFromTimespan");
static_assert(offsetof(DCUIFunctionLibrary_C_GetDHMSTextFromTimespan, InTimespan) == 0x000000, "Member 'DCUIFunctionLibrary_C_GetDHMSTextFromTimespan::InTimespan' has a wrong offset!");
static_assert(offsetof(DCUIFunctionLibrary_C_GetDHMSTextFromTimespan, __WorldContext) == 0x000008, "Member 'DCUIFunctionLibrary_C_GetDHMSTextFromTimespan::__WorldContext' has a wrong offset!");
static_assert(offsetof(DCUIFunctionLibrary_C_GetDHMSTextFromTimespan, DHMSText) == 0x000010, "Member 'DCUIFunctionLibrary_C_GetDHMSTextFromTimespan::DHMSText' has a wrong offset!");
static_assert(offsetof(DCUIFunctionLibrary_C_GetDHMSTextFromTimespan, CallFunc_BreakTimespan_Days) == 0x000028, "Member 'DCUIFunctionLibrary_C_GetDHMSTextFromTimespan::CallFunc_BreakTimespan_Days' has a wrong offset!");
static_assert(offsetof(DCUIFunctionLibrary_C_GetDHMSTextFromTimespan, CallFunc_BreakTimespan_Hours) == 0x00002C, "Member 'DCUIFunctionLibrary_C_GetDHMSTextFromTimespan::CallFunc_BreakTimespan_Hours' has a wrong offset!");
static_assert(offsetof(DCUIFunctionLibrary_C_GetDHMSTextFromTimespan, CallFunc_BreakTimespan_Minutes) == 0x000030, "Member 'DCUIFunctionLibrary_C_GetDHMSTextFromTimespan::CallFunc_BreakTimespan_Minutes' has a wrong offset!");
static_assert(offsetof(DCUIFunctionLibrary_C_GetDHMSTextFromTimespan, CallFunc_BreakTimespan_Seconds) == 0x000034, "Member 'DCUIFunctionLibrary_C_GetDHMSTextFromTimespan::CallFunc_BreakTimespan_Seconds' has a wrong offset!");
static_assert(offsetof(DCUIFunctionLibrary_C_GetDHMSTextFromTimespan, CallFunc_BreakTimespan_Milliseconds) == 0x000038, "Member 'DCUIFunctionLibrary_C_GetDHMSTextFromTimespan::CallFunc_BreakTimespan_Milliseconds' has a wrong offset!");
static_assert(offsetof(DCUIFunctionLibrary_C_GetDHMSTextFromTimespan, CallFunc_Conv_IntToText_ReturnValue) == 0x000040, "Member 'DCUIFunctionLibrary_C_GetDHMSTextFromTimespan::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(DCUIFunctionLibrary_C_GetDHMSTextFromTimespan, CallFunc_Conv_IntToText_ReturnValue_1) == 0x000058, "Member 'DCUIFunctionLibrary_C_GetDHMSTextFromTimespan::CallFunc_Conv_IntToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DCUIFunctionLibrary_C_GetDHMSTextFromTimespan, K2Node_MakeStruct_FormatArgumentData) == 0x000070, "Member 'DCUIFunctionLibrary_C_GetDHMSTextFromTimespan::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(DCUIFunctionLibrary_C_GetDHMSTextFromTimespan, K2Node_MakeStruct_FormatArgumentData_1) == 0x0000C0, "Member 'DCUIFunctionLibrary_C_GetDHMSTextFromTimespan::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(DCUIFunctionLibrary_C_GetDHMSTextFromTimespan, CallFunc_Conv_IntToText_ReturnValue_2) == 0x000110, "Member 'DCUIFunctionLibrary_C_GetDHMSTextFromTimespan::CallFunc_Conv_IntToText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(DCUIFunctionLibrary_C_GetDHMSTextFromTimespan, CallFunc_Conv_IntToText_ReturnValue_3) == 0x000128, "Member 'DCUIFunctionLibrary_C_GetDHMSTextFromTimespan::CallFunc_Conv_IntToText_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(DCUIFunctionLibrary_C_GetDHMSTextFromTimespan, K2Node_MakeStruct_FormatArgumentData_2) == 0x000140, "Member 'DCUIFunctionLibrary_C_GetDHMSTextFromTimespan::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(DCUIFunctionLibrary_C_GetDHMSTextFromTimespan, K2Node_MakeStruct_FormatArgumentData_3) == 0x000190, "Member 'DCUIFunctionLibrary_C_GetDHMSTextFromTimespan::K2Node_MakeStruct_FormatArgumentData_3' has a wrong offset!");
static_assert(offsetof(DCUIFunctionLibrary_C_GetDHMSTextFromTimespan, K2Node_MakeArray_Array) == 0x0001E0, "Member 'DCUIFunctionLibrary_C_GetDHMSTextFromTimespan::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(DCUIFunctionLibrary_C_GetDHMSTextFromTimespan, CallFunc_Format_ReturnValue) == 0x0001F0, "Member 'DCUIFunctionLibrary_C_GetDHMSTextFromTimespan::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function DCUIFunctionLibrary.DCUIFunctionLibrary_C.Get Item Name And Color
// 0x02F8 (0x02F8 - 0x0000)
struct DCUIFunctionLibrary_C_Get_Item_Name_And_Color final
{
public:
	struct FItemData                              ItemData;                                          // 0x0000(0x0100)(BlueprintVisible, BlueprintReadOnly, Parm)
	class UObject*                                __WorldContext;                                    // 0x0100(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   Param_Name;                                        // 0x0108(0x0018)(Parm, OutParm)
	struct FSlateColor                            Color;                                             // 0x0120(0x0014)(Parm, OutParm)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0134(0x0014)()
	struct FDesignDataItem                        CallFunc_GetDesignDataItem_ReturnValue;            // 0x0148(0x0198)()
	bool                                          CallFunc_IsValidPrimaryAssetId_ReturnValue;        // 0x02E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_384A[0x3];                                     // 0x02E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            CallFunc_GetItemRaritySlateColor_SlateColor;       // 0x02E4(0x0014)()
};
static_assert(alignof(DCUIFunctionLibrary_C_Get_Item_Name_And_Color) == 0x000008, "Wrong alignment on DCUIFunctionLibrary_C_Get_Item_Name_And_Color");
static_assert(sizeof(DCUIFunctionLibrary_C_Get_Item_Name_And_Color) == 0x0002F8, "Wrong size on DCUIFunctionLibrary_C_Get_Item_Name_And_Color");
static_assert(offsetof(DCUIFunctionLibrary_C_Get_Item_Name_And_Color, ItemData) == 0x000000, "Member 'DCUIFunctionLibrary_C_Get_Item_Name_And_Color::ItemData' has a wrong offset!");
static_assert(offsetof(DCUIFunctionLibrary_C_Get_Item_Name_And_Color, __WorldContext) == 0x000100, "Member 'DCUIFunctionLibrary_C_Get_Item_Name_And_Color::__WorldContext' has a wrong offset!");
static_assert(offsetof(DCUIFunctionLibrary_C_Get_Item_Name_And_Color, Param_Name) == 0x000108, "Member 'DCUIFunctionLibrary_C_Get_Item_Name_And_Color::Param_Name' has a wrong offset!");
static_assert(offsetof(DCUIFunctionLibrary_C_Get_Item_Name_And_Color, Color) == 0x000120, "Member 'DCUIFunctionLibrary_C_Get_Item_Name_And_Color::Color' has a wrong offset!");
static_assert(offsetof(DCUIFunctionLibrary_C_Get_Item_Name_And_Color, K2Node_MakeStruct_SlateColor) == 0x000134, "Member 'DCUIFunctionLibrary_C_Get_Item_Name_And_Color::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(DCUIFunctionLibrary_C_Get_Item_Name_And_Color, CallFunc_GetDesignDataItem_ReturnValue) == 0x000148, "Member 'DCUIFunctionLibrary_C_Get_Item_Name_And_Color::CallFunc_GetDesignDataItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(DCUIFunctionLibrary_C_Get_Item_Name_And_Color, CallFunc_IsValidPrimaryAssetId_ReturnValue) == 0x0002E0, "Member 'DCUIFunctionLibrary_C_Get_Item_Name_And_Color::CallFunc_IsValidPrimaryAssetId_ReturnValue' has a wrong offset!");
static_assert(offsetof(DCUIFunctionLibrary_C_Get_Item_Name_And_Color, CallFunc_GetItemRaritySlateColor_SlateColor) == 0x0002E4, "Member 'DCUIFunctionLibrary_C_Get_Item_Name_And_Color::CallFunc_GetItemRaritySlateColor_SlateColor' has a wrong offset!");

// Function DCUIFunctionLibrary.DCUIFunctionLibrary_C.GetAttributeTextColor_OverloadedValue
// 0x0058 (0x0058 - 0x0000)
struct DCUIFunctionLibrary_C_GetAttributeTextColor_OverloadedValue final
{
public:
	double                                        BaseValue;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CurrentValue;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            SlateColor;                                        // 0x0018(0x0014)(Parm, OutParm)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x002C(0x0014)()
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue;       // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_384B[0x2];                                     // 0x0042(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_1;                    // 0x0044(0x0014)()
};
static_assert(alignof(DCUIFunctionLibrary_C_GetAttributeTextColor_OverloadedValue) == 0x000008, "Wrong alignment on DCUIFunctionLibrary_C_GetAttributeTextColor_OverloadedValue");
static_assert(sizeof(DCUIFunctionLibrary_C_GetAttributeTextColor_OverloadedValue) == 0x000058, "Wrong size on DCUIFunctionLibrary_C_GetAttributeTextColor_OverloadedValue");
static_assert(offsetof(DCUIFunctionLibrary_C_GetAttributeTextColor_OverloadedValue, BaseValue) == 0x000000, "Member 'DCUIFunctionLibrary_C_GetAttributeTextColor_OverloadedValue::BaseValue' has a wrong offset!");
static_assert(offsetof(DCUIFunctionLibrary_C_GetAttributeTextColor_OverloadedValue, CurrentValue) == 0x000008, "Member 'DCUIFunctionLibrary_C_GetAttributeTextColor_OverloadedValue::CurrentValue' has a wrong offset!");
static_assert(offsetof(DCUIFunctionLibrary_C_GetAttributeTextColor_OverloadedValue, __WorldContext) == 0x000010, "Member 'DCUIFunctionLibrary_C_GetAttributeTextColor_OverloadedValue::__WorldContext' has a wrong offset!");
static_assert(offsetof(DCUIFunctionLibrary_C_GetAttributeTextColor_OverloadedValue, SlateColor) == 0x000018, "Member 'DCUIFunctionLibrary_C_GetAttributeTextColor_OverloadedValue::SlateColor' has a wrong offset!");
static_assert(offsetof(DCUIFunctionLibrary_C_GetAttributeTextColor_OverloadedValue, K2Node_MakeStruct_SlateColor) == 0x00002C, "Member 'DCUIFunctionLibrary_C_GetAttributeTextColor_OverloadedValue::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(DCUIFunctionLibrary_C_GetAttributeTextColor_OverloadedValue, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000040, "Member 'DCUIFunctionLibrary_C_GetAttributeTextColor_OverloadedValue::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(DCUIFunctionLibrary_C_GetAttributeTextColor_OverloadedValue, CallFunc_NearlyEqual_FloatFloat_ReturnValue) == 0x000041, "Member 'DCUIFunctionLibrary_C_GetAttributeTextColor_OverloadedValue::CallFunc_NearlyEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(DCUIFunctionLibrary_C_GetAttributeTextColor_OverloadedValue, K2Node_MakeStruct_SlateColor_1) == 0x000044, "Member 'DCUIFunctionLibrary_C_GetAttributeTextColor_OverloadedValue::K2Node_MakeStruct_SlateColor_1' has a wrong offset!");

// Function DCUIFunctionLibrary.DCUIFunctionLibrary_C.GetAttributeTextColor
// 0x0090 (0x0090 - 0x0000)
struct DCUIFunctionLibrary_C_GetAttributeTextColor final
{
public:
	struct FGameplayAttributeData                 GameplayAttributeData;                             // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            SlateColor;                                        // 0x0018(0x0014)(Parm, OutParm)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x002C(0x0014)()
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue;       // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_384C[0x2];                                     // 0x0042(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_1;                    // 0x0044(0x0014)()
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_2;                    // 0x0058(0x0014)()
	uint8                                         Pad_384D[0x4];                                     // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_NearlyEqual_FloatFloat_A_ImplicitCast;    // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Less_DoubleDouble_A_ImplicitCast;         // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_NearlyEqual_FloatFloat_B_ImplicitCast;    // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Less_DoubleDouble_B_ImplicitCast;         // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DCUIFunctionLibrary_C_GetAttributeTextColor) == 0x000008, "Wrong alignment on DCUIFunctionLibrary_C_GetAttributeTextColor");
static_assert(sizeof(DCUIFunctionLibrary_C_GetAttributeTextColor) == 0x000090, "Wrong size on DCUIFunctionLibrary_C_GetAttributeTextColor");
static_assert(offsetof(DCUIFunctionLibrary_C_GetAttributeTextColor, GameplayAttributeData) == 0x000000, "Member 'DCUIFunctionLibrary_C_GetAttributeTextColor::GameplayAttributeData' has a wrong offset!");
static_assert(offsetof(DCUIFunctionLibrary_C_GetAttributeTextColor, __WorldContext) == 0x000010, "Member 'DCUIFunctionLibrary_C_GetAttributeTextColor::__WorldContext' has a wrong offset!");
static_assert(offsetof(DCUIFunctionLibrary_C_GetAttributeTextColor, SlateColor) == 0x000018, "Member 'DCUIFunctionLibrary_C_GetAttributeTextColor::SlateColor' has a wrong offset!");
static_assert(offsetof(DCUIFunctionLibrary_C_GetAttributeTextColor, K2Node_MakeStruct_SlateColor) == 0x00002C, "Member 'DCUIFunctionLibrary_C_GetAttributeTextColor::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(DCUIFunctionLibrary_C_GetAttributeTextColor, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000040, "Member 'DCUIFunctionLibrary_C_GetAttributeTextColor::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(DCUIFunctionLibrary_C_GetAttributeTextColor, CallFunc_NearlyEqual_FloatFloat_ReturnValue) == 0x000041, "Member 'DCUIFunctionLibrary_C_GetAttributeTextColor::CallFunc_NearlyEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(DCUIFunctionLibrary_C_GetAttributeTextColor, K2Node_MakeStruct_SlateColor_1) == 0x000044, "Member 'DCUIFunctionLibrary_C_GetAttributeTextColor::K2Node_MakeStruct_SlateColor_1' has a wrong offset!");
static_assert(offsetof(DCUIFunctionLibrary_C_GetAttributeTextColor, K2Node_MakeStruct_SlateColor_2) == 0x000058, "Member 'DCUIFunctionLibrary_C_GetAttributeTextColor::K2Node_MakeStruct_SlateColor_2' has a wrong offset!");
static_assert(offsetof(DCUIFunctionLibrary_C_GetAttributeTextColor, CallFunc_NearlyEqual_FloatFloat_A_ImplicitCast) == 0x000070, "Member 'DCUIFunctionLibrary_C_GetAttributeTextColor::CallFunc_NearlyEqual_FloatFloat_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(DCUIFunctionLibrary_C_GetAttributeTextColor, CallFunc_Less_DoubleDouble_A_ImplicitCast) == 0x000078, "Member 'DCUIFunctionLibrary_C_GetAttributeTextColor::CallFunc_Less_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(DCUIFunctionLibrary_C_GetAttributeTextColor, CallFunc_NearlyEqual_FloatFloat_B_ImplicitCast) == 0x000080, "Member 'DCUIFunctionLibrary_C_GetAttributeTextColor::CallFunc_NearlyEqual_FloatFloat_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(DCUIFunctionLibrary_C_GetAttributeTextColor, CallFunc_Less_DoubleDouble_B_ImplicitCast) == 0x000088, "Member 'DCUIFunctionLibrary_C_GetAttributeTextColor::CallFunc_Less_DoubleDouble_B_ImplicitCast' has a wrong offset!");

}

