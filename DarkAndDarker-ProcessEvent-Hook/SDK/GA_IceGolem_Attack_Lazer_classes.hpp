#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_IceGolem_Attack_Lazer

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "GA_PlayMontageAndWaitForEventBase_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass GA_IceGolem_Attack_Lazer.GA_IceGolem_Attack_Lazer_C
// 0x0020 (0x0698 - 0x0678)
class UGA_IceGolem_Attack_Lazer_C final : public UGA_PlayMontageAndWaitForEventBase_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_GA_IceGolem_Attack_Lazer_C;         // 0x0678(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class ABP_IceGolem_C*                         As_BP_Ice_Golem;                                   // 0x0680(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           Damage_Timer_Handle;                               // 0x0688(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           Draw_Timer_Handle;                                 // 0x0690(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void AbilityActivated(const struct FGameplayEventData& TriggerEventData);
	void Dealt_Damage();
	void Draw_Lazer();
	void EventReceived_AB56573F454A470B414990B1E0771BB2(const struct FGameplayEventData& Payload);
	void EventReceived_B03CB09048F4799F6AE74AA965517EDF(const struct FGameplayEventData& Payload);
	void ExecuteUbergraph_GA_IceGolem_Attack_Lazer(int32 EntryPoint);
	void K2_OnEndAbility(bool bWasCancelled);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GA_IceGolem_Attack_Lazer_C">();
	}
	static class UGA_IceGolem_Attack_Lazer_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGA_IceGolem_Attack_Lazer_C>();
	}
};
static_assert(alignof(UGA_IceGolem_Attack_Lazer_C) == 0x000008, "Wrong alignment on UGA_IceGolem_Attack_Lazer_C");
static_assert(sizeof(UGA_IceGolem_Attack_Lazer_C) == 0x000698, "Wrong size on UGA_IceGolem_Attack_Lazer_C");
static_assert(offsetof(UGA_IceGolem_Attack_Lazer_C, UberGraphFrame_GA_IceGolem_Attack_Lazer_C) == 0x000678, "Member 'UGA_IceGolem_Attack_Lazer_C::UberGraphFrame_GA_IceGolem_Attack_Lazer_C' has a wrong offset!");
static_assert(offsetof(UGA_IceGolem_Attack_Lazer_C, As_BP_Ice_Golem) == 0x000680, "Member 'UGA_IceGolem_Attack_Lazer_C::As_BP_Ice_Golem' has a wrong offset!");
static_assert(offsetof(UGA_IceGolem_Attack_Lazer_C, Damage_Timer_Handle) == 0x000688, "Member 'UGA_IceGolem_Attack_Lazer_C::Damage_Timer_Handle' has a wrong offset!");
static_assert(offsetof(UGA_IceGolem_Attack_Lazer_C, Draw_Timer_Handle) == 0x000690, "Member 'UGA_IceGolem_Attack_Lazer_C::Draw_Timer_Handle' has a wrong offset!");

}

