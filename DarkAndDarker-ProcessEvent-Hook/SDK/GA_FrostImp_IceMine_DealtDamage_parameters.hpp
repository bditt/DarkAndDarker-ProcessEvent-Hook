#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_FrostImp_IceMine_DealtDamage

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "Engine_structs.hpp"
#include "GameplayAbilities_structs.hpp"


namespace SDK::Params
{

// Function GA_FrostImp_IceMine_DealtDamage.GA_FrostImp_IceMine_DealtDamage_C.Add GameplayCue
// 0x0008 (0x0008 - 0x0000)
struct GA_FrostImp_IceMine_DealtDamage_C_Add_GameplayCue final
{
public:
	struct FGameplayTag                           GameplayCueTag;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_FrostImp_IceMine_DealtDamage_C_Add_GameplayCue) == 0x000004, "Wrong alignment on GA_FrostImp_IceMine_DealtDamage_C_Add_GameplayCue");
static_assert(sizeof(GA_FrostImp_IceMine_DealtDamage_C_Add_GameplayCue) == 0x000008, "Wrong size on GA_FrostImp_IceMine_DealtDamage_C_Add_GameplayCue");
static_assert(offsetof(GA_FrostImp_IceMine_DealtDamage_C_Add_GameplayCue, GameplayCueTag) == 0x000000, "Member 'GA_FrostImp_IceMine_DealtDamage_C_Add_GameplayCue::GameplayCueTag' has a wrong offset!");

// Function GA_FrostImp_IceMine_DealtDamage.GA_FrostImp_IceMine_DealtDamage_C.Apply GameplayEffect
// 0x0188 (0x0188 - 0x0000)
struct GA_FrostImp_IceMine_DealtDamage_C_Apply_GameplayEffect final
{
public:
	TArray<struct FGameplayTag>                   Apply_Effect_Tags;                                 // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class ADCCharacterBase*                       Target;                                            // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class ADCCharacterBase*>               Living_Players;                                    // 0x0018(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0028(0x0010)(ConstParm, ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           CallFunc_Array_Get_Item;                           // 0x0040(0x0008)(NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4ED7[0x3];                                     // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4ED8[0x3];                                     // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4ED9[0x4];                                     // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array;                            // 0x0068(0x0010)(ConstParm, ReferenceParm)
	class AActor*                                 CallFunc_GetAvatarActorFromActorInfo_ReturnValue;  // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0080(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         CallFunc_SphereOverlapActors_OutActors;            // 0x0098(0x0010)(ReferenceParm)
	bool                                          CallFunc_SphereOverlapActors_ReturnValue;          // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4EDA[0x3];                                     // 0x00A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_Array_Get_Item_1;                         // 0x00B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4EDB[0x4];                                     // 0x00BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayEventData                     K2Node_MakeStruct_GameplayEventData;               // 0x00C0(0x00B0)()
	int32                                         CallFunc_Max_ReturnValue;                          // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4EDC[0x4];                                     // 0x0174(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FActiveGameplayEffectHandle>    CallFunc_ApplyPremadeSpecArray_ReturnValue;        // 0x0178(0x0010)(ReferenceParm)
};
static_assert(alignof(GA_FrostImp_IceMine_DealtDamage_C_Apply_GameplayEffect) == 0x000008, "Wrong alignment on GA_FrostImp_IceMine_DealtDamage_C_Apply_GameplayEffect");
static_assert(sizeof(GA_FrostImp_IceMine_DealtDamage_C_Apply_GameplayEffect) == 0x000188, "Wrong size on GA_FrostImp_IceMine_DealtDamage_C_Apply_GameplayEffect");
static_assert(offsetof(GA_FrostImp_IceMine_DealtDamage_C_Apply_GameplayEffect, Apply_Effect_Tags) == 0x000000, "Member 'GA_FrostImp_IceMine_DealtDamage_C_Apply_GameplayEffect::Apply_Effect_Tags' has a wrong offset!");
static_assert(offsetof(GA_FrostImp_IceMine_DealtDamage_C_Apply_GameplayEffect, Target) == 0x000010, "Member 'GA_FrostImp_IceMine_DealtDamage_C_Apply_GameplayEffect::Target' has a wrong offset!");
static_assert(offsetof(GA_FrostImp_IceMine_DealtDamage_C_Apply_GameplayEffect, Living_Players) == 0x000018, "Member 'GA_FrostImp_IceMine_DealtDamage_C_Apply_GameplayEffect::Living_Players' has a wrong offset!");
static_assert(offsetof(GA_FrostImp_IceMine_DealtDamage_C_Apply_GameplayEffect, Temp_object_Variable) == 0x000028, "Member 'GA_FrostImp_IceMine_DealtDamage_C_Apply_GameplayEffect::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(GA_FrostImp_IceMine_DealtDamage_C_Apply_GameplayEffect, CallFunc_Array_Length_ReturnValue) == 0x000038, "Member 'GA_FrostImp_IceMine_DealtDamage_C_Apply_GameplayEffect::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_FrostImp_IceMine_DealtDamage_C_Apply_GameplayEffect, Temp_int_Array_Index_Variable) == 0x00003C, "Member 'GA_FrostImp_IceMine_DealtDamage_C_Apply_GameplayEffect::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(GA_FrostImp_IceMine_DealtDamage_C_Apply_GameplayEffect, CallFunc_Array_Get_Item) == 0x000040, "Member 'GA_FrostImp_IceMine_DealtDamage_C_Apply_GameplayEffect::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(GA_FrostImp_IceMine_DealtDamage_C_Apply_GameplayEffect, Temp_int_Loop_Counter_Variable) == 0x000048, "Member 'GA_FrostImp_IceMine_DealtDamage_C_Apply_GameplayEffect::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(GA_FrostImp_IceMine_DealtDamage_C_Apply_GameplayEffect, CallFunc_Subtract_IntInt_ReturnValue) == 0x00004C, "Member 'GA_FrostImp_IceMine_DealtDamage_C_Apply_GameplayEffect::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_FrostImp_IceMine_DealtDamage_C_Apply_GameplayEffect, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000050, "Member 'GA_FrostImp_IceMine_DealtDamage_C_Apply_GameplayEffect::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_FrostImp_IceMine_DealtDamage_C_Apply_GameplayEffect, Temp_int_Array_Index_Variable_1) == 0x000054, "Member 'GA_FrostImp_IceMine_DealtDamage_C_Apply_GameplayEffect::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(GA_FrostImp_IceMine_DealtDamage_C_Apply_GameplayEffect, Temp_int_Loop_Counter_Variable_1) == 0x000058, "Member 'GA_FrostImp_IceMine_DealtDamage_C_Apply_GameplayEffect::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(GA_FrostImp_IceMine_DealtDamage_C_Apply_GameplayEffect, CallFunc_Less_IntInt_ReturnValue) == 0x00005C, "Member 'GA_FrostImp_IceMine_DealtDamage_C_Apply_GameplayEffect::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_FrostImp_IceMine_DealtDamage_C_Apply_GameplayEffect, CallFunc_Add_IntInt_ReturnValue) == 0x000060, "Member 'GA_FrostImp_IceMine_DealtDamage_C_Apply_GameplayEffect::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_FrostImp_IceMine_DealtDamage_C_Apply_GameplayEffect, K2Node_MakeArray_Array) == 0x000068, "Member 'GA_FrostImp_IceMine_DealtDamage_C_Apply_GameplayEffect::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(GA_FrostImp_IceMine_DealtDamage_C_Apply_GameplayEffect, CallFunc_GetAvatarActorFromActorInfo_ReturnValue) == 0x000078, "Member 'GA_FrostImp_IceMine_DealtDamage_C_Apply_GameplayEffect::CallFunc_GetAvatarActorFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_FrostImp_IceMine_DealtDamage_C_Apply_GameplayEffect, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000080, "Member 'GA_FrostImp_IceMine_DealtDamage_C_Apply_GameplayEffect::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_FrostImp_IceMine_DealtDamage_C_Apply_GameplayEffect, CallFunc_SphereOverlapActors_OutActors) == 0x000098, "Member 'GA_FrostImp_IceMine_DealtDamage_C_Apply_GameplayEffect::CallFunc_SphereOverlapActors_OutActors' has a wrong offset!");
static_assert(offsetof(GA_FrostImp_IceMine_DealtDamage_C_Apply_GameplayEffect, CallFunc_SphereOverlapActors_ReturnValue) == 0x0000A8, "Member 'GA_FrostImp_IceMine_DealtDamage_C_Apply_GameplayEffect::CallFunc_SphereOverlapActors_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_FrostImp_IceMine_DealtDamage_C_Apply_GameplayEffect, CallFunc_Array_Length_ReturnValue_1) == 0x0000AC, "Member 'GA_FrostImp_IceMine_DealtDamage_C_Apply_GameplayEffect::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_FrostImp_IceMine_DealtDamage_C_Apply_GameplayEffect, CallFunc_Array_Get_Item_1) == 0x0000B0, "Member 'GA_FrostImp_IceMine_DealtDamage_C_Apply_GameplayEffect::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(GA_FrostImp_IceMine_DealtDamage_C_Apply_GameplayEffect, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x0000B8, "Member 'GA_FrostImp_IceMine_DealtDamage_C_Apply_GameplayEffect::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_FrostImp_IceMine_DealtDamage_C_Apply_GameplayEffect, K2Node_MakeStruct_GameplayEventData) == 0x0000C0, "Member 'GA_FrostImp_IceMine_DealtDamage_C_Apply_GameplayEffect::K2Node_MakeStruct_GameplayEventData' has a wrong offset!");
static_assert(offsetof(GA_FrostImp_IceMine_DealtDamage_C_Apply_GameplayEffect, CallFunc_Max_ReturnValue) == 0x000170, "Member 'GA_FrostImp_IceMine_DealtDamage_C_Apply_GameplayEffect::CallFunc_Max_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_FrostImp_IceMine_DealtDamage_C_Apply_GameplayEffect, CallFunc_ApplyPremadeSpecArray_ReturnValue) == 0x000178, "Member 'GA_FrostImp_IceMine_DealtDamage_C_Apply_GameplayEffect::CallFunc_ApplyPremadeSpecArray_ReturnValue' has a wrong offset!");

}

