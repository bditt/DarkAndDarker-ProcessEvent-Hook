#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BTT_SkeletonWarlord_AddLv

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "GameplayAbilities_structs.hpp"


namespace SDK::Params
{

// Function BTT_SkeletonWarlord_AddLv.BTT_SkeletonWarlord_AddLv_C.ExecuteUbergraph_BTT_SkeletonWarlord_AddLv
// 0x0048 (0x0048 - 0x0000)
struct BTT_SkeletonWarlord_AddLv_C_ExecuteUbergraph_BTT_SkeletonWarlord_AddLv final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_30EF[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AAIController*                          K2Node_Event_OwnerController;                      // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_ControlledPawn;                       // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<struct FPrimaryAssetId>                K2Node_MakeArray_Array;                            // 0x0020(0x0010)(ConstParm, ReferenceParm)
	TArray<struct FActiveGameplayEffectHandle>    CallFunc_ApplyGameplayEffectByIds_ReturnValue;     // 0x0030(0x0010)(ReferenceParm)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTT_SkeletonWarlord_AddLv_C_ExecuteUbergraph_BTT_SkeletonWarlord_AddLv) == 0x000008, "Wrong alignment on BTT_SkeletonWarlord_AddLv_C_ExecuteUbergraph_BTT_SkeletonWarlord_AddLv");
static_assert(sizeof(BTT_SkeletonWarlord_AddLv_C_ExecuteUbergraph_BTT_SkeletonWarlord_AddLv) == 0x000048, "Wrong size on BTT_SkeletonWarlord_AddLv_C_ExecuteUbergraph_BTT_SkeletonWarlord_AddLv");
static_assert(offsetof(BTT_SkeletonWarlord_AddLv_C_ExecuteUbergraph_BTT_SkeletonWarlord_AddLv, EntryPoint) == 0x000000, "Member 'BTT_SkeletonWarlord_AddLv_C_ExecuteUbergraph_BTT_SkeletonWarlord_AddLv::EntryPoint' has a wrong offset!");
static_assert(offsetof(BTT_SkeletonWarlord_AddLv_C_ExecuteUbergraph_BTT_SkeletonWarlord_AddLv, Temp_int_Variable) == 0x000004, "Member 'BTT_SkeletonWarlord_AddLv_C_ExecuteUbergraph_BTT_SkeletonWarlord_AddLv::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BTT_SkeletonWarlord_AddLv_C_ExecuteUbergraph_BTT_SkeletonWarlord_AddLv, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BTT_SkeletonWarlord_AddLv_C_ExecuteUbergraph_BTT_SkeletonWarlord_AddLv::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_SkeletonWarlord_AddLv_C_ExecuteUbergraph_BTT_SkeletonWarlord_AddLv, K2Node_Event_OwnerController) == 0x000010, "Member 'BTT_SkeletonWarlord_AddLv_C_ExecuteUbergraph_BTT_SkeletonWarlord_AddLv::K2Node_Event_OwnerController' has a wrong offset!");
static_assert(offsetof(BTT_SkeletonWarlord_AddLv_C_ExecuteUbergraph_BTT_SkeletonWarlord_AddLv, K2Node_Event_ControlledPawn) == 0x000018, "Member 'BTT_SkeletonWarlord_AddLv_C_ExecuteUbergraph_BTT_SkeletonWarlord_AddLv::K2Node_Event_ControlledPawn' has a wrong offset!");
static_assert(offsetof(BTT_SkeletonWarlord_AddLv_C_ExecuteUbergraph_BTT_SkeletonWarlord_AddLv, K2Node_MakeArray_Array) == 0x000020, "Member 'BTT_SkeletonWarlord_AddLv_C_ExecuteUbergraph_BTT_SkeletonWarlord_AddLv::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BTT_SkeletonWarlord_AddLv_C_ExecuteUbergraph_BTT_SkeletonWarlord_AddLv, CallFunc_ApplyGameplayEffectByIds_ReturnValue) == 0x000030, "Member 'BTT_SkeletonWarlord_AddLv_C_ExecuteUbergraph_BTT_SkeletonWarlord_AddLv::CallFunc_ApplyGameplayEffectByIds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_SkeletonWarlord_AddLv_C_ExecuteUbergraph_BTT_SkeletonWarlord_AddLv, CallFunc_Subtract_IntInt_ReturnValue) == 0x000040, "Member 'BTT_SkeletonWarlord_AddLv_C_ExecuteUbergraph_BTT_SkeletonWarlord_AddLv::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_SkeletonWarlord_AddLv_C_ExecuteUbergraph_BTT_SkeletonWarlord_AddLv, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000044, "Member 'BTT_SkeletonWarlord_AddLv_C_ExecuteUbergraph_BTT_SkeletonWarlord_AddLv::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BTT_SkeletonWarlord_AddLv.BTT_SkeletonWarlord_AddLv_C.ReceiveExecuteAI
// 0x0010 (0x0010 - 0x0000)
struct BTT_SkeletonWarlord_AddLv_C_ReceiveExecuteAI final
{
public:
	class AAIController*                          OwnerController;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  ControlledPawn;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTT_SkeletonWarlord_AddLv_C_ReceiveExecuteAI) == 0x000008, "Wrong alignment on BTT_SkeletonWarlord_AddLv_C_ReceiveExecuteAI");
static_assert(sizeof(BTT_SkeletonWarlord_AddLv_C_ReceiveExecuteAI) == 0x000010, "Wrong size on BTT_SkeletonWarlord_AddLv_C_ReceiveExecuteAI");
static_assert(offsetof(BTT_SkeletonWarlord_AddLv_C_ReceiveExecuteAI, OwnerController) == 0x000000, "Member 'BTT_SkeletonWarlord_AddLv_C_ReceiveExecuteAI::OwnerController' has a wrong offset!");
static_assert(offsetof(BTT_SkeletonWarlord_AddLv_C_ReceiveExecuteAI, ControlledPawn) == 0x000008, "Member 'BTT_SkeletonWarlord_AddLv_C_ReceiveExecuteAI::ControlledPawn' has a wrong offset!");

}

