#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ABP_ChestSmall

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function ABP_ChestSmall.ABP_ChestSmall_C.AnimGraph
// 0x0010 (0x0010 - 0x0000)
struct ABP_ChestSmall_C_AnimGraph final
{
public:
	struct FPoseLink                              Param_AnimGraph;                                   // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(ABP_ChestSmall_C_AnimGraph) == 0x000008, "Wrong alignment on ABP_ChestSmall_C_AnimGraph");
static_assert(sizeof(ABP_ChestSmall_C_AnimGraph) == 0x000010, "Wrong size on ABP_ChestSmall_C_AnimGraph");
static_assert(offsetof(ABP_ChestSmall_C_AnimGraph, Param_AnimGraph) == 0x000000, "Member 'ABP_ChestSmall_C_AnimGraph::Param_AnimGraph' has a wrong offset!");

// Function ABP_ChestSmall.ABP_ChestSmall_C.ExecuteUbergraph_ABP_ChestSmall
// 0x02A0 (0x02A0 - 0x0000)
struct ABP_ChestSmall_C_ExecuteUbergraph_ABP_ChestSmall final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5B37[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue;          // 0x0008(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0020(0x0010)(ConstParm, ReferenceParm)
	class USkeletalMeshComponent*                 CallFunc_GetOwningComponent_ReturnValue;           // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_GameplayTag_ReturnValue;       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5B38[0x7];                                     // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_GetSocketRotation_ReturnValue;            // 0x0040(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x0058(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue;            // 0x0070(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x0088(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x00A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit;                   // 0x00B8(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue;              // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x01A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x01A2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5B39[0x1];                                     // 0x01A3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x01A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5B3A[0x4];                                     // 0x01AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x01B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x01C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x01E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x01F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0210(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0218(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0220(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0228(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x0230(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0238(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x023C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0240(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5B3B[0x4];                                     // 0x0244(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0248(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0260(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_GameplayTag_ReturnValue_1;     // 0x0278(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5B3C[0x7];                                     // 0x0279(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Vector_Distance_ReturnValue;              // 0x0280(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0288(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0290(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0298(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_ChestSmall_C_ExecuteUbergraph_ABP_ChestSmall) == 0x000008, "Wrong alignment on ABP_ChestSmall_C_ExecuteUbergraph_ABP_ChestSmall");
static_assert(sizeof(ABP_ChestSmall_C_ExecuteUbergraph_ABP_ChestSmall) == 0x0002A0, "Wrong size on ABP_ChestSmall_C_ExecuteUbergraph_ABP_ChestSmall");
static_assert(offsetof(ABP_ChestSmall_C_ExecuteUbergraph_ABP_ChestSmall, EntryPoint) == 0x000000, "Member 'ABP_ChestSmall_C_ExecuteUbergraph_ABP_ChestSmall::EntryPoint' has a wrong offset!");
static_assert(offsetof(ABP_ChestSmall_C_ExecuteUbergraph_ABP_ChestSmall, CallFunc_Conv_DoubleToVector_ReturnValue) == 0x000008, "Member 'ABP_ChestSmall_C_ExecuteUbergraph_ABP_ChestSmall::CallFunc_Conv_DoubleToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_ChestSmall_C_ExecuteUbergraph_ABP_ChestSmall, Temp_object_Variable) == 0x000020, "Member 'ABP_ChestSmall_C_ExecuteUbergraph_ABP_ChestSmall::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(ABP_ChestSmall_C_ExecuteUbergraph_ABP_ChestSmall, CallFunc_GetOwningComponent_ReturnValue) == 0x000030, "Member 'ABP_ChestSmall_C_ExecuteUbergraph_ABP_ChestSmall::CallFunc_GetOwningComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_ChestSmall_C_ExecuteUbergraph_ABP_ChestSmall, CallFunc_EqualEqual_GameplayTag_ReturnValue) == 0x000038, "Member 'ABP_ChestSmall_C_ExecuteUbergraph_ABP_ChestSmall::CallFunc_EqualEqual_GameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_ChestSmall_C_ExecuteUbergraph_ABP_ChestSmall, CallFunc_GetSocketRotation_ReturnValue) == 0x000040, "Member 'ABP_ChestSmall_C_ExecuteUbergraph_ABP_ChestSmall::CallFunc_GetSocketRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_ChestSmall_C_ExecuteUbergraph_ABP_ChestSmall, CallFunc_GetForwardVector_ReturnValue) == 0x000058, "Member 'ABP_ChestSmall_C_ExecuteUbergraph_ABP_ChestSmall::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_ChestSmall_C_ExecuteUbergraph_ABP_ChestSmall, CallFunc_GetSocketLocation_ReturnValue) == 0x000070, "Member 'ABP_ChestSmall_C_ExecuteUbergraph_ABP_ChestSmall::CallFunc_GetSocketLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_ChestSmall_C_ExecuteUbergraph_ABP_ChestSmall, CallFunc_Multiply_VectorVector_ReturnValue) == 0x000088, "Member 'ABP_ChestSmall_C_ExecuteUbergraph_ABP_ChestSmall::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_ChestSmall_C_ExecuteUbergraph_ABP_ChestSmall, CallFunc_Add_VectorVector_ReturnValue) == 0x0000A0, "Member 'ABP_ChestSmall_C_ExecuteUbergraph_ABP_ChestSmall::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_ChestSmall_C_ExecuteUbergraph_ABP_ChestSmall, CallFunc_LineTraceSingle_OutHit) == 0x0000B8, "Member 'ABP_ChestSmall_C_ExecuteUbergraph_ABP_ChestSmall::CallFunc_LineTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(ABP_ChestSmall_C_ExecuteUbergraph_ABP_ChestSmall, CallFunc_LineTraceSingle_ReturnValue) == 0x0001A0, "Member 'ABP_ChestSmall_C_ExecuteUbergraph_ABP_ChestSmall::CallFunc_LineTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_ChestSmall_C_ExecuteUbergraph_ABP_ChestSmall, CallFunc_BreakHitResult_bBlockingHit) == 0x0001A1, "Member 'ABP_ChestSmall_C_ExecuteUbergraph_ABP_ChestSmall::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(ABP_ChestSmall_C_ExecuteUbergraph_ABP_ChestSmall, CallFunc_BreakHitResult_bInitialOverlap) == 0x0001A2, "Member 'ABP_ChestSmall_C_ExecuteUbergraph_ABP_ChestSmall::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(ABP_ChestSmall_C_ExecuteUbergraph_ABP_ChestSmall, CallFunc_BreakHitResult_Time) == 0x0001A4, "Member 'ABP_ChestSmall_C_ExecuteUbergraph_ABP_ChestSmall::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(ABP_ChestSmall_C_ExecuteUbergraph_ABP_ChestSmall, CallFunc_BreakHitResult_Distance) == 0x0001A8, "Member 'ABP_ChestSmall_C_ExecuteUbergraph_ABP_ChestSmall::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(ABP_ChestSmall_C_ExecuteUbergraph_ABP_ChestSmall, CallFunc_BreakHitResult_Location) == 0x0001B0, "Member 'ABP_ChestSmall_C_ExecuteUbergraph_ABP_ChestSmall::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(ABP_ChestSmall_C_ExecuteUbergraph_ABP_ChestSmall, CallFunc_BreakHitResult_ImpactPoint) == 0x0001C8, "Member 'ABP_ChestSmall_C_ExecuteUbergraph_ABP_ChestSmall::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(ABP_ChestSmall_C_ExecuteUbergraph_ABP_ChestSmall, CallFunc_BreakHitResult_Normal) == 0x0001E0, "Member 'ABP_ChestSmall_C_ExecuteUbergraph_ABP_ChestSmall::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(ABP_ChestSmall_C_ExecuteUbergraph_ABP_ChestSmall, CallFunc_BreakHitResult_ImpactNormal) == 0x0001F8, "Member 'ABP_ChestSmall_C_ExecuteUbergraph_ABP_ChestSmall::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(ABP_ChestSmall_C_ExecuteUbergraph_ABP_ChestSmall, CallFunc_BreakHitResult_PhysMat) == 0x000210, "Member 'ABP_ChestSmall_C_ExecuteUbergraph_ABP_ChestSmall::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(ABP_ChestSmall_C_ExecuteUbergraph_ABP_ChestSmall, CallFunc_BreakHitResult_HitActor) == 0x000218, "Member 'ABP_ChestSmall_C_ExecuteUbergraph_ABP_ChestSmall::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(ABP_ChestSmall_C_ExecuteUbergraph_ABP_ChestSmall, CallFunc_BreakHitResult_HitComponent) == 0x000220, "Member 'ABP_ChestSmall_C_ExecuteUbergraph_ABP_ChestSmall::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(ABP_ChestSmall_C_ExecuteUbergraph_ABP_ChestSmall, CallFunc_BreakHitResult_HitBoneName) == 0x000228, "Member 'ABP_ChestSmall_C_ExecuteUbergraph_ABP_ChestSmall::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(ABP_ChestSmall_C_ExecuteUbergraph_ABP_ChestSmall, CallFunc_BreakHitResult_BoneName) == 0x000230, "Member 'ABP_ChestSmall_C_ExecuteUbergraph_ABP_ChestSmall::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(ABP_ChestSmall_C_ExecuteUbergraph_ABP_ChestSmall, CallFunc_BreakHitResult_HitItem) == 0x000238, "Member 'ABP_ChestSmall_C_ExecuteUbergraph_ABP_ChestSmall::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(ABP_ChestSmall_C_ExecuteUbergraph_ABP_ChestSmall, CallFunc_BreakHitResult_ElementIndex) == 0x00023C, "Member 'ABP_ChestSmall_C_ExecuteUbergraph_ABP_ChestSmall::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(ABP_ChestSmall_C_ExecuteUbergraph_ABP_ChestSmall, CallFunc_BreakHitResult_FaceIndex) == 0x000240, "Member 'ABP_ChestSmall_C_ExecuteUbergraph_ABP_ChestSmall::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(ABP_ChestSmall_C_ExecuteUbergraph_ABP_ChestSmall, CallFunc_BreakHitResult_TraceStart) == 0x000248, "Member 'ABP_ChestSmall_C_ExecuteUbergraph_ABP_ChestSmall::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(ABP_ChestSmall_C_ExecuteUbergraph_ABP_ChestSmall, CallFunc_BreakHitResult_TraceEnd) == 0x000260, "Member 'ABP_ChestSmall_C_ExecuteUbergraph_ABP_ChestSmall::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(ABP_ChestSmall_C_ExecuteUbergraph_ABP_ChestSmall, CallFunc_EqualEqual_GameplayTag_ReturnValue_1) == 0x000278, "Member 'ABP_ChestSmall_C_ExecuteUbergraph_ABP_ChestSmall::CallFunc_EqualEqual_GameplayTag_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_ChestSmall_C_ExecuteUbergraph_ABP_ChestSmall, CallFunc_Vector_Distance_ReturnValue) == 0x000280, "Member 'ABP_ChestSmall_C_ExecuteUbergraph_ABP_ChestSmall::CallFunc_Vector_Distance_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_ChestSmall_C_ExecuteUbergraph_ABP_ChestSmall, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000288, "Member 'ABP_ChestSmall_C_ExecuteUbergraph_ABP_ChestSmall::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_ChestSmall_C_ExecuteUbergraph_ABP_ChestSmall, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000290, "Member 'ABP_ChestSmall_C_ExecuteUbergraph_ABP_ChestSmall::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_ChestSmall_C_ExecuteUbergraph_ABP_ChestSmall, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000298, "Member 'ABP_ChestSmall_C_ExecuteUbergraph_ABP_ChestSmall::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");

}

