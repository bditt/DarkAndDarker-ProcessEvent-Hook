#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_LocustsSwarm

#include "Basic.hpp"

#include "GA_LocustsSwarm_classes.hpp"
#include "GA_LocustsSwarm_parameters.hpp"


namespace SDK
{

// Function GA_LocustsSwarm.GA_LocustsSwarm_C.AbilityActivated_BP
// (Event, Public, BlueprintEvent)
// Parameters:
// struct FGameplayEventData               TriggerEventData                                       (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm)
// bool                                    bIsSocketSightBlocked                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UGA_LocustsSwarm_C::AbilityActivated_BP(const struct FGameplayEventData& TriggerEventData, bool bIsSocketSightBlocked)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_LocustsSwarm_C", "AbilityActivated_BP");

	Params::GA_LocustsSwarm_C_AbilityActivated_BP Parms{};

	Parms.TriggerEventData = std::move(TriggerEventData);
	Parms.bIsSocketSightBlocked = bIsSocketSightBlocked;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GA_LocustsSwarm.GA_LocustsSwarm_C.EndSpell
// (Public, BlueprintCallable, BlueprintEvent)

void UGA_LocustsSwarm_C::EndSpell()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_LocustsSwarm_C", "EndSpell");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GA_LocustsSwarm.GA_LocustsSwarm_C.ExecuteUbergraph_GA_LocustsSwarm
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UGA_LocustsSwarm_C::ExecuteUbergraph_GA_LocustsSwarm(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_LocustsSwarm_C", "ExecuteUbergraph_GA_LocustsSwarm");

	Params::GA_LocustsSwarm_C_ExecuteUbergraph_GA_LocustsSwarm Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GA_LocustsSwarm.GA_LocustsSwarm_C.K2_OnEndAbility
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bWasCancelled                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UGA_LocustsSwarm_C::K2_OnEndAbility(bool bWasCancelled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_LocustsSwarm_C", "K2_OnEndAbility");

	Params::GA_LocustsSwarm_C_K2_OnEndAbility Parms{};

	Parms.bWasCancelled = bWasCancelled;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GA_LocustsSwarm.GA_LocustsSwarm_C.OnDirectionChanged_26EECCC4454C2204D92B728CF0C5576D
// (BlueprintCallable, BlueprintEvent)

void UGA_LocustsSwarm_C::OnDirectionChanged_26EECCC4454C2204D92B728CF0C5576D()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_LocustsSwarm_C", "OnDirectionChanged_26EECCC4454C2204D92B728CF0C5576D");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GA_LocustsSwarm.GA_LocustsSwarm_C.SpawnAoe
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FHitResult                       HtResult                                               (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UGA_LocustsSwarm_C::SpawnAoe(const struct FHitResult& HtResult, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_LocustsSwarm_C", "SpawnAoe");

	Params::GA_LocustsSwarm_C_SpawnAoe Parms{};

	Parms.HtResult = std::move(HtResult);

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}

}

