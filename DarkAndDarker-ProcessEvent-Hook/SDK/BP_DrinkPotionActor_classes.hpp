#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_DrinkPotionActor

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "BP_DCItemActor_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_DrinkPotionActor.BP_DrinkPotionActor_C
// 0x0088 (0x05F0 - 0x0568)
class ABP_DrinkPotionActor_C : public ABP_DCItemActor_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0568(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	double                                        RemainDrinkingDuration;                            // 0x0570(0x0008)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CurrentLiquidAmount;                               // 0x0578(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          DoesRefillAfterDrinking;                           // 0x0580(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          InitializeInitialAmountWithMaterial;               // 0x0581(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3F22[0x6];                                     // 0x0582(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        InitialAmount;                                     // 0x0588(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        TargetAmount;                                      // 0x0590(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Height_Control_Variable_Name;                      // 0x0598(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UMaterialInstanceConstant*>      LiquidConstantMaterialInstance;                    // 0x05A0(0x0010)(Edit, BlueprintVisible)
	TArray<class UMeshComponent*>                 LiquidMeshComponent;                               // 0x05B0(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	double                                        DrinkingDuration;                                  // 0x05C0(0x0008)(Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 LiquidMaterialIndex;                               // 0x05C8(0x0010)(Edit, BlueprintVisible)
	TArray<class UMaterialInstanceDynamic*>       LiquidDynamicMaterialInstance;                     // 0x05D8(0x0010)(Edit, BlueprintVisible)
	double                                        NormalizedTime;                                    // 0x05E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void AssignLiquidMeshComponents();
	void CalculatedCurrentAmount(double Param_NormalizedTime);
	void ExecuteUbergraph_BP_DrinkPotionActor(int32 EntryPoint);
	void GameplayTagUpdated(const struct FGameplayTag& InGameplayTag, int32 InCount);
	void ReceiveBeginPlay();
	void ReceiveTick(float DeltaSeconds);
	void SetDrinkingDuration(double Duration);
	void SetPreviewMaterial();
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_DrinkPotionActor_C">();
	}
	static class ABP_DrinkPotionActor_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_DrinkPotionActor_C>();
	}
};
static_assert(alignof(ABP_DrinkPotionActor_C) == 0x000008, "Wrong alignment on ABP_DrinkPotionActor_C");
static_assert(sizeof(ABP_DrinkPotionActor_C) == 0x0005F0, "Wrong size on ABP_DrinkPotionActor_C");
static_assert(offsetof(ABP_DrinkPotionActor_C, UberGraphFrame) == 0x000568, "Member 'ABP_DrinkPotionActor_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_DrinkPotionActor_C, RemainDrinkingDuration) == 0x000570, "Member 'ABP_DrinkPotionActor_C::RemainDrinkingDuration' has a wrong offset!");
static_assert(offsetof(ABP_DrinkPotionActor_C, CurrentLiquidAmount) == 0x000578, "Member 'ABP_DrinkPotionActor_C::CurrentLiquidAmount' has a wrong offset!");
static_assert(offsetof(ABP_DrinkPotionActor_C, DoesRefillAfterDrinking) == 0x000580, "Member 'ABP_DrinkPotionActor_C::DoesRefillAfterDrinking' has a wrong offset!");
static_assert(offsetof(ABP_DrinkPotionActor_C, InitializeInitialAmountWithMaterial) == 0x000581, "Member 'ABP_DrinkPotionActor_C::InitializeInitialAmountWithMaterial' has a wrong offset!");
static_assert(offsetof(ABP_DrinkPotionActor_C, InitialAmount) == 0x000588, "Member 'ABP_DrinkPotionActor_C::InitialAmount' has a wrong offset!");
static_assert(offsetof(ABP_DrinkPotionActor_C, TargetAmount) == 0x000590, "Member 'ABP_DrinkPotionActor_C::TargetAmount' has a wrong offset!");
static_assert(offsetof(ABP_DrinkPotionActor_C, Height_Control_Variable_Name) == 0x000598, "Member 'ABP_DrinkPotionActor_C::Height_Control_Variable_Name' has a wrong offset!");
static_assert(offsetof(ABP_DrinkPotionActor_C, LiquidConstantMaterialInstance) == 0x0005A0, "Member 'ABP_DrinkPotionActor_C::LiquidConstantMaterialInstance' has a wrong offset!");
static_assert(offsetof(ABP_DrinkPotionActor_C, LiquidMeshComponent) == 0x0005B0, "Member 'ABP_DrinkPotionActor_C::LiquidMeshComponent' has a wrong offset!");
static_assert(offsetof(ABP_DrinkPotionActor_C, DrinkingDuration) == 0x0005C0, "Member 'ABP_DrinkPotionActor_C::DrinkingDuration' has a wrong offset!");
static_assert(offsetof(ABP_DrinkPotionActor_C, LiquidMaterialIndex) == 0x0005C8, "Member 'ABP_DrinkPotionActor_C::LiquidMaterialIndex' has a wrong offset!");
static_assert(offsetof(ABP_DrinkPotionActor_C, LiquidDynamicMaterialInstance) == 0x0005D8, "Member 'ABP_DrinkPotionActor_C::LiquidDynamicMaterialInstance' has a wrong offset!");
static_assert(offsetof(ABP_DrinkPotionActor_C, NormalizedTime) == 0x0005E8, "Member 'ABP_DrinkPotionActor_C::NormalizedTime' has a wrong offset!");

}

