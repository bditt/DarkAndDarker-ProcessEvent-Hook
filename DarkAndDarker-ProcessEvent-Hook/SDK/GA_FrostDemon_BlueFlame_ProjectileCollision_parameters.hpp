#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_FrostDemon_BlueFlame_ProjectileCollision

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function GA_FrostDemon_BlueFlame_ProjectileCollision.GA_FrostDemon_BlueFlame_ProjectileCollision_C.ExecuteUbergraph_GA_FrostDemon_BlueFlame_ProjectileCollision
// 0x01F0 (0x01F0 - 0x0000)
struct GA_FrostDemon_BlueFlame_ProjectileCollision_C_ExecuteUbergraph_GA_FrostDemon_BlueFlame_ProjectileCollision final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C3A[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_Event_Hit;                                  // 0x0008(0x00E8)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class AActor*                                 CallFunc_GetAvatarActorFromActorInfo_ReturnValue;  // 0x00F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x00F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C3B[0x2];                                     // 0x00FA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C3C[0x4];                                     // 0x0104(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0108(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0120(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0138(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0150(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0168(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0170(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0178(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x0194(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0198(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C3D[0x4];                                     // 0x019C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x01A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x01B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_FrostDemon_BlueFlame_C*             K2Node_DynamicCast_AsBP_Frost_Demon_Blue_Flame;    // 0x01D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x01D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C3E[0x7];                                     // 0x01D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ADCCharacterBase*                       K2Node_DynamicCast_AsDCCharacter_Base;             // 0x01E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x01E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_FrostDemon_BlueFlame_ProjectileCollision_C_ExecuteUbergraph_GA_FrostDemon_BlueFlame_ProjectileCollision) == 0x000008, "Wrong alignment on GA_FrostDemon_BlueFlame_ProjectileCollision_C_ExecuteUbergraph_GA_FrostDemon_BlueFlame_ProjectileCollision");
static_assert(sizeof(GA_FrostDemon_BlueFlame_ProjectileCollision_C_ExecuteUbergraph_GA_FrostDemon_BlueFlame_ProjectileCollision) == 0x0001F0, "Wrong size on GA_FrostDemon_BlueFlame_ProjectileCollision_C_ExecuteUbergraph_GA_FrostDemon_BlueFlame_ProjectileCollision");
static_assert(offsetof(GA_FrostDemon_BlueFlame_ProjectileCollision_C_ExecuteUbergraph_GA_FrostDemon_BlueFlame_ProjectileCollision, EntryPoint) == 0x000000, "Member 'GA_FrostDemon_BlueFlame_ProjectileCollision_C_ExecuteUbergraph_GA_FrostDemon_BlueFlame_ProjectileCollision::EntryPoint' has a wrong offset!");
static_assert(offsetof(GA_FrostDemon_BlueFlame_ProjectileCollision_C_ExecuteUbergraph_GA_FrostDemon_BlueFlame_ProjectileCollision, K2Node_Event_Hit) == 0x000008, "Member 'GA_FrostDemon_BlueFlame_ProjectileCollision_C_ExecuteUbergraph_GA_FrostDemon_BlueFlame_ProjectileCollision::K2Node_Event_Hit' has a wrong offset!");
static_assert(offsetof(GA_FrostDemon_BlueFlame_ProjectileCollision_C_ExecuteUbergraph_GA_FrostDemon_BlueFlame_ProjectileCollision, CallFunc_GetAvatarActorFromActorInfo_ReturnValue) == 0x0000F0, "Member 'GA_FrostDemon_BlueFlame_ProjectileCollision_C_ExecuteUbergraph_GA_FrostDemon_BlueFlame_ProjectileCollision::CallFunc_GetAvatarActorFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_FrostDemon_BlueFlame_ProjectileCollision_C_ExecuteUbergraph_GA_FrostDemon_BlueFlame_ProjectileCollision, CallFunc_BreakHitResult_bBlockingHit) == 0x0000F8, "Member 'GA_FrostDemon_BlueFlame_ProjectileCollision_C_ExecuteUbergraph_GA_FrostDemon_BlueFlame_ProjectileCollision::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(GA_FrostDemon_BlueFlame_ProjectileCollision_C_ExecuteUbergraph_GA_FrostDemon_BlueFlame_ProjectileCollision, CallFunc_BreakHitResult_bInitialOverlap) == 0x0000F9, "Member 'GA_FrostDemon_BlueFlame_ProjectileCollision_C_ExecuteUbergraph_GA_FrostDemon_BlueFlame_ProjectileCollision::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(GA_FrostDemon_BlueFlame_ProjectileCollision_C_ExecuteUbergraph_GA_FrostDemon_BlueFlame_ProjectileCollision, CallFunc_BreakHitResult_Time) == 0x0000FC, "Member 'GA_FrostDemon_BlueFlame_ProjectileCollision_C_ExecuteUbergraph_GA_FrostDemon_BlueFlame_ProjectileCollision::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(GA_FrostDemon_BlueFlame_ProjectileCollision_C_ExecuteUbergraph_GA_FrostDemon_BlueFlame_ProjectileCollision, CallFunc_BreakHitResult_Distance) == 0x000100, "Member 'GA_FrostDemon_BlueFlame_ProjectileCollision_C_ExecuteUbergraph_GA_FrostDemon_BlueFlame_ProjectileCollision::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(GA_FrostDemon_BlueFlame_ProjectileCollision_C_ExecuteUbergraph_GA_FrostDemon_BlueFlame_ProjectileCollision, CallFunc_BreakHitResult_Location) == 0x000108, "Member 'GA_FrostDemon_BlueFlame_ProjectileCollision_C_ExecuteUbergraph_GA_FrostDemon_BlueFlame_ProjectileCollision::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(GA_FrostDemon_BlueFlame_ProjectileCollision_C_ExecuteUbergraph_GA_FrostDemon_BlueFlame_ProjectileCollision, CallFunc_BreakHitResult_ImpactPoint) == 0x000120, "Member 'GA_FrostDemon_BlueFlame_ProjectileCollision_C_ExecuteUbergraph_GA_FrostDemon_BlueFlame_ProjectileCollision::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(GA_FrostDemon_BlueFlame_ProjectileCollision_C_ExecuteUbergraph_GA_FrostDemon_BlueFlame_ProjectileCollision, CallFunc_BreakHitResult_Normal) == 0x000138, "Member 'GA_FrostDemon_BlueFlame_ProjectileCollision_C_ExecuteUbergraph_GA_FrostDemon_BlueFlame_ProjectileCollision::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(GA_FrostDemon_BlueFlame_ProjectileCollision_C_ExecuteUbergraph_GA_FrostDemon_BlueFlame_ProjectileCollision, CallFunc_BreakHitResult_ImpactNormal) == 0x000150, "Member 'GA_FrostDemon_BlueFlame_ProjectileCollision_C_ExecuteUbergraph_GA_FrostDemon_BlueFlame_ProjectileCollision::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(GA_FrostDemon_BlueFlame_ProjectileCollision_C_ExecuteUbergraph_GA_FrostDemon_BlueFlame_ProjectileCollision, CallFunc_BreakHitResult_PhysMat) == 0x000168, "Member 'GA_FrostDemon_BlueFlame_ProjectileCollision_C_ExecuteUbergraph_GA_FrostDemon_BlueFlame_ProjectileCollision::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(GA_FrostDemon_BlueFlame_ProjectileCollision_C_ExecuteUbergraph_GA_FrostDemon_BlueFlame_ProjectileCollision, CallFunc_BreakHitResult_HitActor) == 0x000170, "Member 'GA_FrostDemon_BlueFlame_ProjectileCollision_C_ExecuteUbergraph_GA_FrostDemon_BlueFlame_ProjectileCollision::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(GA_FrostDemon_BlueFlame_ProjectileCollision_C_ExecuteUbergraph_GA_FrostDemon_BlueFlame_ProjectileCollision, CallFunc_BreakHitResult_HitComponent) == 0x000178, "Member 'GA_FrostDemon_BlueFlame_ProjectileCollision_C_ExecuteUbergraph_GA_FrostDemon_BlueFlame_ProjectileCollision::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(GA_FrostDemon_BlueFlame_ProjectileCollision_C_ExecuteUbergraph_GA_FrostDemon_BlueFlame_ProjectileCollision, CallFunc_BreakHitResult_HitBoneName) == 0x000180, "Member 'GA_FrostDemon_BlueFlame_ProjectileCollision_C_ExecuteUbergraph_GA_FrostDemon_BlueFlame_ProjectileCollision::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(GA_FrostDemon_BlueFlame_ProjectileCollision_C_ExecuteUbergraph_GA_FrostDemon_BlueFlame_ProjectileCollision, CallFunc_BreakHitResult_BoneName) == 0x000188, "Member 'GA_FrostDemon_BlueFlame_ProjectileCollision_C_ExecuteUbergraph_GA_FrostDemon_BlueFlame_ProjectileCollision::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(GA_FrostDemon_BlueFlame_ProjectileCollision_C_ExecuteUbergraph_GA_FrostDemon_BlueFlame_ProjectileCollision, CallFunc_BreakHitResult_HitItem) == 0x000190, "Member 'GA_FrostDemon_BlueFlame_ProjectileCollision_C_ExecuteUbergraph_GA_FrostDemon_BlueFlame_ProjectileCollision::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(GA_FrostDemon_BlueFlame_ProjectileCollision_C_ExecuteUbergraph_GA_FrostDemon_BlueFlame_ProjectileCollision, CallFunc_BreakHitResult_ElementIndex) == 0x000194, "Member 'GA_FrostDemon_BlueFlame_ProjectileCollision_C_ExecuteUbergraph_GA_FrostDemon_BlueFlame_ProjectileCollision::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(GA_FrostDemon_BlueFlame_ProjectileCollision_C_ExecuteUbergraph_GA_FrostDemon_BlueFlame_ProjectileCollision, CallFunc_BreakHitResult_FaceIndex) == 0x000198, "Member 'GA_FrostDemon_BlueFlame_ProjectileCollision_C_ExecuteUbergraph_GA_FrostDemon_BlueFlame_ProjectileCollision::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(GA_FrostDemon_BlueFlame_ProjectileCollision_C_ExecuteUbergraph_GA_FrostDemon_BlueFlame_ProjectileCollision, CallFunc_BreakHitResult_TraceStart) == 0x0001A0, "Member 'GA_FrostDemon_BlueFlame_ProjectileCollision_C_ExecuteUbergraph_GA_FrostDemon_BlueFlame_ProjectileCollision::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(GA_FrostDemon_BlueFlame_ProjectileCollision_C_ExecuteUbergraph_GA_FrostDemon_BlueFlame_ProjectileCollision, CallFunc_BreakHitResult_TraceEnd) == 0x0001B8, "Member 'GA_FrostDemon_BlueFlame_ProjectileCollision_C_ExecuteUbergraph_GA_FrostDemon_BlueFlame_ProjectileCollision::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(GA_FrostDemon_BlueFlame_ProjectileCollision_C_ExecuteUbergraph_GA_FrostDemon_BlueFlame_ProjectileCollision, K2Node_DynamicCast_AsBP_Frost_Demon_Blue_Flame) == 0x0001D0, "Member 'GA_FrostDemon_BlueFlame_ProjectileCollision_C_ExecuteUbergraph_GA_FrostDemon_BlueFlame_ProjectileCollision::K2Node_DynamicCast_AsBP_Frost_Demon_Blue_Flame' has a wrong offset!");
static_assert(offsetof(GA_FrostDemon_BlueFlame_ProjectileCollision_C_ExecuteUbergraph_GA_FrostDemon_BlueFlame_ProjectileCollision, K2Node_DynamicCast_bSuccess) == 0x0001D8, "Member 'GA_FrostDemon_BlueFlame_ProjectileCollision_C_ExecuteUbergraph_GA_FrostDemon_BlueFlame_ProjectileCollision::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GA_FrostDemon_BlueFlame_ProjectileCollision_C_ExecuteUbergraph_GA_FrostDemon_BlueFlame_ProjectileCollision, K2Node_DynamicCast_AsDCCharacter_Base) == 0x0001E0, "Member 'GA_FrostDemon_BlueFlame_ProjectileCollision_C_ExecuteUbergraph_GA_FrostDemon_BlueFlame_ProjectileCollision::K2Node_DynamicCast_AsDCCharacter_Base' has a wrong offset!");
static_assert(offsetof(GA_FrostDemon_BlueFlame_ProjectileCollision_C_ExecuteUbergraph_GA_FrostDemon_BlueFlame_ProjectileCollision, K2Node_DynamicCast_bSuccess_1) == 0x0001E8, "Member 'GA_FrostDemon_BlueFlame_ProjectileCollision_C_ExecuteUbergraph_GA_FrostDemon_BlueFlame_ProjectileCollision::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

// Function GA_FrostDemon_BlueFlame_ProjectileCollision.GA_FrostDemon_BlueFlame_ProjectileCollision_C.TargetDataReceived
// 0x00E8 (0x00E8 - 0x0000)
struct GA_FrostDemon_BlueFlame_ProjectileCollision_C_TargetDataReceived final
{
public:
	struct FHitResult                             Hit;                                               // 0x0000(0x00E8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(GA_FrostDemon_BlueFlame_ProjectileCollision_C_TargetDataReceived) == 0x000008, "Wrong alignment on GA_FrostDemon_BlueFlame_ProjectileCollision_C_TargetDataReceived");
static_assert(sizeof(GA_FrostDemon_BlueFlame_ProjectileCollision_C_TargetDataReceived) == 0x0000E8, "Wrong size on GA_FrostDemon_BlueFlame_ProjectileCollision_C_TargetDataReceived");
static_assert(offsetof(GA_FrostDemon_BlueFlame_ProjectileCollision_C_TargetDataReceived, Hit) == 0x000000, "Member 'GA_FrostDemon_BlueFlame_ProjectileCollision_C_TargetDataReceived::Hit' has a wrong offset!");

}

