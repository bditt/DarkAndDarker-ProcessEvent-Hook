#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_BloodsapBladePassive

#include "Basic.hpp"

#include "GameplayAbilities_structs.hpp"


namespace SDK::Params
{

// Function GA_BloodsapBladePassive.GA_BloodsapBladePassive_C.EventReceived_D2BC150F45A393BE786D9DAE4E325596
// 0x00B0 (0x00B0 - 0x0000)
struct GA_BloodsapBladePassive_C_EventReceived_D2BC150F45A393BE786D9DAE4E325596 final
{
public:
	struct FGameplayEventData                     Payload;                                           // 0x0000(0x00B0)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(GA_BloodsapBladePassive_C_EventReceived_D2BC150F45A393BE786D9DAE4E325596) == 0x000008, "Wrong alignment on GA_BloodsapBladePassive_C_EventReceived_D2BC150F45A393BE786D9DAE4E325596");
static_assert(sizeof(GA_BloodsapBladePassive_C_EventReceived_D2BC150F45A393BE786D9DAE4E325596) == 0x0000B0, "Wrong size on GA_BloodsapBladePassive_C_EventReceived_D2BC150F45A393BE786D9DAE4E325596");
static_assert(offsetof(GA_BloodsapBladePassive_C_EventReceived_D2BC150F45A393BE786D9DAE4E325596, Payload) == 0x000000, "Member 'GA_BloodsapBladePassive_C_EventReceived_D2BC150F45A393BE786D9DAE4E325596::Payload' has a wrong offset!");

// Function GA_BloodsapBladePassive.GA_BloodsapBladePassive_C.ExecuteUbergraph_GA_BloodsapBladePassive
// 0x0330 (0x0330 - 0x0000)
struct GA_BloodsapBladePassive_C_ExecuteUbergraph_GA_BloodsapBladePassive final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_45D2[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_GetCurrentSourceObject_ReturnValue;       // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEventData                     K2Node_CustomEvent_Payload;                        // 0x0010(0x00B0)()
	struct FGameplayEventData                     Temp_struct_Variable;                              // 0x00C0(0x00B0)()
	class UAbilityTask_WaitGameplayEvent*         CallFunc_WaitGameplayEvent_ReturnValue;            // 0x0170(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsMeleeAttackHit_ReturnValue;             // 0x0179(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_45D3[0x6];                                     // 0x017A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayEventData                     Temp_struct_Variable_1;                            // 0x0180(0x00B0)(ConstParm)
	class UObject*                                CallFunc_EffectContextGetSourceObject_ReturnValue; // 0x0230(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<struct FActiveGameplayEffectHandle>    CallFunc_ApplyEffectContainer_ReturnValue;         // 0x0238(0x0010)(ReferenceParm)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0248(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_45D4[0x7];                                     // 0x0249(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ADCCharacterBase*                       K2Node_DynamicCast_AsDCCharacter_Base;             // 0x0250(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0258(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_45D5[0x7];                                     // 0x0259(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayEventData                     K2Node_Event_EventData;                            // 0x0260(0x00B0)(ConstParm)
	TDelegate<void(const struct FGameplayEventData& Payload)> K2Node_CreateDelegate_OutputDelegate;              // 0x0310(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetAvatarActorFromActorInfo_ReturnValue;  // 0x0320(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_1;    // 0x0328(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_BloodsapBladePassive_C_ExecuteUbergraph_GA_BloodsapBladePassive) == 0x000008, "Wrong alignment on GA_BloodsapBladePassive_C_ExecuteUbergraph_GA_BloodsapBladePassive");
static_assert(sizeof(GA_BloodsapBladePassive_C_ExecuteUbergraph_GA_BloodsapBladePassive) == 0x000330, "Wrong size on GA_BloodsapBladePassive_C_ExecuteUbergraph_GA_BloodsapBladePassive");
static_assert(offsetof(GA_BloodsapBladePassive_C_ExecuteUbergraph_GA_BloodsapBladePassive, EntryPoint) == 0x000000, "Member 'GA_BloodsapBladePassive_C_ExecuteUbergraph_GA_BloodsapBladePassive::EntryPoint' has a wrong offset!");
static_assert(offsetof(GA_BloodsapBladePassive_C_ExecuteUbergraph_GA_BloodsapBladePassive, CallFunc_GetCurrentSourceObject_ReturnValue) == 0x000008, "Member 'GA_BloodsapBladePassive_C_ExecuteUbergraph_GA_BloodsapBladePassive::CallFunc_GetCurrentSourceObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_BloodsapBladePassive_C_ExecuteUbergraph_GA_BloodsapBladePassive, K2Node_CustomEvent_Payload) == 0x000010, "Member 'GA_BloodsapBladePassive_C_ExecuteUbergraph_GA_BloodsapBladePassive::K2Node_CustomEvent_Payload' has a wrong offset!");
static_assert(offsetof(GA_BloodsapBladePassive_C_ExecuteUbergraph_GA_BloodsapBladePassive, Temp_struct_Variable) == 0x0000C0, "Member 'GA_BloodsapBladePassive_C_ExecuteUbergraph_GA_BloodsapBladePassive::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(GA_BloodsapBladePassive_C_ExecuteUbergraph_GA_BloodsapBladePassive, CallFunc_WaitGameplayEvent_ReturnValue) == 0x000170, "Member 'GA_BloodsapBladePassive_C_ExecuteUbergraph_GA_BloodsapBladePassive::CallFunc_WaitGameplayEvent_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_BloodsapBladePassive_C_ExecuteUbergraph_GA_BloodsapBladePassive, CallFunc_IsValid_ReturnValue) == 0x000178, "Member 'GA_BloodsapBladePassive_C_ExecuteUbergraph_GA_BloodsapBladePassive::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_BloodsapBladePassive_C_ExecuteUbergraph_GA_BloodsapBladePassive, CallFunc_IsMeleeAttackHit_ReturnValue) == 0x000179, "Member 'GA_BloodsapBladePassive_C_ExecuteUbergraph_GA_BloodsapBladePassive::CallFunc_IsMeleeAttackHit_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_BloodsapBladePassive_C_ExecuteUbergraph_GA_BloodsapBladePassive, Temp_struct_Variable_1) == 0x000180, "Member 'GA_BloodsapBladePassive_C_ExecuteUbergraph_GA_BloodsapBladePassive::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(GA_BloodsapBladePassive_C_ExecuteUbergraph_GA_BloodsapBladePassive, CallFunc_EffectContextGetSourceObject_ReturnValue) == 0x000230, "Member 'GA_BloodsapBladePassive_C_ExecuteUbergraph_GA_BloodsapBladePassive::CallFunc_EffectContextGetSourceObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_BloodsapBladePassive_C_ExecuteUbergraph_GA_BloodsapBladePassive, CallFunc_ApplyEffectContainer_ReturnValue) == 0x000238, "Member 'GA_BloodsapBladePassive_C_ExecuteUbergraph_GA_BloodsapBladePassive::CallFunc_ApplyEffectContainer_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_BloodsapBladePassive_C_ExecuteUbergraph_GA_BloodsapBladePassive, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000248, "Member 'GA_BloodsapBladePassive_C_ExecuteUbergraph_GA_BloodsapBladePassive::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_BloodsapBladePassive_C_ExecuteUbergraph_GA_BloodsapBladePassive, K2Node_DynamicCast_AsDCCharacter_Base) == 0x000250, "Member 'GA_BloodsapBladePassive_C_ExecuteUbergraph_GA_BloodsapBladePassive::K2Node_DynamicCast_AsDCCharacter_Base' has a wrong offset!");
static_assert(offsetof(GA_BloodsapBladePassive_C_ExecuteUbergraph_GA_BloodsapBladePassive, K2Node_DynamicCast_bSuccess) == 0x000258, "Member 'GA_BloodsapBladePassive_C_ExecuteUbergraph_GA_BloodsapBladePassive::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GA_BloodsapBladePassive_C_ExecuteUbergraph_GA_BloodsapBladePassive, K2Node_Event_EventData) == 0x000260, "Member 'GA_BloodsapBladePassive_C_ExecuteUbergraph_GA_BloodsapBladePassive::K2Node_Event_EventData' has a wrong offset!");
static_assert(offsetof(GA_BloodsapBladePassive_C_ExecuteUbergraph_GA_BloodsapBladePassive, K2Node_CreateDelegate_OutputDelegate) == 0x000310, "Member 'GA_BloodsapBladePassive_C_ExecuteUbergraph_GA_BloodsapBladePassive::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(GA_BloodsapBladePassive_C_ExecuteUbergraph_GA_BloodsapBladePassive, CallFunc_GetAvatarActorFromActorInfo_ReturnValue) == 0x000320, "Member 'GA_BloodsapBladePassive_C_ExecuteUbergraph_GA_BloodsapBladePassive::CallFunc_GetAvatarActorFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_BloodsapBladePassive_C_ExecuteUbergraph_GA_BloodsapBladePassive, CallFunc_EqualEqual_ObjectObject_ReturnValue_1) == 0x000328, "Member 'GA_BloodsapBladePassive_C_ExecuteUbergraph_GA_BloodsapBladePassive::CallFunc_EqualEqual_ObjectObject_ReturnValue_1' has a wrong offset!");

// Function GA_BloodsapBladePassive.GA_BloodsapBladePassive_C.K2_ActivateAbilityFromEvent
// 0x00B0 (0x00B0 - 0x0000)
struct GA_BloodsapBladePassive_C_K2_ActivateAbilityFromEvent final
{
public:
	struct FGameplayEventData                     EventData;                                         // 0x0000(0x00B0)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(GA_BloodsapBladePassive_C_K2_ActivateAbilityFromEvent) == 0x000008, "Wrong alignment on GA_BloodsapBladePassive_C_K2_ActivateAbilityFromEvent");
static_assert(sizeof(GA_BloodsapBladePassive_C_K2_ActivateAbilityFromEvent) == 0x0000B0, "Wrong size on GA_BloodsapBladePassive_C_K2_ActivateAbilityFromEvent");
static_assert(offsetof(GA_BloodsapBladePassive_C_K2_ActivateAbilityFromEvent, EventData) == 0x000000, "Member 'GA_BloodsapBladePassive_C_K2_ActivateAbilityFromEvent::EventData' has a wrong offset!");

}

