#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_MonsterGameplayAbilityBase

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function GA_MonsterGameplayAbilityBase.GA_MonsterGameplayAbilityBase_C.GetBBTargetActor
// 0x0038 (0x0038 - 0x0000)
struct GA_MonsterGameplayAbilityBase_C_GetBBTargetActor final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49AD[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                Return_Value;                                      // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetAvatarActorFromActorInfo_ReturnValue;  // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBlackboardComponent*                   CallFunc_GetBlackboard_ReturnValue;                // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_MakeLiteralName_ReturnValue;              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_GetValueAsObject_ReturnValue;             // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_MonsterGameplayAbilityBase_C_GetBBTargetActor) == 0x000008, "Wrong alignment on GA_MonsterGameplayAbilityBase_C_GetBBTargetActor");
static_assert(sizeof(GA_MonsterGameplayAbilityBase_C_GetBBTargetActor) == 0x000038, "Wrong size on GA_MonsterGameplayAbilityBase_C_GetBBTargetActor");
static_assert(offsetof(GA_MonsterGameplayAbilityBase_C_GetBBTargetActor, Result) == 0x000000, "Member 'GA_MonsterGameplayAbilityBase_C_GetBBTargetActor::Result' has a wrong offset!");
static_assert(offsetof(GA_MonsterGameplayAbilityBase_C_GetBBTargetActor, Return_Value) == 0x000008, "Member 'GA_MonsterGameplayAbilityBase_C_GetBBTargetActor::Return_Value' has a wrong offset!");
static_assert(offsetof(GA_MonsterGameplayAbilityBase_C_GetBBTargetActor, CallFunc_GetAvatarActorFromActorInfo_ReturnValue) == 0x000010, "Member 'GA_MonsterGameplayAbilityBase_C_GetBBTargetActor::CallFunc_GetAvatarActorFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_MonsterGameplayAbilityBase_C_GetBBTargetActor, CallFunc_GetBlackboard_ReturnValue) == 0x000018, "Member 'GA_MonsterGameplayAbilityBase_C_GetBBTargetActor::CallFunc_GetBlackboard_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_MonsterGameplayAbilityBase_C_GetBBTargetActor, CallFunc_MakeLiteralName_ReturnValue) == 0x000020, "Member 'GA_MonsterGameplayAbilityBase_C_GetBBTargetActor::CallFunc_MakeLiteralName_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_MonsterGameplayAbilityBase_C_GetBBTargetActor, CallFunc_GetValueAsObject_ReturnValue) == 0x000028, "Member 'GA_MonsterGameplayAbilityBase_C_GetBBTargetActor::CallFunc_GetValueAsObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_MonsterGameplayAbilityBase_C_GetBBTargetActor, CallFunc_IsValid_ReturnValue) == 0x000030, "Member 'GA_MonsterGameplayAbilityBase_C_GetBBTargetActor::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function GA_MonsterGameplayAbilityBase.GA_MonsterGameplayAbilityBase_C.GetBBTargetActorToCharacterBase
// 0x0040 (0x0040 - 0x0000)
struct GA_MonsterGameplayAbilityBase_C_GetBBTargetActorToCharacterBase final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49AE[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ADCCharacterBase*                       As_DCCharacter_Base;                               // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetAvatarActorFromActorInfo_ReturnValue;  // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBlackboardComponent*                   CallFunc_GetBlackboard_ReturnValue;                // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_MakeLiteralName_ReturnValue;              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_GetValueAsObject_ReturnValue;             // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ADCCharacterBase*                       K2Node_DynamicCast_AsDCCharacter_Base;             // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_MonsterGameplayAbilityBase_C_GetBBTargetActorToCharacterBase) == 0x000008, "Wrong alignment on GA_MonsterGameplayAbilityBase_C_GetBBTargetActorToCharacterBase");
static_assert(sizeof(GA_MonsterGameplayAbilityBase_C_GetBBTargetActorToCharacterBase) == 0x000040, "Wrong size on GA_MonsterGameplayAbilityBase_C_GetBBTargetActorToCharacterBase");
static_assert(offsetof(GA_MonsterGameplayAbilityBase_C_GetBBTargetActorToCharacterBase, Result) == 0x000000, "Member 'GA_MonsterGameplayAbilityBase_C_GetBBTargetActorToCharacterBase::Result' has a wrong offset!");
static_assert(offsetof(GA_MonsterGameplayAbilityBase_C_GetBBTargetActorToCharacterBase, As_DCCharacter_Base) == 0x000008, "Member 'GA_MonsterGameplayAbilityBase_C_GetBBTargetActorToCharacterBase::As_DCCharacter_Base' has a wrong offset!");
static_assert(offsetof(GA_MonsterGameplayAbilityBase_C_GetBBTargetActorToCharacterBase, CallFunc_GetAvatarActorFromActorInfo_ReturnValue) == 0x000010, "Member 'GA_MonsterGameplayAbilityBase_C_GetBBTargetActorToCharacterBase::CallFunc_GetAvatarActorFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_MonsterGameplayAbilityBase_C_GetBBTargetActorToCharacterBase, CallFunc_GetBlackboard_ReturnValue) == 0x000018, "Member 'GA_MonsterGameplayAbilityBase_C_GetBBTargetActorToCharacterBase::CallFunc_GetBlackboard_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_MonsterGameplayAbilityBase_C_GetBBTargetActorToCharacterBase, CallFunc_MakeLiteralName_ReturnValue) == 0x000020, "Member 'GA_MonsterGameplayAbilityBase_C_GetBBTargetActorToCharacterBase::CallFunc_MakeLiteralName_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_MonsterGameplayAbilityBase_C_GetBBTargetActorToCharacterBase, CallFunc_GetValueAsObject_ReturnValue) == 0x000028, "Member 'GA_MonsterGameplayAbilityBase_C_GetBBTargetActorToCharacterBase::CallFunc_GetValueAsObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_MonsterGameplayAbilityBase_C_GetBBTargetActorToCharacterBase, K2Node_DynamicCast_AsDCCharacter_Base) == 0x000030, "Member 'GA_MonsterGameplayAbilityBase_C_GetBBTargetActorToCharacterBase::K2Node_DynamicCast_AsDCCharacter_Base' has a wrong offset!");
static_assert(offsetof(GA_MonsterGameplayAbilityBase_C_GetBBTargetActorToCharacterBase, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'GA_MonsterGameplayAbilityBase_C_GetBBTargetActorToCharacterBase::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GA_MonsterGameplayAbilityBase_C_GetBBTargetActorToCharacterBase, CallFunc_IsValid_ReturnValue) == 0x000039, "Member 'GA_MonsterGameplayAbilityBase_C_GetBBTargetActorToCharacterBase::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function GA_MonsterGameplayAbilityBase.GA_MonsterGameplayAbilityBase_C.GetBBTargetActorToMonsterBase
// 0x0040 (0x0040 - 0x0000)
struct GA_MonsterGameplayAbilityBase_C_GetBBTargetActorToMonsterBase final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49AF[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_DCMonsterBaseWithOptions_C*         DCMonsterBaseWithOptions;                          // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetAvatarActorFromActorInfo_ReturnValue;  // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBlackboardComponent*                   CallFunc_GetBlackboard_ReturnValue;                // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_MakeLiteralName_ReturnValue;              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_GetValueAsObject_ReturnValue;             // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_DCMonsterBaseWithOptions_C*         K2Node_DynamicCast_AsBP_DCMonster_Base_with_Options; // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_MonsterGameplayAbilityBase_C_GetBBTargetActorToMonsterBase) == 0x000008, "Wrong alignment on GA_MonsterGameplayAbilityBase_C_GetBBTargetActorToMonsterBase");
static_assert(sizeof(GA_MonsterGameplayAbilityBase_C_GetBBTargetActorToMonsterBase) == 0x000040, "Wrong size on GA_MonsterGameplayAbilityBase_C_GetBBTargetActorToMonsterBase");
static_assert(offsetof(GA_MonsterGameplayAbilityBase_C_GetBBTargetActorToMonsterBase, Result) == 0x000000, "Member 'GA_MonsterGameplayAbilityBase_C_GetBBTargetActorToMonsterBase::Result' has a wrong offset!");
static_assert(offsetof(GA_MonsterGameplayAbilityBase_C_GetBBTargetActorToMonsterBase, DCMonsterBaseWithOptions) == 0x000008, "Member 'GA_MonsterGameplayAbilityBase_C_GetBBTargetActorToMonsterBase::DCMonsterBaseWithOptions' has a wrong offset!");
static_assert(offsetof(GA_MonsterGameplayAbilityBase_C_GetBBTargetActorToMonsterBase, CallFunc_GetAvatarActorFromActorInfo_ReturnValue) == 0x000010, "Member 'GA_MonsterGameplayAbilityBase_C_GetBBTargetActorToMonsterBase::CallFunc_GetAvatarActorFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_MonsterGameplayAbilityBase_C_GetBBTargetActorToMonsterBase, CallFunc_GetBlackboard_ReturnValue) == 0x000018, "Member 'GA_MonsterGameplayAbilityBase_C_GetBBTargetActorToMonsterBase::CallFunc_GetBlackboard_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_MonsterGameplayAbilityBase_C_GetBBTargetActorToMonsterBase, CallFunc_MakeLiteralName_ReturnValue) == 0x000020, "Member 'GA_MonsterGameplayAbilityBase_C_GetBBTargetActorToMonsterBase::CallFunc_MakeLiteralName_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_MonsterGameplayAbilityBase_C_GetBBTargetActorToMonsterBase, CallFunc_GetValueAsObject_ReturnValue) == 0x000028, "Member 'GA_MonsterGameplayAbilityBase_C_GetBBTargetActorToMonsterBase::CallFunc_GetValueAsObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_MonsterGameplayAbilityBase_C_GetBBTargetActorToMonsterBase, K2Node_DynamicCast_AsBP_DCMonster_Base_with_Options) == 0x000030, "Member 'GA_MonsterGameplayAbilityBase_C_GetBBTargetActorToMonsterBase::K2Node_DynamicCast_AsBP_DCMonster_Base_with_Options' has a wrong offset!");
static_assert(offsetof(GA_MonsterGameplayAbilityBase_C_GetBBTargetActorToMonsterBase, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'GA_MonsterGameplayAbilityBase_C_GetBBTargetActorToMonsterBase::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GA_MonsterGameplayAbilityBase_C_GetBBTargetActorToMonsterBase, CallFunc_IsValid_ReturnValue) == 0x000039, "Member 'GA_MonsterGameplayAbilityBase_C_GetBBTargetActorToMonsterBase::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function GA_MonsterGameplayAbilityBase.GA_MonsterGameplayAbilityBase_C.Unable To Move Check
// 0x0190 (0x0190 - 0x0000)
struct GA_MonsterGameplayAbilityBase_C_Unable_To_Move_Check final
{
public:
	class AActor*                                 CallFunc_GetAvatarActorFromActorInfo_ReturnValue;  // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49B0[0x8];                                     // 0x0008(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0010(0x0060)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetAvatarActorFromActorInfo_ReturnValue_1; // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0078(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0090(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x00A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AAIController*                          CallFunc_GetAIController_ReturnValue;              // 0x00C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Vector_Distance2D_ReturnValue;            // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49B1[0x7];                                     // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetAvatarActorFromActorInfo_ReturnValue_2; // 0x00D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_GetTransform_ReturnValue_1;               // 0x00E0(0x0060)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location_1;                // 0x0140(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_1;                // 0x0158(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_1;                   // 0x0170(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_MonsterGameplayAbilityBase_C_Unable_To_Move_Check) == 0x000010, "Wrong alignment on GA_MonsterGameplayAbilityBase_C_Unable_To_Move_Check");
static_assert(sizeof(GA_MonsterGameplayAbilityBase_C_Unable_To_Move_Check) == 0x000190, "Wrong size on GA_MonsterGameplayAbilityBase_C_Unable_To_Move_Check");
static_assert(offsetof(GA_MonsterGameplayAbilityBase_C_Unable_To_Move_Check, CallFunc_GetAvatarActorFromActorInfo_ReturnValue) == 0x000000, "Member 'GA_MonsterGameplayAbilityBase_C_Unable_To_Move_Check::CallFunc_GetAvatarActorFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_MonsterGameplayAbilityBase_C_Unable_To_Move_Check, CallFunc_GetTransform_ReturnValue) == 0x000010, "Member 'GA_MonsterGameplayAbilityBase_C_Unable_To_Move_Check::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_MonsterGameplayAbilityBase_C_Unable_To_Move_Check, CallFunc_GetAvatarActorFromActorInfo_ReturnValue_1) == 0x000070, "Member 'GA_MonsterGameplayAbilityBase_C_Unable_To_Move_Check::CallFunc_GetAvatarActorFromActorInfo_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_MonsterGameplayAbilityBase_C_Unable_To_Move_Check, CallFunc_BreakTransform_Location) == 0x000078, "Member 'GA_MonsterGameplayAbilityBase_C_Unable_To_Move_Check::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(GA_MonsterGameplayAbilityBase_C_Unable_To_Move_Check, CallFunc_BreakTransform_Rotation) == 0x000090, "Member 'GA_MonsterGameplayAbilityBase_C_Unable_To_Move_Check::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(GA_MonsterGameplayAbilityBase_C_Unable_To_Move_Check, CallFunc_BreakTransform_Scale) == 0x0000A8, "Member 'GA_MonsterGameplayAbilityBase_C_Unable_To_Move_Check::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(GA_MonsterGameplayAbilityBase_C_Unable_To_Move_Check, CallFunc_GetAIController_ReturnValue) == 0x0000C0, "Member 'GA_MonsterGameplayAbilityBase_C_Unable_To_Move_Check::CallFunc_GetAIController_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_MonsterGameplayAbilityBase_C_Unable_To_Move_Check, CallFunc_Vector_Distance2D_ReturnValue) == 0x0000C8, "Member 'GA_MonsterGameplayAbilityBase_C_Unable_To_Move_Check::CallFunc_Vector_Distance2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_MonsterGameplayAbilityBase_C_Unable_To_Move_Check, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x0000D0, "Member 'GA_MonsterGameplayAbilityBase_C_Unable_To_Move_Check::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_MonsterGameplayAbilityBase_C_Unable_To_Move_Check, CallFunc_GetAvatarActorFromActorInfo_ReturnValue_2) == 0x0000D8, "Member 'GA_MonsterGameplayAbilityBase_C_Unable_To_Move_Check::CallFunc_GetAvatarActorFromActorInfo_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GA_MonsterGameplayAbilityBase_C_Unable_To_Move_Check, CallFunc_GetTransform_ReturnValue_1) == 0x0000E0, "Member 'GA_MonsterGameplayAbilityBase_C_Unable_To_Move_Check::CallFunc_GetTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_MonsterGameplayAbilityBase_C_Unable_To_Move_Check, CallFunc_BreakTransform_Location_1) == 0x000140, "Member 'GA_MonsterGameplayAbilityBase_C_Unable_To_Move_Check::CallFunc_BreakTransform_Location_1' has a wrong offset!");
static_assert(offsetof(GA_MonsterGameplayAbilityBase_C_Unable_To_Move_Check, CallFunc_BreakTransform_Rotation_1) == 0x000158, "Member 'GA_MonsterGameplayAbilityBase_C_Unable_To_Move_Check::CallFunc_BreakTransform_Rotation_1' has a wrong offset!");
static_assert(offsetof(GA_MonsterGameplayAbilityBase_C_Unable_To_Move_Check, CallFunc_BreakTransform_Scale_1) == 0x000170, "Member 'GA_MonsterGameplayAbilityBase_C_Unable_To_Move_Check::CallFunc_BreakTransform_Scale_1' has a wrong offset!");

// Function GA_MonsterGameplayAbilityBase.GA_MonsterGameplayAbilityBase_C.Unable To Move Check Timer
// 0x00C0 (0x00C0 - 0x0000)
struct GA_MonsterGameplayAbilityBase_C_Unable_To_Move_Check_Timer final
{
public:
	struct FTimerHandle                           TimerHandle;                                       // 0x0000(0x0008)(Parm, OutParm, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetAvatarActorFromActorInfo_ReturnValue;  // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0010(0x0060)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0070(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0088(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x00A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimer_ReturnValue;                  // 0x00B8(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_MonsterGameplayAbilityBase_C_Unable_To_Move_Check_Timer) == 0x000010, "Wrong alignment on GA_MonsterGameplayAbilityBase_C_Unable_To_Move_Check_Timer");
static_assert(sizeof(GA_MonsterGameplayAbilityBase_C_Unable_To_Move_Check_Timer) == 0x0000C0, "Wrong size on GA_MonsterGameplayAbilityBase_C_Unable_To_Move_Check_Timer");
static_assert(offsetof(GA_MonsterGameplayAbilityBase_C_Unable_To_Move_Check_Timer, TimerHandle) == 0x000000, "Member 'GA_MonsterGameplayAbilityBase_C_Unable_To_Move_Check_Timer::TimerHandle' has a wrong offset!");
static_assert(offsetof(GA_MonsterGameplayAbilityBase_C_Unable_To_Move_Check_Timer, CallFunc_GetAvatarActorFromActorInfo_ReturnValue) == 0x000008, "Member 'GA_MonsterGameplayAbilityBase_C_Unable_To_Move_Check_Timer::CallFunc_GetAvatarActorFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_MonsterGameplayAbilityBase_C_Unable_To_Move_Check_Timer, CallFunc_GetTransform_ReturnValue) == 0x000010, "Member 'GA_MonsterGameplayAbilityBase_C_Unable_To_Move_Check_Timer::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_MonsterGameplayAbilityBase_C_Unable_To_Move_Check_Timer, CallFunc_BreakTransform_Location) == 0x000070, "Member 'GA_MonsterGameplayAbilityBase_C_Unable_To_Move_Check_Timer::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(GA_MonsterGameplayAbilityBase_C_Unable_To_Move_Check_Timer, CallFunc_BreakTransform_Rotation) == 0x000088, "Member 'GA_MonsterGameplayAbilityBase_C_Unable_To_Move_Check_Timer::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(GA_MonsterGameplayAbilityBase_C_Unable_To_Move_Check_Timer, CallFunc_BreakTransform_Scale) == 0x0000A0, "Member 'GA_MonsterGameplayAbilityBase_C_Unable_To_Move_Check_Timer::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(GA_MonsterGameplayAbilityBase_C_Unable_To_Move_Check_Timer, CallFunc_K2_SetTimer_ReturnValue) == 0x0000B8, "Member 'GA_MonsterGameplayAbilityBase_C_Unable_To_Move_Check_Timer::CallFunc_K2_SetTimer_ReturnValue' has a wrong offset!");

}

