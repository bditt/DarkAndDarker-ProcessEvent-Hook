#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_FloorSpikesAura

#include "Basic.hpp"

#include "GameplayAbilities_structs.hpp"


namespace SDK::Params
{

// Function GA_FloorSpikesAura.GA_FloorSpikesAura_C.ExecuteUbergraph_GA_FloorSpikesAura
// 0x00F8 (0x00F8 - 0x0000)
struct GA_FloorSpikesAura_C_ExecuteUbergraph_GA_FloorSpikesAura final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5645[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_TargetActor;                          // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 Temp_struct_Variable;                              // 0x0010(0x00D8)(ConstParm, ContainsInstancedReference)
	class ABP_PlayerCharacter_C*                  K2Node_DynamicCast_AsBP_Player_Character;          // 0x00E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDead_ReturnValue;                       // 0x00F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_FloorSpikesAura_C_ExecuteUbergraph_GA_FloorSpikesAura) == 0x000008, "Wrong alignment on GA_FloorSpikesAura_C_ExecuteUbergraph_GA_FloorSpikesAura");
static_assert(sizeof(GA_FloorSpikesAura_C_ExecuteUbergraph_GA_FloorSpikesAura) == 0x0000F8, "Wrong size on GA_FloorSpikesAura_C_ExecuteUbergraph_GA_FloorSpikesAura");
static_assert(offsetof(GA_FloorSpikesAura_C_ExecuteUbergraph_GA_FloorSpikesAura, EntryPoint) == 0x000000, "Member 'GA_FloorSpikesAura_C_ExecuteUbergraph_GA_FloorSpikesAura::EntryPoint' has a wrong offset!");
static_assert(offsetof(GA_FloorSpikesAura_C_ExecuteUbergraph_GA_FloorSpikesAura, K2Node_Event_TargetActor) == 0x000008, "Member 'GA_FloorSpikesAura_C_ExecuteUbergraph_GA_FloorSpikesAura::K2Node_Event_TargetActor' has a wrong offset!");
static_assert(offsetof(GA_FloorSpikesAura_C_ExecuteUbergraph_GA_FloorSpikesAura, Temp_struct_Variable) == 0x000010, "Member 'GA_FloorSpikesAura_C_ExecuteUbergraph_GA_FloorSpikesAura::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(GA_FloorSpikesAura_C_ExecuteUbergraph_GA_FloorSpikesAura, K2Node_DynamicCast_AsBP_Player_Character) == 0x0000E8, "Member 'GA_FloorSpikesAura_C_ExecuteUbergraph_GA_FloorSpikesAura::K2Node_DynamicCast_AsBP_Player_Character' has a wrong offset!");
static_assert(offsetof(GA_FloorSpikesAura_C_ExecuteUbergraph_GA_FloorSpikesAura, K2Node_DynamicCast_bSuccess) == 0x0000F0, "Member 'GA_FloorSpikesAura_C_ExecuteUbergraph_GA_FloorSpikesAura::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GA_FloorSpikesAura_C_ExecuteUbergraph_GA_FloorSpikesAura, CallFunc_IsDead_ReturnValue) == 0x0000F1, "Member 'GA_FloorSpikesAura_C_ExecuteUbergraph_GA_FloorSpikesAura::CallFunc_IsDead_ReturnValue' has a wrong offset!");

// Function GA_FloorSpikesAura.GA_FloorSpikesAura_C.OnAuraOverlapBeginEvent
// 0x0008 (0x0008 - 0x0000)
struct GA_FloorSpikesAura_C_OnAuraOverlapBeginEvent final
{
public:
	class AActor*                                 TargetActor;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_FloorSpikesAura_C_OnAuraOverlapBeginEvent) == 0x000008, "Wrong alignment on GA_FloorSpikesAura_C_OnAuraOverlapBeginEvent");
static_assert(sizeof(GA_FloorSpikesAura_C_OnAuraOverlapBeginEvent) == 0x000008, "Wrong size on GA_FloorSpikesAura_C_OnAuraOverlapBeginEvent");
static_assert(offsetof(GA_FloorSpikesAura_C_OnAuraOverlapBeginEvent, TargetActor) == 0x000000, "Member 'GA_FloorSpikesAura_C_OnAuraOverlapBeginEvent::TargetActor' has a wrong offset!");

}

