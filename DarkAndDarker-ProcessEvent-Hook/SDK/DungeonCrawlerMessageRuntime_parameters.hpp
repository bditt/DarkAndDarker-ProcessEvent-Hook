#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: DungeonCrawlerMessageRuntime

#include "Basic.hpp"


namespace SDK::Params
{

// Function DungeonCrawlerMessageRuntime.BaseInterface.BroadcastMsgBlueprint
// 0x0004 (0x0004 - 0x0000)
struct BaseInterface_BroadcastMsgBlueprint final
{
public:
	int32                                         InMsg;                                             // 0x0000(0x0004)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(BaseInterface_BroadcastMsgBlueprint) == 0x000004, "Wrong alignment on BaseInterface_BroadcastMsgBlueprint");
static_assert(sizeof(BaseInterface_BroadcastMsgBlueprint) == 0x000004, "Wrong size on BaseInterface_BroadcastMsgBlueprint");
static_assert(offsetof(BaseInterface_BroadcastMsgBlueprint, InMsg) == 0x000000, "Member 'BaseInterface_BroadcastMsgBlueprint::InMsg' has a wrong offset!");

// Function DungeonCrawlerMessageRuntime.BaseInterface.UnbindMsg
// 0x0010 (0x0010 - 0x0000)
struct BaseInterface_UnbindMsg final
{
public:
	class UScriptStruct*                          InMsgType;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                InObject;                                          // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(BaseInterface_UnbindMsg) == 0x000008, "Wrong alignment on BaseInterface_UnbindMsg");
static_assert(sizeof(BaseInterface_UnbindMsg) == 0x000010, "Wrong size on BaseInterface_UnbindMsg");
static_assert(offsetof(BaseInterface_UnbindMsg, InMsgType) == 0x000000, "Member 'BaseInterface_UnbindMsg::InMsgType' has a wrong offset!");
static_assert(offsetof(BaseInterface_UnbindMsg, InObject) == 0x000008, "Member 'BaseInterface_UnbindMsg::InObject' has a wrong offset!");

// Function DungeonCrawlerMessageRuntime.BaseInterface.UnbindMsgAll
// 0x0008 (0x0008 - 0x0000)
struct BaseInterface_UnbindMsgAll final
{
public:
	class UObject*                                InObject;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(BaseInterface_UnbindMsgAll) == 0x000008, "Wrong alignment on BaseInterface_UnbindMsgAll");
static_assert(sizeof(BaseInterface_UnbindMsgAll) == 0x000008, "Wrong size on BaseInterface_UnbindMsgAll");
static_assert(offsetof(BaseInterface_UnbindMsgAll, InObject) == 0x000000, "Member 'BaseInterface_UnbindMsgAll::InObject' has a wrong offset!");

// Function DungeonCrawlerMessageRuntime.MsgBaseNode.GetPayload
// 0x0008 (0x0008 - 0x0000)
struct MsgBaseNode_GetPayload final
{
public:
	int32                                         OutRecvMsgType;                                    // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1B66[0x3];                                     // 0x0005(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(MsgBaseNode_GetPayload) == 0x000004, "Wrong alignment on MsgBaseNode_GetPayload");
static_assert(sizeof(MsgBaseNode_GetPayload) == 0x000008, "Wrong size on MsgBaseNode_GetPayload");
static_assert(offsetof(MsgBaseNode_GetPayload, OutRecvMsgType) == 0x000000, "Member 'MsgBaseNode_GetPayload::OutRecvMsgType' has a wrong offset!");
static_assert(offsetof(MsgBaseNode_GetPayload, ReturnValue) == 0x000004, "Member 'MsgBaseNode_GetPayload::ReturnValue' has a wrong offset!");

// Function DungeonCrawlerMessageRuntime.MsgBaseNode.ReplyMsg
// 0x0004 (0x0004 - 0x0000)
struct MsgBaseNode_ReplyMsg final
{
public:
	int32                                         InMsg;                                             // 0x0000(0x0004)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MsgBaseNode_ReplyMsg) == 0x000004, "Wrong alignment on MsgBaseNode_ReplyMsg");
static_assert(sizeof(MsgBaseNode_ReplyMsg) == 0x000004, "Wrong size on MsgBaseNode_ReplyMsg");
static_assert(offsetof(MsgBaseNode_ReplyMsg, InMsg) == 0x000000, "Member 'MsgBaseNode_ReplyMsg::InMsg' has a wrong offset!");

// Function DungeonCrawlerMessageRuntime.BindMsgNode.BindMsgNode
// 0x0028 (0x0028 - 0x0000)
struct BindMsgNode_BindMsgNode final
{
public:
	class UObject*                                Owner;                                             // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UScriptStruct*                          RecvMsgType;                                       // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TScriptInterface<class IBaseInterface>        BaseInterface;                                     // 0x0010(0x0010)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UBindMsgNode*                           ReturnValue;                                       // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(BindMsgNode_BindMsgNode) == 0x000008, "Wrong alignment on BindMsgNode_BindMsgNode");
static_assert(sizeof(BindMsgNode_BindMsgNode) == 0x000028, "Wrong size on BindMsgNode_BindMsgNode");
static_assert(offsetof(BindMsgNode_BindMsgNode, Owner) == 0x000000, "Member 'BindMsgNode_BindMsgNode::Owner' has a wrong offset!");
static_assert(offsetof(BindMsgNode_BindMsgNode, RecvMsgType) == 0x000008, "Member 'BindMsgNode_BindMsgNode::RecvMsgType' has a wrong offset!");
static_assert(offsetof(BindMsgNode_BindMsgNode, BaseInterface) == 0x000010, "Member 'BindMsgNode_BindMsgNode::BaseInterface' has a wrong offset!");
static_assert(offsetof(BindMsgNode_BindMsgNode, ReturnValue) == 0x000020, "Member 'BindMsgNode_BindMsgNode::ReturnValue' has a wrong offset!");

// Function DungeonCrawlerMessageRuntime.BroadcastMsgNode.BroadcastMsgNode
// 0x0028 (0x0028 - 0x0000)
struct BroadcastMsgNode_BroadcastMsgNode final
{
public:
	class UObject*                                Owner;                                             // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UScriptStruct*                          RecvMsgType;                                       // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TScriptInterface<class IBaseInterface>        BaseInterface;                                     // 0x0010(0x0010)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UBroadcastMsgNode*                      ReturnValue;                                       // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(BroadcastMsgNode_BroadcastMsgNode) == 0x000008, "Wrong alignment on BroadcastMsgNode_BroadcastMsgNode");
static_assert(sizeof(BroadcastMsgNode_BroadcastMsgNode) == 0x000028, "Wrong size on BroadcastMsgNode_BroadcastMsgNode");
static_assert(offsetof(BroadcastMsgNode_BroadcastMsgNode, Owner) == 0x000000, "Member 'BroadcastMsgNode_BroadcastMsgNode::Owner' has a wrong offset!");
static_assert(offsetof(BroadcastMsgNode_BroadcastMsgNode, RecvMsgType) == 0x000008, "Member 'BroadcastMsgNode_BroadcastMsgNode::RecvMsgType' has a wrong offset!");
static_assert(offsetof(BroadcastMsgNode_BroadcastMsgNode, BaseInterface) == 0x000010, "Member 'BroadcastMsgNode_BroadcastMsgNode::BaseInterface' has a wrong offset!");
static_assert(offsetof(BroadcastMsgNode_BroadcastMsgNode, ReturnValue) == 0x000020, "Member 'BroadcastMsgNode_BroadcastMsgNode::ReturnValue' has a wrong offset!");

// Function DungeonCrawlerMessageRuntime.BroadcastMsgNode.BroadcastMsg
// 0x0004 (0x0004 - 0x0000)
struct BroadcastMsgNode_BroadcastMsg final
{
public:
	int32                                         InMsg;                                             // 0x0000(0x0004)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(BroadcastMsgNode_BroadcastMsg) == 0x000004, "Wrong alignment on BroadcastMsgNode_BroadcastMsg");
static_assert(sizeof(BroadcastMsgNode_BroadcastMsg) == 0x000004, "Wrong size on BroadcastMsgNode_BroadcastMsg");
static_assert(offsetof(BroadcastMsgNode_BroadcastMsg, InMsg) == 0x000000, "Member 'BroadcastMsgNode_BroadcastMsg::InMsg' has a wrong offset!");

}

