#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_MonsterProjectileAttackBase

#include "Basic.hpp"

#include "GA_MonsterProjectileAttackBase_classes.hpp"
#include "GA_MonsterProjectileAttackBase_parameters.hpp"


namespace SDK
{

// Function GA_MonsterProjectileAttackBase.GA_MonsterProjectileAttackBase_C.AbilityActivated
// (Event, Public, BlueprintEvent)
// Parameters:
// struct FGameplayEventData               TriggerEventData                                       (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm)

void UGA_MonsterProjectileAttackBase_C::AbilityActivated(const struct FGameplayEventData& TriggerEventData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_MonsterProjectileAttackBase_C", "AbilityActivated");

	Params::GA_MonsterProjectileAttackBase_C_AbilityActivated Parms{};

	Parms.TriggerEventData = std::move(TriggerEventData);

	UObject::ProcessEvent(Func, &Parms);
}


// Function GA_MonsterProjectileAttackBase.GA_MonsterProjectileAttackBase_C.CreateProjectiles
// (Event, Protected, BlueprintEvent)
// Parameters:
// struct FGameplayTag                     EventTag                                               (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// struct FGameplayEventData               EventData                                              (BlueprintVisible, BlueprintReadOnly, Parm)
// float                                   FirePower                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          StartLocation                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UGA_MonsterProjectileAttackBase_C::CreateProjectiles(const struct FGameplayTag& EventTag, const struct FGameplayEventData& EventData, float FirePower, const struct FVector& StartLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_MonsterProjectileAttackBase_C", "CreateProjectiles");

	Params::GA_MonsterProjectileAttackBase_C_CreateProjectiles Parms{};

	Parms.EventTag = std::move(EventTag);
	Parms.EventData = std::move(EventData);
	Parms.FirePower = FirePower;
	Parms.StartLocation = std::move(StartLocation);

	UObject::ProcessEvent(Func, &Parms);
}


// Function GA_MonsterProjectileAttackBase.GA_MonsterProjectileAttackBase_C.EventReceived_FF8A911F49704E3033475794D8E16251
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGameplayTag                     EventTag                                               (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// struct FGameplayEventData               EventData                                              (BlueprintVisible, BlueprintReadOnly, Parm)

void UGA_MonsterProjectileAttackBase_C::EventReceived_FF8A911F49704E3033475794D8E16251(const struct FGameplayTag& EventTag, const struct FGameplayEventData& EventData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_MonsterProjectileAttackBase_C", "EventReceived_FF8A911F49704E3033475794D8E16251");

	Params::GA_MonsterProjectileAttackBase_C_EventReceived_FF8A911F49704E3033475794D8E16251 Parms{};

	Parms.EventTag = std::move(EventTag);
	Parms.EventData = std::move(EventData);

	UObject::ProcessEvent(Func, &Parms);
}


// Function GA_MonsterProjectileAttackBase.GA_MonsterProjectileAttackBase_C.ExecuteUbergraph_GA_MonsterProjectileAttackBase
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UGA_MonsterProjectileAttackBase_C::ExecuteUbergraph_GA_MonsterProjectileAttackBase(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_MonsterProjectileAttackBase_C", "ExecuteUbergraph_GA_MonsterProjectileAttackBase");

	Params::GA_MonsterProjectileAttackBase_C_ExecuteUbergraph_GA_MonsterProjectileAttackBase Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GA_MonsterProjectileAttackBase.GA_MonsterProjectileAttackBase_C.GetBBTargetActor
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          Return_Value                                           (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UGA_MonsterProjectileAttackBase_C::GetBBTargetActor(bool* Result, class UObject** Return_Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_MonsterProjectileAttackBase_C", "GetBBTargetActor");

	Params::GA_MonsterProjectileAttackBase_C_GetBBTargetActor Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;

	if (Return_Value != nullptr)
		*Return_Value = Parms.Return_Value;
}


// Function GA_MonsterProjectileAttackBase.GA_MonsterProjectileAttackBase_C.GetBBTargetActorToCharacterBase
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ADCCharacterBase*                 Param_As_DCCharacter_Base                              (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UGA_MonsterProjectileAttackBase_C::GetBBTargetActorToCharacterBase(bool* Result, class ADCCharacterBase** Param_As_DCCharacter_Base)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_MonsterProjectileAttackBase_C", "GetBBTargetActorToCharacterBase");

	Params::GA_MonsterProjectileAttackBase_C_GetBBTargetActorToCharacterBase Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;

	if (Param_As_DCCharacter_Base != nullptr)
		*Param_As_DCCharacter_Base = Parms.Param_As_DCCharacter_Base;
}


// Function GA_MonsterProjectileAttackBase.GA_MonsterProjectileAttackBase_C.GetBBTargetActorToMonsterBase
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ABP_DCMonsterBaseWithOptions_C*   DCMonsterBaseWithOptions                               (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UGA_MonsterProjectileAttackBase_C::GetBBTargetActorToMonsterBase(bool* Result, class ABP_DCMonsterBaseWithOptions_C** DCMonsterBaseWithOptions)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_MonsterProjectileAttackBase_C", "GetBBTargetActorToMonsterBase");

	Params::GA_MonsterProjectileAttackBase_C_GetBBTargetActorToMonsterBase Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;

	if (DCMonsterBaseWithOptions != nullptr)
		*DCMonsterBaseWithOptions = Parms.DCMonsterBaseWithOptions;
}


// Function GA_MonsterProjectileAttackBase.GA_MonsterProjectileAttackBase_C.OnSuccess_F5E50B8644363E6A2924759BA396758A
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           ProjectileActor                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UGA_MonsterProjectileAttackBase_C::OnSuccess_F5E50B8644363E6A2924759BA396758A(class AActor* ProjectileActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_MonsterProjectileAttackBase_C", "OnSuccess_F5E50B8644363E6A2924759BA396758A");

	Params::GA_MonsterProjectileAttackBase_C_OnSuccess_F5E50B8644363E6A2924759BA396758A Parms{};

	Parms.ProjectileActor = ProjectileActor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GA_MonsterProjectileAttackBase.GA_MonsterProjectileAttackBase_C.OnSuccess_F7E3C6614A5311DD050E5CB226F07D8A
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           ProjectileActor                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UGA_MonsterProjectileAttackBase_C::OnSuccess_F7E3C6614A5311DD050E5CB226F07D8A(class AActor* ProjectileActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_MonsterProjectileAttackBase_C", "OnSuccess_F7E3C6614A5311DD050E5CB226F07D8A");

	Params::GA_MonsterProjectileAttackBase_C_OnSuccess_F7E3C6614A5311DD050E5CB226F07D8A Parms{};

	Parms.ProjectileActor = ProjectileActor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GA_MonsterProjectileAttackBase.GA_MonsterProjectileAttackBase_C.Set Options
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AProjectileActor*                 ProjectileActorInput                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UGA_MonsterProjectileAttackBase_C::Set_Options(class AProjectileActor* ProjectileActorInput)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_MonsterProjectileAttackBase_C", "Set Options");

	Params::GA_MonsterProjectileAttackBase_C_Set_Options Parms{};

	Parms.ProjectileActorInput = ProjectileActorInput;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GA_MonsterProjectileAttackBase.GA_MonsterProjectileAttackBase_C.SetHoming
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Bool                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UGA_MonsterProjectileAttackBase_C::SetHoming(bool* Bool)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_MonsterProjectileAttackBase_C", "SetHoming");

	Params::GA_MonsterProjectileAttackBase_C_SetHoming Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Bool != nullptr)
		*Bool = Parms.Bool;
}


// Function GA_MonsterProjectileAttackBase.GA_MonsterProjectileAttackBase_C.SetSpec
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AProjectileActor*                 ProjectileActorOutput                                  (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UGA_MonsterProjectileAttackBase_C::SetSpec(class AProjectileActor** ProjectileActorOutput)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_MonsterProjectileAttackBase_C", "SetSpec");

	Params::GA_MonsterProjectileAttackBase_C_SetSpec Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (ProjectileActorOutput != nullptr)
		*ProjectileActorOutput = Parms.ProjectileActorOutput;
}


// Function GA_MonsterProjectileAttackBase.GA_MonsterProjectileAttackBase_C.SetTransform
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          ShootLocation_Input                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FRotator                         ShootRotation_Input                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FVector                          ShootLocation_Output                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FRotator                         ShootRotation_Output                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UGA_MonsterProjectileAttackBase_C::SetTransform(const struct FVector& ShootLocation_Input, const struct FRotator& ShootRotation_Input, struct FVector* ShootLocation_Output, struct FRotator* ShootRotation_Output)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_MonsterProjectileAttackBase_C", "SetTransform");

	Params::GA_MonsterProjectileAttackBase_C_SetTransform Parms{};

	Parms.ShootLocation_Input = std::move(ShootLocation_Input);
	Parms.ShootRotation_Input = std::move(ShootRotation_Input);

	UObject::ProcessEvent(Func, &Parms);

	if (ShootLocation_Output != nullptr)
		*ShootLocation_Output = std::move(Parms.ShootLocation_Output);

	if (ShootRotation_Output != nullptr)
		*ShootRotation_Output = std::move(Parms.ShootRotation_Output);
}


// Function GA_MonsterProjectileAttackBase.GA_MonsterProjectileAttackBase_C.SetTransform To Target's HitBox
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          ShootLocation_Input                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FRotator                         ShootRotation_Input                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FVector                          ShootLocation_Output                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FRotator                         ShootRotation_Output                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UGA_MonsterProjectileAttackBase_C::SetTransform_To_Target_s_HitBox(const struct FVector& ShootLocation_Input, const struct FRotator& ShootRotation_Input, struct FVector* ShootLocation_Output, struct FRotator* ShootRotation_Output)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_MonsterProjectileAttackBase_C", "SetTransform To Target's HitBox");

	Params::GA_MonsterProjectileAttackBase_C_SetTransform_To_Target_s_HitBox Parms{};

	Parms.ShootLocation_Input = std::move(ShootLocation_Input);
	Parms.ShootRotation_Input = std::move(ShootRotation_Input);

	UObject::ProcessEvent(Func, &Parms);

	if (ShootLocation_Output != nullptr)
		*ShootLocation_Output = std::move(Parms.ShootLocation_Output);

	if (ShootRotation_Output != nullptr)
		*ShootRotation_Output = std::move(Parms.ShootRotation_Output);
}

}

