#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ABP_WindlassCrossbow

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "DungeonCrawler_structs.hpp"


namespace SDK::Params
{

// Function ABP_WindlassCrossbow.ABP_WindlassCrossbow_C.AnimGraph
// 0x0010 (0x0010 - 0x0000)
struct ABP_WindlassCrossbow_C_AnimGraph final
{
public:
	struct FPoseLink                              Param_AnimGraph;                                   // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(ABP_WindlassCrossbow_C_AnimGraph) == 0x000008, "Wrong alignment on ABP_WindlassCrossbow_C_AnimGraph");
static_assert(sizeof(ABP_WindlassCrossbow_C_AnimGraph) == 0x000010, "Wrong size on ABP_WindlassCrossbow_C_AnimGraph");
static_assert(offsetof(ABP_WindlassCrossbow_C_AnimGraph, Param_AnimGraph) == 0x000000, "Member 'ABP_WindlassCrossbow_C_AnimGraph::Param_AnimGraph' has a wrong offset!");

// Function ABP_WindlassCrossbow.ABP_WindlassCrossbow_C.ExecuteUbergraph_ABP_WindlassCrossbow
// 0x0180 (0x0180 - 0x0000)
struct ABP_WindlassCrossbow_C_ExecuteUbergraph_ABP_WindlassCrossbow final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_GameplayTag_ReturnValue;       // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_GameplayTag_ReturnValue_1;     // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4105[0x2];                                     // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 CallFunc_GetOwningComponent_ReturnValue;           // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FItemData                              K2Node_Event_ItemData;                             // 0x0010(0x0100)(ConstParm)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4106[0x7];                                     // 0x0111(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMsgAnimationChangeIdle                K2Node_MakeStruct_MsgAnimationChangeIdle;          // 0x0118(0x0020)()
	struct FMsgAnimationChangeIdle                K2Node_MakeStruct_MsgAnimationChangeIdle_1;        // 0x0138(0x0020)()
	TDelegate<void(class UAnimMontage* Montage, bool bInterrupted)> K2Node_CreateDelegate_OutputDelegate;              // 0x0158(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           K2Node_CustomEvent_Montage;                        // 0x0168(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bInterrupted;                   // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4107[0x7];                                     // 0x0171(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 CallFunc_GetOwningComponent_ReturnValue_1;         // 0x0178(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_WindlassCrossbow_C_ExecuteUbergraph_ABP_WindlassCrossbow) == 0x000008, "Wrong alignment on ABP_WindlassCrossbow_C_ExecuteUbergraph_ABP_WindlassCrossbow");
static_assert(sizeof(ABP_WindlassCrossbow_C_ExecuteUbergraph_ABP_WindlassCrossbow) == 0x000180, "Wrong size on ABP_WindlassCrossbow_C_ExecuteUbergraph_ABP_WindlassCrossbow");
static_assert(offsetof(ABP_WindlassCrossbow_C_ExecuteUbergraph_ABP_WindlassCrossbow, EntryPoint) == 0x000000, "Member 'ABP_WindlassCrossbow_C_ExecuteUbergraph_ABP_WindlassCrossbow::EntryPoint' has a wrong offset!");
static_assert(offsetof(ABP_WindlassCrossbow_C_ExecuteUbergraph_ABP_WindlassCrossbow, CallFunc_EqualEqual_GameplayTag_ReturnValue) == 0x000004, "Member 'ABP_WindlassCrossbow_C_ExecuteUbergraph_ABP_WindlassCrossbow::CallFunc_EqualEqual_GameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_WindlassCrossbow_C_ExecuteUbergraph_ABP_WindlassCrossbow, CallFunc_EqualEqual_GameplayTag_ReturnValue_1) == 0x000005, "Member 'ABP_WindlassCrossbow_C_ExecuteUbergraph_ABP_WindlassCrossbow::CallFunc_EqualEqual_GameplayTag_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_WindlassCrossbow_C_ExecuteUbergraph_ABP_WindlassCrossbow, CallFunc_GetOwningComponent_ReturnValue) == 0x000008, "Member 'ABP_WindlassCrossbow_C_ExecuteUbergraph_ABP_WindlassCrossbow::CallFunc_GetOwningComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_WindlassCrossbow_C_ExecuteUbergraph_ABP_WindlassCrossbow, K2Node_Event_ItemData) == 0x000010, "Member 'ABP_WindlassCrossbow_C_ExecuteUbergraph_ABP_WindlassCrossbow::K2Node_Event_ItemData' has a wrong offset!");
static_assert(offsetof(ABP_WindlassCrossbow_C_ExecuteUbergraph_ABP_WindlassCrossbow, CallFunc_Greater_IntInt_ReturnValue) == 0x000110, "Member 'ABP_WindlassCrossbow_C_ExecuteUbergraph_ABP_WindlassCrossbow::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_WindlassCrossbow_C_ExecuteUbergraph_ABP_WindlassCrossbow, K2Node_MakeStruct_MsgAnimationChangeIdle) == 0x000118, "Member 'ABP_WindlassCrossbow_C_ExecuteUbergraph_ABP_WindlassCrossbow::K2Node_MakeStruct_MsgAnimationChangeIdle' has a wrong offset!");
static_assert(offsetof(ABP_WindlassCrossbow_C_ExecuteUbergraph_ABP_WindlassCrossbow, K2Node_MakeStruct_MsgAnimationChangeIdle_1) == 0x000138, "Member 'ABP_WindlassCrossbow_C_ExecuteUbergraph_ABP_WindlassCrossbow::K2Node_MakeStruct_MsgAnimationChangeIdle_1' has a wrong offset!");
static_assert(offsetof(ABP_WindlassCrossbow_C_ExecuteUbergraph_ABP_WindlassCrossbow, K2Node_CreateDelegate_OutputDelegate) == 0x000158, "Member 'ABP_WindlassCrossbow_C_ExecuteUbergraph_ABP_WindlassCrossbow::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(ABP_WindlassCrossbow_C_ExecuteUbergraph_ABP_WindlassCrossbow, K2Node_CustomEvent_Montage) == 0x000168, "Member 'ABP_WindlassCrossbow_C_ExecuteUbergraph_ABP_WindlassCrossbow::K2Node_CustomEvent_Montage' has a wrong offset!");
static_assert(offsetof(ABP_WindlassCrossbow_C_ExecuteUbergraph_ABP_WindlassCrossbow, K2Node_CustomEvent_bInterrupted) == 0x000170, "Member 'ABP_WindlassCrossbow_C_ExecuteUbergraph_ABP_WindlassCrossbow::K2Node_CustomEvent_bInterrupted' has a wrong offset!");
static_assert(offsetof(ABP_WindlassCrossbow_C_ExecuteUbergraph_ABP_WindlassCrossbow, CallFunc_GetOwningComponent_ReturnValue_1) == 0x000178, "Member 'ABP_WindlassCrossbow_C_ExecuteUbergraph_ABP_WindlassCrossbow::CallFunc_GetOwningComponent_ReturnValue_1' has a wrong offset!");

// Function ABP_WindlassCrossbow.ABP_WindlassCrossbow_C.OnBlendingOut
// 0x0010 (0x0010 - 0x0000)
struct ABP_WindlassCrossbow_C_OnBlendingOut final
{
public:
	class UAnimMontage*                           Montage;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          bInterrupted;                                      // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_WindlassCrossbow_C_OnBlendingOut) == 0x000008, "Wrong alignment on ABP_WindlassCrossbow_C_OnBlendingOut");
static_assert(sizeof(ABP_WindlassCrossbow_C_OnBlendingOut) == 0x000010, "Wrong size on ABP_WindlassCrossbow_C_OnBlendingOut");
static_assert(offsetof(ABP_WindlassCrossbow_C_OnBlendingOut, Montage) == 0x000000, "Member 'ABP_WindlassCrossbow_C_OnBlendingOut::Montage' has a wrong offset!");
static_assert(offsetof(ABP_WindlassCrossbow_C_OnBlendingOut, bInterrupted) == 0x000008, "Member 'ABP_WindlassCrossbow_C_OnBlendingOut::bInterrupted' has a wrong offset!");

// Function ABP_WindlassCrossbow.ABP_WindlassCrossbow_C.OnItemDataUpdated
// 0x0100 (0x0100 - 0x0000)
struct ABP_WindlassCrossbow_C_OnItemDataUpdated final
{
public:
	struct FItemData                              ItemData;                                          // 0x0000(0x0100)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(ABP_WindlassCrossbow_C_OnItemDataUpdated) == 0x000008, "Wrong alignment on ABP_WindlassCrossbow_C_OnItemDataUpdated");
static_assert(sizeof(ABP_WindlassCrossbow_C_OnItemDataUpdated) == 0x000100, "Wrong size on ABP_WindlassCrossbow_C_OnItemDataUpdated");
static_assert(offsetof(ABP_WindlassCrossbow_C_OnItemDataUpdated, ItemData) == 0x000000, "Member 'ABP_WindlassCrossbow_C_OnItemDataUpdated::ItemData' has a wrong offset!");

}

