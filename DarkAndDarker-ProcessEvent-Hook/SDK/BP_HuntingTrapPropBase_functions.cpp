#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_HuntingTrapPropBase

#include "Basic.hpp"

#include "BP_HuntingTrapPropBase_classes.hpp"
#include "BP_HuntingTrapPropBase_parameters.hpp"


namespace SDK
{

// Function BP_HuntingTrapPropBase.BP_HuntingTrapPropBase_C.BndEvt__BP_HuntingTrapProp_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature
// (HasOutParams, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// int32                                   OtherBodyIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bFromSweep                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FHitResult                       SweepResult                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void ABP_HuntingTrapPropBase_C::BndEvt__BP_HuntingTrapProp_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HuntingTrapPropBase_C", "BndEvt__BP_HuntingTrapProp_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");

	Params::BP_HuntingTrapPropBase_C_BndEvt__BP_HuntingTrapProp_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;
	Parms.bFromSweep = bFromSweep;
	Parms.SweepResult = std::move(SweepResult);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HuntingTrapPropBase.BP_HuntingTrapPropBase_C.Deactivate Trap
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_HuntingTrapPropBase_C::Deactivate_Trap()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HuntingTrapPropBase_C", "Deactivate Trap");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_HuntingTrapPropBase.BP_HuntingTrapPropBase_C.ExecuteUbergraph_BP_HuntingTrapPropBase
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_HuntingTrapPropBase_C::ExecuteUbergraph_BP_HuntingTrapPropBase(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HuntingTrapPropBase_C", "ExecuteUbergraph_BP_HuntingTrapPropBase");

	Params::BP_HuntingTrapPropBase_C_ExecuteUbergraph_BP_HuntingTrapPropBase Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HuntingTrapPropBase.BP_HuntingTrapPropBase_C.GameplayTagUpdated
// (Event, Protected, BlueprintEvent)
// Parameters:
// struct FGameplayTag                     InGameplayTag                                          (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// int32                                   InCount                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_HuntingTrapPropBase_C::GameplayTagUpdated(const struct FGameplayTag& InGameplayTag, int32 InCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HuntingTrapPropBase_C", "GameplayTagUpdated");

	Params::BP_HuntingTrapPropBase_C_GameplayTagUpdated Parms{};

	Parms.InGameplayTag = std::move(InGameplayTag);
	Parms.InCount = InCount;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HuntingTrapPropBase.BP_HuntingTrapPropBase_C.InitConfineRange
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_HuntingTrapPropBase_C::InitConfineRange()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HuntingTrapPropBase_C", "InitConfineRange");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_HuntingTrapPropBase.BP_HuntingTrapPropBase_C.InitializeChain
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_HuntingTrapPropBase_C::InitializeChain()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HuntingTrapPropBase_C", "InitializeChain");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_HuntingTrapPropBase.BP_HuntingTrapPropBase_C.InteractSucceed
// (Event, Protected, BlueprintEvent)
// Parameters:
// class AActor*                           Interacter                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FGameplayTag                     StateTag                                               (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// struct FGameplayTag                     TriggerTag                                             (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// struct FHitResult                       HitResult                                              (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void ABP_HuntingTrapPropBase_C::InteractSucceed(class AActor* Interacter, const struct FGameplayTag& StateTag, const struct FGameplayTag& TriggerTag, const struct FHitResult& HitResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HuntingTrapPropBase_C", "InteractSucceed");

	Params::BP_HuntingTrapPropBase_C_InteractSucceed Parms{};

	Parms.Interacter = Interacter;
	Parms.StateTag = std::move(StateTag);
	Parms.TriggerTag = std::move(TriggerTag);
	Parms.HitResult = std::move(HitResult);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HuntingTrapPropBase.BP_HuntingTrapPropBase_C.IsTargetReachesMaxRange
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool ABP_HuntingTrapPropBase_C::IsTargetReachesMaxRange()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HuntingTrapPropBase_C", "IsTargetReachesMaxRange");

	Params::BP_HuntingTrapPropBase_C_IsTargetReachesMaxRange Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_HuntingTrapPropBase.BP_HuntingTrapPropBase_C.OnChainSound
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Velocity                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_HuntingTrapPropBase_C::OnChainSound(const struct FVector& Velocity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HuntingTrapPropBase_C", "OnChainSound");

	Params::BP_HuntingTrapPropBase_C_OnChainSound Parms{};

	Parms.Velocity = std::move(Velocity);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HuntingTrapPropBase.BP_HuntingTrapPropBase_C.OnCharacterMovementUpdated
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          OldLocation                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          OldVelocity                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_HuntingTrapPropBase_C::OnCharacterMovementUpdated(float DeltaSeconds, const struct FVector& OldLocation, const struct FVector& OldVelocity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HuntingTrapPropBase_C", "OnCharacterMovementUpdated");

	Params::BP_HuntingTrapPropBase_C_OnCharacterMovementUpdated Parms{};

	Parms.DeltaSeconds = DeltaSeconds;
	Parms.OldLocation = std::move(OldLocation);
	Parms.OldVelocity = std::move(OldVelocity);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HuntingTrapPropBase.BP_HuntingTrapPropBase_C.OnRep_bDisarmed
// (BlueprintCallable, BlueprintEvent)

void ABP_HuntingTrapPropBase_C::OnRep_bDisarmed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HuntingTrapPropBase_C", "OnRep_bDisarmed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_HuntingTrapPropBase.BP_HuntingTrapPropBase_C.OnRep_TrappedCharacter
// (HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_HuntingTrapPropBase_C::OnRep_TrappedCharacter()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HuntingTrapPropBase_C", "OnRep_TrappedCharacter");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_HuntingTrapPropBase.BP_HuntingTrapPropBase_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_HuntingTrapPropBase_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HuntingTrapPropBase_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_HuntingTrapPropBase.BP_HuntingTrapPropBase_C.Removed_19BFACE841FF14F023B948A3DED73C7C
// (BlueprintCallable, BlueprintEvent)

void ABP_HuntingTrapPropBase_C::Removed_19BFACE841FF14F023B948A3DED73C7C()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HuntingTrapPropBase_C", "Removed_19BFACE841FF14F023B948A3DED73C7C");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_HuntingTrapPropBase.BP_HuntingTrapPropBase_C.BndEvt__BP_HuntingTrapProp_DCTagCollisionDetector_K2Node_ComponentBoundEvent_3_GameplayTagCollisionDetectedSignature__DelegateSignature
// (BlueprintEvent)
// Parameters:
// bool                                    bDetected                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FAccountDataReplication          AccountDataReplication                                 (BlueprintVisible, BlueprintReadOnly, Parm)

void ABP_HuntingTrapPropBase_C::BndEvt__BP_HuntingTrapProp_DCTagCollisionDetector_K2Node_ComponentBoundEvent_3_GameplayTagCollisionDetectedSignature__DelegateSignature(bool bDetected, const struct FAccountDataReplication& AccountDataReplication)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HuntingTrapPropBase_C", "BndEvt__BP_HuntingTrapProp_DCTagCollisionDetector_K2Node_ComponentBoundEvent_3_GameplayTagCollisionDetectedSignature__DelegateSignature");

	Params::BP_HuntingTrapPropBase_C_BndEvt__BP_HuntingTrapProp_DCTagCollisionDetector_K2Node_ComponentBoundEvent_3_GameplayTagCollisionDetectedSignature__DelegateSignature Parms{};

	Parms.bDetected = bDetected;
	Parms.AccountDataReplication = std::move(AccountDataReplication);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HuntingTrapPropBase.BP_HuntingTrapPropBase_C.Try Reduce Trap Disarming Item Count
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Interacter                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_HuntingTrapPropBase_C::Try_Reduce_Trap_Disarming_Item_Count(class AActor* Interacter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HuntingTrapPropBase_C", "Try Reduce Trap Disarming Item Count");

	Params::BP_HuntingTrapPropBase_C_Try_Reduce_Trap_Disarming_Item_Count Parms{};

	Parms.Interacter = Interacter;

	UObject::ProcessEvent(Func, &Parms);
}

}

