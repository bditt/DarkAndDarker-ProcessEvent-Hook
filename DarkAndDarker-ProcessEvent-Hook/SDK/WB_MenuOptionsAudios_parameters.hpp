#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_MenuOptionsAudios

#include "Basic.hpp"

#include "DungeonCrawler_structs.hpp"
#include "AkAudio_structs.hpp"


namespace SDK::Params
{

// Function WB_MenuOptionsAudios.WB_MenuOptionsAudios_C.UpdateWindowFocusChanged
// 0x0008 (0x0008 - 0x0000)
struct WB_MenuOptionsAudios_C_UpdateWindowFocusChanged final
{
public:
	bool                                          IsFocus;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsBackgroundOption;                                // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E20[0x2];                                     // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Param_TotalVolume;                                 // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_MenuOptionsAudios_C_UpdateWindowFocusChanged) == 0x000004, "Wrong alignment on WB_MenuOptionsAudios_C_UpdateWindowFocusChanged");
static_assert(sizeof(WB_MenuOptionsAudios_C_UpdateWindowFocusChanged) == 0x000008, "Wrong size on WB_MenuOptionsAudios_C_UpdateWindowFocusChanged");
static_assert(offsetof(WB_MenuOptionsAudios_C_UpdateWindowFocusChanged, IsFocus) == 0x000000, "Member 'WB_MenuOptionsAudios_C_UpdateWindowFocusChanged::IsFocus' has a wrong offset!");
static_assert(offsetof(WB_MenuOptionsAudios_C_UpdateWindowFocusChanged, IsBackgroundOption) == 0x000001, "Member 'WB_MenuOptionsAudios_C_UpdateWindowFocusChanged::IsBackgroundOption' has a wrong offset!");
static_assert(offsetof(WB_MenuOptionsAudios_C_UpdateWindowFocusChanged, Param_TotalVolume) == 0x000004, "Member 'WB_MenuOptionsAudios_C_UpdateWindowFocusChanged::Param_TotalVolume' has a wrong offset!");

// Function WB_MenuOptionsAudios.WB_MenuOptionsAudios_C.SetActivateSlotHoverDetailText
// 0x0030 (0x0030 - 0x0000)
struct WB_MenuOptionsAudios_C_SetActivateSlotHoverDetailText final
{
public:
	class FText                                   Title;                                             // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	class FText                                   Descript;                                          // 0x0018(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(WB_MenuOptionsAudios_C_SetActivateSlotHoverDetailText) == 0x000008, "Wrong alignment on WB_MenuOptionsAudios_C_SetActivateSlotHoverDetailText");
static_assert(sizeof(WB_MenuOptionsAudios_C_SetActivateSlotHoverDetailText) == 0x000030, "Wrong size on WB_MenuOptionsAudios_C_SetActivateSlotHoverDetailText");
static_assert(offsetof(WB_MenuOptionsAudios_C_SetActivateSlotHoverDetailText, Title) == 0x000000, "Member 'WB_MenuOptionsAudios_C_SetActivateSlotHoverDetailText::Title' has a wrong offset!");
static_assert(offsetof(WB_MenuOptionsAudios_C_SetActivateSlotHoverDetailText, Descript) == 0x000018, "Member 'WB_MenuOptionsAudios_C_SetActivateSlotHoverDetailText::Descript' has a wrong offset!");

// Function WB_MenuOptionsAudios.WB_MenuOptionsAudios_C.Set Activate Slot Hover
// 0x0008 (0x0008 - 0x0000)
struct WB_MenuOptionsAudios_C_Set_Activate_Slot_Hover final
{
public:
	class UWidgetSwitcher*                        ActivateSwitcherSelected;                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_MenuOptionsAudios_C_Set_Activate_Slot_Hover) == 0x000008, "Wrong alignment on WB_MenuOptionsAudios_C_Set_Activate_Slot_Hover");
static_assert(sizeof(WB_MenuOptionsAudios_C_Set_Activate_Slot_Hover) == 0x000008, "Wrong size on WB_MenuOptionsAudios_C_Set_Activate_Slot_Hover");
static_assert(offsetof(WB_MenuOptionsAudios_C_Set_Activate_Slot_Hover, ActivateSwitcherSelected) == 0x000000, "Member 'WB_MenuOptionsAudios_C_Set_Activate_Slot_Hover::ActivateSwitcherSelected' has a wrong offset!");

// Function WB_MenuOptionsAudios.WB_MenuOptionsAudios_C.OnSliderHovered
// 0x0008 (0x0008 - 0x0000)
struct WB_MenuOptionsAudios_C_OnSliderHovered final
{
public:
	class UWB_MenuOptionSlot_Slider_C*            Slider;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_MenuOptionsAudios_C_OnSliderHovered) == 0x000008, "Wrong alignment on WB_MenuOptionsAudios_C_OnSliderHovered");
static_assert(sizeof(WB_MenuOptionsAudios_C_OnSliderHovered) == 0x000008, "Wrong size on WB_MenuOptionsAudios_C_OnSliderHovered");
static_assert(offsetof(WB_MenuOptionsAudios_C_OnSliderHovered, Slider) == 0x000000, "Member 'WB_MenuOptionsAudios_C_OnSliderHovered::Slider' has a wrong offset!");

// Function WB_MenuOptionsAudios.WB_MenuOptionsAudios_C.OnGameUserSettingAudiosChanged
// 0x0068 (0x0068 - 0x0000)
struct WB_MenuOptionsAudios_C_OnGameUserSettingAudiosChanged final
{
public:
	struct FGameUserSettingAudios                 InGameUserSettingAudios;                           // 0x0000(0x0030)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FGameUserSettingAudios                 InOldGameUserSettingAudios;                        // 0x0030(0x0030)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          bInForce;                                          // 0x0060(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_MenuOptionsAudios_C_OnGameUserSettingAudiosChanged) == 0x000008, "Wrong alignment on WB_MenuOptionsAudios_C_OnGameUserSettingAudiosChanged");
static_assert(sizeof(WB_MenuOptionsAudios_C_OnGameUserSettingAudiosChanged) == 0x000068, "Wrong size on WB_MenuOptionsAudios_C_OnGameUserSettingAudiosChanged");
static_assert(offsetof(WB_MenuOptionsAudios_C_OnGameUserSettingAudiosChanged, InGameUserSettingAudios) == 0x000000, "Member 'WB_MenuOptionsAudios_C_OnGameUserSettingAudiosChanged::InGameUserSettingAudios' has a wrong offset!");
static_assert(offsetof(WB_MenuOptionsAudios_C_OnGameUserSettingAudiosChanged, InOldGameUserSettingAudios) == 0x000030, "Member 'WB_MenuOptionsAudios_C_OnGameUserSettingAudiosChanged::InOldGameUserSettingAudios' has a wrong offset!");
static_assert(offsetof(WB_MenuOptionsAudios_C_OnGameUserSettingAudiosChanged, bInForce) == 0x000060, "Member 'WB_MenuOptionsAudios_C_OnGameUserSettingAudiosChanged::bInForce' has a wrong offset!");

// Function WB_MenuOptionsAudios.WB_MenuOptionsAudios_C.InitOptionWidgetBinding
// 0x0120 (0x0120 - 0x0000)
struct WB_MenuOptionsAudios_C_InitOptionWidgetBinding final
{
public:
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0000(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0010(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UWB_MenuOptionToggleSwitchSlot_C*       K2Node_DynamicCast_AsWB_Menu_Option_Toggle_Switch_Slot; // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E21[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWB_MenuOptionToggleSwitchSlot_C*       K2Node_DynamicCast_AsWB_Menu_Option_Toggle_Switch_Slot_1; // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E22[0x7];                                     // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWB_MenuOptionToggleSwitchSlot_C*       K2Node_DynamicCast_AsWB_Menu_Option_Toggle_Switch_Slot_2; // 0x0040(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E23[0x3];                                     // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_2;            // 0x004C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E24[0x4];                                     // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWB_MenuOptionToggleSwitchSlot_C*       K2Node_DynamicCast_AsWB_Menu_Option_Toggle_Switch_Slot_3; // 0x0060(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E25[0x3];                                     // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_3;            // 0x006C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E26[0x4];                                     // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWB_MenuOptionSlot_Slider_C*            K2Node_DynamicCast_AsWB_Menu_Option_Slot_Slider;   // 0x0080(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E27[0x3];                                     // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_4;            // 0x008C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E28[0x4];                                     // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWB_MenuOptionSlot_Slider_C*            K2Node_DynamicCast_AsWB_Menu_Option_Slot_Slider_1; // 0x00A0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E29[0x7];                                     // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWB_MenuOptionSlot_Slider_C*            K2Node_DynamicCast_AsWB_Menu_Option_Slot_Slider_2; // 0x00B0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_6;                     // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E2A[0x3];                                     // 0x00B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_5;            // 0x00BC(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E2B[0x4];                                     // 0x00CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWB_MenuOptionSlot_Slider_C*            K2Node_DynamicCast_AsWB_Menu_Option_Slot_Slider_3; // 0x00D0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_7;                     // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E2C[0x7];                                     // 0x00D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWB_MenuOptionSlot_Slider_C*            K2Node_DynamicCast_AsWB_Menu_Option_Slot_Slider_4; // 0x00E0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_8;                     // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E2D[0x3];                                     // 0x00E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_6;            // 0x00EC(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_7;            // 0x00FC(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_8;            // 0x010C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_MenuOptionsAudios_C_InitOptionWidgetBinding) == 0x000008, "Wrong alignment on WB_MenuOptionsAudios_C_InitOptionWidgetBinding");
static_assert(sizeof(WB_MenuOptionsAudios_C_InitOptionWidgetBinding) == 0x000120, "Wrong size on WB_MenuOptionsAudios_C_InitOptionWidgetBinding");
static_assert(offsetof(WB_MenuOptionsAudios_C_InitOptionWidgetBinding, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'WB_MenuOptionsAudios_C_InitOptionWidgetBinding::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WB_MenuOptionsAudios_C_InitOptionWidgetBinding, K2Node_CreateDelegate_OutputDelegate_1) == 0x000010, "Member 'WB_MenuOptionsAudios_C_InitOptionWidgetBinding::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(WB_MenuOptionsAudios_C_InitOptionWidgetBinding, K2Node_DynamicCast_AsWB_Menu_Option_Toggle_Switch_Slot) == 0x000020, "Member 'WB_MenuOptionsAudios_C_InitOptionWidgetBinding::K2Node_DynamicCast_AsWB_Menu_Option_Toggle_Switch_Slot' has a wrong offset!");
static_assert(offsetof(WB_MenuOptionsAudios_C_InitOptionWidgetBinding, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'WB_MenuOptionsAudios_C_InitOptionWidgetBinding::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WB_MenuOptionsAudios_C_InitOptionWidgetBinding, K2Node_DynamicCast_AsWB_Menu_Option_Toggle_Switch_Slot_1) == 0x000030, "Member 'WB_MenuOptionsAudios_C_InitOptionWidgetBinding::K2Node_DynamicCast_AsWB_Menu_Option_Toggle_Switch_Slot_1' has a wrong offset!");
static_assert(offsetof(WB_MenuOptionsAudios_C_InitOptionWidgetBinding, K2Node_DynamicCast_bSuccess_1) == 0x000038, "Member 'WB_MenuOptionsAudios_C_InitOptionWidgetBinding::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(WB_MenuOptionsAudios_C_InitOptionWidgetBinding, K2Node_DynamicCast_AsWB_Menu_Option_Toggle_Switch_Slot_2) == 0x000040, "Member 'WB_MenuOptionsAudios_C_InitOptionWidgetBinding::K2Node_DynamicCast_AsWB_Menu_Option_Toggle_Switch_Slot_2' has a wrong offset!");
static_assert(offsetof(WB_MenuOptionsAudios_C_InitOptionWidgetBinding, K2Node_DynamicCast_bSuccess_2) == 0x000048, "Member 'WB_MenuOptionsAudios_C_InitOptionWidgetBinding::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(WB_MenuOptionsAudios_C_InitOptionWidgetBinding, K2Node_CreateDelegate_OutputDelegate_2) == 0x00004C, "Member 'WB_MenuOptionsAudios_C_InitOptionWidgetBinding::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(WB_MenuOptionsAudios_C_InitOptionWidgetBinding, K2Node_DynamicCast_AsWB_Menu_Option_Toggle_Switch_Slot_3) == 0x000060, "Member 'WB_MenuOptionsAudios_C_InitOptionWidgetBinding::K2Node_DynamicCast_AsWB_Menu_Option_Toggle_Switch_Slot_3' has a wrong offset!");
static_assert(offsetof(WB_MenuOptionsAudios_C_InitOptionWidgetBinding, K2Node_DynamicCast_bSuccess_3) == 0x000068, "Member 'WB_MenuOptionsAudios_C_InitOptionWidgetBinding::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(WB_MenuOptionsAudios_C_InitOptionWidgetBinding, K2Node_CreateDelegate_OutputDelegate_3) == 0x00006C, "Member 'WB_MenuOptionsAudios_C_InitOptionWidgetBinding::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(WB_MenuOptionsAudios_C_InitOptionWidgetBinding, K2Node_DynamicCast_AsWB_Menu_Option_Slot_Slider) == 0x000080, "Member 'WB_MenuOptionsAudios_C_InitOptionWidgetBinding::K2Node_DynamicCast_AsWB_Menu_Option_Slot_Slider' has a wrong offset!");
static_assert(offsetof(WB_MenuOptionsAudios_C_InitOptionWidgetBinding, K2Node_DynamicCast_bSuccess_4) == 0x000088, "Member 'WB_MenuOptionsAudios_C_InitOptionWidgetBinding::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(WB_MenuOptionsAudios_C_InitOptionWidgetBinding, K2Node_CreateDelegate_OutputDelegate_4) == 0x00008C, "Member 'WB_MenuOptionsAudios_C_InitOptionWidgetBinding::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(WB_MenuOptionsAudios_C_InitOptionWidgetBinding, K2Node_DynamicCast_AsWB_Menu_Option_Slot_Slider_1) == 0x0000A0, "Member 'WB_MenuOptionsAudios_C_InitOptionWidgetBinding::K2Node_DynamicCast_AsWB_Menu_Option_Slot_Slider_1' has a wrong offset!");
static_assert(offsetof(WB_MenuOptionsAudios_C_InitOptionWidgetBinding, K2Node_DynamicCast_bSuccess_5) == 0x0000A8, "Member 'WB_MenuOptionsAudios_C_InitOptionWidgetBinding::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(WB_MenuOptionsAudios_C_InitOptionWidgetBinding, K2Node_DynamicCast_AsWB_Menu_Option_Slot_Slider_2) == 0x0000B0, "Member 'WB_MenuOptionsAudios_C_InitOptionWidgetBinding::K2Node_DynamicCast_AsWB_Menu_Option_Slot_Slider_2' has a wrong offset!");
static_assert(offsetof(WB_MenuOptionsAudios_C_InitOptionWidgetBinding, K2Node_DynamicCast_bSuccess_6) == 0x0000B8, "Member 'WB_MenuOptionsAudios_C_InitOptionWidgetBinding::K2Node_DynamicCast_bSuccess_6' has a wrong offset!");
static_assert(offsetof(WB_MenuOptionsAudios_C_InitOptionWidgetBinding, K2Node_CreateDelegate_OutputDelegate_5) == 0x0000BC, "Member 'WB_MenuOptionsAudios_C_InitOptionWidgetBinding::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(WB_MenuOptionsAudios_C_InitOptionWidgetBinding, K2Node_DynamicCast_AsWB_Menu_Option_Slot_Slider_3) == 0x0000D0, "Member 'WB_MenuOptionsAudios_C_InitOptionWidgetBinding::K2Node_DynamicCast_AsWB_Menu_Option_Slot_Slider_3' has a wrong offset!");
static_assert(offsetof(WB_MenuOptionsAudios_C_InitOptionWidgetBinding, K2Node_DynamicCast_bSuccess_7) == 0x0000D8, "Member 'WB_MenuOptionsAudios_C_InitOptionWidgetBinding::K2Node_DynamicCast_bSuccess_7' has a wrong offset!");
static_assert(offsetof(WB_MenuOptionsAudios_C_InitOptionWidgetBinding, K2Node_DynamicCast_AsWB_Menu_Option_Slot_Slider_4) == 0x0000E0, "Member 'WB_MenuOptionsAudios_C_InitOptionWidgetBinding::K2Node_DynamicCast_AsWB_Menu_Option_Slot_Slider_4' has a wrong offset!");
static_assert(offsetof(WB_MenuOptionsAudios_C_InitOptionWidgetBinding, K2Node_DynamicCast_bSuccess_8) == 0x0000E8, "Member 'WB_MenuOptionsAudios_C_InitOptionWidgetBinding::K2Node_DynamicCast_bSuccess_8' has a wrong offset!");
static_assert(offsetof(WB_MenuOptionsAudios_C_InitOptionWidgetBinding, K2Node_CreateDelegate_OutputDelegate_6) == 0x0000EC, "Member 'WB_MenuOptionsAudios_C_InitOptionWidgetBinding::K2Node_CreateDelegate_OutputDelegate_6' has a wrong offset!");
static_assert(offsetof(WB_MenuOptionsAudios_C_InitOptionWidgetBinding, K2Node_CreateDelegate_OutputDelegate_7) == 0x0000FC, "Member 'WB_MenuOptionsAudios_C_InitOptionWidgetBinding::K2Node_CreateDelegate_OutputDelegate_7' has a wrong offset!");
static_assert(offsetof(WB_MenuOptionsAudios_C_InitOptionWidgetBinding, K2Node_CreateDelegate_OutputDelegate_8) == 0x00010C, "Member 'WB_MenuOptionsAudios_C_InitOptionWidgetBinding::K2Node_CreateDelegate_OutputDelegate_8' has a wrong offset!");

// Function WB_MenuOptionsAudios.WB_MenuOptionsAudios_C.ExecuteUbergraph_WB_MenuOptionsAudios
// 0x0090 (0x0090 - 0x0000)
struct WB_MenuOptionsAudios_C_ExecuteUbergraph_WB_MenuOptionsAudios final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsFocus;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsBackgroundOption;                   // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E2E[0x2];                                     // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_TotalVolume;                          // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetRTPCValue_Value;                       // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ERTPCValueType                                CallFunc_GetRTPCValue_OutputValueType;             // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E2F[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWB_MenuOptionSlot_Slider_C*            K2Node_CustomEvent_Slider;                         // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_1;    // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_2;    // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_3;    // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_4;    // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E30[0x3];                                     // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameUserSettingAudios                 K2Node_Event_InGameUserSettingAudios;              // 0x0028(0x0030)(ConstParm)
	struct FGameUserSettingAudios                 K2Node_Event_InOldGameUserSettingAudios;           // 0x0058(0x0030)(ConstParm)
	bool                                          K2Node_Event_bInForce;                             // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsMute_ReturnValue;                       // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsMute_ReturnValue_1;                     // 0x008A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsMute_ReturnValue_2;                     // 0x008B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_MenuOptionsAudios_C_ExecuteUbergraph_WB_MenuOptionsAudios) == 0x000008, "Wrong alignment on WB_MenuOptionsAudios_C_ExecuteUbergraph_WB_MenuOptionsAudios");
static_assert(sizeof(WB_MenuOptionsAudios_C_ExecuteUbergraph_WB_MenuOptionsAudios) == 0x000090, "Wrong size on WB_MenuOptionsAudios_C_ExecuteUbergraph_WB_MenuOptionsAudios");
static_assert(offsetof(WB_MenuOptionsAudios_C_ExecuteUbergraph_WB_MenuOptionsAudios, EntryPoint) == 0x000000, "Member 'WB_MenuOptionsAudios_C_ExecuteUbergraph_WB_MenuOptionsAudios::EntryPoint' has a wrong offset!");
static_assert(offsetof(WB_MenuOptionsAudios_C_ExecuteUbergraph_WB_MenuOptionsAudios, K2Node_Event_IsFocus) == 0x000004, "Member 'WB_MenuOptionsAudios_C_ExecuteUbergraph_WB_MenuOptionsAudios::K2Node_Event_IsFocus' has a wrong offset!");
static_assert(offsetof(WB_MenuOptionsAudios_C_ExecuteUbergraph_WB_MenuOptionsAudios, K2Node_Event_IsBackgroundOption) == 0x000005, "Member 'WB_MenuOptionsAudios_C_ExecuteUbergraph_WB_MenuOptionsAudios::K2Node_Event_IsBackgroundOption' has a wrong offset!");
static_assert(offsetof(WB_MenuOptionsAudios_C_ExecuteUbergraph_WB_MenuOptionsAudios, K2Node_Event_TotalVolume) == 0x000008, "Member 'WB_MenuOptionsAudios_C_ExecuteUbergraph_WB_MenuOptionsAudios::K2Node_Event_TotalVolume' has a wrong offset!");
static_assert(offsetof(WB_MenuOptionsAudios_C_ExecuteUbergraph_WB_MenuOptionsAudios, CallFunc_GetRTPCValue_Value) == 0x00000C, "Member 'WB_MenuOptionsAudios_C_ExecuteUbergraph_WB_MenuOptionsAudios::CallFunc_GetRTPCValue_Value' has a wrong offset!");
static_assert(offsetof(WB_MenuOptionsAudios_C_ExecuteUbergraph_WB_MenuOptionsAudios, CallFunc_GetRTPCValue_OutputValueType) == 0x000010, "Member 'WB_MenuOptionsAudios_C_ExecuteUbergraph_WB_MenuOptionsAudios::CallFunc_GetRTPCValue_OutputValueType' has a wrong offset!");
static_assert(offsetof(WB_MenuOptionsAudios_C_ExecuteUbergraph_WB_MenuOptionsAudios, K2Node_CustomEvent_Slider) == 0x000018, "Member 'WB_MenuOptionsAudios_C_ExecuteUbergraph_WB_MenuOptionsAudios::K2Node_CustomEvent_Slider' has a wrong offset!");
static_assert(offsetof(WB_MenuOptionsAudios_C_ExecuteUbergraph_WB_MenuOptionsAudios, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000020, "Member 'WB_MenuOptionsAudios_C_ExecuteUbergraph_WB_MenuOptionsAudios::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MenuOptionsAudios_C_ExecuteUbergraph_WB_MenuOptionsAudios, CallFunc_EqualEqual_ObjectObject_ReturnValue_1) == 0x000021, "Member 'WB_MenuOptionsAudios_C_ExecuteUbergraph_WB_MenuOptionsAudios::CallFunc_EqualEqual_ObjectObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_MenuOptionsAudios_C_ExecuteUbergraph_WB_MenuOptionsAudios, CallFunc_EqualEqual_ObjectObject_ReturnValue_2) == 0x000022, "Member 'WB_MenuOptionsAudios_C_ExecuteUbergraph_WB_MenuOptionsAudios::CallFunc_EqualEqual_ObjectObject_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WB_MenuOptionsAudios_C_ExecuteUbergraph_WB_MenuOptionsAudios, CallFunc_EqualEqual_ObjectObject_ReturnValue_3) == 0x000023, "Member 'WB_MenuOptionsAudios_C_ExecuteUbergraph_WB_MenuOptionsAudios::CallFunc_EqualEqual_ObjectObject_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WB_MenuOptionsAudios_C_ExecuteUbergraph_WB_MenuOptionsAudios, CallFunc_EqualEqual_ObjectObject_ReturnValue_4) == 0x000024, "Member 'WB_MenuOptionsAudios_C_ExecuteUbergraph_WB_MenuOptionsAudios::CallFunc_EqualEqual_ObjectObject_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WB_MenuOptionsAudios_C_ExecuteUbergraph_WB_MenuOptionsAudios, K2Node_Event_InGameUserSettingAudios) == 0x000028, "Member 'WB_MenuOptionsAudios_C_ExecuteUbergraph_WB_MenuOptionsAudios::K2Node_Event_InGameUserSettingAudios' has a wrong offset!");
static_assert(offsetof(WB_MenuOptionsAudios_C_ExecuteUbergraph_WB_MenuOptionsAudios, K2Node_Event_InOldGameUserSettingAudios) == 0x000058, "Member 'WB_MenuOptionsAudios_C_ExecuteUbergraph_WB_MenuOptionsAudios::K2Node_Event_InOldGameUserSettingAudios' has a wrong offset!");
static_assert(offsetof(WB_MenuOptionsAudios_C_ExecuteUbergraph_WB_MenuOptionsAudios, K2Node_Event_bInForce) == 0x000088, "Member 'WB_MenuOptionsAudios_C_ExecuteUbergraph_WB_MenuOptionsAudios::K2Node_Event_bInForce' has a wrong offset!");
static_assert(offsetof(WB_MenuOptionsAudios_C_ExecuteUbergraph_WB_MenuOptionsAudios, CallFunc_IsMute_ReturnValue) == 0x000089, "Member 'WB_MenuOptionsAudios_C_ExecuteUbergraph_WB_MenuOptionsAudios::CallFunc_IsMute_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MenuOptionsAudios_C_ExecuteUbergraph_WB_MenuOptionsAudios, CallFunc_IsMute_ReturnValue_1) == 0x00008A, "Member 'WB_MenuOptionsAudios_C_ExecuteUbergraph_WB_MenuOptionsAudios::CallFunc_IsMute_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_MenuOptionsAudios_C_ExecuteUbergraph_WB_MenuOptionsAudios, CallFunc_IsMute_ReturnValue_2) == 0x00008B, "Member 'WB_MenuOptionsAudios_C_ExecuteUbergraph_WB_MenuOptionsAudios::CallFunc_IsMute_ReturnValue_2' has a wrong offset!");

// Function WB_MenuOptionsAudios.WB_MenuOptionsAudios_C.BP_GetDesiredFocusTarget
// 0x0008 (0x0008 - 0x0000)
struct WB_MenuOptionsAudios_C_BP_GetDesiredFocusTarget final
{
public:
	class UWidget*                                ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_MenuOptionsAudios_C_BP_GetDesiredFocusTarget) == 0x000008, "Wrong alignment on WB_MenuOptionsAudios_C_BP_GetDesiredFocusTarget");
static_assert(sizeof(WB_MenuOptionsAudios_C_BP_GetDesiredFocusTarget) == 0x000008, "Wrong size on WB_MenuOptionsAudios_C_BP_GetDesiredFocusTarget");
static_assert(offsetof(WB_MenuOptionsAudios_C_BP_GetDesiredFocusTarget, ReturnValue) == 0x000000, "Member 'WB_MenuOptionsAudios_C_BP_GetDesiredFocusTarget::ReturnValue' has a wrong offset!");

}

