#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_IceKoboldAxeman

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "GameplayAbilities_structs.hpp"


namespace SDK::Params
{

// Function BP_IceKoboldAxeman.BP_IceKoboldAxeman_C.ExecuteUbergraph_BP_IceKoboldAxeman
// 0x01C0 (0x01C0 - 0x0000)
struct BP_IceKoboldAxeman_C_ExecuteUbergraph_BP_IceKoboldAxeman final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_464F[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           K2Node_Event_InGameplayTag;                        // 0x0008(0x0008)(ConstParm, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_InCount;                              // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4650[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayEventData                     K2Node_MakeStruct_GameplayEventData;               // 0x0018(0x00B0)()
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess;   // 0x00C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4651[0x6];                                     // 0x00CA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x00D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UABP_IceKoboldAxeman_C*                 K2Node_DynamicCast_AsABP_Ice_Kobold_Axeman;        // 0x00D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4652[0x7];                                     // 0x00E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UABP_IceKoboldAxeman_C*                 K2Node_DynamicCast_AsABP_Ice_Kobold_Axeman_1;      // 0x00E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4653[0x7];                                     // 0x00F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UABP_IceKoboldAxeman_C*                 K2Node_DynamicCast_AsABP_Ice_Kobold_Axeman_2;      // 0x00F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4654[0xF];                                     // 0x0101(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0110(0x0060)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0170(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ADCCharacterBase*                       K2Node_Event_InInstigator;                         // 0x0178(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_InEffectCauser;                       // 0x0180(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_FinishSpawningActor_ReturnValue;          // 0x0188(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_ProjectileActor_C*                  K2Node_DynamicCast_AsBP_Projectile_Actor;          // 0x0190(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_AttachToComponent_ReturnValue;         // 0x0199(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetFloatAttribute_bSuccessfullyFoundAttribute; // 0x019A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4655[0x1];                                     // 0x019B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetFloatAttribute_ReturnValue;            // 0x019C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4656[0x7];                                     // 0x01A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_RandomFloatInRange_ReturnValue;           // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast;      // 0x01B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Delay_Duration_ImplicitCast;              // 0x01B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_IceKoboldAxeman_C_ExecuteUbergraph_BP_IceKoboldAxeman) == 0x000010, "Wrong alignment on BP_IceKoboldAxeman_C_ExecuteUbergraph_BP_IceKoboldAxeman");
static_assert(sizeof(BP_IceKoboldAxeman_C_ExecuteUbergraph_BP_IceKoboldAxeman) == 0x0001C0, "Wrong size on BP_IceKoboldAxeman_C_ExecuteUbergraph_BP_IceKoboldAxeman");
static_assert(offsetof(BP_IceKoboldAxeman_C_ExecuteUbergraph_BP_IceKoboldAxeman, EntryPoint) == 0x000000, "Member 'BP_IceKoboldAxeman_C_ExecuteUbergraph_BP_IceKoboldAxeman::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_IceKoboldAxeman_C_ExecuteUbergraph_BP_IceKoboldAxeman, CallFunc_HasAuthority_ReturnValue) == 0x000004, "Member 'BP_IceKoboldAxeman_C_ExecuteUbergraph_BP_IceKoboldAxeman::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_IceKoboldAxeman_C_ExecuteUbergraph_BP_IceKoboldAxeman, K2Node_Event_InGameplayTag) == 0x000008, "Member 'BP_IceKoboldAxeman_C_ExecuteUbergraph_BP_IceKoboldAxeman::K2Node_Event_InGameplayTag' has a wrong offset!");
static_assert(offsetof(BP_IceKoboldAxeman_C_ExecuteUbergraph_BP_IceKoboldAxeman, K2Node_Event_InCount) == 0x000010, "Member 'BP_IceKoboldAxeman_C_ExecuteUbergraph_BP_IceKoboldAxeman::K2Node_Event_InCount' has a wrong offset!");
static_assert(offsetof(BP_IceKoboldAxeman_C_ExecuteUbergraph_BP_IceKoboldAxeman, K2Node_MakeStruct_GameplayEventData) == 0x000018, "Member 'BP_IceKoboldAxeman_C_ExecuteUbergraph_BP_IceKoboldAxeman::K2Node_MakeStruct_GameplayEventData' has a wrong offset!");
static_assert(offsetof(BP_IceKoboldAxeman_C_ExecuteUbergraph_BP_IceKoboldAxeman, CallFunc_Greater_IntInt_ReturnValue) == 0x0000C8, "Member 'BP_IceKoboldAxeman_C_ExecuteUbergraph_BP_IceKoboldAxeman::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_IceKoboldAxeman_C_ExecuteUbergraph_BP_IceKoboldAxeman, GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess) == 0x0000C9, "Member 'BP_IceKoboldAxeman_C_ExecuteUbergraph_BP_IceKoboldAxeman::GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_IceKoboldAxeman_C_ExecuteUbergraph_BP_IceKoboldAxeman, CallFunc_GetAnimInstance_ReturnValue) == 0x0000D0, "Member 'BP_IceKoboldAxeman_C_ExecuteUbergraph_BP_IceKoboldAxeman::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_IceKoboldAxeman_C_ExecuteUbergraph_BP_IceKoboldAxeman, K2Node_DynamicCast_AsABP_Ice_Kobold_Axeman) == 0x0000D8, "Member 'BP_IceKoboldAxeman_C_ExecuteUbergraph_BP_IceKoboldAxeman::K2Node_DynamicCast_AsABP_Ice_Kobold_Axeman' has a wrong offset!");
static_assert(offsetof(BP_IceKoboldAxeman_C_ExecuteUbergraph_BP_IceKoboldAxeman, K2Node_DynamicCast_bSuccess) == 0x0000E0, "Member 'BP_IceKoboldAxeman_C_ExecuteUbergraph_BP_IceKoboldAxeman::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_IceKoboldAxeman_C_ExecuteUbergraph_BP_IceKoboldAxeman, K2Node_DynamicCast_AsABP_Ice_Kobold_Axeman_1) == 0x0000E8, "Member 'BP_IceKoboldAxeman_C_ExecuteUbergraph_BP_IceKoboldAxeman::K2Node_DynamicCast_AsABP_Ice_Kobold_Axeman_1' has a wrong offset!");
static_assert(offsetof(BP_IceKoboldAxeman_C_ExecuteUbergraph_BP_IceKoboldAxeman, K2Node_DynamicCast_bSuccess_1) == 0x0000F0, "Member 'BP_IceKoboldAxeman_C_ExecuteUbergraph_BP_IceKoboldAxeman::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_IceKoboldAxeman_C_ExecuteUbergraph_BP_IceKoboldAxeman, K2Node_DynamicCast_AsABP_Ice_Kobold_Axeman_2) == 0x0000F8, "Member 'BP_IceKoboldAxeman_C_ExecuteUbergraph_BP_IceKoboldAxeman::K2Node_DynamicCast_AsABP_Ice_Kobold_Axeman_2' has a wrong offset!");
static_assert(offsetof(BP_IceKoboldAxeman_C_ExecuteUbergraph_BP_IceKoboldAxeman, K2Node_DynamicCast_bSuccess_2) == 0x000100, "Member 'BP_IceKoboldAxeman_C_ExecuteUbergraph_BP_IceKoboldAxeman::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_IceKoboldAxeman_C_ExecuteUbergraph_BP_IceKoboldAxeman, CallFunc_GetTransform_ReturnValue) == 0x000110, "Member 'BP_IceKoboldAxeman_C_ExecuteUbergraph_BP_IceKoboldAxeman::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_IceKoboldAxeman_C_ExecuteUbergraph_BP_IceKoboldAxeman, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000170, "Member 'BP_IceKoboldAxeman_C_ExecuteUbergraph_BP_IceKoboldAxeman::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_IceKoboldAxeman_C_ExecuteUbergraph_BP_IceKoboldAxeman, K2Node_Event_InInstigator) == 0x000178, "Member 'BP_IceKoboldAxeman_C_ExecuteUbergraph_BP_IceKoboldAxeman::K2Node_Event_InInstigator' has a wrong offset!");
static_assert(offsetof(BP_IceKoboldAxeman_C_ExecuteUbergraph_BP_IceKoboldAxeman, K2Node_Event_InEffectCauser) == 0x000180, "Member 'BP_IceKoboldAxeman_C_ExecuteUbergraph_BP_IceKoboldAxeman::K2Node_Event_InEffectCauser' has a wrong offset!");
static_assert(offsetof(BP_IceKoboldAxeman_C_ExecuteUbergraph_BP_IceKoboldAxeman, CallFunc_FinishSpawningActor_ReturnValue) == 0x000188, "Member 'BP_IceKoboldAxeman_C_ExecuteUbergraph_BP_IceKoboldAxeman::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_IceKoboldAxeman_C_ExecuteUbergraph_BP_IceKoboldAxeman, K2Node_DynamicCast_AsBP_Projectile_Actor) == 0x000190, "Member 'BP_IceKoboldAxeman_C_ExecuteUbergraph_BP_IceKoboldAxeman::K2Node_DynamicCast_AsBP_Projectile_Actor' has a wrong offset!");
static_assert(offsetof(BP_IceKoboldAxeman_C_ExecuteUbergraph_BP_IceKoboldAxeman, K2Node_DynamicCast_bSuccess_3) == 0x000198, "Member 'BP_IceKoboldAxeman_C_ExecuteUbergraph_BP_IceKoboldAxeman::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_IceKoboldAxeman_C_ExecuteUbergraph_BP_IceKoboldAxeman, CallFunc_K2_AttachToComponent_ReturnValue) == 0x000199, "Member 'BP_IceKoboldAxeman_C_ExecuteUbergraph_BP_IceKoboldAxeman::CallFunc_K2_AttachToComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_IceKoboldAxeman_C_ExecuteUbergraph_BP_IceKoboldAxeman, CallFunc_GetFloatAttribute_bSuccessfullyFoundAttribute) == 0x00019A, "Member 'BP_IceKoboldAxeman_C_ExecuteUbergraph_BP_IceKoboldAxeman::CallFunc_GetFloatAttribute_bSuccessfullyFoundAttribute' has a wrong offset!");
static_assert(offsetof(BP_IceKoboldAxeman_C_ExecuteUbergraph_BP_IceKoboldAxeman, CallFunc_GetFloatAttribute_ReturnValue) == 0x00019C, "Member 'BP_IceKoboldAxeman_C_ExecuteUbergraph_BP_IceKoboldAxeman::CallFunc_GetFloatAttribute_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_IceKoboldAxeman_C_ExecuteUbergraph_BP_IceKoboldAxeman, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x0001A0, "Member 'BP_IceKoboldAxeman_C_ExecuteUbergraph_BP_IceKoboldAxeman::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_IceKoboldAxeman_C_ExecuteUbergraph_BP_IceKoboldAxeman, CallFunc_RandomFloatInRange_ReturnValue) == 0x0001A8, "Member 'BP_IceKoboldAxeman_C_ExecuteUbergraph_BP_IceKoboldAxeman::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_IceKoboldAxeman_C_ExecuteUbergraph_BP_IceKoboldAxeman, CallFunc_Greater_DoubleDouble_A_ImplicitCast) == 0x0001B0, "Member 'BP_IceKoboldAxeman_C_ExecuteUbergraph_BP_IceKoboldAxeman::CallFunc_Greater_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_IceKoboldAxeman_C_ExecuteUbergraph_BP_IceKoboldAxeman, CallFunc_Delay_Duration_ImplicitCast) == 0x0001B8, "Member 'BP_IceKoboldAxeman_C_ExecuteUbergraph_BP_IceKoboldAxeman::CallFunc_Delay_Duration_ImplicitCast' has a wrong offset!");

// Function BP_IceKoboldAxeman.BP_IceKoboldAxeman_C.GameplayTagUpdated
// 0x000C (0x000C - 0x0000)
struct BP_IceKoboldAxeman_C_GameplayTagUpdated final
{
public:
	struct FGameplayTag                           InGameplayTag;                                     // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	int32                                         InCount;                                           // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_IceKoboldAxeman_C_GameplayTagUpdated) == 0x000004, "Wrong alignment on BP_IceKoboldAxeman_C_GameplayTagUpdated");
static_assert(sizeof(BP_IceKoboldAxeman_C_GameplayTagUpdated) == 0x00000C, "Wrong size on BP_IceKoboldAxeman_C_GameplayTagUpdated");
static_assert(offsetof(BP_IceKoboldAxeman_C_GameplayTagUpdated, InGameplayTag) == 0x000000, "Member 'BP_IceKoboldAxeman_C_GameplayTagUpdated::InGameplayTag' has a wrong offset!");
static_assert(offsetof(BP_IceKoboldAxeman_C_GameplayTagUpdated, InCount) == 0x000008, "Member 'BP_IceKoboldAxeman_C_GameplayTagUpdated::InCount' has a wrong offset!");

// Function BP_IceKoboldAxeman.BP_IceKoboldAxeman_C.OnStuckByShield
// 0x0010 (0x0010 - 0x0000)
struct BP_IceKoboldAxeman_C_OnStuckByShield final
{
public:
	class ADCCharacterBase*                       InInstigator;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 InEffectCauser;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_IceKoboldAxeman_C_OnStuckByShield) == 0x000008, "Wrong alignment on BP_IceKoboldAxeman_C_OnStuckByShield");
static_assert(sizeof(BP_IceKoboldAxeman_C_OnStuckByShield) == 0x000010, "Wrong size on BP_IceKoboldAxeman_C_OnStuckByShield");
static_assert(offsetof(BP_IceKoboldAxeman_C_OnStuckByShield, InInstigator) == 0x000000, "Member 'BP_IceKoboldAxeman_C_OnStuckByShield::InInstigator' has a wrong offset!");
static_assert(offsetof(BP_IceKoboldAxeman_C_OnStuckByShield, InEffectCauser) == 0x000008, "Member 'BP_IceKoboldAxeman_C_OnStuckByShield::InEffectCauser' has a wrong offset!");

}

