#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Statue_ItemDispenser

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "DungeonCrawler_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "GameplayAbilities_structs.hpp"


namespace SDK::Params
{

// Function BP_Statue_ItemDispenser.BP_Statue_ItemDispenser_C.BndEvt__BP_Statue_ATM_ItemRandomGenerate_K2Node_ComponentBoundEvent_2_ItemGenerationFinishedSignature__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct BP_Statue_ItemDispenser_C_BndEvt__BP_Statue_ATM_ItemRandomGenerate_K2Node_ComponentBoundEvent_2_ItemGenerationFinishedSignature__DelegateSignature final
{
public:
	TArray<struct FItemData>                      ResultItems;                                       // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(BP_Statue_ItemDispenser_C_BndEvt__BP_Statue_ATM_ItemRandomGenerate_K2Node_ComponentBoundEvent_2_ItemGenerationFinishedSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_Statue_ItemDispenser_C_BndEvt__BP_Statue_ATM_ItemRandomGenerate_K2Node_ComponentBoundEvent_2_ItemGenerationFinishedSignature__DelegateSignature");
static_assert(sizeof(BP_Statue_ItemDispenser_C_BndEvt__BP_Statue_ATM_ItemRandomGenerate_K2Node_ComponentBoundEvent_2_ItemGenerationFinishedSignature__DelegateSignature) == 0x000010, "Wrong size on BP_Statue_ItemDispenser_C_BndEvt__BP_Statue_ATM_ItemRandomGenerate_K2Node_ComponentBoundEvent_2_ItemGenerationFinishedSignature__DelegateSignature");
static_assert(offsetof(BP_Statue_ItemDispenser_C_BndEvt__BP_Statue_ATM_ItemRandomGenerate_K2Node_ComponentBoundEvent_2_ItemGenerationFinishedSignature__DelegateSignature, ResultItems) == 0x000000, "Member 'BP_Statue_ItemDispenser_C_BndEvt__BP_Statue_ATM_ItemRandomGenerate_K2Node_ComponentBoundEvent_2_ItemGenerationFinishedSignature__DelegateSignature::ResultItems' has a wrong offset!");

// Function BP_Statue_ItemDispenser.BP_Statue_ItemDispenser_C.BndEvt__BP_TorchOn_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature
// 0x0108 (0x0108 - 0x0000)
struct BP_Statue_ItemDispenser_C_BndEvt__BP_TorchOn_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_46CC[0x3];                                     // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x00E8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_Statue_ItemDispenser_C_BndEvt__BP_TorchOn_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_Statue_ItemDispenser_C_BndEvt__BP_TorchOn_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(BP_Statue_ItemDispenser_C_BndEvt__BP_TorchOn_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x000108, "Wrong size on BP_Statue_ItemDispenser_C_BndEvt__BP_TorchOn_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(BP_Statue_ItemDispenser_C_BndEvt__BP_TorchOn_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'BP_Statue_ItemDispenser_C_BndEvt__BP_TorchOn_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_Statue_ItemDispenser_C_BndEvt__BP_TorchOn_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BP_Statue_ItemDispenser_C_BndEvt__BP_TorchOn_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_Statue_ItemDispenser_C_BndEvt__BP_TorchOn_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BP_Statue_ItemDispenser_C_BndEvt__BP_TorchOn_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_Statue_ItemDispenser_C_BndEvt__BP_TorchOn_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'BP_Statue_ItemDispenser_C_BndEvt__BP_TorchOn_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_Statue_ItemDispenser_C_BndEvt__BP_TorchOn_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'BP_Statue_ItemDispenser_C_BndEvt__BP_TorchOn_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_Statue_ItemDispenser_C_BndEvt__BP_TorchOn_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'BP_Statue_ItemDispenser_C_BndEvt__BP_TorchOn_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function BP_Statue_ItemDispenser.BP_Statue_ItemDispenser_C.BndEvt__BP_TorchOn_Sphere_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct BP_Statue_ItemDispenser_C_BndEvt__BP_TorchOn_Sphere_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Statue_ItemDispenser_C_BndEvt__BP_TorchOn_Sphere_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_Statue_ItemDispenser_C_BndEvt__BP_TorchOn_Sphere_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature");
static_assert(sizeof(BP_Statue_ItemDispenser_C_BndEvt__BP_TorchOn_Sphere_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature) == 0x000020, "Wrong size on BP_Statue_ItemDispenser_C_BndEvt__BP_TorchOn_Sphere_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature");
static_assert(offsetof(BP_Statue_ItemDispenser_C_BndEvt__BP_TorchOn_Sphere_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'BP_Statue_ItemDispenser_C_BndEvt__BP_TorchOn_Sphere_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_Statue_ItemDispenser_C_BndEvt__BP_TorchOn_Sphere_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BP_Statue_ItemDispenser_C_BndEvt__BP_TorchOn_Sphere_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_Statue_ItemDispenser_C_BndEvt__BP_TorchOn_Sphere_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BP_Statue_ItemDispenser_C_BndEvt__BP_TorchOn_Sphere_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_Statue_ItemDispenser_C_BndEvt__BP_TorchOn_Sphere_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'BP_Statue_ItemDispenser_C_BndEvt__BP_TorchOn_Sphere_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");

// Function BP_Statue_ItemDispenser.BP_Statue_ItemDispenser_C.ExecuteUbergraph_BP_Statue_ItemDispenser
// 0x0578 (0x0578 - 0x0000)
struct BP_Statue_ItemDispenser_C_ExecuteUbergraph_BP_Statue_ItemDispenser final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent_1;  // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor_1;           // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp_1;            // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex_1;       // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep;             // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_46CD[0x3];                                     // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult;            // 0x0030(0x00E8)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class ABP_PlayerCharacter_C*                  K2Node_DynamicCast_AsBP_Player_Character;          // 0x0118(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_46CE[0x7];                                     // 0x0121(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent;    // 0x0128(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor;             // 0x0130(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp;              // 0x0138(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex;         // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue;          // 0x0144(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_46CF[0x3];                                     // 0x0145(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerCharacter_C*                  K2Node_DynamicCast_AsBP_Player_Character_1;        // 0x0148(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue_1;        // 0x0151(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_46D0[0x6];                                     // 0x0152(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasMatchingGameplayTag_self_CastInput;    // 0x0158(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue;       // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_46D1[0x7];                                     // 0x0169(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_Interacter;                           // 0x0170(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_Event_StateTag;                             // 0x0178(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_Event_TriggerTag;                           // 0x0180(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_Event_HitResult;                            // 0x0188(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess;   // 0x0270(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_46D2[0x7];                                     // 0x0271(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayEventData                     K2Node_MakeStruct_GameplayEventData;               // 0x0278(0x00B0)()
	struct FGameplayTag                           K2Node_Event_InGameplayTag;                        // 0x0328(0x0008)(ConstParm, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_InCount;                              // 0x0330(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0334(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess_1; // 0x0335(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_46D3[0x2];                                     // 0x0336(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FItemData>                      K2Node_ComponentBoundEvent_ResultItems;            // 0x0338(0x0010)(ReferenceParm)
	struct FItemData                              CallFunc_Array_Get_Item;                           // 0x0348(0x0100)()
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0448(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x044C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x044D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_46D4[0x2];                                     // 0x044E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerCharacter_C*                  K2Node_DynamicCast_AsBP_Player_Character_2;        // 0x0450(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0458(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_46D5[0x3];                                     // 0x0459(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x045C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FItemData                              K2Node_MakeStruct_ItemData;                        // 0x0460(0x0100)()
	bool                                          CallFunc_AddItemData_ReturnValue;                  // 0x0560(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_46D6[0x3];                                     // 0x0561(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetActorAttributeValue_ReturnValue;       // 0x0564(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IItemGenerateInterface> CallFunc_GenerateItems_self_CastInput;             // 0x0568(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Statue_ItemDispenser_C_ExecuteUbergraph_BP_Statue_ItemDispenser) == 0x000008, "Wrong alignment on BP_Statue_ItemDispenser_C_ExecuteUbergraph_BP_Statue_ItemDispenser");
static_assert(sizeof(BP_Statue_ItemDispenser_C_ExecuteUbergraph_BP_Statue_ItemDispenser) == 0x000578, "Wrong size on BP_Statue_ItemDispenser_C_ExecuteUbergraph_BP_Statue_ItemDispenser");
static_assert(offsetof(BP_Statue_ItemDispenser_C_ExecuteUbergraph_BP_Statue_ItemDispenser, EntryPoint) == 0x000000, "Member 'BP_Statue_ItemDispenser_C_ExecuteUbergraph_BP_Statue_ItemDispenser::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_Statue_ItemDispenser_C_ExecuteUbergraph_BP_Statue_ItemDispenser, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BP_Statue_ItemDispenser_C_ExecuteUbergraph_BP_Statue_ItemDispenser::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_Statue_ItemDispenser_C_ExecuteUbergraph_BP_Statue_ItemDispenser, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'BP_Statue_ItemDispenser_C_ExecuteUbergraph_BP_Statue_ItemDispenser::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_Statue_ItemDispenser_C_ExecuteUbergraph_BP_Statue_ItemDispenser, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BP_Statue_ItemDispenser_C_ExecuteUbergraph_BP_Statue_ItemDispenser::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Statue_ItemDispenser_C_ExecuteUbergraph_BP_Statue_ItemDispenser, K2Node_ComponentBoundEvent_OverlappedComponent_1) == 0x000010, "Member 'BP_Statue_ItemDispenser_C_ExecuteUbergraph_BP_Statue_ItemDispenser::K2Node_ComponentBoundEvent_OverlappedComponent_1' has a wrong offset!");
static_assert(offsetof(BP_Statue_ItemDispenser_C_ExecuteUbergraph_BP_Statue_ItemDispenser, K2Node_ComponentBoundEvent_OtherActor_1) == 0x000018, "Member 'BP_Statue_ItemDispenser_C_ExecuteUbergraph_BP_Statue_ItemDispenser::K2Node_ComponentBoundEvent_OtherActor_1' has a wrong offset!");
static_assert(offsetof(BP_Statue_ItemDispenser_C_ExecuteUbergraph_BP_Statue_ItemDispenser, K2Node_ComponentBoundEvent_OtherComp_1) == 0x000020, "Member 'BP_Statue_ItemDispenser_C_ExecuteUbergraph_BP_Statue_ItemDispenser::K2Node_ComponentBoundEvent_OtherComp_1' has a wrong offset!");
static_assert(offsetof(BP_Statue_ItemDispenser_C_ExecuteUbergraph_BP_Statue_ItemDispenser, K2Node_ComponentBoundEvent_OtherBodyIndex_1) == 0x000028, "Member 'BP_Statue_ItemDispenser_C_ExecuteUbergraph_BP_Statue_ItemDispenser::K2Node_ComponentBoundEvent_OtherBodyIndex_1' has a wrong offset!");
static_assert(offsetof(BP_Statue_ItemDispenser_C_ExecuteUbergraph_BP_Statue_ItemDispenser, K2Node_ComponentBoundEvent_bFromSweep) == 0x00002C, "Member 'BP_Statue_ItemDispenser_C_ExecuteUbergraph_BP_Statue_ItemDispenser::K2Node_ComponentBoundEvent_bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_Statue_ItemDispenser_C_ExecuteUbergraph_BP_Statue_ItemDispenser, K2Node_ComponentBoundEvent_SweepResult) == 0x000030, "Member 'BP_Statue_ItemDispenser_C_ExecuteUbergraph_BP_Statue_ItemDispenser::K2Node_ComponentBoundEvent_SweepResult' has a wrong offset!");
static_assert(offsetof(BP_Statue_ItemDispenser_C_ExecuteUbergraph_BP_Statue_ItemDispenser, K2Node_DynamicCast_AsBP_Player_Character) == 0x000118, "Member 'BP_Statue_ItemDispenser_C_ExecuteUbergraph_BP_Statue_ItemDispenser::K2Node_DynamicCast_AsBP_Player_Character' has a wrong offset!");
static_assert(offsetof(BP_Statue_ItemDispenser_C_ExecuteUbergraph_BP_Statue_ItemDispenser, K2Node_DynamicCast_bSuccess) == 0x000120, "Member 'BP_Statue_ItemDispenser_C_ExecuteUbergraph_BP_Statue_ItemDispenser::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Statue_ItemDispenser_C_ExecuteUbergraph_BP_Statue_ItemDispenser, K2Node_ComponentBoundEvent_OverlappedComponent) == 0x000128, "Member 'BP_Statue_ItemDispenser_C_ExecuteUbergraph_BP_Statue_ItemDispenser::K2Node_ComponentBoundEvent_OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_Statue_ItemDispenser_C_ExecuteUbergraph_BP_Statue_ItemDispenser, K2Node_ComponentBoundEvent_OtherActor) == 0x000130, "Member 'BP_Statue_ItemDispenser_C_ExecuteUbergraph_BP_Statue_ItemDispenser::K2Node_ComponentBoundEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(BP_Statue_ItemDispenser_C_ExecuteUbergraph_BP_Statue_ItemDispenser, K2Node_ComponentBoundEvent_OtherComp) == 0x000138, "Member 'BP_Statue_ItemDispenser_C_ExecuteUbergraph_BP_Statue_ItemDispenser::K2Node_ComponentBoundEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(BP_Statue_ItemDispenser_C_ExecuteUbergraph_BP_Statue_ItemDispenser, K2Node_ComponentBoundEvent_OtherBodyIndex) == 0x000140, "Member 'BP_Statue_ItemDispenser_C_ExecuteUbergraph_BP_Statue_ItemDispenser::K2Node_ComponentBoundEvent_OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_Statue_ItemDispenser_C_ExecuteUbergraph_BP_Statue_ItemDispenser, CallFunc_IsLocallyControlled_ReturnValue) == 0x000144, "Member 'BP_Statue_ItemDispenser_C_ExecuteUbergraph_BP_Statue_ItemDispenser::CallFunc_IsLocallyControlled_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Statue_ItemDispenser_C_ExecuteUbergraph_BP_Statue_ItemDispenser, K2Node_DynamicCast_AsBP_Player_Character_1) == 0x000148, "Member 'BP_Statue_ItemDispenser_C_ExecuteUbergraph_BP_Statue_ItemDispenser::K2Node_DynamicCast_AsBP_Player_Character_1' has a wrong offset!");
static_assert(offsetof(BP_Statue_ItemDispenser_C_ExecuteUbergraph_BP_Statue_ItemDispenser, K2Node_DynamicCast_bSuccess_1) == 0x000150, "Member 'BP_Statue_ItemDispenser_C_ExecuteUbergraph_BP_Statue_ItemDispenser::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_Statue_ItemDispenser_C_ExecuteUbergraph_BP_Statue_ItemDispenser, CallFunc_IsLocallyControlled_ReturnValue_1) == 0x000151, "Member 'BP_Statue_ItemDispenser_C_ExecuteUbergraph_BP_Statue_ItemDispenser::CallFunc_IsLocallyControlled_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Statue_ItemDispenser_C_ExecuteUbergraph_BP_Statue_ItemDispenser, CallFunc_HasMatchingGameplayTag_self_CastInput) == 0x000158, "Member 'BP_Statue_ItemDispenser_C_ExecuteUbergraph_BP_Statue_ItemDispenser::CallFunc_HasMatchingGameplayTag_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_Statue_ItemDispenser_C_ExecuteUbergraph_BP_Statue_ItemDispenser, CallFunc_HasMatchingGameplayTag_ReturnValue) == 0x000168, "Member 'BP_Statue_ItemDispenser_C_ExecuteUbergraph_BP_Statue_ItemDispenser::CallFunc_HasMatchingGameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Statue_ItemDispenser_C_ExecuteUbergraph_BP_Statue_ItemDispenser, K2Node_Event_Interacter) == 0x000170, "Member 'BP_Statue_ItemDispenser_C_ExecuteUbergraph_BP_Statue_ItemDispenser::K2Node_Event_Interacter' has a wrong offset!");
static_assert(offsetof(BP_Statue_ItemDispenser_C_ExecuteUbergraph_BP_Statue_ItemDispenser, K2Node_Event_StateTag) == 0x000178, "Member 'BP_Statue_ItemDispenser_C_ExecuteUbergraph_BP_Statue_ItemDispenser::K2Node_Event_StateTag' has a wrong offset!");
static_assert(offsetof(BP_Statue_ItemDispenser_C_ExecuteUbergraph_BP_Statue_ItemDispenser, K2Node_Event_TriggerTag) == 0x000180, "Member 'BP_Statue_ItemDispenser_C_ExecuteUbergraph_BP_Statue_ItemDispenser::K2Node_Event_TriggerTag' has a wrong offset!");
static_assert(offsetof(BP_Statue_ItemDispenser_C_ExecuteUbergraph_BP_Statue_ItemDispenser, K2Node_Event_HitResult) == 0x000188, "Member 'BP_Statue_ItemDispenser_C_ExecuteUbergraph_BP_Statue_ItemDispenser::K2Node_Event_HitResult' has a wrong offset!");
static_assert(offsetof(BP_Statue_ItemDispenser_C_ExecuteUbergraph_BP_Statue_ItemDispenser, GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess) == 0x000270, "Member 'BP_Statue_ItemDispenser_C_ExecuteUbergraph_BP_Statue_ItemDispenser::GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_Statue_ItemDispenser_C_ExecuteUbergraph_BP_Statue_ItemDispenser, K2Node_MakeStruct_GameplayEventData) == 0x000278, "Member 'BP_Statue_ItemDispenser_C_ExecuteUbergraph_BP_Statue_ItemDispenser::K2Node_MakeStruct_GameplayEventData' has a wrong offset!");
static_assert(offsetof(BP_Statue_ItemDispenser_C_ExecuteUbergraph_BP_Statue_ItemDispenser, K2Node_Event_InGameplayTag) == 0x000328, "Member 'BP_Statue_ItemDispenser_C_ExecuteUbergraph_BP_Statue_ItemDispenser::K2Node_Event_InGameplayTag' has a wrong offset!");
static_assert(offsetof(BP_Statue_ItemDispenser_C_ExecuteUbergraph_BP_Statue_ItemDispenser, K2Node_Event_InCount) == 0x000330, "Member 'BP_Statue_ItemDispenser_C_ExecuteUbergraph_BP_Statue_ItemDispenser::K2Node_Event_InCount' has a wrong offset!");
static_assert(offsetof(BP_Statue_ItemDispenser_C_ExecuteUbergraph_BP_Statue_ItemDispenser, CallFunc_Greater_IntInt_ReturnValue) == 0x000334, "Member 'BP_Statue_ItemDispenser_C_ExecuteUbergraph_BP_Statue_ItemDispenser::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Statue_ItemDispenser_C_ExecuteUbergraph_BP_Statue_ItemDispenser, GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess_1) == 0x000335, "Member 'BP_Statue_ItemDispenser_C_ExecuteUbergraph_BP_Statue_ItemDispenser::GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_Statue_ItemDispenser_C_ExecuteUbergraph_BP_Statue_ItemDispenser, K2Node_ComponentBoundEvent_ResultItems) == 0x000338, "Member 'BP_Statue_ItemDispenser_C_ExecuteUbergraph_BP_Statue_ItemDispenser::K2Node_ComponentBoundEvent_ResultItems' has a wrong offset!");
static_assert(offsetof(BP_Statue_ItemDispenser_C_ExecuteUbergraph_BP_Statue_ItemDispenser, CallFunc_Array_Get_Item) == 0x000348, "Member 'BP_Statue_ItemDispenser_C_ExecuteUbergraph_BP_Statue_ItemDispenser::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Statue_ItemDispenser_C_ExecuteUbergraph_BP_Statue_ItemDispenser, CallFunc_Array_Length_ReturnValue) == 0x000448, "Member 'BP_Statue_ItemDispenser_C_ExecuteUbergraph_BP_Statue_ItemDispenser::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Statue_ItemDispenser_C_ExecuteUbergraph_BP_Statue_ItemDispenser, CallFunc_Less_IntInt_ReturnValue) == 0x00044C, "Member 'BP_Statue_ItemDispenser_C_ExecuteUbergraph_BP_Statue_ItemDispenser::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Statue_ItemDispenser_C_ExecuteUbergraph_BP_Statue_ItemDispenser, CallFunc_MakeLiteralByte_ReturnValue) == 0x00044D, "Member 'BP_Statue_ItemDispenser_C_ExecuteUbergraph_BP_Statue_ItemDispenser::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Statue_ItemDispenser_C_ExecuteUbergraph_BP_Statue_ItemDispenser, K2Node_DynamicCast_AsBP_Player_Character_2) == 0x000450, "Member 'BP_Statue_ItemDispenser_C_ExecuteUbergraph_BP_Statue_ItemDispenser::K2Node_DynamicCast_AsBP_Player_Character_2' has a wrong offset!");
static_assert(offsetof(BP_Statue_ItemDispenser_C_ExecuteUbergraph_BP_Statue_ItemDispenser, K2Node_DynamicCast_bSuccess_2) == 0x000458, "Member 'BP_Statue_ItemDispenser_C_ExecuteUbergraph_BP_Statue_ItemDispenser::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_Statue_ItemDispenser_C_ExecuteUbergraph_BP_Statue_ItemDispenser, CallFunc_Conv_ByteToInt_ReturnValue) == 0x00045C, "Member 'BP_Statue_ItemDispenser_C_ExecuteUbergraph_BP_Statue_ItemDispenser::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Statue_ItemDispenser_C_ExecuteUbergraph_BP_Statue_ItemDispenser, K2Node_MakeStruct_ItemData) == 0x000460, "Member 'BP_Statue_ItemDispenser_C_ExecuteUbergraph_BP_Statue_ItemDispenser::K2Node_MakeStruct_ItemData' has a wrong offset!");
static_assert(offsetof(BP_Statue_ItemDispenser_C_ExecuteUbergraph_BP_Statue_ItemDispenser, CallFunc_AddItemData_ReturnValue) == 0x000560, "Member 'BP_Statue_ItemDispenser_C_ExecuteUbergraph_BP_Statue_ItemDispenser::CallFunc_AddItemData_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Statue_ItemDispenser_C_ExecuteUbergraph_BP_Statue_ItemDispenser, CallFunc_GetActorAttributeValue_ReturnValue) == 0x000564, "Member 'BP_Statue_ItemDispenser_C_ExecuteUbergraph_BP_Statue_ItemDispenser::CallFunc_GetActorAttributeValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Statue_ItemDispenser_C_ExecuteUbergraph_BP_Statue_ItemDispenser, CallFunc_GenerateItems_self_CastInput) == 0x000568, "Member 'BP_Statue_ItemDispenser_C_ExecuteUbergraph_BP_Statue_ItemDispenser::CallFunc_GenerateItems_self_CastInput' has a wrong offset!");

// Function BP_Statue_ItemDispenser.BP_Statue_ItemDispenser_C.GameplayTagUpdated
// 0x000C (0x000C - 0x0000)
struct BP_Statue_ItemDispenser_C_GameplayTagUpdated final
{
public:
	struct FGameplayTag                           InGameplayTag;                                     // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	int32                                         InCount;                                           // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Statue_ItemDispenser_C_GameplayTagUpdated) == 0x000004, "Wrong alignment on BP_Statue_ItemDispenser_C_GameplayTagUpdated");
static_assert(sizeof(BP_Statue_ItemDispenser_C_GameplayTagUpdated) == 0x00000C, "Wrong size on BP_Statue_ItemDispenser_C_GameplayTagUpdated");
static_assert(offsetof(BP_Statue_ItemDispenser_C_GameplayTagUpdated, InGameplayTag) == 0x000000, "Member 'BP_Statue_ItemDispenser_C_GameplayTagUpdated::InGameplayTag' has a wrong offset!");
static_assert(offsetof(BP_Statue_ItemDispenser_C_GameplayTagUpdated, InCount) == 0x000008, "Member 'BP_Statue_ItemDispenser_C_GameplayTagUpdated::InCount' has a wrong offset!");

// Function BP_Statue_ItemDispenser.BP_Statue_ItemDispenser_C.InteractSucceed
// 0x0100 (0x0100 - 0x0000)
struct BP_Statue_ItemDispenser_C_InteractSucceed final
{
public:
	class AActor*                                 Interacter;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           StateTag;                                          // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           TriggerTag;                                        // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             HitResult;                                         // 0x0018(0x00E8)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_Statue_ItemDispenser_C_InteractSucceed) == 0x000008, "Wrong alignment on BP_Statue_ItemDispenser_C_InteractSucceed");
static_assert(sizeof(BP_Statue_ItemDispenser_C_InteractSucceed) == 0x000100, "Wrong size on BP_Statue_ItemDispenser_C_InteractSucceed");
static_assert(offsetof(BP_Statue_ItemDispenser_C_InteractSucceed, Interacter) == 0x000000, "Member 'BP_Statue_ItemDispenser_C_InteractSucceed::Interacter' has a wrong offset!");
static_assert(offsetof(BP_Statue_ItemDispenser_C_InteractSucceed, StateTag) == 0x000008, "Member 'BP_Statue_ItemDispenser_C_InteractSucceed::StateTag' has a wrong offset!");
static_assert(offsetof(BP_Statue_ItemDispenser_C_InteractSucceed, TriggerTag) == 0x000010, "Member 'BP_Statue_ItemDispenser_C_InteractSucceed::TriggerTag' has a wrong offset!");
static_assert(offsetof(BP_Statue_ItemDispenser_C_InteractSucceed, HitResult) == 0x000018, "Member 'BP_Statue_ItemDispenser_C_InteractSucceed::HitResult' has a wrong offset!");

}

