#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_ItemTagCollider

#include "Basic.hpp"


namespace SDK::Params
{

// Function GA_ItemTagCollider.GA_ItemTagCollider_C.GetColliderRadius
// 0x0020 (0x0020 - 0x0000)
struct GA_ItemTagCollider_C_GetColliderRadius final
{
public:
	double                                        Radius;                                            // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetColliderRadius_Radius;                 // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetConstantFloat_ReturnValue;             // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidPrimaryAssetId_ReturnValue;        // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A1F[0x3];                                     // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_FunctionResult_Radius_ImplicitCast;         // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_ItemTagCollider_C_GetColliderRadius) == 0x000008, "Wrong alignment on GA_ItemTagCollider_C_GetColliderRadius");
static_assert(sizeof(GA_ItemTagCollider_C_GetColliderRadius) == 0x000020, "Wrong size on GA_ItemTagCollider_C_GetColliderRadius");
static_assert(offsetof(GA_ItemTagCollider_C_GetColliderRadius, Radius) == 0x000000, "Member 'GA_ItemTagCollider_C_GetColliderRadius::Radius' has a wrong offset!");
static_assert(offsetof(GA_ItemTagCollider_C_GetColliderRadius, CallFunc_GetColliderRadius_Radius) == 0x000008, "Member 'GA_ItemTagCollider_C_GetColliderRadius::CallFunc_GetColliderRadius_Radius' has a wrong offset!");
static_assert(offsetof(GA_ItemTagCollider_C_GetColliderRadius, CallFunc_GetConstantFloat_ReturnValue) == 0x000010, "Member 'GA_ItemTagCollider_C_GetColliderRadius::CallFunc_GetConstantFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_ItemTagCollider_C_GetColliderRadius, CallFunc_IsValidPrimaryAssetId_ReturnValue) == 0x000014, "Member 'GA_ItemTagCollider_C_GetColliderRadius::CallFunc_IsValidPrimaryAssetId_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_ItemTagCollider_C_GetColliderRadius, K2Node_FunctionResult_Radius_ImplicitCast) == 0x000018, "Member 'GA_ItemTagCollider_C_GetColliderRadius::K2Node_FunctionResult_Radius_ImplicitCast' has a wrong offset!");

}

