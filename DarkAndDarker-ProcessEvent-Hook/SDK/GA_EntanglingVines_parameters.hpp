#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_EntanglingVines

#include "Basic.hpp"

#include "GameplayAbilities_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function GA_EntanglingVines.GA_EntanglingVines_C.AbilityActivated_BP
// 0x00B8 (0x00B8 - 0x0000)
struct GA_EntanglingVines_C_AbilityActivated_BP final
{
public:
	struct FGameplayEventData                     TriggerEventData;                                  // 0x0000(0x00B0)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm)
	bool                                          bIsSocketSightBlocked;                             // 0x00B0(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_EntanglingVines_C_AbilityActivated_BP) == 0x000008, "Wrong alignment on GA_EntanglingVines_C_AbilityActivated_BP");
static_assert(sizeof(GA_EntanglingVines_C_AbilityActivated_BP) == 0x0000B8, "Wrong size on GA_EntanglingVines_C_AbilityActivated_BP");
static_assert(offsetof(GA_EntanglingVines_C_AbilityActivated_BP, TriggerEventData) == 0x000000, "Member 'GA_EntanglingVines_C_AbilityActivated_BP::TriggerEventData' has a wrong offset!");
static_assert(offsetof(GA_EntanglingVines_C_AbilityActivated_BP, bIsSocketSightBlocked) == 0x0000B0, "Member 'GA_EntanglingVines_C_AbilityActivated_BP::bIsSocketSightBlocked' has a wrong offset!");

// Function GA_EntanglingVines.GA_EntanglingVines_C.ExecuteUbergraph_GA_EntanglingVines
// 0x03E0 (0x03E0 - 0x0000)
struct GA_EntanglingVines_C_ExecuteUbergraph_GA_EntanglingVines final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_57FC[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayEventData                     Temp_struct_Variable;                              // 0x0008(0x00B0)(ConstParm)
	struct FGameplayEventData                     K2Node_Event_TriggerEventData;                     // 0x00B8(0x00B0)(ConstParm)
	bool                                          K2Node_Event_bIsSocketSightBlocked;                // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_57FD[0x7];                                     // 0x0169(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetAvatarActorFromActorInfo_ReturnValue;  // 0x0170(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetAreaRadius_ReturnValue;                // 0x0178(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_57FE[0x4];                                     // 0x017C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_GetHitResultFromTargetData_ReturnValue;   // 0x0180(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_TargetDataHasHitResult_ReturnValue;       // 0x0268(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0269(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x026A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_57FF[0x1];                                     // 0x026B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x026C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0270(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5800[0x4];                                     // 0x0274(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0278(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0290(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x02A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x02C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x02D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x02E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x02E8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x02F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x02F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0300(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x0304(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0308(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5801[0x4];                                     // 0x030C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0310(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0328(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotFromZ_ReturnValue;                 // 0x0340(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5802[0x8];                                     // 0x0358(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0360(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x03C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5803[0x7];                                     // 0x03C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x03C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_Aoe_EntanglingVines_C*              CallFunc_FinishSpawningActor_ReturnValue;          // 0x03D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SetDoublePropertyByName_Value_ImplicitCast; // 0x03D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_EntanglingVines_C_ExecuteUbergraph_GA_EntanglingVines) == 0x000010, "Wrong alignment on GA_EntanglingVines_C_ExecuteUbergraph_GA_EntanglingVines");
static_assert(sizeof(GA_EntanglingVines_C_ExecuteUbergraph_GA_EntanglingVines) == 0x0003E0, "Wrong size on GA_EntanglingVines_C_ExecuteUbergraph_GA_EntanglingVines");
static_assert(offsetof(GA_EntanglingVines_C_ExecuteUbergraph_GA_EntanglingVines, EntryPoint) == 0x000000, "Member 'GA_EntanglingVines_C_ExecuteUbergraph_GA_EntanglingVines::EntryPoint' has a wrong offset!");
static_assert(offsetof(GA_EntanglingVines_C_ExecuteUbergraph_GA_EntanglingVines, Temp_struct_Variable) == 0x000008, "Member 'GA_EntanglingVines_C_ExecuteUbergraph_GA_EntanglingVines::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(GA_EntanglingVines_C_ExecuteUbergraph_GA_EntanglingVines, K2Node_Event_TriggerEventData) == 0x0000B8, "Member 'GA_EntanglingVines_C_ExecuteUbergraph_GA_EntanglingVines::K2Node_Event_TriggerEventData' has a wrong offset!");
static_assert(offsetof(GA_EntanglingVines_C_ExecuteUbergraph_GA_EntanglingVines, K2Node_Event_bIsSocketSightBlocked) == 0x000168, "Member 'GA_EntanglingVines_C_ExecuteUbergraph_GA_EntanglingVines::K2Node_Event_bIsSocketSightBlocked' has a wrong offset!");
static_assert(offsetof(GA_EntanglingVines_C_ExecuteUbergraph_GA_EntanglingVines, CallFunc_GetAvatarActorFromActorInfo_ReturnValue) == 0x000170, "Member 'GA_EntanglingVines_C_ExecuteUbergraph_GA_EntanglingVines::CallFunc_GetAvatarActorFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_EntanglingVines_C_ExecuteUbergraph_GA_EntanglingVines, CallFunc_GetAreaRadius_ReturnValue) == 0x000178, "Member 'GA_EntanglingVines_C_ExecuteUbergraph_GA_EntanglingVines::CallFunc_GetAreaRadius_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_EntanglingVines_C_ExecuteUbergraph_GA_EntanglingVines, CallFunc_GetHitResultFromTargetData_ReturnValue) == 0x000180, "Member 'GA_EntanglingVines_C_ExecuteUbergraph_GA_EntanglingVines::CallFunc_GetHitResultFromTargetData_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_EntanglingVines_C_ExecuteUbergraph_GA_EntanglingVines, CallFunc_TargetDataHasHitResult_ReturnValue) == 0x000268, "Member 'GA_EntanglingVines_C_ExecuteUbergraph_GA_EntanglingVines::CallFunc_TargetDataHasHitResult_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_EntanglingVines_C_ExecuteUbergraph_GA_EntanglingVines, CallFunc_BreakHitResult_bBlockingHit) == 0x000269, "Member 'GA_EntanglingVines_C_ExecuteUbergraph_GA_EntanglingVines::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(GA_EntanglingVines_C_ExecuteUbergraph_GA_EntanglingVines, CallFunc_BreakHitResult_bInitialOverlap) == 0x00026A, "Member 'GA_EntanglingVines_C_ExecuteUbergraph_GA_EntanglingVines::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(GA_EntanglingVines_C_ExecuteUbergraph_GA_EntanglingVines, CallFunc_BreakHitResult_Time) == 0x00026C, "Member 'GA_EntanglingVines_C_ExecuteUbergraph_GA_EntanglingVines::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(GA_EntanglingVines_C_ExecuteUbergraph_GA_EntanglingVines, CallFunc_BreakHitResult_Distance) == 0x000270, "Member 'GA_EntanglingVines_C_ExecuteUbergraph_GA_EntanglingVines::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(GA_EntanglingVines_C_ExecuteUbergraph_GA_EntanglingVines, CallFunc_BreakHitResult_Location) == 0x000278, "Member 'GA_EntanglingVines_C_ExecuteUbergraph_GA_EntanglingVines::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(GA_EntanglingVines_C_ExecuteUbergraph_GA_EntanglingVines, CallFunc_BreakHitResult_ImpactPoint) == 0x000290, "Member 'GA_EntanglingVines_C_ExecuteUbergraph_GA_EntanglingVines::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(GA_EntanglingVines_C_ExecuteUbergraph_GA_EntanglingVines, CallFunc_BreakHitResult_Normal) == 0x0002A8, "Member 'GA_EntanglingVines_C_ExecuteUbergraph_GA_EntanglingVines::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(GA_EntanglingVines_C_ExecuteUbergraph_GA_EntanglingVines, CallFunc_BreakHitResult_ImpactNormal) == 0x0002C0, "Member 'GA_EntanglingVines_C_ExecuteUbergraph_GA_EntanglingVines::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(GA_EntanglingVines_C_ExecuteUbergraph_GA_EntanglingVines, CallFunc_BreakHitResult_PhysMat) == 0x0002D8, "Member 'GA_EntanglingVines_C_ExecuteUbergraph_GA_EntanglingVines::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(GA_EntanglingVines_C_ExecuteUbergraph_GA_EntanglingVines, CallFunc_BreakHitResult_HitActor) == 0x0002E0, "Member 'GA_EntanglingVines_C_ExecuteUbergraph_GA_EntanglingVines::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(GA_EntanglingVines_C_ExecuteUbergraph_GA_EntanglingVines, CallFunc_BreakHitResult_HitComponent) == 0x0002E8, "Member 'GA_EntanglingVines_C_ExecuteUbergraph_GA_EntanglingVines::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(GA_EntanglingVines_C_ExecuteUbergraph_GA_EntanglingVines, CallFunc_BreakHitResult_HitBoneName) == 0x0002F0, "Member 'GA_EntanglingVines_C_ExecuteUbergraph_GA_EntanglingVines::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(GA_EntanglingVines_C_ExecuteUbergraph_GA_EntanglingVines, CallFunc_BreakHitResult_BoneName) == 0x0002F8, "Member 'GA_EntanglingVines_C_ExecuteUbergraph_GA_EntanglingVines::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(GA_EntanglingVines_C_ExecuteUbergraph_GA_EntanglingVines, CallFunc_BreakHitResult_HitItem) == 0x000300, "Member 'GA_EntanglingVines_C_ExecuteUbergraph_GA_EntanglingVines::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(GA_EntanglingVines_C_ExecuteUbergraph_GA_EntanglingVines, CallFunc_BreakHitResult_ElementIndex) == 0x000304, "Member 'GA_EntanglingVines_C_ExecuteUbergraph_GA_EntanglingVines::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(GA_EntanglingVines_C_ExecuteUbergraph_GA_EntanglingVines, CallFunc_BreakHitResult_FaceIndex) == 0x000308, "Member 'GA_EntanglingVines_C_ExecuteUbergraph_GA_EntanglingVines::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(GA_EntanglingVines_C_ExecuteUbergraph_GA_EntanglingVines, CallFunc_BreakHitResult_TraceStart) == 0x000310, "Member 'GA_EntanglingVines_C_ExecuteUbergraph_GA_EntanglingVines::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(GA_EntanglingVines_C_ExecuteUbergraph_GA_EntanglingVines, CallFunc_BreakHitResult_TraceEnd) == 0x000328, "Member 'GA_EntanglingVines_C_ExecuteUbergraph_GA_EntanglingVines::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(GA_EntanglingVines_C_ExecuteUbergraph_GA_EntanglingVines, CallFunc_MakeRotFromZ_ReturnValue) == 0x000340, "Member 'GA_EntanglingVines_C_ExecuteUbergraph_GA_EntanglingVines::CallFunc_MakeRotFromZ_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_EntanglingVines_C_ExecuteUbergraph_GA_EntanglingVines, CallFunc_MakeTransform_ReturnValue) == 0x000360, "Member 'GA_EntanglingVines_C_ExecuteUbergraph_GA_EntanglingVines::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_EntanglingVines_C_ExecuteUbergraph_GA_EntanglingVines, CallFunc_IsValid_ReturnValue) == 0x0003C0, "Member 'GA_EntanglingVines_C_ExecuteUbergraph_GA_EntanglingVines::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_EntanglingVines_C_ExecuteUbergraph_GA_EntanglingVines, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x0003C8, "Member 'GA_EntanglingVines_C_ExecuteUbergraph_GA_EntanglingVines::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_EntanglingVines_C_ExecuteUbergraph_GA_EntanglingVines, CallFunc_FinishSpawningActor_ReturnValue) == 0x0003D0, "Member 'GA_EntanglingVines_C_ExecuteUbergraph_GA_EntanglingVines::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_EntanglingVines_C_ExecuteUbergraph_GA_EntanglingVines, CallFunc_SetDoublePropertyByName_Value_ImplicitCast) == 0x0003D8, "Member 'GA_EntanglingVines_C_ExecuteUbergraph_GA_EntanglingVines::CallFunc_SetDoublePropertyByName_Value_ImplicitCast' has a wrong offset!");

}

