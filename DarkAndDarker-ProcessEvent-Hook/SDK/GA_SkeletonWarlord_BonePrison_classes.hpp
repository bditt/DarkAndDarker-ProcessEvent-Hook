#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_SkeletonWarlord_BonePrison

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "GA_MonsterGameplayAbilityBase_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass GA_SkeletonWarlord_BonePrison.GA_SkeletonWarlord_BonePrison_C
// 0x0028 (0x05F0 - 0x05C8)
class UGA_SkeletonWarlord_BonePrison_C final : public UGA_MonsterGameplayAbilityBase_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x05C8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class ABP_SkeletonWarlord_C*                  As_BP_Skeleton_Warlord;                            // 0x05D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           Apply_Dominated_Stack;                             // 0x05D8(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FPrimaryAssetId                        In_Monster_Id;                                     // 0x05E0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void AbilityActivated(const struct FGameplayEventData& TriggerEventData);
	void Apply_Effect();
	void EventReceived_D2CC5BCE4261685F5F94E29E8E5F42BF(const struct FGameplayEventData& Payload);
	void ExecuteUbergraph_GA_SkeletonWarlord_BonePrison(int32 EntryPoint);
	void K2_OnEndAbility(bool bWasCancelled);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GA_SkeletonWarlord_BonePrison_C">();
	}
	static class UGA_SkeletonWarlord_BonePrison_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGA_SkeletonWarlord_BonePrison_C>();
	}
};
static_assert(alignof(UGA_SkeletonWarlord_BonePrison_C) == 0x000008, "Wrong alignment on UGA_SkeletonWarlord_BonePrison_C");
static_assert(sizeof(UGA_SkeletonWarlord_BonePrison_C) == 0x0005F0, "Wrong size on UGA_SkeletonWarlord_BonePrison_C");
static_assert(offsetof(UGA_SkeletonWarlord_BonePrison_C, UberGraphFrame) == 0x0005C8, "Member 'UGA_SkeletonWarlord_BonePrison_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UGA_SkeletonWarlord_BonePrison_C, As_BP_Skeleton_Warlord) == 0x0005D0, "Member 'UGA_SkeletonWarlord_BonePrison_C::As_BP_Skeleton_Warlord' has a wrong offset!");
static_assert(offsetof(UGA_SkeletonWarlord_BonePrison_C, Apply_Dominated_Stack) == 0x0005D8, "Member 'UGA_SkeletonWarlord_BonePrison_C::Apply_Dominated_Stack' has a wrong offset!");
static_assert(offsetof(UGA_SkeletonWarlord_BonePrison_C, In_Monster_Id) == 0x0005E0, "Member 'UGA_SkeletonWarlord_BonePrison_C::In_Monster_Id' has a wrong offset!");

}

