#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Cyclops_FallingRock

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "GameplayAbilities_structs.hpp"


namespace SDK::Params
{

// Function BP_Cyclops_FallingRock.BP_Cyclops_FallingRock_C.ExecuteUbergraph_BP_Cyclops_FallingRock
// 0x0310 (0x0310 - 0x0000)
struct BP_Cyclops_FallingRock_C_ExecuteUbergraph_BP_Cyclops_FallingRock final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A9A[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_Event_Hit;                                  // 0x0008(0x00E8)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          K2Node_Event_bIsAttached;                          // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A9B[0xF];                                     // 0x00F1(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             K2Node_Event_ActorPrevTickTransform;               // 0x0100(0x0060)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0161(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A9C[0x2];                                     // 0x0162(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0164(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A9D[0x4];                                     // 0x016C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0170(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0188(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x01A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x01B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x01D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x01D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x01E0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x01E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x01F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x01FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0200(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A9E[0x4];                                     // 0x0204(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0208(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0220(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 CallFunc_MakeGameplayCueParameters_ReturnValue;    // 0x0238(0x00D8)(ContainsInstancedReference)
};
static_assert(alignof(BP_Cyclops_FallingRock_C_ExecuteUbergraph_BP_Cyclops_FallingRock) == 0x000010, "Wrong alignment on BP_Cyclops_FallingRock_C_ExecuteUbergraph_BP_Cyclops_FallingRock");
static_assert(sizeof(BP_Cyclops_FallingRock_C_ExecuteUbergraph_BP_Cyclops_FallingRock) == 0x000310, "Wrong size on BP_Cyclops_FallingRock_C_ExecuteUbergraph_BP_Cyclops_FallingRock");
static_assert(offsetof(BP_Cyclops_FallingRock_C_ExecuteUbergraph_BP_Cyclops_FallingRock, EntryPoint) == 0x000000, "Member 'BP_Cyclops_FallingRock_C_ExecuteUbergraph_BP_Cyclops_FallingRock::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_Cyclops_FallingRock_C_ExecuteUbergraph_BP_Cyclops_FallingRock, K2Node_Event_Hit) == 0x000008, "Member 'BP_Cyclops_FallingRock_C_ExecuteUbergraph_BP_Cyclops_FallingRock::K2Node_Event_Hit' has a wrong offset!");
static_assert(offsetof(BP_Cyclops_FallingRock_C_ExecuteUbergraph_BP_Cyclops_FallingRock, K2Node_Event_bIsAttached) == 0x0000F0, "Member 'BP_Cyclops_FallingRock_C_ExecuteUbergraph_BP_Cyclops_FallingRock::K2Node_Event_bIsAttached' has a wrong offset!");
static_assert(offsetof(BP_Cyclops_FallingRock_C_ExecuteUbergraph_BP_Cyclops_FallingRock, K2Node_Event_ActorPrevTickTransform) == 0x000100, "Member 'BP_Cyclops_FallingRock_C_ExecuteUbergraph_BP_Cyclops_FallingRock::K2Node_Event_ActorPrevTickTransform' has a wrong offset!");
static_assert(offsetof(BP_Cyclops_FallingRock_C_ExecuteUbergraph_BP_Cyclops_FallingRock, CallFunc_BreakHitResult_bBlockingHit) == 0x000160, "Member 'BP_Cyclops_FallingRock_C_ExecuteUbergraph_BP_Cyclops_FallingRock::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_Cyclops_FallingRock_C_ExecuteUbergraph_BP_Cyclops_FallingRock, CallFunc_BreakHitResult_bInitialOverlap) == 0x000161, "Member 'BP_Cyclops_FallingRock_C_ExecuteUbergraph_BP_Cyclops_FallingRock::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_Cyclops_FallingRock_C_ExecuteUbergraph_BP_Cyclops_FallingRock, CallFunc_BreakHitResult_Time) == 0x000164, "Member 'BP_Cyclops_FallingRock_C_ExecuteUbergraph_BP_Cyclops_FallingRock::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_Cyclops_FallingRock_C_ExecuteUbergraph_BP_Cyclops_FallingRock, CallFunc_BreakHitResult_Distance) == 0x000168, "Member 'BP_Cyclops_FallingRock_C_ExecuteUbergraph_BP_Cyclops_FallingRock::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_Cyclops_FallingRock_C_ExecuteUbergraph_BP_Cyclops_FallingRock, CallFunc_BreakHitResult_Location) == 0x000170, "Member 'BP_Cyclops_FallingRock_C_ExecuteUbergraph_BP_Cyclops_FallingRock::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_Cyclops_FallingRock_C_ExecuteUbergraph_BP_Cyclops_FallingRock, CallFunc_BreakHitResult_ImpactPoint) == 0x000188, "Member 'BP_Cyclops_FallingRock_C_ExecuteUbergraph_BP_Cyclops_FallingRock::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_Cyclops_FallingRock_C_ExecuteUbergraph_BP_Cyclops_FallingRock, CallFunc_BreakHitResult_Normal) == 0x0001A0, "Member 'BP_Cyclops_FallingRock_C_ExecuteUbergraph_BP_Cyclops_FallingRock::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_Cyclops_FallingRock_C_ExecuteUbergraph_BP_Cyclops_FallingRock, CallFunc_BreakHitResult_ImpactNormal) == 0x0001B8, "Member 'BP_Cyclops_FallingRock_C_ExecuteUbergraph_BP_Cyclops_FallingRock::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_Cyclops_FallingRock_C_ExecuteUbergraph_BP_Cyclops_FallingRock, CallFunc_BreakHitResult_PhysMat) == 0x0001D0, "Member 'BP_Cyclops_FallingRock_C_ExecuteUbergraph_BP_Cyclops_FallingRock::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_Cyclops_FallingRock_C_ExecuteUbergraph_BP_Cyclops_FallingRock, CallFunc_BreakHitResult_HitActor) == 0x0001D8, "Member 'BP_Cyclops_FallingRock_C_ExecuteUbergraph_BP_Cyclops_FallingRock::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_Cyclops_FallingRock_C_ExecuteUbergraph_BP_Cyclops_FallingRock, CallFunc_BreakHitResult_HitComponent) == 0x0001E0, "Member 'BP_Cyclops_FallingRock_C_ExecuteUbergraph_BP_Cyclops_FallingRock::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_Cyclops_FallingRock_C_ExecuteUbergraph_BP_Cyclops_FallingRock, CallFunc_BreakHitResult_HitBoneName) == 0x0001E8, "Member 'BP_Cyclops_FallingRock_C_ExecuteUbergraph_BP_Cyclops_FallingRock::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_Cyclops_FallingRock_C_ExecuteUbergraph_BP_Cyclops_FallingRock, CallFunc_BreakHitResult_BoneName) == 0x0001F0, "Member 'BP_Cyclops_FallingRock_C_ExecuteUbergraph_BP_Cyclops_FallingRock::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(BP_Cyclops_FallingRock_C_ExecuteUbergraph_BP_Cyclops_FallingRock, CallFunc_BreakHitResult_HitItem) == 0x0001F8, "Member 'BP_Cyclops_FallingRock_C_ExecuteUbergraph_BP_Cyclops_FallingRock::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_Cyclops_FallingRock_C_ExecuteUbergraph_BP_Cyclops_FallingRock, CallFunc_BreakHitResult_ElementIndex) == 0x0001FC, "Member 'BP_Cyclops_FallingRock_C_ExecuteUbergraph_BP_Cyclops_FallingRock::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(BP_Cyclops_FallingRock_C_ExecuteUbergraph_BP_Cyclops_FallingRock, CallFunc_BreakHitResult_FaceIndex) == 0x000200, "Member 'BP_Cyclops_FallingRock_C_ExecuteUbergraph_BP_Cyclops_FallingRock::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_Cyclops_FallingRock_C_ExecuteUbergraph_BP_Cyclops_FallingRock, CallFunc_BreakHitResult_TraceStart) == 0x000208, "Member 'BP_Cyclops_FallingRock_C_ExecuteUbergraph_BP_Cyclops_FallingRock::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_Cyclops_FallingRock_C_ExecuteUbergraph_BP_Cyclops_FallingRock, CallFunc_BreakHitResult_TraceEnd) == 0x000220, "Member 'BP_Cyclops_FallingRock_C_ExecuteUbergraph_BP_Cyclops_FallingRock::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_Cyclops_FallingRock_C_ExecuteUbergraph_BP_Cyclops_FallingRock, CallFunc_MakeGameplayCueParameters_ReturnValue) == 0x000238, "Member 'BP_Cyclops_FallingRock_C_ExecuteUbergraph_BP_Cyclops_FallingRock::CallFunc_MakeGameplayCueParameters_ReturnValue' has a wrong offset!");

// Function BP_Cyclops_FallingRock.BP_Cyclops_FallingRock_C.ProjectileHit
// 0x0150 (0x0150 - 0x0000)
struct BP_Cyclops_FallingRock_C_ProjectileHit final
{
public:
	struct FHitResult                             Hit;                                               // 0x0000(0x00E8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          bIsAttached;                                       // 0x00E8(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A9F[0x7];                                     // 0x00E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             ActorPrevTickTransform;                            // 0x00F0(0x0060)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Cyclops_FallingRock_C_ProjectileHit) == 0x000010, "Wrong alignment on BP_Cyclops_FallingRock_C_ProjectileHit");
static_assert(sizeof(BP_Cyclops_FallingRock_C_ProjectileHit) == 0x000150, "Wrong size on BP_Cyclops_FallingRock_C_ProjectileHit");
static_assert(offsetof(BP_Cyclops_FallingRock_C_ProjectileHit, Hit) == 0x000000, "Member 'BP_Cyclops_FallingRock_C_ProjectileHit::Hit' has a wrong offset!");
static_assert(offsetof(BP_Cyclops_FallingRock_C_ProjectileHit, bIsAttached) == 0x0000E8, "Member 'BP_Cyclops_FallingRock_C_ProjectileHit::bIsAttached' has a wrong offset!");
static_assert(offsetof(BP_Cyclops_FallingRock_C_ProjectileHit, ActorPrevTickTransform) == 0x0000F0, "Member 'BP_Cyclops_FallingRock_C_ProjectileHit::ActorPrevTickTransform' has a wrong offset!");

}

