#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_Lich_CurseOfGathering_Mark

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "GA_MonsterGameplayAbilityBase_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass GA_Lich_CurseOfGathering_Mark.GA_Lich_CurseOfGathering_Mark_C
// 0x0038 (0x0600 - 0x05C8)
class UGA_Lich_CurseOfGathering_Mark_C final : public UGA_MonsterGameplayAbilityBase_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x05C8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class ADCCharacterBase*                       As_DCCharacter_Base;                               // 0x05D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         Overlap_Actors;                                    // 0x05D8(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	struct FGameplayTag                           Container_Tag;                                     // 0x05E8(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	TArray<struct FActiveGameplayEffectHandle>    Timer_Effect_Handle;                               // 0x05F0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void AbilityActivated(const struct FGameplayEventData& TriggerEventData);
	void Apply_Effect();
	void CheckOverlapActorIsNull(bool* Is_Null);
	void EventReceived_7D663A844DC5932AB892C59B18CB4594(const struct FGameplayEventData& Payload);
	void ExecuteUbergraph_GA_Lich_CurseOfGathering_Mark(int32 EntryPoint);
	void InvalidHandle_7481A0444A582F553DFF5FB1E801F3B4(const struct FGameplayEffectRemovalInfo& GameplayEffectRemovalInfo);
	void K2_OnEndAbility(bool bWasCancelled);
	void OnFinish_ECA6CAF448F9E889034078A012F45101();
	void OnRemoved_7481A0444A582F553DFF5FB1E801F3B4(const struct FGameplayEffectRemovalInfo& GameplayEffectRemovalInfo);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GA_Lich_CurseOfGathering_Mark_C">();
	}
	static class UGA_Lich_CurseOfGathering_Mark_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGA_Lich_CurseOfGathering_Mark_C>();
	}
};
static_assert(alignof(UGA_Lich_CurseOfGathering_Mark_C) == 0x000008, "Wrong alignment on UGA_Lich_CurseOfGathering_Mark_C");
static_assert(sizeof(UGA_Lich_CurseOfGathering_Mark_C) == 0x000600, "Wrong size on UGA_Lich_CurseOfGathering_Mark_C");
static_assert(offsetof(UGA_Lich_CurseOfGathering_Mark_C, UberGraphFrame) == 0x0005C8, "Member 'UGA_Lich_CurseOfGathering_Mark_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UGA_Lich_CurseOfGathering_Mark_C, As_DCCharacter_Base) == 0x0005D0, "Member 'UGA_Lich_CurseOfGathering_Mark_C::As_DCCharacter_Base' has a wrong offset!");
static_assert(offsetof(UGA_Lich_CurseOfGathering_Mark_C, Overlap_Actors) == 0x0005D8, "Member 'UGA_Lich_CurseOfGathering_Mark_C::Overlap_Actors' has a wrong offset!");
static_assert(offsetof(UGA_Lich_CurseOfGathering_Mark_C, Container_Tag) == 0x0005E8, "Member 'UGA_Lich_CurseOfGathering_Mark_C::Container_Tag' has a wrong offset!");
static_assert(offsetof(UGA_Lich_CurseOfGathering_Mark_C, Timer_Effect_Handle) == 0x0005F0, "Member 'UGA_Lich_CurseOfGathering_Mark_C::Timer_Effect_Handle' has a wrong offset!");

}

