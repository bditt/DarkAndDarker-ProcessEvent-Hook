#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_DCPlayerController

#include "Basic.hpp"

#include "AkAudio_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "DungeonCrawler_structs.hpp"
#include "GameplayTags_structs.hpp"


namespace SDK::Params
{

// Function BP_DCPlayerController.BP_DCPlayerController_C.ExecuteUbergraph_BP_DCPlayerController
// 0x00A8 (0x00A8 - 0x0000)
struct BP_DCPlayerController_C_ExecuteUbergraph_BP_DCPlayerController final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_58BB[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameStateData                         K2Node_Event_InGameStateData;                      // 0x0008(0x0008)(ConstParm, NoDestructor)
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_PlaySound_ReturnValue;                    // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_58BC[0x1];                                     // 0x001B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable;                            // 0x001C(0x0010)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_58BD[0x4];                                     // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_PostAkEvent_ReturnValue;                  // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetCameraRotation_ReturnValue;            // 0x0040(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetCameraLocation_ReturnValue;            // 0x0058(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_58BE[0x4];                                     // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0080(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue_1;                 // 0x0098(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsMute_ReturnValue;                       // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_PlaySound_ReturnValue_1;                  // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DCPlayerController_C_ExecuteUbergraph_BP_DCPlayerController) == 0x000008, "Wrong alignment on BP_DCPlayerController_C_ExecuteUbergraph_BP_DCPlayerController");
static_assert(sizeof(BP_DCPlayerController_C_ExecuteUbergraph_BP_DCPlayerController) == 0x0000A8, "Wrong size on BP_DCPlayerController_C_ExecuteUbergraph_BP_DCPlayerController");
static_assert(offsetof(BP_DCPlayerController_C_ExecuteUbergraph_BP_DCPlayerController, EntryPoint) == 0x000000, "Member 'BP_DCPlayerController_C_ExecuteUbergraph_BP_DCPlayerController::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_DCPlayerController_C_ExecuteUbergraph_BP_DCPlayerController, CallFunc_HasAuthority_ReturnValue) == 0x000004, "Member 'BP_DCPlayerController_C_ExecuteUbergraph_BP_DCPlayerController::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DCPlayerController_C_ExecuteUbergraph_BP_DCPlayerController, K2Node_Event_InGameStateData) == 0x000008, "Member 'BP_DCPlayerController_C_ExecuteUbergraph_BP_DCPlayerController::K2Node_Event_InGameStateData' has a wrong offset!");
static_assert(offsetof(BP_DCPlayerController_C_ExecuteUbergraph_BP_DCPlayerController, CallFunc_K2_GetPawn_ReturnValue) == 0x000010, "Member 'BP_DCPlayerController_C_ExecuteUbergraph_BP_DCPlayerController::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DCPlayerController_C_ExecuteUbergraph_BP_DCPlayerController, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'BP_DCPlayerController_C_ExecuteUbergraph_BP_DCPlayerController::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DCPlayerController_C_ExecuteUbergraph_BP_DCPlayerController, K2Node_SwitchEnum_CmpSuccess) == 0x000019, "Member 'BP_DCPlayerController_C_ExecuteUbergraph_BP_DCPlayerController::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_DCPlayerController_C_ExecuteUbergraph_BP_DCPlayerController, CallFunc_PlaySound_ReturnValue) == 0x00001A, "Member 'BP_DCPlayerController_C_ExecuteUbergraph_BP_DCPlayerController::CallFunc_PlaySound_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DCPlayerController_C_ExecuteUbergraph_BP_DCPlayerController, Temp_delegate_Variable) == 0x00001C, "Member 'BP_DCPlayerController_C_ExecuteUbergraph_BP_DCPlayerController::Temp_delegate_Variable' has a wrong offset!");
static_assert(offsetof(BP_DCPlayerController_C_ExecuteUbergraph_BP_DCPlayerController, CallFunc_GetPlayerController_ReturnValue) == 0x000030, "Member 'BP_DCPlayerController_C_ExecuteUbergraph_BP_DCPlayerController::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DCPlayerController_C_ExecuteUbergraph_BP_DCPlayerController, CallFunc_PostAkEvent_ReturnValue) == 0x000038, "Member 'BP_DCPlayerController_C_ExecuteUbergraph_BP_DCPlayerController::CallFunc_PostAkEvent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DCPlayerController_C_ExecuteUbergraph_BP_DCPlayerController, K2Node_Event_DeltaSeconds) == 0x00003C, "Member 'BP_DCPlayerController_C_ExecuteUbergraph_BP_DCPlayerController::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_DCPlayerController_C_ExecuteUbergraph_BP_DCPlayerController, CallFunc_GetCameraRotation_ReturnValue) == 0x000040, "Member 'BP_DCPlayerController_C_ExecuteUbergraph_BP_DCPlayerController::CallFunc_GetCameraRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DCPlayerController_C_ExecuteUbergraph_BP_DCPlayerController, CallFunc_GetCameraLocation_ReturnValue) == 0x000058, "Member 'BP_DCPlayerController_C_ExecuteUbergraph_BP_DCPlayerController::CallFunc_GetCameraLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DCPlayerController_C_ExecuteUbergraph_BP_DCPlayerController, CallFunc_BreakRotator_Roll) == 0x000070, "Member 'BP_DCPlayerController_C_ExecuteUbergraph_BP_DCPlayerController::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BP_DCPlayerController_C_ExecuteUbergraph_BP_DCPlayerController, CallFunc_BreakRotator_Pitch) == 0x000074, "Member 'BP_DCPlayerController_C_ExecuteUbergraph_BP_DCPlayerController::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BP_DCPlayerController_C_ExecuteUbergraph_BP_DCPlayerController, CallFunc_BreakRotator_Yaw) == 0x000078, "Member 'BP_DCPlayerController_C_ExecuteUbergraph_BP_DCPlayerController::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BP_DCPlayerController_C_ExecuteUbergraph_BP_DCPlayerController, CallFunc_MakeRotator_ReturnValue) == 0x000080, "Member 'BP_DCPlayerController_C_ExecuteUbergraph_BP_DCPlayerController::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DCPlayerController_C_ExecuteUbergraph_BP_DCPlayerController, CallFunc_K2_GetPawn_ReturnValue_1) == 0x000098, "Member 'BP_DCPlayerController_C_ExecuteUbergraph_BP_DCPlayerController::CallFunc_K2_GetPawn_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DCPlayerController_C_ExecuteUbergraph_BP_DCPlayerController, CallFunc_IsMute_ReturnValue) == 0x0000A0, "Member 'BP_DCPlayerController_C_ExecuteUbergraph_BP_DCPlayerController::CallFunc_IsMute_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DCPlayerController_C_ExecuteUbergraph_BP_DCPlayerController, CallFunc_PlaySound_ReturnValue_1) == 0x0000A1, "Member 'BP_DCPlayerController_C_ExecuteUbergraph_BP_DCPlayerController::CallFunc_PlaySound_ReturnValue_1' has a wrong offset!");

// Function BP_DCPlayerController.BP_DCPlayerController_C.OnGameStateNotify
// 0x0008 (0x0008 - 0x0000)
struct BP_DCPlayerController_C_OnGameStateNotify final
{
public:
	struct FGameStateData                         InGameStateData;                                   // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
};
static_assert(alignof(BP_DCPlayerController_C_OnGameStateNotify) == 0x000004, "Wrong alignment on BP_DCPlayerController_C_OnGameStateNotify");
static_assert(sizeof(BP_DCPlayerController_C_OnGameStateNotify) == 0x000008, "Wrong size on BP_DCPlayerController_C_OnGameStateNotify");
static_assert(offsetof(BP_DCPlayerController_C_OnGameStateNotify, InGameStateData) == 0x000000, "Member 'BP_DCPlayerController_C_OnGameStateNotify::InGameStateData' has a wrong offset!");

// Function BP_DCPlayerController.BP_DCPlayerController_C.OnLoadSoundData
// 0x0070 (0x0070 - 0x0000)
struct BP_DCPlayerController_C_OnLoadSoundData final
{
public:
	class UObject*                                Object;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable;                            // 0x0008(0x0010)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USoundData*                             K2Node_DynamicCast_AsSound_Data;                   // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_58BF[0x3];                                     // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable_1;                          // 0x0024(0x0010)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Temp_struct_Variable;                              // 0x0034(0x0008)(ConstParm, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Temp_struct_Variable_1;                            // 0x003C(0x0008)(ConstParm, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_58C0[0x4];                                     // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAkAudioEvent*                          CallFunc_Map_Find_Value;                           // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_58C1[0x7];                                     // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAkAudioEvent*                          CallFunc_Map_Find_Value_1;                         // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_1;                   // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_58C2[0x3];                                     // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_PostAkEvent_ReturnValue;                  // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_PostAkEvent_ReturnValue_1;                // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DCPlayerController_C_OnLoadSoundData) == 0x000008, "Wrong alignment on BP_DCPlayerController_C_OnLoadSoundData");
static_assert(sizeof(BP_DCPlayerController_C_OnLoadSoundData) == 0x000070, "Wrong size on BP_DCPlayerController_C_OnLoadSoundData");
static_assert(offsetof(BP_DCPlayerController_C_OnLoadSoundData, Object) == 0x000000, "Member 'BP_DCPlayerController_C_OnLoadSoundData::Object' has a wrong offset!");
static_assert(offsetof(BP_DCPlayerController_C_OnLoadSoundData, Temp_delegate_Variable) == 0x000008, "Member 'BP_DCPlayerController_C_OnLoadSoundData::Temp_delegate_Variable' has a wrong offset!");
static_assert(offsetof(BP_DCPlayerController_C_OnLoadSoundData, K2Node_DynamicCast_AsSound_Data) == 0x000018, "Member 'BP_DCPlayerController_C_OnLoadSoundData::K2Node_DynamicCast_AsSound_Data' has a wrong offset!");
static_assert(offsetof(BP_DCPlayerController_C_OnLoadSoundData, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_DCPlayerController_C_OnLoadSoundData::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_DCPlayerController_C_OnLoadSoundData, Temp_delegate_Variable_1) == 0x000024, "Member 'BP_DCPlayerController_C_OnLoadSoundData::Temp_delegate_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_DCPlayerController_C_OnLoadSoundData, Temp_struct_Variable) == 0x000034, "Member 'BP_DCPlayerController_C_OnLoadSoundData::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_DCPlayerController_C_OnLoadSoundData, Temp_struct_Variable_1) == 0x00003C, "Member 'BP_DCPlayerController_C_OnLoadSoundData::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_DCPlayerController_C_OnLoadSoundData, CallFunc_Map_Find_Value) == 0x000048, "Member 'BP_DCPlayerController_C_OnLoadSoundData::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_DCPlayerController_C_OnLoadSoundData, CallFunc_Map_Find_ReturnValue) == 0x000050, "Member 'BP_DCPlayerController_C_OnLoadSoundData::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DCPlayerController_C_OnLoadSoundData, CallFunc_Map_Find_Value_1) == 0x000058, "Member 'BP_DCPlayerController_C_OnLoadSoundData::CallFunc_Map_Find_Value_1' has a wrong offset!");
static_assert(offsetof(BP_DCPlayerController_C_OnLoadSoundData, CallFunc_Map_Find_ReturnValue_1) == 0x000060, "Member 'BP_DCPlayerController_C_OnLoadSoundData::CallFunc_Map_Find_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DCPlayerController_C_OnLoadSoundData, CallFunc_PostAkEvent_ReturnValue) == 0x000064, "Member 'BP_DCPlayerController_C_OnLoadSoundData::CallFunc_PostAkEvent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DCPlayerController_C_OnLoadSoundData, CallFunc_PostAkEvent_ReturnValue_1) == 0x000068, "Member 'BP_DCPlayerController_C_OnLoadSoundData::CallFunc_PostAkEvent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DCPlayerController_C_OnLoadSoundData, K2Node_SwitchEnum_CmpSuccess) == 0x00006C, "Member 'BP_DCPlayerController_C_OnLoadSoundData::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function BP_DCPlayerController.BP_DCPlayerController_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_DCPlayerController_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DCPlayerController_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_DCPlayerController_C_ReceiveTick");
static_assert(sizeof(BP_DCPlayerController_C_ReceiveTick) == 0x000004, "Wrong size on BP_DCPlayerController_C_ReceiveTick");
static_assert(offsetof(BP_DCPlayerController_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_DCPlayerController_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

}

