#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_GhostKing_Common

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "BP_DCMonsterBaseWithOptions_Boss_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_GhostKing_Common.BP_GhostKing_Common_C
// 0x0150 (0x1550 - 0x1400)
class ABP_GhostKing_Common_C : public ABP_DCMonsterBaseWithOptions_Boss_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_GhostKing_Common_C;              // 0x13F8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UNiagaraComponent*                      FXS_GhostKing_DarkFog_Local;                       // 0x1400(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_DCHitBox_C*                         BP_DCHitBox2;                                      // 0x1408(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_DCHitBox_C*                         BP_DCHitBox1;                                      // 0x1410(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_DCHitBox_C*                         BP_DCHitBox;                                       // 0x1418(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         CurseOfChiling_Apply_Cycle;                        // 0x1420(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4B61[0x4];                                     // 0x1424(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Earthquake_Timer;                                  // 0x1428(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Earthquake_Jump_Height;                            // 0x1430(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 EatingPlayer;                                      // 0x1438(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	double                                        Earthquake_Launch_XY;                              // 0x1440(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Earthquake_Launch_Z;                               // 0x1448(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Earthquake_Damage_Ratio_Stack;                     // 0x1450(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Earthquake_Damage_Base;                            // 0x1458(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Earthquake_Summonee_Count;                         // 0x1460(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4B62[0x4];                                     // 0x1464(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Eating_Acceptance_Radius;                          // 0x1468(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Eating_Chase_Time;                                 // 0x1470(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Teleport_Launch_XY;                                // 0x1478(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Teleport_Launch_Z;                                 // 0x1480(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Teleport_Attack_Radius;                            // 0x1488(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Teleport_Acceptance_Radius;                        // 0x1490(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Teleport_Invisible_Time;                           // 0x1498(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Teleport_Subtract_Ratio_Per_Success;               // 0x14A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Teleport_Damage_Ratio_Stack;                       // 0x14A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Teleport_Damage_Base;                              // 0x14B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Scream_HPRatio_Cycle;                              // 0x14B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Scream_Damage_Ratio_Stack;                         // 0x14C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Scream_Damage_Base;                                // 0x14C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Teleport_Used_For_Earthquake;                      // 0x14D0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4B63[0x7];                                     // 0x14D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Cursed_Players;                                    // 0x14D8(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	bool                                          Set_First_Timer;                                   // 0x14E8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4B64[0x7];                                     // 0x14E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ADCMonsterBase*>                 Small_Ghost;                                       // 0x14F0(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	class UMaterialInstance*                      MI_Hide;                                           // 0x1500(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstance*                      MI_Emerge;                                         // 0x1508(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstance*                      MI_Hide_Crown;                                     // 0x1510(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstance*                      MI_Emerge_Crown;                                   // 0x1518(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class ABP_GameSpawner_C*                      Spawner;                                           // 0x1520(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FPrimaryAssetId                        In_Monster_Id;                                     // 0x1528(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	int32                                         Summonee_Count;                                    // 0x1538(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Vanishing_Form;                                    // 0x153C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4B65[0x3];                                     // 0x153D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Summon_HP_Ratio;                                   // 0x1540(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void Add_Soulstolen_Tag_After_Comeback();
	void BndEvt__BP_Lich_DCGameObjectLink_K2Node_ComponentBoundEvent_3_DCGameObjectLinkComponentUMsgGameLinkerRequest__DelegateSignature(const struct FObjectLinkRequestEvent& RecvEvent, class UObjectLinkMetaDataBlueprint* SendEventParam);
	void Check_Combat_To_Comeback();
	void Check_Mode_Change();
	void Combat_Activated();
	void Comeback_Activated();
	void Comeback_Event_End(bool Arrived_SpawnLocation);
	void ExecuteUbergraph_BP_GhostKing_Common(int32 EntryPoint);
	void GameplayTagUpdated(const struct FGameplayTag& InGameplayTag, int32 InCount);
	void OnMessageReceived_75F8964240716405A440888646BEC122(class UMsgBaseNode* ProxyObject);
	void OnSetAI();
	void Remove_Curse();
	void Reset_Variables();
	void Summon_SmallGhost();
	void Summonee_All_Dead();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_GhostKing_Common_C">();
	}
	static class ABP_GhostKing_Common_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_GhostKing_Common_C>();
	}
};
static_assert(alignof(ABP_GhostKing_Common_C) == 0x000010, "Wrong alignment on ABP_GhostKing_Common_C");
static_assert(sizeof(ABP_GhostKing_Common_C) == 0x001550, "Wrong size on ABP_GhostKing_Common_C");
static_assert(offsetof(ABP_GhostKing_Common_C, UberGraphFrame_BP_GhostKing_Common_C) == 0x0013F8, "Member 'ABP_GhostKing_Common_C::UberGraphFrame_BP_GhostKing_Common_C' has a wrong offset!");
static_assert(offsetof(ABP_GhostKing_Common_C, FXS_GhostKing_DarkFog_Local) == 0x001400, "Member 'ABP_GhostKing_Common_C::FXS_GhostKing_DarkFog_Local' has a wrong offset!");
static_assert(offsetof(ABP_GhostKing_Common_C, BP_DCHitBox2) == 0x001408, "Member 'ABP_GhostKing_Common_C::BP_DCHitBox2' has a wrong offset!");
static_assert(offsetof(ABP_GhostKing_Common_C, BP_DCHitBox1) == 0x001410, "Member 'ABP_GhostKing_Common_C::BP_DCHitBox1' has a wrong offset!");
static_assert(offsetof(ABP_GhostKing_Common_C, BP_DCHitBox) == 0x001418, "Member 'ABP_GhostKing_Common_C::BP_DCHitBox' has a wrong offset!");
static_assert(offsetof(ABP_GhostKing_Common_C, CurseOfChiling_Apply_Cycle) == 0x001420, "Member 'ABP_GhostKing_Common_C::CurseOfChiling_Apply_Cycle' has a wrong offset!");
static_assert(offsetof(ABP_GhostKing_Common_C, Earthquake_Timer) == 0x001428, "Member 'ABP_GhostKing_Common_C::Earthquake_Timer' has a wrong offset!");
static_assert(offsetof(ABP_GhostKing_Common_C, Earthquake_Jump_Height) == 0x001430, "Member 'ABP_GhostKing_Common_C::Earthquake_Jump_Height' has a wrong offset!");
static_assert(offsetof(ABP_GhostKing_Common_C, EatingPlayer) == 0x001438, "Member 'ABP_GhostKing_Common_C::EatingPlayer' has a wrong offset!");
static_assert(offsetof(ABP_GhostKing_Common_C, Earthquake_Launch_XY) == 0x001440, "Member 'ABP_GhostKing_Common_C::Earthquake_Launch_XY' has a wrong offset!");
static_assert(offsetof(ABP_GhostKing_Common_C, Earthquake_Launch_Z) == 0x001448, "Member 'ABP_GhostKing_Common_C::Earthquake_Launch_Z' has a wrong offset!");
static_assert(offsetof(ABP_GhostKing_Common_C, Earthquake_Damage_Ratio_Stack) == 0x001450, "Member 'ABP_GhostKing_Common_C::Earthquake_Damage_Ratio_Stack' has a wrong offset!");
static_assert(offsetof(ABP_GhostKing_Common_C, Earthquake_Damage_Base) == 0x001458, "Member 'ABP_GhostKing_Common_C::Earthquake_Damage_Base' has a wrong offset!");
static_assert(offsetof(ABP_GhostKing_Common_C, Earthquake_Summonee_Count) == 0x001460, "Member 'ABP_GhostKing_Common_C::Earthquake_Summonee_Count' has a wrong offset!");
static_assert(offsetof(ABP_GhostKing_Common_C, Eating_Acceptance_Radius) == 0x001468, "Member 'ABP_GhostKing_Common_C::Eating_Acceptance_Radius' has a wrong offset!");
static_assert(offsetof(ABP_GhostKing_Common_C, Eating_Chase_Time) == 0x001470, "Member 'ABP_GhostKing_Common_C::Eating_Chase_Time' has a wrong offset!");
static_assert(offsetof(ABP_GhostKing_Common_C, Teleport_Launch_XY) == 0x001478, "Member 'ABP_GhostKing_Common_C::Teleport_Launch_XY' has a wrong offset!");
static_assert(offsetof(ABP_GhostKing_Common_C, Teleport_Launch_Z) == 0x001480, "Member 'ABP_GhostKing_Common_C::Teleport_Launch_Z' has a wrong offset!");
static_assert(offsetof(ABP_GhostKing_Common_C, Teleport_Attack_Radius) == 0x001488, "Member 'ABP_GhostKing_Common_C::Teleport_Attack_Radius' has a wrong offset!");
static_assert(offsetof(ABP_GhostKing_Common_C, Teleport_Acceptance_Radius) == 0x001490, "Member 'ABP_GhostKing_Common_C::Teleport_Acceptance_Radius' has a wrong offset!");
static_assert(offsetof(ABP_GhostKing_Common_C, Teleport_Invisible_Time) == 0x001498, "Member 'ABP_GhostKing_Common_C::Teleport_Invisible_Time' has a wrong offset!");
static_assert(offsetof(ABP_GhostKing_Common_C, Teleport_Subtract_Ratio_Per_Success) == 0x0014A0, "Member 'ABP_GhostKing_Common_C::Teleport_Subtract_Ratio_Per_Success' has a wrong offset!");
static_assert(offsetof(ABP_GhostKing_Common_C, Teleport_Damage_Ratio_Stack) == 0x0014A8, "Member 'ABP_GhostKing_Common_C::Teleport_Damage_Ratio_Stack' has a wrong offset!");
static_assert(offsetof(ABP_GhostKing_Common_C, Teleport_Damage_Base) == 0x0014B0, "Member 'ABP_GhostKing_Common_C::Teleport_Damage_Base' has a wrong offset!");
static_assert(offsetof(ABP_GhostKing_Common_C, Scream_HPRatio_Cycle) == 0x0014B8, "Member 'ABP_GhostKing_Common_C::Scream_HPRatio_Cycle' has a wrong offset!");
static_assert(offsetof(ABP_GhostKing_Common_C, Scream_Damage_Ratio_Stack) == 0x0014C0, "Member 'ABP_GhostKing_Common_C::Scream_Damage_Ratio_Stack' has a wrong offset!");
static_assert(offsetof(ABP_GhostKing_Common_C, Scream_Damage_Base) == 0x0014C8, "Member 'ABP_GhostKing_Common_C::Scream_Damage_Base' has a wrong offset!");
static_assert(offsetof(ABP_GhostKing_Common_C, Teleport_Used_For_Earthquake) == 0x0014D0, "Member 'ABP_GhostKing_Common_C::Teleport_Used_For_Earthquake' has a wrong offset!");
static_assert(offsetof(ABP_GhostKing_Common_C, Cursed_Players) == 0x0014D8, "Member 'ABP_GhostKing_Common_C::Cursed_Players' has a wrong offset!");
static_assert(offsetof(ABP_GhostKing_Common_C, Set_First_Timer) == 0x0014E8, "Member 'ABP_GhostKing_Common_C::Set_First_Timer' has a wrong offset!");
static_assert(offsetof(ABP_GhostKing_Common_C, Small_Ghost) == 0x0014F0, "Member 'ABP_GhostKing_Common_C::Small_Ghost' has a wrong offset!");
static_assert(offsetof(ABP_GhostKing_Common_C, MI_Hide) == 0x001500, "Member 'ABP_GhostKing_Common_C::MI_Hide' has a wrong offset!");
static_assert(offsetof(ABP_GhostKing_Common_C, MI_Emerge) == 0x001508, "Member 'ABP_GhostKing_Common_C::MI_Emerge' has a wrong offset!");
static_assert(offsetof(ABP_GhostKing_Common_C, MI_Hide_Crown) == 0x001510, "Member 'ABP_GhostKing_Common_C::MI_Hide_Crown' has a wrong offset!");
static_assert(offsetof(ABP_GhostKing_Common_C, MI_Emerge_Crown) == 0x001518, "Member 'ABP_GhostKing_Common_C::MI_Emerge_Crown' has a wrong offset!");
static_assert(offsetof(ABP_GhostKing_Common_C, Spawner) == 0x001520, "Member 'ABP_GhostKing_Common_C::Spawner' has a wrong offset!");
static_assert(offsetof(ABP_GhostKing_Common_C, In_Monster_Id) == 0x001528, "Member 'ABP_GhostKing_Common_C::In_Monster_Id' has a wrong offset!");
static_assert(offsetof(ABP_GhostKing_Common_C, Summonee_Count) == 0x001538, "Member 'ABP_GhostKing_Common_C::Summonee_Count' has a wrong offset!");
static_assert(offsetof(ABP_GhostKing_Common_C, Vanishing_Form) == 0x00153C, "Member 'ABP_GhostKing_Common_C::Vanishing_Form' has a wrong offset!");
static_assert(offsetof(ABP_GhostKing_Common_C, Summon_HP_Ratio) == 0x001540, "Member 'ABP_GhostKing_Common_C::Summon_HP_Ratio' has a wrong offset!");

}

