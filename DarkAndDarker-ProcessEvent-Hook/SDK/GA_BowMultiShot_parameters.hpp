#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_BowMultiShot

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function GA_BowMultiShot.GA_BowMultiShot_C.AbilityActivated
// 0x00B0 (0x00B0 - 0x0000)
struct GA_BowMultiShot_C_AbilityActivated final
{
public:
	struct FGameplayEventData                     TriggerEventData;                                  // 0x0000(0x00B0)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(GA_BowMultiShot_C_AbilityActivated) == 0x000008, "Wrong alignment on GA_BowMultiShot_C_AbilityActivated");
static_assert(sizeof(GA_BowMultiShot_C_AbilityActivated) == 0x0000B0, "Wrong size on GA_BowMultiShot_C_AbilityActivated");
static_assert(offsetof(GA_BowMultiShot_C_AbilityActivated, TriggerEventData) == 0x000000, "Member 'GA_BowMultiShot_C_AbilityActivated::TriggerEventData' has a wrong offset!");

// Function GA_BowMultiShot.GA_BowMultiShot_C.CreateProjectiles
// 0x00D8 (0x00D8 - 0x0000)
struct GA_BowMultiShot_C_CreateProjectiles final
{
public:
	struct FGameplayTag                           EventTag;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEventData                     EventData;                                         // 0x0008(0x00B0)(BlueprintVisible, BlueprintReadOnly, Parm)
	float                                         FirePower;                                         // 0x00B8(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_47E2[0x4];                                     // 0x00BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                StartLocation;                                     // 0x00C0(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_BowMultiShot_C_CreateProjectiles) == 0x000008, "Wrong alignment on GA_BowMultiShot_C_CreateProjectiles");
static_assert(sizeof(GA_BowMultiShot_C_CreateProjectiles) == 0x0000D8, "Wrong size on GA_BowMultiShot_C_CreateProjectiles");
static_assert(offsetof(GA_BowMultiShot_C_CreateProjectiles, EventTag) == 0x000000, "Member 'GA_BowMultiShot_C_CreateProjectiles::EventTag' has a wrong offset!");
static_assert(offsetof(GA_BowMultiShot_C_CreateProjectiles, EventData) == 0x000008, "Member 'GA_BowMultiShot_C_CreateProjectiles::EventData' has a wrong offset!");
static_assert(offsetof(GA_BowMultiShot_C_CreateProjectiles, FirePower) == 0x0000B8, "Member 'GA_BowMultiShot_C_CreateProjectiles::FirePower' has a wrong offset!");
static_assert(offsetof(GA_BowMultiShot_C_CreateProjectiles, StartLocation) == 0x0000C0, "Member 'GA_BowMultiShot_C_CreateProjectiles::StartLocation' has a wrong offset!");

// Function GA_BowMultiShot.GA_BowMultiShot_C.ExecuteUbergraph_GA_BowMultiShot
// 0x0620 (0x0620 - 0x0000)
struct GA_BowMultiShot_C_ExecuteUbergraph_GA_BowMultiShot final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_47E3[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetAvatarActorFromActorInfo_ReturnValue;  // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorEyesViewPoint_OutLocation;        // 0x0010(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetActorEyesViewPoint_OutRotation;        // 0x0028(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetUpVector_ReturnValue;                  // 0x0040(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x0058(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_47E4[0x7];                                     // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue;          // 0x0078(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x0090(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_Event_EventTag;                             // 0x00AC(0x0008)(NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_47E5[0x4];                                     // 0x00B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayEventData                     K2Node_Event_EventData;                            // 0x00B8(0x00B0)()
	float                                         K2Node_Event_FirePower;                            // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_47E6[0x4];                                     // 0x016C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_Event_StartLocation;                        // 0x0170(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0190(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_RandomFloatInRange_ReturnValue;           // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x01B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_47E7[0x2];                                     // 0x01B2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x01B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x01B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Temp_object_Variable;                              // 0x01C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AProjectileActor*                       K2Node_DynamicCast_AsProjectile_Actor;             // 0x01D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x01E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_47E8[0x7];                                     // 0x01E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_CustomEvent_ProjectileActor;                // 0x01E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         Temp_object_Variable_1;                            // 0x01F0(0x0010)(ConstParm, ReferenceParm)
	TDelegate<void(class AActor* ProjectileActor)> K2Node_CreateDelegate_OutputDelegate;              // 0x0200(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetAvatarActorFromActorInfo_ReturnValue_1; // 0x0210(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x0218(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_47E9[0x7];                                     // 0x0219(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> K2Node_DynamicCast_As_________________;            // 0x0220(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0230(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue;       // 0x0231(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_47EA[0x6];                                     // 0x0232(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue_1;        // 0x0238(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_1;      // 0x0250(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEventData                     K2Node_Event_TriggerEventData;                     // 0x0268(0x00B0)(ConstParm)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x0318(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0330(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0348(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_RotateAngleAxis_ReturnValue;              // 0x0360(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0378(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_2;           // 0x0390(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit;                   // 0x03A8(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue;              // 0x0490(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0491(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0492(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_47EB[0x1];                                     // 0x0493(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0494(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0498(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_47EC[0x4];                                     // 0x049C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x04A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x04B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x04D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x04E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0500(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0508(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0510(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0518(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x0520(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0528(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x052C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0530(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_47ED[0x4];                                     // 0x0534(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0538(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0550(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_1;      // 0x0568(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotFromX_ReturnValue;                 // 0x0580(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_47EE[0x8];                                     // 0x0598(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x05A0(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDCAT_SpawnProjectile*                  CallFunc_SpawnProjectile_ReturnValue;              // 0x0600(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0608(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_47EF[0x7];                                     // 0x0609(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_RandomFloatInRange_Min_ImplicitCast;      // 0x0610(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SpawnProjectile_FirePower_ImplicitCast;   // 0x0618(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RotateAngleAxis_AngleDeg_ImplicitCast;    // 0x061C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_BowMultiShot_C_ExecuteUbergraph_GA_BowMultiShot) == 0x000010, "Wrong alignment on GA_BowMultiShot_C_ExecuteUbergraph_GA_BowMultiShot");
static_assert(sizeof(GA_BowMultiShot_C_ExecuteUbergraph_GA_BowMultiShot) == 0x000620, "Wrong size on GA_BowMultiShot_C_ExecuteUbergraph_GA_BowMultiShot");
static_assert(offsetof(GA_BowMultiShot_C_ExecuteUbergraph_GA_BowMultiShot, EntryPoint) == 0x000000, "Member 'GA_BowMultiShot_C_ExecuteUbergraph_GA_BowMultiShot::EntryPoint' has a wrong offset!");
static_assert(offsetof(GA_BowMultiShot_C_ExecuteUbergraph_GA_BowMultiShot, CallFunc_GetAvatarActorFromActorInfo_ReturnValue) == 0x000008, "Member 'GA_BowMultiShot_C_ExecuteUbergraph_GA_BowMultiShot::CallFunc_GetAvatarActorFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_BowMultiShot_C_ExecuteUbergraph_GA_BowMultiShot, CallFunc_GetActorEyesViewPoint_OutLocation) == 0x000010, "Member 'GA_BowMultiShot_C_ExecuteUbergraph_GA_BowMultiShot::CallFunc_GetActorEyesViewPoint_OutLocation' has a wrong offset!");
static_assert(offsetof(GA_BowMultiShot_C_ExecuteUbergraph_GA_BowMultiShot, CallFunc_GetActorEyesViewPoint_OutRotation) == 0x000028, "Member 'GA_BowMultiShot_C_ExecuteUbergraph_GA_BowMultiShot::CallFunc_GetActorEyesViewPoint_OutRotation' has a wrong offset!");
static_assert(offsetof(GA_BowMultiShot_C_ExecuteUbergraph_GA_BowMultiShot, CallFunc_GetUpVector_ReturnValue) == 0x000040, "Member 'GA_BowMultiShot_C_ExecuteUbergraph_GA_BowMultiShot::CallFunc_GetUpVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_BowMultiShot_C_ExecuteUbergraph_GA_BowMultiShot, CallFunc_GetForwardVector_ReturnValue) == 0x000058, "Member 'GA_BowMultiShot_C_ExecuteUbergraph_GA_BowMultiShot::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_BowMultiShot_C_ExecuteUbergraph_GA_BowMultiShot, Temp_bool_Variable) == 0x000070, "Member 'GA_BowMultiShot_C_ExecuteUbergraph_GA_BowMultiShot::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(GA_BowMultiShot_C_ExecuteUbergraph_GA_BowMultiShot, CallFunc_Conv_DoubleToVector_ReturnValue) == 0x000078, "Member 'GA_BowMultiShot_C_ExecuteUbergraph_GA_BowMultiShot::CallFunc_Conv_DoubleToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_BowMultiShot_C_ExecuteUbergraph_GA_BowMultiShot, CallFunc_Multiply_VectorVector_ReturnValue) == 0x000090, "Member 'GA_BowMultiShot_C_ExecuteUbergraph_GA_BowMultiShot::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_BowMultiShot_C_ExecuteUbergraph_GA_BowMultiShot, Temp_int_Variable) == 0x0000A8, "Member 'GA_BowMultiShot_C_ExecuteUbergraph_GA_BowMultiShot::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(GA_BowMultiShot_C_ExecuteUbergraph_GA_BowMultiShot, K2Node_Event_EventTag) == 0x0000AC, "Member 'GA_BowMultiShot_C_ExecuteUbergraph_GA_BowMultiShot::K2Node_Event_EventTag' has a wrong offset!");
static_assert(offsetof(GA_BowMultiShot_C_ExecuteUbergraph_GA_BowMultiShot, K2Node_Event_EventData) == 0x0000B8, "Member 'GA_BowMultiShot_C_ExecuteUbergraph_GA_BowMultiShot::K2Node_Event_EventData' has a wrong offset!");
static_assert(offsetof(GA_BowMultiShot_C_ExecuteUbergraph_GA_BowMultiShot, K2Node_Event_FirePower) == 0x000168, "Member 'GA_BowMultiShot_C_ExecuteUbergraph_GA_BowMultiShot::K2Node_Event_FirePower' has a wrong offset!");
static_assert(offsetof(GA_BowMultiShot_C_ExecuteUbergraph_GA_BowMultiShot, K2Node_Event_StartLocation) == 0x000170, "Member 'GA_BowMultiShot_C_ExecuteUbergraph_GA_BowMultiShot::K2Node_Event_StartLocation' has a wrong offset!");
static_assert(offsetof(GA_BowMultiShot_C_ExecuteUbergraph_GA_BowMultiShot, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000188, "Member 'GA_BowMultiShot_C_ExecuteUbergraph_GA_BowMultiShot::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_BowMultiShot_C_ExecuteUbergraph_GA_BowMultiShot, CallFunc_Add_VectorVector_ReturnValue) == 0x000190, "Member 'GA_BowMultiShot_C_ExecuteUbergraph_GA_BowMultiShot::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_BowMultiShot_C_ExecuteUbergraph_GA_BowMultiShot, CallFunc_RandomFloatInRange_ReturnValue) == 0x0001A8, "Member 'GA_BowMultiShot_C_ExecuteUbergraph_GA_BowMultiShot::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_BowMultiShot_C_ExecuteUbergraph_GA_BowMultiShot, K2Node_SwitchInteger_CmpSuccess) == 0x0001B0, "Member 'GA_BowMultiShot_C_ExecuteUbergraph_GA_BowMultiShot::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(GA_BowMultiShot_C_ExecuteUbergraph_GA_BowMultiShot, CallFunc_LessEqual_IntInt_ReturnValue) == 0x0001B1, "Member 'GA_BowMultiShot_C_ExecuteUbergraph_GA_BowMultiShot::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_BowMultiShot_C_ExecuteUbergraph_GA_BowMultiShot, CallFunc_Add_IntInt_ReturnValue) == 0x0001B4, "Member 'GA_BowMultiShot_C_ExecuteUbergraph_GA_BowMultiShot::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_BowMultiShot_C_ExecuteUbergraph_GA_BowMultiShot, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x0001B8, "Member 'GA_BowMultiShot_C_ExecuteUbergraph_GA_BowMultiShot::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_BowMultiShot_C_ExecuteUbergraph_GA_BowMultiShot, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x0001C0, "Member 'GA_BowMultiShot_C_ExecuteUbergraph_GA_BowMultiShot::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_BowMultiShot_C_ExecuteUbergraph_GA_BowMultiShot, Temp_object_Variable) == 0x0001C8, "Member 'GA_BowMultiShot_C_ExecuteUbergraph_GA_BowMultiShot::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(GA_BowMultiShot_C_ExecuteUbergraph_GA_BowMultiShot, CallFunc_Add_DoubleDouble_ReturnValue) == 0x0001D0, "Member 'GA_BowMultiShot_C_ExecuteUbergraph_GA_BowMultiShot::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_BowMultiShot_C_ExecuteUbergraph_GA_BowMultiShot, K2Node_DynamicCast_AsProjectile_Actor) == 0x0001D8, "Member 'GA_BowMultiShot_C_ExecuteUbergraph_GA_BowMultiShot::K2Node_DynamicCast_AsProjectile_Actor' has a wrong offset!");
static_assert(offsetof(GA_BowMultiShot_C_ExecuteUbergraph_GA_BowMultiShot, K2Node_DynamicCast_bSuccess) == 0x0001E0, "Member 'GA_BowMultiShot_C_ExecuteUbergraph_GA_BowMultiShot::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GA_BowMultiShot_C_ExecuteUbergraph_GA_BowMultiShot, K2Node_CustomEvent_ProjectileActor) == 0x0001E8, "Member 'GA_BowMultiShot_C_ExecuteUbergraph_GA_BowMultiShot::K2Node_CustomEvent_ProjectileActor' has a wrong offset!");
static_assert(offsetof(GA_BowMultiShot_C_ExecuteUbergraph_GA_BowMultiShot, Temp_object_Variable_1) == 0x0001F0, "Member 'GA_BowMultiShot_C_ExecuteUbergraph_GA_BowMultiShot::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(GA_BowMultiShot_C_ExecuteUbergraph_GA_BowMultiShot, K2Node_CreateDelegate_OutputDelegate) == 0x000200, "Member 'GA_BowMultiShot_C_ExecuteUbergraph_GA_BowMultiShot::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(GA_BowMultiShot_C_ExecuteUbergraph_GA_BowMultiShot, CallFunc_GetAvatarActorFromActorInfo_ReturnValue_1) == 0x000210, "Member 'GA_BowMultiShot_C_ExecuteUbergraph_GA_BowMultiShot::CallFunc_GetAvatarActorFromActorInfo_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_BowMultiShot_C_ExecuteUbergraph_GA_BowMultiShot, CallFunc_IsValidClass_ReturnValue) == 0x000218, "Member 'GA_BowMultiShot_C_ExecuteUbergraph_GA_BowMultiShot::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_BowMultiShot_C_ExecuteUbergraph_GA_BowMultiShot, K2Node_DynamicCast_As_________________) == 0x000220, "Member 'GA_BowMultiShot_C_ExecuteUbergraph_GA_BowMultiShot::K2Node_DynamicCast_As_________________' has a wrong offset!");
static_assert(offsetof(GA_BowMultiShot_C_ExecuteUbergraph_GA_BowMultiShot, K2Node_DynamicCast_bSuccess_1) == 0x000230, "Member 'GA_BowMultiShot_C_ExecuteUbergraph_GA_BowMultiShot::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(GA_BowMultiShot_C_ExecuteUbergraph_GA_BowMultiShot, CallFunc_HasMatchingGameplayTag_ReturnValue) == 0x000231, "Member 'GA_BowMultiShot_C_ExecuteUbergraph_GA_BowMultiShot::CallFunc_HasMatchingGameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_BowMultiShot_C_ExecuteUbergraph_GA_BowMultiShot, CallFunc_Conv_DoubleToVector_ReturnValue_1) == 0x000238, "Member 'GA_BowMultiShot_C_ExecuteUbergraph_GA_BowMultiShot::CallFunc_Conv_DoubleToVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_BowMultiShot_C_ExecuteUbergraph_GA_BowMultiShot, CallFunc_Multiply_VectorVector_ReturnValue_1) == 0x000250, "Member 'GA_BowMultiShot_C_ExecuteUbergraph_GA_BowMultiShot::CallFunc_Multiply_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_BowMultiShot_C_ExecuteUbergraph_GA_BowMultiShot, K2Node_Event_TriggerEventData) == 0x000268, "Member 'GA_BowMultiShot_C_ExecuteUbergraph_GA_BowMultiShot::K2Node_Event_TriggerEventData' has a wrong offset!");
static_assert(offsetof(GA_BowMultiShot_C_ExecuteUbergraph_GA_BowMultiShot, CallFunc_Add_VectorVector_ReturnValue_1) == 0x000318, "Member 'GA_BowMultiShot_C_ExecuteUbergraph_GA_BowMultiShot::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_BowMultiShot_C_ExecuteUbergraph_GA_BowMultiShot, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000330, "Member 'GA_BowMultiShot_C_ExecuteUbergraph_GA_BowMultiShot::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_BowMultiShot_C_ExecuteUbergraph_GA_BowMultiShot, CallFunc_Normal_ReturnValue) == 0x000348, "Member 'GA_BowMultiShot_C_ExecuteUbergraph_GA_BowMultiShot::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_BowMultiShot_C_ExecuteUbergraph_GA_BowMultiShot, CallFunc_RotateAngleAxis_ReturnValue) == 0x000360, "Member 'GA_BowMultiShot_C_ExecuteUbergraph_GA_BowMultiShot::CallFunc_RotateAngleAxis_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_BowMultiShot_C_ExecuteUbergraph_GA_BowMultiShot, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000378, "Member 'GA_BowMultiShot_C_ExecuteUbergraph_GA_BowMultiShot::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_BowMultiShot_C_ExecuteUbergraph_GA_BowMultiShot, CallFunc_Add_VectorVector_ReturnValue_2) == 0x000390, "Member 'GA_BowMultiShot_C_ExecuteUbergraph_GA_BowMultiShot::CallFunc_Add_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GA_BowMultiShot_C_ExecuteUbergraph_GA_BowMultiShot, CallFunc_LineTraceSingle_OutHit) == 0x0003A8, "Member 'GA_BowMultiShot_C_ExecuteUbergraph_GA_BowMultiShot::CallFunc_LineTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(GA_BowMultiShot_C_ExecuteUbergraph_GA_BowMultiShot, CallFunc_LineTraceSingle_ReturnValue) == 0x000490, "Member 'GA_BowMultiShot_C_ExecuteUbergraph_GA_BowMultiShot::CallFunc_LineTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_BowMultiShot_C_ExecuteUbergraph_GA_BowMultiShot, CallFunc_BreakHitResult_bBlockingHit) == 0x000491, "Member 'GA_BowMultiShot_C_ExecuteUbergraph_GA_BowMultiShot::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(GA_BowMultiShot_C_ExecuteUbergraph_GA_BowMultiShot, CallFunc_BreakHitResult_bInitialOverlap) == 0x000492, "Member 'GA_BowMultiShot_C_ExecuteUbergraph_GA_BowMultiShot::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(GA_BowMultiShot_C_ExecuteUbergraph_GA_BowMultiShot, CallFunc_BreakHitResult_Time) == 0x000494, "Member 'GA_BowMultiShot_C_ExecuteUbergraph_GA_BowMultiShot::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(GA_BowMultiShot_C_ExecuteUbergraph_GA_BowMultiShot, CallFunc_BreakHitResult_Distance) == 0x000498, "Member 'GA_BowMultiShot_C_ExecuteUbergraph_GA_BowMultiShot::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(GA_BowMultiShot_C_ExecuteUbergraph_GA_BowMultiShot, CallFunc_BreakHitResult_Location) == 0x0004A0, "Member 'GA_BowMultiShot_C_ExecuteUbergraph_GA_BowMultiShot::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(GA_BowMultiShot_C_ExecuteUbergraph_GA_BowMultiShot, CallFunc_BreakHitResult_ImpactPoint) == 0x0004B8, "Member 'GA_BowMultiShot_C_ExecuteUbergraph_GA_BowMultiShot::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(GA_BowMultiShot_C_ExecuteUbergraph_GA_BowMultiShot, CallFunc_BreakHitResult_Normal) == 0x0004D0, "Member 'GA_BowMultiShot_C_ExecuteUbergraph_GA_BowMultiShot::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(GA_BowMultiShot_C_ExecuteUbergraph_GA_BowMultiShot, CallFunc_BreakHitResult_ImpactNormal) == 0x0004E8, "Member 'GA_BowMultiShot_C_ExecuteUbergraph_GA_BowMultiShot::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(GA_BowMultiShot_C_ExecuteUbergraph_GA_BowMultiShot, CallFunc_BreakHitResult_PhysMat) == 0x000500, "Member 'GA_BowMultiShot_C_ExecuteUbergraph_GA_BowMultiShot::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(GA_BowMultiShot_C_ExecuteUbergraph_GA_BowMultiShot, CallFunc_BreakHitResult_HitActor) == 0x000508, "Member 'GA_BowMultiShot_C_ExecuteUbergraph_GA_BowMultiShot::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(GA_BowMultiShot_C_ExecuteUbergraph_GA_BowMultiShot, CallFunc_BreakHitResult_HitComponent) == 0x000510, "Member 'GA_BowMultiShot_C_ExecuteUbergraph_GA_BowMultiShot::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(GA_BowMultiShot_C_ExecuteUbergraph_GA_BowMultiShot, CallFunc_BreakHitResult_HitBoneName) == 0x000518, "Member 'GA_BowMultiShot_C_ExecuteUbergraph_GA_BowMultiShot::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(GA_BowMultiShot_C_ExecuteUbergraph_GA_BowMultiShot, CallFunc_BreakHitResult_BoneName) == 0x000520, "Member 'GA_BowMultiShot_C_ExecuteUbergraph_GA_BowMultiShot::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(GA_BowMultiShot_C_ExecuteUbergraph_GA_BowMultiShot, CallFunc_BreakHitResult_HitItem) == 0x000528, "Member 'GA_BowMultiShot_C_ExecuteUbergraph_GA_BowMultiShot::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(GA_BowMultiShot_C_ExecuteUbergraph_GA_BowMultiShot, CallFunc_BreakHitResult_ElementIndex) == 0x00052C, "Member 'GA_BowMultiShot_C_ExecuteUbergraph_GA_BowMultiShot::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(GA_BowMultiShot_C_ExecuteUbergraph_GA_BowMultiShot, CallFunc_BreakHitResult_FaceIndex) == 0x000530, "Member 'GA_BowMultiShot_C_ExecuteUbergraph_GA_BowMultiShot::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(GA_BowMultiShot_C_ExecuteUbergraph_GA_BowMultiShot, CallFunc_BreakHitResult_TraceStart) == 0x000538, "Member 'GA_BowMultiShot_C_ExecuteUbergraph_GA_BowMultiShot::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(GA_BowMultiShot_C_ExecuteUbergraph_GA_BowMultiShot, CallFunc_BreakHitResult_TraceEnd) == 0x000550, "Member 'GA_BowMultiShot_C_ExecuteUbergraph_GA_BowMultiShot::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(GA_BowMultiShot_C_ExecuteUbergraph_GA_BowMultiShot, CallFunc_Subtract_VectorVector_ReturnValue_1) == 0x000568, "Member 'GA_BowMultiShot_C_ExecuteUbergraph_GA_BowMultiShot::CallFunc_Subtract_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_BowMultiShot_C_ExecuteUbergraph_GA_BowMultiShot, CallFunc_MakeRotFromX_ReturnValue) == 0x000580, "Member 'GA_BowMultiShot_C_ExecuteUbergraph_GA_BowMultiShot::CallFunc_MakeRotFromX_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_BowMultiShot_C_ExecuteUbergraph_GA_BowMultiShot, CallFunc_MakeTransform_ReturnValue) == 0x0005A0, "Member 'GA_BowMultiShot_C_ExecuteUbergraph_GA_BowMultiShot::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_BowMultiShot_C_ExecuteUbergraph_GA_BowMultiShot, CallFunc_SpawnProjectile_ReturnValue) == 0x000600, "Member 'GA_BowMultiShot_C_ExecuteUbergraph_GA_BowMultiShot::CallFunc_SpawnProjectile_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_BowMultiShot_C_ExecuteUbergraph_GA_BowMultiShot, CallFunc_IsValid_ReturnValue) == 0x000608, "Member 'GA_BowMultiShot_C_ExecuteUbergraph_GA_BowMultiShot::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_BowMultiShot_C_ExecuteUbergraph_GA_BowMultiShot, CallFunc_RandomFloatInRange_Min_ImplicitCast) == 0x000610, "Member 'GA_BowMultiShot_C_ExecuteUbergraph_GA_BowMultiShot::CallFunc_RandomFloatInRange_Min_ImplicitCast' has a wrong offset!");
static_assert(offsetof(GA_BowMultiShot_C_ExecuteUbergraph_GA_BowMultiShot, CallFunc_SpawnProjectile_FirePower_ImplicitCast) == 0x000618, "Member 'GA_BowMultiShot_C_ExecuteUbergraph_GA_BowMultiShot::CallFunc_SpawnProjectile_FirePower_ImplicitCast' has a wrong offset!");
static_assert(offsetof(GA_BowMultiShot_C_ExecuteUbergraph_GA_BowMultiShot, CallFunc_RotateAngleAxis_AngleDeg_ImplicitCast) == 0x00061C, "Member 'GA_BowMultiShot_C_ExecuteUbergraph_GA_BowMultiShot::CallFunc_RotateAngleAxis_AngleDeg_ImplicitCast' has a wrong offset!");

// Function GA_BowMultiShot.GA_BowMultiShot_C.OnSuccess_AD00B3DA4CDB4D669E483EA55702AB02
// 0x0008 (0x0008 - 0x0000)
struct GA_BowMultiShot_C_OnSuccess_AD00B3DA4CDB4D669E483EA55702AB02 final
{
public:
	class AActor*                                 ProjectileActor;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_BowMultiShot_C_OnSuccess_AD00B3DA4CDB4D669E483EA55702AB02) == 0x000008, "Wrong alignment on GA_BowMultiShot_C_OnSuccess_AD00B3DA4CDB4D669E483EA55702AB02");
static_assert(sizeof(GA_BowMultiShot_C_OnSuccess_AD00B3DA4CDB4D669E483EA55702AB02) == 0x000008, "Wrong size on GA_BowMultiShot_C_OnSuccess_AD00B3DA4CDB4D669E483EA55702AB02");
static_assert(offsetof(GA_BowMultiShot_C_OnSuccess_AD00B3DA4CDB4D669E483EA55702AB02, ProjectileActor) == 0x000000, "Member 'GA_BowMultiShot_C_OnSuccess_AD00B3DA4CDB4D669E483EA55702AB02::ProjectileActor' has a wrong offset!");

}

