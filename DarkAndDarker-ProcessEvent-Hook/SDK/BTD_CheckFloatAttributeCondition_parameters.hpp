#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BTD_CheckFloatAttributeCondition

#include "Basic.hpp"


namespace SDK::Params
{

// Function BTD_CheckFloatAttributeCondition.BTD_CheckFloatAttributeCondition_C.Compare Float Value
// 0x0050 (0x0050 - 0x0000)
struct BTD_CheckFloatAttributeCondition_C_Compare_Float_Value final
{
public:
	double                                        CompareFloatValue;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Bool;                                              // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_DoubleDouble_ReturnValue;        // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue;      // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x000F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetBlackboardValueAsFloat_ReturnValue;    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue_1;          // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue_1;    // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue_1;     // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_1;       // 0x0017(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue_1;  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_DoubleDouble_ReturnValue_1;      // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue_2;    // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C3E[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_EqualEqual_DoubleDouble_B_ImplicitCast;   // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_NotEqual_DoubleDouble_B_ImplicitCast;     // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GreaterEqual_DoubleDouble_B_ImplicitCast; // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Greater_DoubleDouble_B_ImplicitCast;      // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_LessEqual_DoubleDouble_B_ImplicitCast;    // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Less_DoubleDouble_B_ImplicitCast;         // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTD_CheckFloatAttributeCondition_C_Compare_Float_Value) == 0x000008, "Wrong alignment on BTD_CheckFloatAttributeCondition_C_Compare_Float_Value");
static_assert(sizeof(BTD_CheckFloatAttributeCondition_C_Compare_Float_Value) == 0x000050, "Wrong size on BTD_CheckFloatAttributeCondition_C_Compare_Float_Value");
static_assert(offsetof(BTD_CheckFloatAttributeCondition_C_Compare_Float_Value, CompareFloatValue) == 0x000000, "Member 'BTD_CheckFloatAttributeCondition_C_Compare_Float_Value::CompareFloatValue' has a wrong offset!");
static_assert(offsetof(BTD_CheckFloatAttributeCondition_C_Compare_Float_Value, Bool) == 0x000008, "Member 'BTD_CheckFloatAttributeCondition_C_Compare_Float_Value::Bool' has a wrong offset!");
static_assert(offsetof(BTD_CheckFloatAttributeCondition_C_Compare_Float_Value, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000009, "Member 'BTD_CheckFloatAttributeCondition_C_Compare_Float_Value::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTD_CheckFloatAttributeCondition_C_Compare_Float_Value, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x00000A, "Member 'BTD_CheckFloatAttributeCondition_C_Compare_Float_Value::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTD_CheckFloatAttributeCondition_C_Compare_Float_Value, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x00000B, "Member 'BTD_CheckFloatAttributeCondition_C_Compare_Float_Value::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTD_CheckFloatAttributeCondition_C_Compare_Float_Value, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x00000C, "Member 'BTD_CheckFloatAttributeCondition_C_Compare_Float_Value::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTD_CheckFloatAttributeCondition_C_Compare_Float_Value, CallFunc_NotEqual_DoubleDouble_ReturnValue) == 0x00000D, "Member 'BTD_CheckFloatAttributeCondition_C_Compare_Float_Value::CallFunc_NotEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTD_CheckFloatAttributeCondition_C_Compare_Float_Value, CallFunc_EqualEqual_DoubleDouble_ReturnValue) == 0x00000E, "Member 'BTD_CheckFloatAttributeCondition_C_Compare_Float_Value::CallFunc_EqualEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTD_CheckFloatAttributeCondition_C_Compare_Float_Value, K2Node_SwitchEnum_CmpSuccess) == 0x00000F, "Member 'BTD_CheckFloatAttributeCondition_C_Compare_Float_Value::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BTD_CheckFloatAttributeCondition_C_Compare_Float_Value, CallFunc_GetBlackboardValueAsFloat_ReturnValue) == 0x000010, "Member 'BTD_CheckFloatAttributeCondition_C_Compare_Float_Value::CallFunc_GetBlackboardValueAsFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTD_CheckFloatAttributeCondition_C_Compare_Float_Value, CallFunc_Less_DoubleDouble_ReturnValue_1) == 0x000014, "Member 'BTD_CheckFloatAttributeCondition_C_Compare_Float_Value::CallFunc_Less_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BTD_CheckFloatAttributeCondition_C_Compare_Float_Value, CallFunc_EqualEqual_DoubleDouble_ReturnValue_1) == 0x000015, "Member 'BTD_CheckFloatAttributeCondition_C_Compare_Float_Value::CallFunc_EqualEqual_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BTD_CheckFloatAttributeCondition_C_Compare_Float_Value, CallFunc_LessEqual_DoubleDouble_ReturnValue_1) == 0x000016, "Member 'BTD_CheckFloatAttributeCondition_C_Compare_Float_Value::CallFunc_LessEqual_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BTD_CheckFloatAttributeCondition_C_Compare_Float_Value, CallFunc_Greater_DoubleDouble_ReturnValue_1) == 0x000017, "Member 'BTD_CheckFloatAttributeCondition_C_Compare_Float_Value::CallFunc_Greater_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BTD_CheckFloatAttributeCondition_C_Compare_Float_Value, CallFunc_GreaterEqual_DoubleDouble_ReturnValue_1) == 0x000018, "Member 'BTD_CheckFloatAttributeCondition_C_Compare_Float_Value::CallFunc_GreaterEqual_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BTD_CheckFloatAttributeCondition_C_Compare_Float_Value, CallFunc_NotEqual_DoubleDouble_ReturnValue_1) == 0x000019, "Member 'BTD_CheckFloatAttributeCondition_C_Compare_Float_Value::CallFunc_NotEqual_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BTD_CheckFloatAttributeCondition_C_Compare_Float_Value, CallFunc_EqualEqual_DoubleDouble_ReturnValue_2) == 0x00001A, "Member 'BTD_CheckFloatAttributeCondition_C_Compare_Float_Value::CallFunc_EqualEqual_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BTD_CheckFloatAttributeCondition_C_Compare_Float_Value, K2Node_SwitchEnum_CmpSuccess_1) == 0x00001B, "Member 'BTD_CheckFloatAttributeCondition_C_Compare_Float_Value::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(BTD_CheckFloatAttributeCondition_C_Compare_Float_Value, CallFunc_EqualEqual_DoubleDouble_B_ImplicitCast) == 0x000020, "Member 'BTD_CheckFloatAttributeCondition_C_Compare_Float_Value::CallFunc_EqualEqual_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BTD_CheckFloatAttributeCondition_C_Compare_Float_Value, CallFunc_NotEqual_DoubleDouble_B_ImplicitCast) == 0x000028, "Member 'BTD_CheckFloatAttributeCondition_C_Compare_Float_Value::CallFunc_NotEqual_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BTD_CheckFloatAttributeCondition_C_Compare_Float_Value, CallFunc_GreaterEqual_DoubleDouble_B_ImplicitCast) == 0x000030, "Member 'BTD_CheckFloatAttributeCondition_C_Compare_Float_Value::CallFunc_GreaterEqual_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BTD_CheckFloatAttributeCondition_C_Compare_Float_Value, CallFunc_Greater_DoubleDouble_B_ImplicitCast) == 0x000038, "Member 'BTD_CheckFloatAttributeCondition_C_Compare_Float_Value::CallFunc_Greater_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BTD_CheckFloatAttributeCondition_C_Compare_Float_Value, CallFunc_LessEqual_DoubleDouble_B_ImplicitCast) == 0x000040, "Member 'BTD_CheckFloatAttributeCondition_C_Compare_Float_Value::CallFunc_LessEqual_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BTD_CheckFloatAttributeCondition_C_Compare_Float_Value, CallFunc_Less_DoubleDouble_B_ImplicitCast) == 0x000048, "Member 'BTD_CheckFloatAttributeCondition_C_Compare_Float_Value::CallFunc_Less_DoubleDouble_B_ImplicitCast' has a wrong offset!");

// Function BTD_CheckFloatAttributeCondition.BTD_CheckFloatAttributeCondition_C.Compare Move Speed
// 0x0010 (0x0010 - 0x0000)
struct BTD_CheckFloatAttributeCondition_C_Compare_Move_Speed final
{
public:
	double                                        Move_Speed;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Bool;                                              // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTD_CheckFloatAttributeCondition_C_Compare_Move_Speed) == 0x000008, "Wrong alignment on BTD_CheckFloatAttributeCondition_C_Compare_Move_Speed");
static_assert(sizeof(BTD_CheckFloatAttributeCondition_C_Compare_Move_Speed) == 0x000010, "Wrong size on BTD_CheckFloatAttributeCondition_C_Compare_Move_Speed");
static_assert(offsetof(BTD_CheckFloatAttributeCondition_C_Compare_Move_Speed, Move_Speed) == 0x000000, "Member 'BTD_CheckFloatAttributeCondition_C_Compare_Move_Speed::Move_Speed' has a wrong offset!");
static_assert(offsetof(BTD_CheckFloatAttributeCondition_C_Compare_Move_Speed, Bool) == 0x000008, "Member 'BTD_CheckFloatAttributeCondition_C_Compare_Move_Speed::Bool' has a wrong offset!");

// Function BTD_CheckFloatAttributeCondition.BTD_CheckFloatAttributeCondition_C.Compare Primary Attack Power
// 0x0010 (0x0010 - 0x0000)
struct BTD_CheckFloatAttributeCondition_C_Compare_Primary_Attack_Power final
{
public:
	double                                        Primary_Attack_Power;                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Bool;                                              // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTD_CheckFloatAttributeCondition_C_Compare_Primary_Attack_Power) == 0x000008, "Wrong alignment on BTD_CheckFloatAttributeCondition_C_Compare_Primary_Attack_Power");
static_assert(sizeof(BTD_CheckFloatAttributeCondition_C_Compare_Primary_Attack_Power) == 0x000010, "Wrong size on BTD_CheckFloatAttributeCondition_C_Compare_Primary_Attack_Power");
static_assert(offsetof(BTD_CheckFloatAttributeCondition_C_Compare_Primary_Attack_Power, Primary_Attack_Power) == 0x000000, "Member 'BTD_CheckFloatAttributeCondition_C_Compare_Primary_Attack_Power::Primary_Attack_Power' has a wrong offset!");
static_assert(offsetof(BTD_CheckFloatAttributeCondition_C_Compare_Primary_Attack_Power, Bool) == 0x000008, "Member 'BTD_CheckFloatAttributeCondition_C_Compare_Primary_Attack_Power::Bool' has a wrong offset!");

// Function BTD_CheckFloatAttributeCondition.BTD_CheckFloatAttributeCondition_C.Compare Secondary Attack Power
// 0x0010 (0x0010 - 0x0000)
struct BTD_CheckFloatAttributeCondition_C_Compare_Secondary_Attack_Power final
{
public:
	double                                        Secondary_Attack_Power;                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Bool;                                              // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTD_CheckFloatAttributeCondition_C_Compare_Secondary_Attack_Power) == 0x000008, "Wrong alignment on BTD_CheckFloatAttributeCondition_C_Compare_Secondary_Attack_Power");
static_assert(sizeof(BTD_CheckFloatAttributeCondition_C_Compare_Secondary_Attack_Power) == 0x000010, "Wrong size on BTD_CheckFloatAttributeCondition_C_Compare_Secondary_Attack_Power");
static_assert(offsetof(BTD_CheckFloatAttributeCondition_C_Compare_Secondary_Attack_Power, Secondary_Attack_Power) == 0x000000, "Member 'BTD_CheckFloatAttributeCondition_C_Compare_Secondary_Attack_Power::Secondary_Attack_Power' has a wrong offset!");
static_assert(offsetof(BTD_CheckFloatAttributeCondition_C_Compare_Secondary_Attack_Power, Bool) == 0x000008, "Member 'BTD_CheckFloatAttributeCondition_C_Compare_Secondary_Attack_Power::Bool' has a wrong offset!");

// Function BTD_CheckFloatAttributeCondition.BTD_CheckFloatAttributeCondition_C.PerformConditionCheckAI
// 0x0098 (0x0098 - 0x0000)
struct BTD_CheckFloatAttributeCondition_C_PerformConditionCheckAI final
{
public:
	class AAIController*                          OwnerController;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  ControlledPawn;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C3F[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_DCMonsterBaseWithOptions_C*         K2Node_DynamicCast_AsBP_DCMonster_Base_with_Options; // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetFloatAttributeFromAbilitySystemComponent_bSuccessfullyFoundAttribute; // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C40[0x2];                                     // 0x0022(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetFloatAttributeFromAbilitySystemComponent_ReturnValue; // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetFloatAttributeFromAbilitySystemComponent_bSuccessfullyFoundAttribute_1; // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C41[0x3];                                     // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetFloatAttributeFromAbilitySystemComponent_ReturnValue_1; // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Compare_Float_Value_Bool;                 // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Compare_Float_Value_Bool_1;               // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetFloatAttributeFromAbilitySystemComponent_bSuccessfullyFoundAttribute_2; // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C42[0x1];                                     // 0x0033(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetFloatAttributeFromAbilitySystemComponent_ReturnValue_2; // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetFloatAttributeFromAbilitySystemComponent_bSuccessfullyFoundAttribute_3; // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C43[0x3];                                     // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetFloatAttributeFromAbilitySystemComponent_ReturnValue_3; // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Compare_Float_Value_Bool_2;               // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetFloatAttributeFromAbilitySystemComponent_bSuccessfullyFoundAttribute_4; // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C44[0x2];                                     // 0x0042(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetFloatAttributeFromAbilitySystemComponent_ReturnValue_4; // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Compare_Float_Value_Bool_3;               // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C45[0x6];                                     // 0x004A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_IntFloat_ReturnValue;            // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Compare_Float_Value_Bool_4;               // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C46[0x7];                                     // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Compare_Float_Value_CompareFloatValue_ImplicitCast; // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Compare_Float_Value_CompareFloatValue_ImplicitCast_1; // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Compare_Float_Value_CompareFloatValue_ImplicitCast_2; // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_B_ImplicitCast;       // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_A_ImplicitCast;       // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Compare_Float_Value_CompareFloatValue_ImplicitCast_3; // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTD_CheckFloatAttributeCondition_C_PerformConditionCheckAI) == 0x000008, "Wrong alignment on BTD_CheckFloatAttributeCondition_C_PerformConditionCheckAI");
static_assert(sizeof(BTD_CheckFloatAttributeCondition_C_PerformConditionCheckAI) == 0x000098, "Wrong size on BTD_CheckFloatAttributeCondition_C_PerformConditionCheckAI");
static_assert(offsetof(BTD_CheckFloatAttributeCondition_C_PerformConditionCheckAI, OwnerController) == 0x000000, "Member 'BTD_CheckFloatAttributeCondition_C_PerformConditionCheckAI::OwnerController' has a wrong offset!");
static_assert(offsetof(BTD_CheckFloatAttributeCondition_C_PerformConditionCheckAI, ControlledPawn) == 0x000008, "Member 'BTD_CheckFloatAttributeCondition_C_PerformConditionCheckAI::ControlledPawn' has a wrong offset!");
static_assert(offsetof(BTD_CheckFloatAttributeCondition_C_PerformConditionCheckAI, ReturnValue) == 0x000010, "Member 'BTD_CheckFloatAttributeCondition_C_PerformConditionCheckAI::ReturnValue' has a wrong offset!");
static_assert(offsetof(BTD_CheckFloatAttributeCondition_C_PerformConditionCheckAI, K2Node_DynamicCast_AsBP_DCMonster_Base_with_Options) == 0x000018, "Member 'BTD_CheckFloatAttributeCondition_C_PerformConditionCheckAI::K2Node_DynamicCast_AsBP_DCMonster_Base_with_Options' has a wrong offset!");
static_assert(offsetof(BTD_CheckFloatAttributeCondition_C_PerformConditionCheckAI, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BTD_CheckFloatAttributeCondition_C_PerformConditionCheckAI::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BTD_CheckFloatAttributeCondition_C_PerformConditionCheckAI, CallFunc_GetFloatAttributeFromAbilitySystemComponent_bSuccessfullyFoundAttribute) == 0x000021, "Member 'BTD_CheckFloatAttributeCondition_C_PerformConditionCheckAI::CallFunc_GetFloatAttributeFromAbilitySystemComponent_bSuccessfullyFoundAttribute' has a wrong offset!");
static_assert(offsetof(BTD_CheckFloatAttributeCondition_C_PerformConditionCheckAI, CallFunc_GetFloatAttributeFromAbilitySystemComponent_ReturnValue) == 0x000024, "Member 'BTD_CheckFloatAttributeCondition_C_PerformConditionCheckAI::CallFunc_GetFloatAttributeFromAbilitySystemComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTD_CheckFloatAttributeCondition_C_PerformConditionCheckAI, CallFunc_GetFloatAttributeFromAbilitySystemComponent_bSuccessfullyFoundAttribute_1) == 0x000028, "Member 'BTD_CheckFloatAttributeCondition_C_PerformConditionCheckAI::CallFunc_GetFloatAttributeFromAbilitySystemComponent_bSuccessfullyFoundAttribute_1' has a wrong offset!");
static_assert(offsetof(BTD_CheckFloatAttributeCondition_C_PerformConditionCheckAI, CallFunc_GetFloatAttributeFromAbilitySystemComponent_ReturnValue_1) == 0x00002C, "Member 'BTD_CheckFloatAttributeCondition_C_PerformConditionCheckAI::CallFunc_GetFloatAttributeFromAbilitySystemComponent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BTD_CheckFloatAttributeCondition_C_PerformConditionCheckAI, CallFunc_Compare_Float_Value_Bool) == 0x000030, "Member 'BTD_CheckFloatAttributeCondition_C_PerformConditionCheckAI::CallFunc_Compare_Float_Value_Bool' has a wrong offset!");
static_assert(offsetof(BTD_CheckFloatAttributeCondition_C_PerformConditionCheckAI, CallFunc_Compare_Float_Value_Bool_1) == 0x000031, "Member 'BTD_CheckFloatAttributeCondition_C_PerformConditionCheckAI::CallFunc_Compare_Float_Value_Bool_1' has a wrong offset!");
static_assert(offsetof(BTD_CheckFloatAttributeCondition_C_PerformConditionCheckAI, CallFunc_GetFloatAttributeFromAbilitySystemComponent_bSuccessfullyFoundAttribute_2) == 0x000032, "Member 'BTD_CheckFloatAttributeCondition_C_PerformConditionCheckAI::CallFunc_GetFloatAttributeFromAbilitySystemComponent_bSuccessfullyFoundAttribute_2' has a wrong offset!");
static_assert(offsetof(BTD_CheckFloatAttributeCondition_C_PerformConditionCheckAI, CallFunc_GetFloatAttributeFromAbilitySystemComponent_ReturnValue_2) == 0x000034, "Member 'BTD_CheckFloatAttributeCondition_C_PerformConditionCheckAI::CallFunc_GetFloatAttributeFromAbilitySystemComponent_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BTD_CheckFloatAttributeCondition_C_PerformConditionCheckAI, CallFunc_GetFloatAttributeFromAbilitySystemComponent_bSuccessfullyFoundAttribute_3) == 0x000038, "Member 'BTD_CheckFloatAttributeCondition_C_PerformConditionCheckAI::CallFunc_GetFloatAttributeFromAbilitySystemComponent_bSuccessfullyFoundAttribute_3' has a wrong offset!");
static_assert(offsetof(BTD_CheckFloatAttributeCondition_C_PerformConditionCheckAI, CallFunc_GetFloatAttributeFromAbilitySystemComponent_ReturnValue_3) == 0x00003C, "Member 'BTD_CheckFloatAttributeCondition_C_PerformConditionCheckAI::CallFunc_GetFloatAttributeFromAbilitySystemComponent_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BTD_CheckFloatAttributeCondition_C_PerformConditionCheckAI, CallFunc_Compare_Float_Value_Bool_2) == 0x000040, "Member 'BTD_CheckFloatAttributeCondition_C_PerformConditionCheckAI::CallFunc_Compare_Float_Value_Bool_2' has a wrong offset!");
static_assert(offsetof(BTD_CheckFloatAttributeCondition_C_PerformConditionCheckAI, CallFunc_GetFloatAttributeFromAbilitySystemComponent_bSuccessfullyFoundAttribute_4) == 0x000041, "Member 'BTD_CheckFloatAttributeCondition_C_PerformConditionCheckAI::CallFunc_GetFloatAttributeFromAbilitySystemComponent_bSuccessfullyFoundAttribute_4' has a wrong offset!");
static_assert(offsetof(BTD_CheckFloatAttributeCondition_C_PerformConditionCheckAI, CallFunc_GetFloatAttributeFromAbilitySystemComponent_ReturnValue_4) == 0x000044, "Member 'BTD_CheckFloatAttributeCondition_C_PerformConditionCheckAI::CallFunc_GetFloatAttributeFromAbilitySystemComponent_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BTD_CheckFloatAttributeCondition_C_PerformConditionCheckAI, CallFunc_Compare_Float_Value_Bool_3) == 0x000048, "Member 'BTD_CheckFloatAttributeCondition_C_PerformConditionCheckAI::CallFunc_Compare_Float_Value_Bool_3' has a wrong offset!");
static_assert(offsetof(BTD_CheckFloatAttributeCondition_C_PerformConditionCheckAI, K2Node_SwitchEnum_CmpSuccess) == 0x000049, "Member 'BTD_CheckFloatAttributeCondition_C_PerformConditionCheckAI::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BTD_CheckFloatAttributeCondition_C_PerformConditionCheckAI, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000050, "Member 'BTD_CheckFloatAttributeCondition_C_PerformConditionCheckAI::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTD_CheckFloatAttributeCondition_C_PerformConditionCheckAI, CallFunc_Multiply_IntFloat_ReturnValue) == 0x000058, "Member 'BTD_CheckFloatAttributeCondition_C_PerformConditionCheckAI::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTD_CheckFloatAttributeCondition_C_PerformConditionCheckAI, CallFunc_Compare_Float_Value_Bool_4) == 0x000060, "Member 'BTD_CheckFloatAttributeCondition_C_PerformConditionCheckAI::CallFunc_Compare_Float_Value_Bool_4' has a wrong offset!");
static_assert(offsetof(BTD_CheckFloatAttributeCondition_C_PerformConditionCheckAI, CallFunc_Compare_Float_Value_CompareFloatValue_ImplicitCast) == 0x000068, "Member 'BTD_CheckFloatAttributeCondition_C_PerformConditionCheckAI::CallFunc_Compare_Float_Value_CompareFloatValue_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BTD_CheckFloatAttributeCondition_C_PerformConditionCheckAI, CallFunc_Compare_Float_Value_CompareFloatValue_ImplicitCast_1) == 0x000070, "Member 'BTD_CheckFloatAttributeCondition_C_PerformConditionCheckAI::CallFunc_Compare_Float_Value_CompareFloatValue_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BTD_CheckFloatAttributeCondition_C_PerformConditionCheckAI, CallFunc_Compare_Float_Value_CompareFloatValue_ImplicitCast_2) == 0x000078, "Member 'BTD_CheckFloatAttributeCondition_C_PerformConditionCheckAI::CallFunc_Compare_Float_Value_CompareFloatValue_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(BTD_CheckFloatAttributeCondition_C_PerformConditionCheckAI, CallFunc_Divide_DoubleDouble_B_ImplicitCast) == 0x000080, "Member 'BTD_CheckFloatAttributeCondition_C_PerformConditionCheckAI::CallFunc_Divide_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BTD_CheckFloatAttributeCondition_C_PerformConditionCheckAI, CallFunc_Divide_DoubleDouble_A_ImplicitCast) == 0x000088, "Member 'BTD_CheckFloatAttributeCondition_C_PerformConditionCheckAI::CallFunc_Divide_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BTD_CheckFloatAttributeCondition_C_PerformConditionCheckAI, CallFunc_Compare_Float_Value_CompareFloatValue_ImplicitCast_3) == 0x000090, "Member 'BTD_CheckFloatAttributeCondition_C_PerformConditionCheckAI::CallFunc_Compare_Float_Value_CompareFloatValue_ImplicitCast_3' has a wrong offset!");

}

