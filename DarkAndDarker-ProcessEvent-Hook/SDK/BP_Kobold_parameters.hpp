#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Kobold

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"
#include "DungeonCrawler_structs.hpp"
#include "GameplayAbilities_structs.hpp"


namespace SDK::Params
{

// Function BP_Kobold.BP_Kobold_C.ExecuteUbergraph_BP_Kobold
// 0x08A0 (0x08A0 - 0x0000)
struct BP_Kobold_C_ExecuteUbergraph_BP_Kobold final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4FB9[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue;                          // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4FBA[0x3];                                     // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4FBB[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAbilityAsync_WaitGameplayTagRemoved*   CallFunc_WaitGameplayTagRemoveFromActor_ReturnValue; // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_DCMonsterBaseWithOptions_C*         K2Node_DynamicCast_AsBP_DCMonster_Base_with_Options; // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4FBC[0x6];                                     // 0x0042(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> K2Node_DynamicCast_As_________________;            // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue;       // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetModeGameplayTag_ReturnValue;           // 0x005A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4FBD[0x5];                                     // 0x005B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMsgGASAttributeNotify                 K2Node_Event_InMsg;                                // 0x0060(0x0720)(ConstParm, ContainsInstancedReference)
	class AActor*                                 CallFunc_DCEffectContextGetInstigatorActor_ReturnValue; // 0x0780(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0788(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4FBE[0x7];                                     // 0x0789(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_DCEffectContextGetInstigatorActor_ReturnValue_1; // 0x0790(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue_1;          // 0x0798(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4FBF[0x7];                                     // 0x0799(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayEventData                     K2Node_MakeStruct_GameplayEventData;               // 0x07A0(0x00B0)()
	bool                                          CallFunc_EqualEqual_GameplayAttributeGameplayAttribute_ReturnValue; // 0x0850(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue_1;     // 0x0851(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4FC0[0x2];                                     // 0x0852(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0854(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_Event_InGameplayTag;                        // 0x0864(0x0008)(ConstParm, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_InCount;                              // 0x086C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0870(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_GameplayTag_ReturnValue;       // 0x0871(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0872(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4FC1[0x5];                                     // 0x0873(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class ADCCharacterBase*                       K2Node_DynamicCast_AsDCCharacter_Base;             // 0x0878(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0880(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4FC2[0x3];                                     // 0x0881(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x0884(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Less_DoubleDouble_A_ImplicitCast;         // 0x0888(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Less_DoubleDouble_A_ImplicitCast_1;       // 0x0890(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Less_DoubleDouble_B_ImplicitCast;         // 0x0898(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Kobold_C_ExecuteUbergraph_BP_Kobold) == 0x000008, "Wrong alignment on BP_Kobold_C_ExecuteUbergraph_BP_Kobold");
static_assert(sizeof(BP_Kobold_C_ExecuteUbergraph_BP_Kobold) == 0x0008A0, "Wrong size on BP_Kobold_C_ExecuteUbergraph_BP_Kobold");
static_assert(offsetof(BP_Kobold_C_ExecuteUbergraph_BP_Kobold, EntryPoint) == 0x000000, "Member 'BP_Kobold_C_ExecuteUbergraph_BP_Kobold::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_Kobold_C_ExecuteUbergraph_BP_Kobold, Temp_bool_Variable) == 0x000004, "Member 'BP_Kobold_C_ExecuteUbergraph_BP_Kobold::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_Kobold_C_ExecuteUbergraph_BP_Kobold, CallFunc_Array_Length_ReturnValue) == 0x000008, "Member 'BP_Kobold_C_ExecuteUbergraph_BP_Kobold::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Kobold_C_ExecuteUbergraph_BP_Kobold, CallFunc_Subtract_IntInt_ReturnValue) == 0x00000C, "Member 'BP_Kobold_C_ExecuteUbergraph_BP_Kobold::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Kobold_C_ExecuteUbergraph_BP_Kobold, CallFunc_Max_ReturnValue) == 0x000010, "Member 'BP_Kobold_C_ExecuteUbergraph_BP_Kobold::CallFunc_Max_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Kobold_C_ExecuteUbergraph_BP_Kobold, Temp_int_Loop_Counter_Variable) == 0x000014, "Member 'BP_Kobold_C_ExecuteUbergraph_BP_Kobold::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_Kobold_C_ExecuteUbergraph_BP_Kobold, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x000018, "Member 'BP_Kobold_C_ExecuteUbergraph_BP_Kobold::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Kobold_C_ExecuteUbergraph_BP_Kobold, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x00001C, "Member 'BP_Kobold_C_ExecuteUbergraph_BP_Kobold::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Kobold_C_ExecuteUbergraph_BP_Kobold, Temp_int_Array_Index_Variable) == 0x000020, "Member 'BP_Kobold_C_ExecuteUbergraph_BP_Kobold::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_Kobold_C_ExecuteUbergraph_BP_Kobold, CallFunc_WaitGameplayTagRemoveFromActor_ReturnValue) == 0x000028, "Member 'BP_Kobold_C_ExecuteUbergraph_BP_Kobold::CallFunc_WaitGameplayTagRemoveFromActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Kobold_C_ExecuteUbergraph_BP_Kobold, CallFunc_Array_Get_Item) == 0x000030, "Member 'BP_Kobold_C_ExecuteUbergraph_BP_Kobold::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Kobold_C_ExecuteUbergraph_BP_Kobold, K2Node_DynamicCast_AsBP_DCMonster_Base_with_Options) == 0x000038, "Member 'BP_Kobold_C_ExecuteUbergraph_BP_Kobold::K2Node_DynamicCast_AsBP_DCMonster_Base_with_Options' has a wrong offset!");
static_assert(offsetof(BP_Kobold_C_ExecuteUbergraph_BP_Kobold, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'BP_Kobold_C_ExecuteUbergraph_BP_Kobold::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Kobold_C_ExecuteUbergraph_BP_Kobold, CallFunc_IsValid_ReturnValue) == 0x000041, "Member 'BP_Kobold_C_ExecuteUbergraph_BP_Kobold::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Kobold_C_ExecuteUbergraph_BP_Kobold, K2Node_DynamicCast_As_________________) == 0x000048, "Member 'BP_Kobold_C_ExecuteUbergraph_BP_Kobold::K2Node_DynamicCast_As_________________' has a wrong offset!");
static_assert(offsetof(BP_Kobold_C_ExecuteUbergraph_BP_Kobold, K2Node_DynamicCast_bSuccess_1) == 0x000058, "Member 'BP_Kobold_C_ExecuteUbergraph_BP_Kobold::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_Kobold_C_ExecuteUbergraph_BP_Kobold, CallFunc_HasMatchingGameplayTag_ReturnValue) == 0x000059, "Member 'BP_Kobold_C_ExecuteUbergraph_BP_Kobold::CallFunc_HasMatchingGameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Kobold_C_ExecuteUbergraph_BP_Kobold, CallFunc_SetModeGameplayTag_ReturnValue) == 0x00005A, "Member 'BP_Kobold_C_ExecuteUbergraph_BP_Kobold::CallFunc_SetModeGameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Kobold_C_ExecuteUbergraph_BP_Kobold, K2Node_Event_InMsg) == 0x000060, "Member 'BP_Kobold_C_ExecuteUbergraph_BP_Kobold::K2Node_Event_InMsg' has a wrong offset!");
static_assert(offsetof(BP_Kobold_C_ExecuteUbergraph_BP_Kobold, CallFunc_DCEffectContextGetInstigatorActor_ReturnValue) == 0x000780, "Member 'BP_Kobold_C_ExecuteUbergraph_BP_Kobold::CallFunc_DCEffectContextGetInstigatorActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Kobold_C_ExecuteUbergraph_BP_Kobold, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000788, "Member 'BP_Kobold_C_ExecuteUbergraph_BP_Kobold::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Kobold_C_ExecuteUbergraph_BP_Kobold, CallFunc_DCEffectContextGetInstigatorActor_ReturnValue_1) == 0x000790, "Member 'BP_Kobold_C_ExecuteUbergraph_BP_Kobold::CallFunc_DCEffectContextGetInstigatorActor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Kobold_C_ExecuteUbergraph_BP_Kobold, CallFunc_Less_DoubleDouble_ReturnValue_1) == 0x000798, "Member 'BP_Kobold_C_ExecuteUbergraph_BP_Kobold::CallFunc_Less_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Kobold_C_ExecuteUbergraph_BP_Kobold, K2Node_MakeStruct_GameplayEventData) == 0x0007A0, "Member 'BP_Kobold_C_ExecuteUbergraph_BP_Kobold::K2Node_MakeStruct_GameplayEventData' has a wrong offset!");
static_assert(offsetof(BP_Kobold_C_ExecuteUbergraph_BP_Kobold, CallFunc_EqualEqual_GameplayAttributeGameplayAttribute_ReturnValue) == 0x000850, "Member 'BP_Kobold_C_ExecuteUbergraph_BP_Kobold::CallFunc_EqualEqual_GameplayAttributeGameplayAttribute_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Kobold_C_ExecuteUbergraph_BP_Kobold, CallFunc_HasMatchingGameplayTag_ReturnValue_1) == 0x000851, "Member 'BP_Kobold_C_ExecuteUbergraph_BP_Kobold::CallFunc_HasMatchingGameplayTag_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Kobold_C_ExecuteUbergraph_BP_Kobold, K2Node_CreateDelegate_OutputDelegate) == 0x000854, "Member 'BP_Kobold_C_ExecuteUbergraph_BP_Kobold::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_Kobold_C_ExecuteUbergraph_BP_Kobold, K2Node_Event_InGameplayTag) == 0x000864, "Member 'BP_Kobold_C_ExecuteUbergraph_BP_Kobold::K2Node_Event_InGameplayTag' has a wrong offset!");
static_assert(offsetof(BP_Kobold_C_ExecuteUbergraph_BP_Kobold, K2Node_Event_InCount) == 0x00086C, "Member 'BP_Kobold_C_ExecuteUbergraph_BP_Kobold::K2Node_Event_InCount' has a wrong offset!");
static_assert(offsetof(BP_Kobold_C_ExecuteUbergraph_BP_Kobold, CallFunc_Greater_IntInt_ReturnValue) == 0x000870, "Member 'BP_Kobold_C_ExecuteUbergraph_BP_Kobold::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Kobold_C_ExecuteUbergraph_BP_Kobold, CallFunc_EqualEqual_GameplayTag_ReturnValue) == 0x000871, "Member 'BP_Kobold_C_ExecuteUbergraph_BP_Kobold::CallFunc_EqualEqual_GameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Kobold_C_ExecuteUbergraph_BP_Kobold, CallFunc_IsValid_ReturnValue_1) == 0x000872, "Member 'BP_Kobold_C_ExecuteUbergraph_BP_Kobold::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Kobold_C_ExecuteUbergraph_BP_Kobold, K2Node_DynamicCast_AsDCCharacter_Base) == 0x000878, "Member 'BP_Kobold_C_ExecuteUbergraph_BP_Kobold::K2Node_DynamicCast_AsDCCharacter_Base' has a wrong offset!");
static_assert(offsetof(BP_Kobold_C_ExecuteUbergraph_BP_Kobold, K2Node_DynamicCast_bSuccess_2) == 0x000880, "Member 'BP_Kobold_C_ExecuteUbergraph_BP_Kobold::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_Kobold_C_ExecuteUbergraph_BP_Kobold, CallFunc_Array_AddUnique_ReturnValue) == 0x000884, "Member 'BP_Kobold_C_ExecuteUbergraph_BP_Kobold::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Kobold_C_ExecuteUbergraph_BP_Kobold, CallFunc_Less_DoubleDouble_A_ImplicitCast) == 0x000888, "Member 'BP_Kobold_C_ExecuteUbergraph_BP_Kobold::CallFunc_Less_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_Kobold_C_ExecuteUbergraph_BP_Kobold, CallFunc_Less_DoubleDouble_A_ImplicitCast_1) == 0x000890, "Member 'BP_Kobold_C_ExecuteUbergraph_BP_Kobold::CallFunc_Less_DoubleDouble_A_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_Kobold_C_ExecuteUbergraph_BP_Kobold, CallFunc_Less_DoubleDouble_B_ImplicitCast) == 0x000898, "Member 'BP_Kobold_C_ExecuteUbergraph_BP_Kobold::CallFunc_Less_DoubleDouble_B_ImplicitCast' has a wrong offset!");

// Function BP_Kobold.BP_Kobold_C.GameplayTagUpdated
// 0x000C (0x000C - 0x0000)
struct BP_Kobold_C_GameplayTagUpdated final
{
public:
	struct FGameplayTag                           InGameplayTag;                                     // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	int32                                         InCount;                                           // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Kobold_C_GameplayTagUpdated) == 0x000004, "Wrong alignment on BP_Kobold_C_GameplayTagUpdated");
static_assert(sizeof(BP_Kobold_C_GameplayTagUpdated) == 0x00000C, "Wrong size on BP_Kobold_C_GameplayTagUpdated");
static_assert(offsetof(BP_Kobold_C_GameplayTagUpdated, InGameplayTag) == 0x000000, "Member 'BP_Kobold_C_GameplayTagUpdated::InGameplayTag' has a wrong offset!");
static_assert(offsetof(BP_Kobold_C_GameplayTagUpdated, InCount) == 0x000008, "Member 'BP_Kobold_C_GameplayTagUpdated::InCount' has a wrong offset!");

// Function BP_Kobold.BP_Kobold_C.OnFMsgGASAttributeNotifyBlueprint
// 0x0720 (0x0720 - 0x0000)
struct BP_Kobold_C_OnFMsgGASAttributeNotifyBlueprint final
{
public:
	struct FMsgGASAttributeNotify                 InMsg;                                             // 0x0000(0x0720)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(BP_Kobold_C_OnFMsgGASAttributeNotifyBlueprint) == 0x000008, "Wrong alignment on BP_Kobold_C_OnFMsgGASAttributeNotifyBlueprint");
static_assert(sizeof(BP_Kobold_C_OnFMsgGASAttributeNotifyBlueprint) == 0x000720, "Wrong size on BP_Kobold_C_OnFMsgGASAttributeNotifyBlueprint");
static_assert(offsetof(BP_Kobold_C_OnFMsgGASAttributeNotifyBlueprint, InMsg) == 0x000000, "Member 'BP_Kobold_C_OnFMsgGASAttributeNotifyBlueprint::InMsg' has a wrong offset!");

}

