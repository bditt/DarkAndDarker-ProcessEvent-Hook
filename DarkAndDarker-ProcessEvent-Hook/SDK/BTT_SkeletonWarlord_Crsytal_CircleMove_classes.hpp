#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BTT_SkeletonWarlord_Crsytal_CircleMove

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "DungeonCrawler_classes.hpp"
#include "CoreUObject_structs.hpp"
#include "AIModule_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BTT_SkeletonWarlord_Crsytal_CircleMove.BTT_SkeletonWarlord_Crsytal_CircleMove_C
// 0x0050 (0x00F8 - 0x00A8)
class UBTT_SkeletonWarlord_Crsytal_CircleMove_C final : public UBTT_BlueprintBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x00A8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class ABP_DCMonsterBaseWithOptions_C*         Crystal;                                           // 0x00B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class ABP_DCMonsterBaseWithOptions_C*         SkeletonWarlord_Elite;                             // 0x00B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Crystal_Capsule_Bottom_Location;                   // 0x00C0(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Warlord_Spawned_Capsule_Bottom_Location;           // 0x00D8(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Angle_From_Warlord;                                // 0x00F0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BTT_SkeletonWarlord_Crsytal_CircleMove(int32 EntryPoint);
	void OnFail_64C82DC04115B557ECCF2DA3AF0078FE(EPathFollowingResult MovementResult);
	void OnSuccess_64C82DC04115B557ECCF2DA3AF0078FE(EPathFollowingResult MovementResult);
	void ReceiveExecuteAI(class AAIController* OwnerController, class APawn* ControlledPawn);
	void ReceiveTickAI(class AAIController* OwnerController, class APawn* ControlledPawn, float DeltaSeconds);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BTT_SkeletonWarlord_Crsytal_CircleMove_C">();
	}
	static class UBTT_SkeletonWarlord_Crsytal_CircleMove_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBTT_SkeletonWarlord_Crsytal_CircleMove_C>();
	}
};
static_assert(alignof(UBTT_SkeletonWarlord_Crsytal_CircleMove_C) == 0x000008, "Wrong alignment on UBTT_SkeletonWarlord_Crsytal_CircleMove_C");
static_assert(sizeof(UBTT_SkeletonWarlord_Crsytal_CircleMove_C) == 0x0000F8, "Wrong size on UBTT_SkeletonWarlord_Crsytal_CircleMove_C");
static_assert(offsetof(UBTT_SkeletonWarlord_Crsytal_CircleMove_C, UberGraphFrame) == 0x0000A8, "Member 'UBTT_SkeletonWarlord_Crsytal_CircleMove_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBTT_SkeletonWarlord_Crsytal_CircleMove_C, Crystal) == 0x0000B0, "Member 'UBTT_SkeletonWarlord_Crsytal_CircleMove_C::Crystal' has a wrong offset!");
static_assert(offsetof(UBTT_SkeletonWarlord_Crsytal_CircleMove_C, SkeletonWarlord_Elite) == 0x0000B8, "Member 'UBTT_SkeletonWarlord_Crsytal_CircleMove_C::SkeletonWarlord_Elite' has a wrong offset!");
static_assert(offsetof(UBTT_SkeletonWarlord_Crsytal_CircleMove_C, Crystal_Capsule_Bottom_Location) == 0x0000C0, "Member 'UBTT_SkeletonWarlord_Crsytal_CircleMove_C::Crystal_Capsule_Bottom_Location' has a wrong offset!");
static_assert(offsetof(UBTT_SkeletonWarlord_Crsytal_CircleMove_C, Warlord_Spawned_Capsule_Bottom_Location) == 0x0000D8, "Member 'UBTT_SkeletonWarlord_Crsytal_CircleMove_C::Warlord_Spawned_Capsule_Bottom_Location' has a wrong offset!");
static_assert(offsetof(UBTT_SkeletonWarlord_Crsytal_CircleMove_C, Angle_From_Warlord) == 0x0000F0, "Member 'UBTT_SkeletonWarlord_Crsytal_CircleMove_C::Angle_From_Warlord' has a wrong offset!");

}

