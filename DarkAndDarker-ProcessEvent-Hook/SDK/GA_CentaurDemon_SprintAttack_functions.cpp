#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_CentaurDemon_SprintAttack

#include "Basic.hpp"

#include "GA_CentaurDemon_SprintAttack_classes.hpp"
#include "GA_CentaurDemon_SprintAttack_parameters.hpp"


namespace SDK
{

// Function GA_CentaurDemon_SprintAttack.GA_CentaurDemon_SprintAttack_C.AbilityActivated
// (Event, Protected, BlueprintEvent)
// Parameters:
// struct FGameplayEventData               TriggerEventData                                       (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm)

void UGA_CentaurDemon_SprintAttack_C::AbilityActivated(const struct FGameplayEventData& TriggerEventData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_CentaurDemon_SprintAttack_C", "AbilityActivated");

	Params::GA_CentaurDemon_SprintAttack_C_AbilityActivated Parms{};

	Parms.TriggerEventData = std::move(TriggerEventData);

	UObject::ProcessEvent(Func, &Parms);
}


// Function GA_CentaurDemon_SprintAttack.GA_CentaurDemon_SprintAttack_C.EventReceived_0564A4534D1BD80A4E8FDE9503060BD8
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGameplayEventData               Payload                                                (BlueprintVisible, BlueprintReadOnly, Parm)

void UGA_CentaurDemon_SprintAttack_C::EventReceived_0564A4534D1BD80A4E8FDE9503060BD8(const struct FGameplayEventData& Payload)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_CentaurDemon_SprintAttack_C", "EventReceived_0564A4534D1BD80A4E8FDE9503060BD8");

	Params::GA_CentaurDemon_SprintAttack_C_EventReceived_0564A4534D1BD80A4E8FDE9503060BD8 Parms{};

	Parms.Payload = std::move(Payload);

	UObject::ProcessEvent(Func, &Parms);
}


// Function GA_CentaurDemon_SprintAttack.GA_CentaurDemon_SprintAttack_C.ExecuteUbergraph_GA_CentaurDemon_SprintAttack
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UGA_CentaurDemon_SprintAttack_C::ExecuteUbergraph_GA_CentaurDemon_SprintAttack(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_CentaurDemon_SprintAttack_C", "ExecuteUbergraph_GA_CentaurDemon_SprintAttack");

	Params::GA_CentaurDemon_SprintAttack_C_ExecuteUbergraph_GA_CentaurDemon_SprintAttack Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GA_CentaurDemon_SprintAttack.GA_CentaurDemon_SprintAttack_C.Rotate To Side Of Target
// (BlueprintCallable, BlueprintEvent)

void UGA_CentaurDemon_SprintAttack_C::Rotate_To_Side_Of_Target()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_CentaurDemon_SprintAttack_C", "Rotate To Side Of Target");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GA_CentaurDemon_SprintAttack.GA_CentaurDemon_SprintAttack_C.Rotation Timer
// (BlueprintCallable, BlueprintEvent)

void UGA_CentaurDemon_SprintAttack_C::Rotation_Timer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_CentaurDemon_SprintAttack_C", "Rotation Timer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GA_CentaurDemon_SprintAttack.GA_CentaurDemon_SprintAttack_C.K2_OnEndAbility
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bWasCancelled                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UGA_CentaurDemon_SprintAttack_C::K2_OnEndAbility(bool bWasCancelled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_CentaurDemon_SprintAttack_C", "K2_OnEndAbility");

	Params::GA_CentaurDemon_SprintAttack_C_K2_OnEndAbility Parms{};

	Parms.bWasCancelled = bWasCancelled;

	UObject::ProcessEvent(Func, &Parms);
}

}

