#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_AdrenalineSpike

#include "Basic.hpp"

#include "GA_ActivateOnAbilityHandleData_classes.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass GA_AdrenalineSpike.GA_AdrenalineSpike_C
// 0x0020 (0x05C0 - 0x05A0)
class UGA_AdrenalineSpike_C final : public UGA_ActivateOnAbilityHandleData_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x05A0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	bool                                          IsActivate;                                        // 0x05A8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_554D[0x3];                                     // 0x05A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPrimaryAssetId                        ActivateHealthValue;                               // 0x05AC(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void CheckHealthBelowCertainPer(double CurrentHealth, bool* Result);
	void ExecuteUbergraph_GA_AdrenalineSpike(int32 EntryPoint);
	void K2_ActivateAbility();
	void OnChange_15B3EBAC461BE5313FFA019C63C0FA1F(float OldValue, float NewValue);
	void OnFinish_254A5E03472F5D7D8E4F218B424166D4();
	void Removed_CBACE4974B9430A96188D89A17A89481();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GA_AdrenalineSpike_C">();
	}
	static class UGA_AdrenalineSpike_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGA_AdrenalineSpike_C>();
	}
};
static_assert(alignof(UGA_AdrenalineSpike_C) == 0x000008, "Wrong alignment on UGA_AdrenalineSpike_C");
static_assert(sizeof(UGA_AdrenalineSpike_C) == 0x0005C0, "Wrong size on UGA_AdrenalineSpike_C");
static_assert(offsetof(UGA_AdrenalineSpike_C, UberGraphFrame) == 0x0005A0, "Member 'UGA_AdrenalineSpike_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UGA_AdrenalineSpike_C, IsActivate) == 0x0005A8, "Member 'UGA_AdrenalineSpike_C::IsActivate' has a wrong offset!");
static_assert(offsetof(UGA_AdrenalineSpike_C, ActivateHealthValue) == 0x0005AC, "Member 'UGA_AdrenalineSpike_C::ActivateHealthValue' has a wrong offset!");

}

