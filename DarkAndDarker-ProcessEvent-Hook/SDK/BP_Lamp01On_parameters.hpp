#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Lamp01On

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_Lamp01On.BP_Lamp01On_C.ExecuteUbergraph_BP_Lamp01On
// 0x0130 (0x0130 - 0x0000)
struct BP_Lamp01On_C_ExecuteUbergraph_BP_Lamp01On final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4556[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_Interacter;                           // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_Event_StateTag;                             // 0x0010(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_Event_TriggerTag;                           // 0x0018(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_Event_HitResult;                            // 0x0020(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FGameplayTag                           K2Node_Event_InGameplayTag;                        // 0x0108(0x0008)(ConstParm, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_InCount;                              // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess;   // 0x0114(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0115(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess_1; // 0x0116(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4557[0x1];                                     // 0x0117(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetTimeSeconds_ReturnValue;               // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetTimeSeconds_ReturnValue_1;             // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetCustomPrimitiveDataFloat_Value_ImplicitCast; // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetCustomPrimitiveDataFloat_Value_ImplicitCast_1; // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Lamp01On_C_ExecuteUbergraph_BP_Lamp01On) == 0x000008, "Wrong alignment on BP_Lamp01On_C_ExecuteUbergraph_BP_Lamp01On");
static_assert(sizeof(BP_Lamp01On_C_ExecuteUbergraph_BP_Lamp01On) == 0x000130, "Wrong size on BP_Lamp01On_C_ExecuteUbergraph_BP_Lamp01On");
static_assert(offsetof(BP_Lamp01On_C_ExecuteUbergraph_BP_Lamp01On, EntryPoint) == 0x000000, "Member 'BP_Lamp01On_C_ExecuteUbergraph_BP_Lamp01On::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_Lamp01On_C_ExecuteUbergraph_BP_Lamp01On, K2Node_Event_Interacter) == 0x000008, "Member 'BP_Lamp01On_C_ExecuteUbergraph_BP_Lamp01On::K2Node_Event_Interacter' has a wrong offset!");
static_assert(offsetof(BP_Lamp01On_C_ExecuteUbergraph_BP_Lamp01On, K2Node_Event_StateTag) == 0x000010, "Member 'BP_Lamp01On_C_ExecuteUbergraph_BP_Lamp01On::K2Node_Event_StateTag' has a wrong offset!");
static_assert(offsetof(BP_Lamp01On_C_ExecuteUbergraph_BP_Lamp01On, K2Node_Event_TriggerTag) == 0x000018, "Member 'BP_Lamp01On_C_ExecuteUbergraph_BP_Lamp01On::K2Node_Event_TriggerTag' has a wrong offset!");
static_assert(offsetof(BP_Lamp01On_C_ExecuteUbergraph_BP_Lamp01On, K2Node_Event_HitResult) == 0x000020, "Member 'BP_Lamp01On_C_ExecuteUbergraph_BP_Lamp01On::K2Node_Event_HitResult' has a wrong offset!");
static_assert(offsetof(BP_Lamp01On_C_ExecuteUbergraph_BP_Lamp01On, K2Node_Event_InGameplayTag) == 0x000108, "Member 'BP_Lamp01On_C_ExecuteUbergraph_BP_Lamp01On::K2Node_Event_InGameplayTag' has a wrong offset!");
static_assert(offsetof(BP_Lamp01On_C_ExecuteUbergraph_BP_Lamp01On, K2Node_Event_InCount) == 0x000110, "Member 'BP_Lamp01On_C_ExecuteUbergraph_BP_Lamp01On::K2Node_Event_InCount' has a wrong offset!");
static_assert(offsetof(BP_Lamp01On_C_ExecuteUbergraph_BP_Lamp01On, GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess) == 0x000114, "Member 'BP_Lamp01On_C_ExecuteUbergraph_BP_Lamp01On::GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_Lamp01On_C_ExecuteUbergraph_BP_Lamp01On, CallFunc_Greater_IntInt_ReturnValue) == 0x000115, "Member 'BP_Lamp01On_C_ExecuteUbergraph_BP_Lamp01On::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lamp01On_C_ExecuteUbergraph_BP_Lamp01On, GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess_1) == 0x000116, "Member 'BP_Lamp01On_C_ExecuteUbergraph_BP_Lamp01On::GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_Lamp01On_C_ExecuteUbergraph_BP_Lamp01On, CallFunc_GetTimeSeconds_ReturnValue) == 0x000118, "Member 'BP_Lamp01On_C_ExecuteUbergraph_BP_Lamp01On::CallFunc_GetTimeSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lamp01On_C_ExecuteUbergraph_BP_Lamp01On, CallFunc_GetTimeSeconds_ReturnValue_1) == 0x000120, "Member 'BP_Lamp01On_C_ExecuteUbergraph_BP_Lamp01On::CallFunc_GetTimeSeconds_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Lamp01On_C_ExecuteUbergraph_BP_Lamp01On, CallFunc_SetCustomPrimitiveDataFloat_Value_ImplicitCast) == 0x000128, "Member 'BP_Lamp01On_C_ExecuteUbergraph_BP_Lamp01On::CallFunc_SetCustomPrimitiveDataFloat_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_Lamp01On_C_ExecuteUbergraph_BP_Lamp01On, CallFunc_SetCustomPrimitiveDataFloat_Value_ImplicitCast_1) == 0x00012C, "Member 'BP_Lamp01On_C_ExecuteUbergraph_BP_Lamp01On::CallFunc_SetCustomPrimitiveDataFloat_Value_ImplicitCast_1' has a wrong offset!");

// Function BP_Lamp01On.BP_Lamp01On_C.GameplayTagUpdated
// 0x000C (0x000C - 0x0000)
struct BP_Lamp01On_C_GameplayTagUpdated final
{
public:
	struct FGameplayTag                           InGameplayTag;                                     // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	int32                                         InCount;                                           // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Lamp01On_C_GameplayTagUpdated) == 0x000004, "Wrong alignment on BP_Lamp01On_C_GameplayTagUpdated");
static_assert(sizeof(BP_Lamp01On_C_GameplayTagUpdated) == 0x00000C, "Wrong size on BP_Lamp01On_C_GameplayTagUpdated");
static_assert(offsetof(BP_Lamp01On_C_GameplayTagUpdated, InGameplayTag) == 0x000000, "Member 'BP_Lamp01On_C_GameplayTagUpdated::InGameplayTag' has a wrong offset!");
static_assert(offsetof(BP_Lamp01On_C_GameplayTagUpdated, InCount) == 0x000008, "Member 'BP_Lamp01On_C_GameplayTagUpdated::InCount' has a wrong offset!");

// Function BP_Lamp01On.BP_Lamp01On_C.InteractSucceed
// 0x0100 (0x0100 - 0x0000)
struct BP_Lamp01On_C_InteractSucceed final
{
public:
	class AActor*                                 Interacter;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           StateTag;                                          // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           TriggerTag;                                        // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             HitResult;                                         // 0x0018(0x00E8)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_Lamp01On_C_InteractSucceed) == 0x000008, "Wrong alignment on BP_Lamp01On_C_InteractSucceed");
static_assert(sizeof(BP_Lamp01On_C_InteractSucceed) == 0x000100, "Wrong size on BP_Lamp01On_C_InteractSucceed");
static_assert(offsetof(BP_Lamp01On_C_InteractSucceed, Interacter) == 0x000000, "Member 'BP_Lamp01On_C_InteractSucceed::Interacter' has a wrong offset!");
static_assert(offsetof(BP_Lamp01On_C_InteractSucceed, StateTag) == 0x000008, "Member 'BP_Lamp01On_C_InteractSucceed::StateTag' has a wrong offset!");
static_assert(offsetof(BP_Lamp01On_C_InteractSucceed, TriggerTag) == 0x000010, "Member 'BP_Lamp01On_C_InteractSucceed::TriggerTag' has a wrong offset!");
static_assert(offsetof(BP_Lamp01On_C_InteractSucceed, HitResult) == 0x000018, "Member 'BP_Lamp01On_C_InteractSucceed::HitResult' has a wrong offset!");

}

