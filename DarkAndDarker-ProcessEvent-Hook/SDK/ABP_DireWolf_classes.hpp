#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ABP_DireWolf

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "AnimGraphRuntime_structs.hpp"
#include "ABP_DireWolf_structs.hpp"
#include "DungeonCrawler_classes.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass ABP_DireWolf.ABP_DireWolf_C
// 0x12D0 (0x1800 - 0x0530)
class UABP_DireWolf_C final : public UDCMonsterAnimInstanceBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0530(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct ABP_DireWolf::FAnimBlueprintGeneratedMutableData __AnimBlueprintMutables;                           // 0x0538(0x0020)(HasGetValueTypeHash)
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_PropertyAccess;             // 0x0558(0x0008)()
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_Base;                       // 0x0560(0x0008)()
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x0568(0x0020)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot;                                // 0x0588(0x0048)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_27;                 // 0x05D0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_26;                 // 0x05F8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_25;                 // 0x0620(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_24;                 // 0x0648(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_23;                 // 0x0670(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_22;                 // 0x0698(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_21;                 // 0x06C0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_20;                 // 0x06E8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_19;                 // 0x0710(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_18;                 // 0x0738(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_17;                 // 0x0760(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_16;                 // 0x0788(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_15;                 // 0x07B0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_14;                 // 0x07D8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_13;                 // 0x0800(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_12;                 // 0x0828(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_11;                 // 0x0850(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_10;                 // 0x0878(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_9;                  // 0x08A0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_8;                  // 0x08C8(0x0028)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_11;                      // 0x08F0(0x0020)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_3;                  // 0x0910(0x0070)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_10;                      // 0x0980(0x0020)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_2;                  // 0x09A0(0x0070)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_9;                       // 0x0A10(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_5;                    // 0x0A30(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_8;                       // 0x0A78(0x0020)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_7;                  // 0x0A98(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_4;                    // 0x0AC0(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_7;                       // 0x0B08(0x0020)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_1;                  // 0x0B28(0x0070)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_6;                       // 0x0B98(0x0020)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer;                    // 0x0BB8(0x0070)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_5;                       // 0x0C28(0x0020)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine_2;                      // 0x0C48(0x00C8)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_6;                  // 0x0D10(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_5;                  // 0x0D38(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_4;                  // 0x0D60(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_3;                  // 0x0D88(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_2;                  // 0x0DB0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_1;                  // 0x0DD8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult;                    // 0x0E00(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_4;                     // 0x0E28(0x0028)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_4;                       // 0x0E50(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_3;                    // 0x0E70(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_2;                    // 0x0EB8(0x0048)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_3;                     // 0x0F00(0x0028)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_1;                   // 0x0F28(0x0048)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend_1;                  // 0x0F70(0x00F0)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_3;                       // 0x1060(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_1;                    // 0x1080(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x10C8(0x0048)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_2;                     // 0x1110(0x0028)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool;                     // 0x1138(0x0048)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend;                    // 0x1180(0x00F0)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_2;                       // 0x1270(0x0020)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_1;                     // 0x1290(0x0028)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_1;                       // 0x12B8(0x0020)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine_1;                      // 0x12D8(0x00C8)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_1;                    // 0x13A0(0x0080)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone;                          // 0x1420(0x0128)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace;               // 0x1548(0x0020)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace;               // 0x1568(0x0020)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose;                       // 0x1588(0x0028)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult;                         // 0x15B0(0x0020)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine;                        // 0x15D0(0x00C8)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose;                      // 0x1698(0x0080)()
	bool                                          bShouldPlayStaggerNotSpawn;                        // 0x1718(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bShouldPlayHitReactionNotSpawn;                    // 0x1719(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsDeathIndexTwo;                                  // 0x171A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsDeathIndexOne;                                  // 0x171B(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsDeathIndexNotOne;                               // 0x171C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4BAC[0x3];                                     // 0x171D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Death_Index;                                       // 0x1720(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4BAD[0x4];                                     // 0x1724(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             Character;                                         // 0x1728(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	double                                        Speed;                                             // 0x1730(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                RBLHit;                                            // 0x1738(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                LBLHit;                                            // 0x1750(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                RFLHit;                                            // 0x1768(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                LFLHit;                                            // 0x1780(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        RBL;                                               // 0x1798(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        LBL;                                               // 0x17A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        RFL;                                               // 0x17A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        LFL;                                               // 0x17B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Pelvis;                                            // 0x17B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Chest;                                             // 0x17C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        RootOffset_Z;                                      // 0x17C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        RootOffset_Rot;                                    // 0x17D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                NewVar;                                            // 0x17D8(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Unique_Z_Value;                                    // 0x17F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsUnique;                                          // 0x17F8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Common_Combat;                                     // 0x17F9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void AnimGraph(struct FPoseLink* Param_AnimGraph);
	void BlueprintBeginPlay();
	void BlueprintThreadSafeUpdateAnimation(float DeltaTime);
	void BlueprintUpdateAnimation(float DeltaTimeX);
	void ExecuteUbergraph_ABP_DireWolf(int32 EntryPoint);
	bool TraceFloor(class FName InSocketName, struct FVector* Location, float* Distance);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ABP_DireWolf_C">();
	}
	static class UABP_DireWolf_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UABP_DireWolf_C>();
	}
};
static_assert(alignof(UABP_DireWolf_C) == 0x000010, "Wrong alignment on UABP_DireWolf_C");
static_assert(sizeof(UABP_DireWolf_C) == 0x001800, "Wrong size on UABP_DireWolf_C");
static_assert(offsetof(UABP_DireWolf_C, UberGraphFrame) == 0x000530, "Member 'UABP_DireWolf_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UABP_DireWolf_C, __AnimBlueprintMutables) == 0x000538, "Member 'UABP_DireWolf_C::__AnimBlueprintMutables' has a wrong offset!");
static_assert(offsetof(UABP_DireWolf_C, AnimBlueprintExtension_PropertyAccess) == 0x000558, "Member 'UABP_DireWolf_C::AnimBlueprintExtension_PropertyAccess' has a wrong offset!");
static_assert(offsetof(UABP_DireWolf_C, AnimBlueprintExtension_Base) == 0x000560, "Member 'UABP_DireWolf_C::AnimBlueprintExtension_Base' has a wrong offset!");
static_assert(offsetof(UABP_DireWolf_C, AnimGraphNode_Root) == 0x000568, "Member 'UABP_DireWolf_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UABP_DireWolf_C, AnimGraphNode_Slot) == 0x000588, "Member 'UABP_DireWolf_C::AnimGraphNode_Slot' has a wrong offset!");
static_assert(offsetof(UABP_DireWolf_C, AnimGraphNode_TransitionResult_27) == 0x0005D0, "Member 'UABP_DireWolf_C::AnimGraphNode_TransitionResult_27' has a wrong offset!");
static_assert(offsetof(UABP_DireWolf_C, AnimGraphNode_TransitionResult_26) == 0x0005F8, "Member 'UABP_DireWolf_C::AnimGraphNode_TransitionResult_26' has a wrong offset!");
static_assert(offsetof(UABP_DireWolf_C, AnimGraphNode_TransitionResult_25) == 0x000620, "Member 'UABP_DireWolf_C::AnimGraphNode_TransitionResult_25' has a wrong offset!");
static_assert(offsetof(UABP_DireWolf_C, AnimGraphNode_TransitionResult_24) == 0x000648, "Member 'UABP_DireWolf_C::AnimGraphNode_TransitionResult_24' has a wrong offset!");
static_assert(offsetof(UABP_DireWolf_C, AnimGraphNode_TransitionResult_23) == 0x000670, "Member 'UABP_DireWolf_C::AnimGraphNode_TransitionResult_23' has a wrong offset!");
static_assert(offsetof(UABP_DireWolf_C, AnimGraphNode_TransitionResult_22) == 0x000698, "Member 'UABP_DireWolf_C::AnimGraphNode_TransitionResult_22' has a wrong offset!");
static_assert(offsetof(UABP_DireWolf_C, AnimGraphNode_TransitionResult_21) == 0x0006C0, "Member 'UABP_DireWolf_C::AnimGraphNode_TransitionResult_21' has a wrong offset!");
static_assert(offsetof(UABP_DireWolf_C, AnimGraphNode_TransitionResult_20) == 0x0006E8, "Member 'UABP_DireWolf_C::AnimGraphNode_TransitionResult_20' has a wrong offset!");
static_assert(offsetof(UABP_DireWolf_C, AnimGraphNode_TransitionResult_19) == 0x000710, "Member 'UABP_DireWolf_C::AnimGraphNode_TransitionResult_19' has a wrong offset!");
static_assert(offsetof(UABP_DireWolf_C, AnimGraphNode_TransitionResult_18) == 0x000738, "Member 'UABP_DireWolf_C::AnimGraphNode_TransitionResult_18' has a wrong offset!");
static_assert(offsetof(UABP_DireWolf_C, AnimGraphNode_TransitionResult_17) == 0x000760, "Member 'UABP_DireWolf_C::AnimGraphNode_TransitionResult_17' has a wrong offset!");
static_assert(offsetof(UABP_DireWolf_C, AnimGraphNode_TransitionResult_16) == 0x000788, "Member 'UABP_DireWolf_C::AnimGraphNode_TransitionResult_16' has a wrong offset!");
static_assert(offsetof(UABP_DireWolf_C, AnimGraphNode_TransitionResult_15) == 0x0007B0, "Member 'UABP_DireWolf_C::AnimGraphNode_TransitionResult_15' has a wrong offset!");
static_assert(offsetof(UABP_DireWolf_C, AnimGraphNode_TransitionResult_14) == 0x0007D8, "Member 'UABP_DireWolf_C::AnimGraphNode_TransitionResult_14' has a wrong offset!");
static_assert(offsetof(UABP_DireWolf_C, AnimGraphNode_TransitionResult_13) == 0x000800, "Member 'UABP_DireWolf_C::AnimGraphNode_TransitionResult_13' has a wrong offset!");
static_assert(offsetof(UABP_DireWolf_C, AnimGraphNode_TransitionResult_12) == 0x000828, "Member 'UABP_DireWolf_C::AnimGraphNode_TransitionResult_12' has a wrong offset!");
static_assert(offsetof(UABP_DireWolf_C, AnimGraphNode_TransitionResult_11) == 0x000850, "Member 'UABP_DireWolf_C::AnimGraphNode_TransitionResult_11' has a wrong offset!");
static_assert(offsetof(UABP_DireWolf_C, AnimGraphNode_TransitionResult_10) == 0x000878, "Member 'UABP_DireWolf_C::AnimGraphNode_TransitionResult_10' has a wrong offset!");
static_assert(offsetof(UABP_DireWolf_C, AnimGraphNode_TransitionResult_9) == 0x0008A0, "Member 'UABP_DireWolf_C::AnimGraphNode_TransitionResult_9' has a wrong offset!");
static_assert(offsetof(UABP_DireWolf_C, AnimGraphNode_TransitionResult_8) == 0x0008C8, "Member 'UABP_DireWolf_C::AnimGraphNode_TransitionResult_8' has a wrong offset!");
static_assert(offsetof(UABP_DireWolf_C, AnimGraphNode_StateResult_11) == 0x0008F0, "Member 'UABP_DireWolf_C::AnimGraphNode_StateResult_11' has a wrong offset!");
static_assert(offsetof(UABP_DireWolf_C, AnimGraphNode_BlendSpacePlayer_3) == 0x000910, "Member 'UABP_DireWolf_C::AnimGraphNode_BlendSpacePlayer_3' has a wrong offset!");
static_assert(offsetof(UABP_DireWolf_C, AnimGraphNode_StateResult_10) == 0x000980, "Member 'UABP_DireWolf_C::AnimGraphNode_StateResult_10' has a wrong offset!");
static_assert(offsetof(UABP_DireWolf_C, AnimGraphNode_BlendSpacePlayer_2) == 0x0009A0, "Member 'UABP_DireWolf_C::AnimGraphNode_BlendSpacePlayer_2' has a wrong offset!");
static_assert(offsetof(UABP_DireWolf_C, AnimGraphNode_StateResult_9) == 0x000A10, "Member 'UABP_DireWolf_C::AnimGraphNode_StateResult_9' has a wrong offset!");
static_assert(offsetof(UABP_DireWolf_C, AnimGraphNode_SequencePlayer_5) == 0x000A30, "Member 'UABP_DireWolf_C::AnimGraphNode_SequencePlayer_5' has a wrong offset!");
static_assert(offsetof(UABP_DireWolf_C, AnimGraphNode_StateResult_8) == 0x000A78, "Member 'UABP_DireWolf_C::AnimGraphNode_StateResult_8' has a wrong offset!");
static_assert(offsetof(UABP_DireWolf_C, AnimGraphNode_TransitionResult_7) == 0x000A98, "Member 'UABP_DireWolf_C::AnimGraphNode_TransitionResult_7' has a wrong offset!");
static_assert(offsetof(UABP_DireWolf_C, AnimGraphNode_SequencePlayer_4) == 0x000AC0, "Member 'UABP_DireWolf_C::AnimGraphNode_SequencePlayer_4' has a wrong offset!");
static_assert(offsetof(UABP_DireWolf_C, AnimGraphNode_StateResult_7) == 0x000B08, "Member 'UABP_DireWolf_C::AnimGraphNode_StateResult_7' has a wrong offset!");
static_assert(offsetof(UABP_DireWolf_C, AnimGraphNode_BlendSpacePlayer_1) == 0x000B28, "Member 'UABP_DireWolf_C::AnimGraphNode_BlendSpacePlayer_1' has a wrong offset!");
static_assert(offsetof(UABP_DireWolf_C, AnimGraphNode_StateResult_6) == 0x000B98, "Member 'UABP_DireWolf_C::AnimGraphNode_StateResult_6' has a wrong offset!");
static_assert(offsetof(UABP_DireWolf_C, AnimGraphNode_BlendSpacePlayer) == 0x000BB8, "Member 'UABP_DireWolf_C::AnimGraphNode_BlendSpacePlayer' has a wrong offset!");
static_assert(offsetof(UABP_DireWolf_C, AnimGraphNode_StateResult_5) == 0x000C28, "Member 'UABP_DireWolf_C::AnimGraphNode_StateResult_5' has a wrong offset!");
static_assert(offsetof(UABP_DireWolf_C, AnimGraphNode_StateMachine_2) == 0x000C48, "Member 'UABP_DireWolf_C::AnimGraphNode_StateMachine_2' has a wrong offset!");
static_assert(offsetof(UABP_DireWolf_C, AnimGraphNode_TransitionResult_6) == 0x000D10, "Member 'UABP_DireWolf_C::AnimGraphNode_TransitionResult_6' has a wrong offset!");
static_assert(offsetof(UABP_DireWolf_C, AnimGraphNode_TransitionResult_5) == 0x000D38, "Member 'UABP_DireWolf_C::AnimGraphNode_TransitionResult_5' has a wrong offset!");
static_assert(offsetof(UABP_DireWolf_C, AnimGraphNode_TransitionResult_4) == 0x000D60, "Member 'UABP_DireWolf_C::AnimGraphNode_TransitionResult_4' has a wrong offset!");
static_assert(offsetof(UABP_DireWolf_C, AnimGraphNode_TransitionResult_3) == 0x000D88, "Member 'UABP_DireWolf_C::AnimGraphNode_TransitionResult_3' has a wrong offset!");
static_assert(offsetof(UABP_DireWolf_C, AnimGraphNode_TransitionResult_2) == 0x000DB0, "Member 'UABP_DireWolf_C::AnimGraphNode_TransitionResult_2' has a wrong offset!");
static_assert(offsetof(UABP_DireWolf_C, AnimGraphNode_TransitionResult_1) == 0x000DD8, "Member 'UABP_DireWolf_C::AnimGraphNode_TransitionResult_1' has a wrong offset!");
static_assert(offsetof(UABP_DireWolf_C, AnimGraphNode_TransitionResult) == 0x000E00, "Member 'UABP_DireWolf_C::AnimGraphNode_TransitionResult' has a wrong offset!");
static_assert(offsetof(UABP_DireWolf_C, AnimGraphNode_UseCachedPose_4) == 0x000E28, "Member 'UABP_DireWolf_C::AnimGraphNode_UseCachedPose_4' has a wrong offset!");
static_assert(offsetof(UABP_DireWolf_C, AnimGraphNode_StateResult_4) == 0x000E50, "Member 'UABP_DireWolf_C::AnimGraphNode_StateResult_4' has a wrong offset!");
static_assert(offsetof(UABP_DireWolf_C, AnimGraphNode_SequencePlayer_3) == 0x000E70, "Member 'UABP_DireWolf_C::AnimGraphNode_SequencePlayer_3' has a wrong offset!");
static_assert(offsetof(UABP_DireWolf_C, AnimGraphNode_SequencePlayer_2) == 0x000EB8, "Member 'UABP_DireWolf_C::AnimGraphNode_SequencePlayer_2' has a wrong offset!");
static_assert(offsetof(UABP_DireWolf_C, AnimGraphNode_UseCachedPose_3) == 0x000F00, "Member 'UABP_DireWolf_C::AnimGraphNode_UseCachedPose_3' has a wrong offset!");
static_assert(offsetof(UABP_DireWolf_C, AnimGraphNode_BlendListByBool_1) == 0x000F28, "Member 'UABP_DireWolf_C::AnimGraphNode_BlendListByBool_1' has a wrong offset!");
static_assert(offsetof(UABP_DireWolf_C, AnimGraphNode_LayeredBoneBlend_1) == 0x000F70, "Member 'UABP_DireWolf_C::AnimGraphNode_LayeredBoneBlend_1' has a wrong offset!");
static_assert(offsetof(UABP_DireWolf_C, AnimGraphNode_StateResult_3) == 0x001060, "Member 'UABP_DireWolf_C::AnimGraphNode_StateResult_3' has a wrong offset!");
static_assert(offsetof(UABP_DireWolf_C, AnimGraphNode_SequencePlayer_1) == 0x001080, "Member 'UABP_DireWolf_C::AnimGraphNode_SequencePlayer_1' has a wrong offset!");
static_assert(offsetof(UABP_DireWolf_C, AnimGraphNode_SequencePlayer) == 0x0010C8, "Member 'UABP_DireWolf_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(UABP_DireWolf_C, AnimGraphNode_UseCachedPose_2) == 0x001110, "Member 'UABP_DireWolf_C::AnimGraphNode_UseCachedPose_2' has a wrong offset!");
static_assert(offsetof(UABP_DireWolf_C, AnimGraphNode_BlendListByBool) == 0x001138, "Member 'UABP_DireWolf_C::AnimGraphNode_BlendListByBool' has a wrong offset!");
static_assert(offsetof(UABP_DireWolf_C, AnimGraphNode_LayeredBoneBlend) == 0x001180, "Member 'UABP_DireWolf_C::AnimGraphNode_LayeredBoneBlend' has a wrong offset!");
static_assert(offsetof(UABP_DireWolf_C, AnimGraphNode_StateResult_2) == 0x001270, "Member 'UABP_DireWolf_C::AnimGraphNode_StateResult_2' has a wrong offset!");
static_assert(offsetof(UABP_DireWolf_C, AnimGraphNode_UseCachedPose_1) == 0x001290, "Member 'UABP_DireWolf_C::AnimGraphNode_UseCachedPose_1' has a wrong offset!");
static_assert(offsetof(UABP_DireWolf_C, AnimGraphNode_StateResult_1) == 0x0012B8, "Member 'UABP_DireWolf_C::AnimGraphNode_StateResult_1' has a wrong offset!");
static_assert(offsetof(UABP_DireWolf_C, AnimGraphNode_StateMachine_1) == 0x0012D8, "Member 'UABP_DireWolf_C::AnimGraphNode_StateMachine_1' has a wrong offset!");
static_assert(offsetof(UABP_DireWolf_C, AnimGraphNode_SaveCachedPose_1) == 0x0013A0, "Member 'UABP_DireWolf_C::AnimGraphNode_SaveCachedPose_1' has a wrong offset!");
static_assert(offsetof(UABP_DireWolf_C, AnimGraphNode_ModifyBone) == 0x001420, "Member 'UABP_DireWolf_C::AnimGraphNode_ModifyBone' has a wrong offset!");
static_assert(offsetof(UABP_DireWolf_C, AnimGraphNode_LocalToComponentSpace) == 0x001548, "Member 'UABP_DireWolf_C::AnimGraphNode_LocalToComponentSpace' has a wrong offset!");
static_assert(offsetof(UABP_DireWolf_C, AnimGraphNode_ComponentToLocalSpace) == 0x001568, "Member 'UABP_DireWolf_C::AnimGraphNode_ComponentToLocalSpace' has a wrong offset!");
static_assert(offsetof(UABP_DireWolf_C, AnimGraphNode_UseCachedPose) == 0x001588, "Member 'UABP_DireWolf_C::AnimGraphNode_UseCachedPose' has a wrong offset!");
static_assert(offsetof(UABP_DireWolf_C, AnimGraphNode_StateResult) == 0x0015B0, "Member 'UABP_DireWolf_C::AnimGraphNode_StateResult' has a wrong offset!");
static_assert(offsetof(UABP_DireWolf_C, AnimGraphNode_StateMachine) == 0x0015D0, "Member 'UABP_DireWolf_C::AnimGraphNode_StateMachine' has a wrong offset!");
static_assert(offsetof(UABP_DireWolf_C, AnimGraphNode_SaveCachedPose) == 0x001698, "Member 'UABP_DireWolf_C::AnimGraphNode_SaveCachedPose' has a wrong offset!");
static_assert(offsetof(UABP_DireWolf_C, bShouldPlayStaggerNotSpawn) == 0x001718, "Member 'UABP_DireWolf_C::bShouldPlayStaggerNotSpawn' has a wrong offset!");
static_assert(offsetof(UABP_DireWolf_C, bShouldPlayHitReactionNotSpawn) == 0x001719, "Member 'UABP_DireWolf_C::bShouldPlayHitReactionNotSpawn' has a wrong offset!");
static_assert(offsetof(UABP_DireWolf_C, bIsDeathIndexTwo) == 0x00171A, "Member 'UABP_DireWolf_C::bIsDeathIndexTwo' has a wrong offset!");
static_assert(offsetof(UABP_DireWolf_C, bIsDeathIndexOne) == 0x00171B, "Member 'UABP_DireWolf_C::bIsDeathIndexOne' has a wrong offset!");
static_assert(offsetof(UABP_DireWolf_C, bIsDeathIndexNotOne) == 0x00171C, "Member 'UABP_DireWolf_C::bIsDeathIndexNotOne' has a wrong offset!");
static_assert(offsetof(UABP_DireWolf_C, Death_Index) == 0x001720, "Member 'UABP_DireWolf_C::Death_Index' has a wrong offset!");
static_assert(offsetof(UABP_DireWolf_C, Character) == 0x001728, "Member 'UABP_DireWolf_C::Character' has a wrong offset!");
static_assert(offsetof(UABP_DireWolf_C, Speed) == 0x001730, "Member 'UABP_DireWolf_C::Speed' has a wrong offset!");
static_assert(offsetof(UABP_DireWolf_C, RBLHit) == 0x001738, "Member 'UABP_DireWolf_C::RBLHit' has a wrong offset!");
static_assert(offsetof(UABP_DireWolf_C, LBLHit) == 0x001750, "Member 'UABP_DireWolf_C::LBLHit' has a wrong offset!");
static_assert(offsetof(UABP_DireWolf_C, RFLHit) == 0x001768, "Member 'UABP_DireWolf_C::RFLHit' has a wrong offset!");
static_assert(offsetof(UABP_DireWolf_C, LFLHit) == 0x001780, "Member 'UABP_DireWolf_C::LFLHit' has a wrong offset!");
static_assert(offsetof(UABP_DireWolf_C, RBL) == 0x001798, "Member 'UABP_DireWolf_C::RBL' has a wrong offset!");
static_assert(offsetof(UABP_DireWolf_C, LBL) == 0x0017A0, "Member 'UABP_DireWolf_C::LBL' has a wrong offset!");
static_assert(offsetof(UABP_DireWolf_C, RFL) == 0x0017A8, "Member 'UABP_DireWolf_C::RFL' has a wrong offset!");
static_assert(offsetof(UABP_DireWolf_C, LFL) == 0x0017B0, "Member 'UABP_DireWolf_C::LFL' has a wrong offset!");
static_assert(offsetof(UABP_DireWolf_C, Pelvis) == 0x0017B8, "Member 'UABP_DireWolf_C::Pelvis' has a wrong offset!");
static_assert(offsetof(UABP_DireWolf_C, Chest) == 0x0017C0, "Member 'UABP_DireWolf_C::Chest' has a wrong offset!");
static_assert(offsetof(UABP_DireWolf_C, RootOffset_Z) == 0x0017C8, "Member 'UABP_DireWolf_C::RootOffset_Z' has a wrong offset!");
static_assert(offsetof(UABP_DireWolf_C, RootOffset_Rot) == 0x0017D0, "Member 'UABP_DireWolf_C::RootOffset_Rot' has a wrong offset!");
static_assert(offsetof(UABP_DireWolf_C, NewVar) == 0x0017D8, "Member 'UABP_DireWolf_C::NewVar' has a wrong offset!");
static_assert(offsetof(UABP_DireWolf_C, Unique_Z_Value) == 0x0017F0, "Member 'UABP_DireWolf_C::Unique_Z_Value' has a wrong offset!");
static_assert(offsetof(UABP_DireWolf_C, IsUnique) == 0x0017F8, "Member 'UABP_DireWolf_C::IsUnique' has a wrong offset!");
static_assert(offsetof(UABP_DireWolf_C, Common_Combat) == 0x0017F9, "Member 'UABP_DireWolf_C::Common_Combat' has a wrong offset!");

}

