#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_ChainLightning

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "GA_SpellCastingAndWaitForEnd_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass GA_ChainLightning.GA_ChainLightning_C
// 0x0050 (0x06B8 - 0x0668)
class UGA_ChainLightning_C final : public UGA_SpellCastingAndWaitForEnd_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0668(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	double                                        BoundingArea;                                      // 0x0670(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         BoundingCount;                                     // 0x0678(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5796[0x4];                                     // 0x067C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         IgnoreActors;                                      // 0x0680(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	struct FVector                                PivotLocation;                                     // 0x0690(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        BoundingTime;                                      // 0x06A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           DeathTag;                                          // 0x06B0(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void AbilityActivated_BP(const struct FGameplayEventData& TriggerEventData, bool bIsSocketSightBlocked);
	void CalMinDistanceTarget(TArray<class AActor*>& InActors, class AActor** OutActor);
	void Cancelled_31121FD1430811CAF3A874B288707DD0(const struct FGameplayAbilityTargetDataHandle& Data);
	void CheckTargetActor(class AActor* TargetActor, bool* Result);
	void ExecuteUbergraph_GA_ChainLightning(int32 EntryPoint);
	void K2_OnEndAbility(bool bWasCancelled);
	void OnApplyedTargetDamage(class AActor* TargetActor, int32 BoundCount);
	void OnBoundingTarget(int32 RepeatCount);
	void OnFinish_739012464125AEAA064EE3BBAFFB2AFC();
	void OnFinished_0648ED534A0BC29A1C2F12BADC8FE40C(int32 ActionNumber);
	void OnPerformAction_0648ED534A0BC29A1C2F12BADC8FE40C(int32 ActionNumber);
	void ValidData_31121FD1430811CAF3A874B288707DD0(const struct FGameplayAbilityTargetDataHandle& Data);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GA_ChainLightning_C">();
	}
	static class UGA_ChainLightning_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGA_ChainLightning_C>();
	}
};
static_assert(alignof(UGA_ChainLightning_C) == 0x000008, "Wrong alignment on UGA_ChainLightning_C");
static_assert(sizeof(UGA_ChainLightning_C) == 0x0006B8, "Wrong size on UGA_ChainLightning_C");
static_assert(offsetof(UGA_ChainLightning_C, UberGraphFrame) == 0x000668, "Member 'UGA_ChainLightning_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UGA_ChainLightning_C, BoundingArea) == 0x000670, "Member 'UGA_ChainLightning_C::BoundingArea' has a wrong offset!");
static_assert(offsetof(UGA_ChainLightning_C, BoundingCount) == 0x000678, "Member 'UGA_ChainLightning_C::BoundingCount' has a wrong offset!");
static_assert(offsetof(UGA_ChainLightning_C, IgnoreActors) == 0x000680, "Member 'UGA_ChainLightning_C::IgnoreActors' has a wrong offset!");
static_assert(offsetof(UGA_ChainLightning_C, PivotLocation) == 0x000690, "Member 'UGA_ChainLightning_C::PivotLocation' has a wrong offset!");
static_assert(offsetof(UGA_ChainLightning_C, BoundingTime) == 0x0006A8, "Member 'UGA_ChainLightning_C::BoundingTime' has a wrong offset!");
static_assert(offsetof(UGA_ChainLightning_C, DeathTag) == 0x0006B0, "Member 'UGA_ChainLightning_C::DeathTag' has a wrong offset!");

}

