#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ABP_SpikeLog

#include "Basic.hpp"

#include "ABP_SpikeLog_classes.hpp"
#include "ABP_SpikeLog_parameters.hpp"


namespace SDK
{

// Function ABP_SpikeLog.ABP_SpikeLog_C.AnimGraph
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FPoseLink                        Param_AnimGraph                                        (Parm, OutParm, NoDestructor)

void UABP_SpikeLog_C::AnimGraph(struct FPoseLink* Param_AnimGraph)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_SpikeLog_C", "AnimGraph");

	Params::ABP_SpikeLog_C_AnimGraph Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Param_AnimGraph != nullptr)
		*Param_AnimGraph = std::move(Parms.Param_AnimGraph);
}


// Function ABP_SpikeLog.ABP_SpikeLog_C.BlueprintBeginPlay
// (Event, Public, BlueprintEvent)

void UABP_SpikeLog_C::BlueprintBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_SpikeLog_C", "BlueprintBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ABP_SpikeLog.ABP_SpikeLog_C.BlueprintInitializeAnimation
// (Event, Public, BlueprintEvent)

void UABP_SpikeLog_C::BlueprintInitializeAnimation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_SpikeLog_C", "BlueprintInitializeAnimation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ABP_SpikeLog.ABP_SpikeLog_C.BlueprintThreadSafeUpdateAnimation
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DeltaTime                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UABP_SpikeLog_C::BlueprintThreadSafeUpdateAnimation(float DeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_SpikeLog_C", "BlueprintThreadSafeUpdateAnimation");

	Params::ABP_SpikeLog_C_BlueprintThreadSafeUpdateAnimation Parms{};

	Parms.DeltaTime = DeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ABP_SpikeLog.ABP_SpikeLog_C.EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_SpikeLog_AnimGraphNode_TransitionResult_E19464F34FDCCC84B0068D95C3A1BFB5
// (BlueprintEvent)

void UABP_SpikeLog_C::EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_SpikeLog_AnimGraphNode_TransitionResult_E19464F34FDCCC84B0068D95C3A1BFB5()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_SpikeLog_C", "EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_SpikeLog_AnimGraphNode_TransitionResult_E19464F34FDCCC84B0068D95C3A1BFB5");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ABP_SpikeLog.ABP_SpikeLog_C.EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_SpikeLog_AnimGraphNode_TransitionResult_F3ED430940A8AA4F4136F5A98F09F530
// (BlueprintEvent)

void UABP_SpikeLog_C::EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_SpikeLog_AnimGraphNode_TransitionResult_F3ED430940A8AA4F4136F5A98F09F530()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_SpikeLog_C", "EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_SpikeLog_AnimGraphNode_TransitionResult_F3ED430940A8AA4F4136F5A98F09F530");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ABP_SpikeLog.ABP_SpikeLog_C.ExecuteUbergraph_ABP_SpikeLog
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UABP_SpikeLog_C::ExecuteUbergraph_ABP_SpikeLog(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_SpikeLog_C", "ExecuteUbergraph_ABP_SpikeLog");

	Params::ABP_SpikeLog_C_ExecuteUbergraph_ABP_SpikeLog Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}

}

