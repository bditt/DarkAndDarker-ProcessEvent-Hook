#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_SkeletonMage_Common

#include "Basic.hpp"

#include "BP_DCMonsterBaseWithOptions_classes.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_SkeletonMage_Common.BP_SkeletonMage_Common_C
// 0x0090 (0x1470 - 0x13E0)
class ABP_SkeletonMage_Common_C : public ABP_DCMonsterBaseWithOptions_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_SkeletonMage_Common_C;           // 0x13D8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBP_DCHitBox_C*                         BP_DCHitBox9;                                      // 0x13E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_DCHitBox_C*                         BP_DCHitBox8;                                      // 0x13E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_DCHitBox_C*                         BP_DCHitBox7;                                      // 0x13F0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_DCHitBox_C*                         BP_DCHitBox6;                                      // 0x13F8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_DCHitBox_C*                         BP_DCHitBox5;                                      // 0x1400(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_DCHitBox_C*                         BP_DCHitBox4;                                      // 0x1408(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_DCHitBox_C*                         BP_DCHitBox3;                                      // 0x1410(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_DCHitBox_C*                         BP_DCHitBox2;                                      // 0x1418(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_DCHitBox_C*                         BP_DCHitBox1;                                      // 0x1420(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_DCHitBox_C*                         BP_DCHitBox;                                       // 0x1428(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class FName                                   Key_Name;                                          // 0x1430(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                BarrierTarget;                                     // 0x1438(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	TArray<struct FPrimaryAssetId>                In_Gameplay_Effect_Id_Array;                       // 0x1440(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	double                                        BeforeBarrierHealth;                               // 0x1450(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_DCMonsterBase_C*                    As_BP_DCMonster_Base;                              // 0x1458(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class FName                                   Probability;                                       // 0x1460(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Count;                                             // 0x1468(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_SkeletonMage_Common(int32 EntryPoint);
	void OnSetAI();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_SkeletonMage_Common_C">();
	}
	static class ABP_SkeletonMage_Common_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_SkeletonMage_Common_C>();
	}
};
static_assert(alignof(ABP_SkeletonMage_Common_C) == 0x000010, "Wrong alignment on ABP_SkeletonMage_Common_C");
static_assert(sizeof(ABP_SkeletonMage_Common_C) == 0x001470, "Wrong size on ABP_SkeletonMage_Common_C");
static_assert(offsetof(ABP_SkeletonMage_Common_C, UberGraphFrame_BP_SkeletonMage_Common_C) == 0x0013D8, "Member 'ABP_SkeletonMage_Common_C::UberGraphFrame_BP_SkeletonMage_Common_C' has a wrong offset!");
static_assert(offsetof(ABP_SkeletonMage_Common_C, BP_DCHitBox9) == 0x0013E0, "Member 'ABP_SkeletonMage_Common_C::BP_DCHitBox9' has a wrong offset!");
static_assert(offsetof(ABP_SkeletonMage_Common_C, BP_DCHitBox8) == 0x0013E8, "Member 'ABP_SkeletonMage_Common_C::BP_DCHitBox8' has a wrong offset!");
static_assert(offsetof(ABP_SkeletonMage_Common_C, BP_DCHitBox7) == 0x0013F0, "Member 'ABP_SkeletonMage_Common_C::BP_DCHitBox7' has a wrong offset!");
static_assert(offsetof(ABP_SkeletonMage_Common_C, BP_DCHitBox6) == 0x0013F8, "Member 'ABP_SkeletonMage_Common_C::BP_DCHitBox6' has a wrong offset!");
static_assert(offsetof(ABP_SkeletonMage_Common_C, BP_DCHitBox5) == 0x001400, "Member 'ABP_SkeletonMage_Common_C::BP_DCHitBox5' has a wrong offset!");
static_assert(offsetof(ABP_SkeletonMage_Common_C, BP_DCHitBox4) == 0x001408, "Member 'ABP_SkeletonMage_Common_C::BP_DCHitBox4' has a wrong offset!");
static_assert(offsetof(ABP_SkeletonMage_Common_C, BP_DCHitBox3) == 0x001410, "Member 'ABP_SkeletonMage_Common_C::BP_DCHitBox3' has a wrong offset!");
static_assert(offsetof(ABP_SkeletonMage_Common_C, BP_DCHitBox2) == 0x001418, "Member 'ABP_SkeletonMage_Common_C::BP_DCHitBox2' has a wrong offset!");
static_assert(offsetof(ABP_SkeletonMage_Common_C, BP_DCHitBox1) == 0x001420, "Member 'ABP_SkeletonMage_Common_C::BP_DCHitBox1' has a wrong offset!");
static_assert(offsetof(ABP_SkeletonMage_Common_C, BP_DCHitBox) == 0x001428, "Member 'ABP_SkeletonMage_Common_C::BP_DCHitBox' has a wrong offset!");
static_assert(offsetof(ABP_SkeletonMage_Common_C, Key_Name) == 0x001430, "Member 'ABP_SkeletonMage_Common_C::Key_Name' has a wrong offset!");
static_assert(offsetof(ABP_SkeletonMage_Common_C, BarrierTarget) == 0x001438, "Member 'ABP_SkeletonMage_Common_C::BarrierTarget' has a wrong offset!");
static_assert(offsetof(ABP_SkeletonMage_Common_C, In_Gameplay_Effect_Id_Array) == 0x001440, "Member 'ABP_SkeletonMage_Common_C::In_Gameplay_Effect_Id_Array' has a wrong offset!");
static_assert(offsetof(ABP_SkeletonMage_Common_C, BeforeBarrierHealth) == 0x001450, "Member 'ABP_SkeletonMage_Common_C::BeforeBarrierHealth' has a wrong offset!");
static_assert(offsetof(ABP_SkeletonMage_Common_C, As_BP_DCMonster_Base) == 0x001458, "Member 'ABP_SkeletonMage_Common_C::As_BP_DCMonster_Base' has a wrong offset!");
static_assert(offsetof(ABP_SkeletonMage_Common_C, Probability) == 0x001460, "Member 'ABP_SkeletonMage_Common_C::Probability' has a wrong offset!");
static_assert(offsetof(ABP_SkeletonMage_Common_C, Count) == 0x001468, "Member 'ABP_SkeletonMage_Common_C::Count' has a wrong offset!");

}

