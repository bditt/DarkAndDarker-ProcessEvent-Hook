#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_SceneRender

#include "Basic.hpp"

#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_SceneRender.BP_SceneRender_C.ExecuteUbergraph_BP_SceneRender
// 0x0008 (0x0008 - 0x0000)
struct BP_SceneRender_C_ExecuteUbergraph_BP_SceneRender final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEndPlayReason                                K2Node_Event_EndPlayReason;                        // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SceneRender_C_ExecuteUbergraph_BP_SceneRender) == 0x000004, "Wrong alignment on BP_SceneRender_C_ExecuteUbergraph_BP_SceneRender");
static_assert(sizeof(BP_SceneRender_C_ExecuteUbergraph_BP_SceneRender) == 0x000008, "Wrong size on BP_SceneRender_C_ExecuteUbergraph_BP_SceneRender");
static_assert(offsetof(BP_SceneRender_C_ExecuteUbergraph_BP_SceneRender, EntryPoint) == 0x000000, "Member 'BP_SceneRender_C_ExecuteUbergraph_BP_SceneRender::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_SceneRender_C_ExecuteUbergraph_BP_SceneRender, K2Node_Event_EndPlayReason) == 0x000004, "Member 'BP_SceneRender_C_ExecuteUbergraph_BP_SceneRender::K2Node_Event_EndPlayReason' has a wrong offset!");

// Function BP_SceneRender.BP_SceneRender_C.ReceiveEndPlay
// 0x0001 (0x0001 - 0x0000)
struct BP_SceneRender_C_ReceiveEndPlay final
{
public:
	EEndPlayReason                                EndPlayReason;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SceneRender_C_ReceiveEndPlay) == 0x000001, "Wrong alignment on BP_SceneRender_C_ReceiveEndPlay");
static_assert(sizeof(BP_SceneRender_C_ReceiveEndPlay) == 0x000001, "Wrong size on BP_SceneRender_C_ReceiveEndPlay");
static_assert(offsetof(BP_SceneRender_C_ReceiveEndPlay, EndPlayReason) == 0x000000, "Member 'BP_SceneRender_C_ReceiveEndPlay::EndPlayReason' has a wrong offset!");

// Function BP_SceneRender.BP_SceneRender_C.Revert
// 0x0028 (0x0028 - 0x0000)
struct BP_SceneRender_C_Revert final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Array_Get_Item;                           // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SceneRender_C_Revert) == 0x000008, "Wrong alignment on BP_SceneRender_C_Revert");
static_assert(sizeof(BP_SceneRender_C_Revert) == 0x000028, "Wrong size on BP_SceneRender_C_Revert");
static_assert(offsetof(BP_SceneRender_C_Revert, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_SceneRender_C_Revert::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_SceneRender_C_Revert, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_SceneRender_C_Revert::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_SceneRender_C_Revert, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_SceneRender_C_Revert::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SceneRender_C_Revert, CallFunc_Array_Length_ReturnValue) == 0x00000C, "Member 'BP_SceneRender_C_Revert::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SceneRender_C_Revert, CallFunc_Array_Get_Item) == 0x000010, "Member 'BP_SceneRender_C_Revert::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_SceneRender_C_Revert, CallFunc_Less_IntInt_ReturnValue) == 0x000020, "Member 'BP_SceneRender_C_Revert::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_SceneRender.BP_SceneRender_C.SetRender
// 0x0028 (0x0028 - 0x0000)
struct BP_SceneRender_C_SetRender final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Array_Get_Item;                           // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SceneRender_C_SetRender) == 0x000008, "Wrong alignment on BP_SceneRender_C_SetRender");
static_assert(sizeof(BP_SceneRender_C_SetRender) == 0x000028, "Wrong size on BP_SceneRender_C_SetRender");
static_assert(offsetof(BP_SceneRender_C_SetRender, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_SceneRender_C_SetRender::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_SceneRender_C_SetRender, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_SceneRender_C_SetRender::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_SceneRender_C_SetRender, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_SceneRender_C_SetRender::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SceneRender_C_SetRender, CallFunc_Array_Length_ReturnValue) == 0x00000C, "Member 'BP_SceneRender_C_SetRender::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SceneRender_C_SetRender, CallFunc_Array_Get_Item) == 0x000010, "Member 'BP_SceneRender_C_SetRender::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_SceneRender_C_SetRender, CallFunc_Less_IntInt_ReturnValue) == 0x000020, "Member 'BP_SceneRender_C_SetRender::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

}

