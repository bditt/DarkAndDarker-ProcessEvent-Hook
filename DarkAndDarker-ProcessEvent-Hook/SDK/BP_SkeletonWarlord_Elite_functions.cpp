#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_SkeletonWarlord_Elite

#include "Basic.hpp"

#include "BP_SkeletonWarlord_Elite_classes.hpp"
#include "BP_SkeletonWarlord_Elite_parameters.hpp"


namespace SDK
{

// Function BP_SkeletonWarlord_Elite.BP_SkeletonWarlord_Elite_C.Add Curse GameplayCue
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ADCCharacterBase*                 DCCharacterBase                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_SkeletonWarlord_Elite_C::Add_Curse_GameplayCue(class ADCCharacterBase* DCCharacterBase)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SkeletonWarlord_Elite_C", "Add Curse GameplayCue");

	Params::BP_SkeletonWarlord_Elite_C_Add_Curse_GameplayCue Parms{};

	Parms.DCCharacterBase = DCCharacterBase;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SkeletonWarlord_Elite.BP_SkeletonWarlord_Elite_C.Comeback Activated
// (BlueprintCallable, BlueprintEvent)

void ABP_SkeletonWarlord_Elite_C::Comeback_Activated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SkeletonWarlord_Elite_C", "Comeback Activated");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SkeletonWarlord_Elite.BP_SkeletonWarlord_Elite_C.ExecuteUbergraph_BP_SkeletonWarlord_Elite
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_SkeletonWarlord_Elite_C::ExecuteUbergraph_BP_SkeletonWarlord_Elite(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SkeletonWarlord_Elite_C", "ExecuteUbergraph_BP_SkeletonWarlord_Elite");

	Params::BP_SkeletonWarlord_Elite_C_ExecuteUbergraph_BP_SkeletonWarlord_Elite Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SkeletonWarlord_Elite.BP_SkeletonWarlord_Elite_C.OnRep_Exceptional Area Location
// (BlueprintCallable, BlueprintEvent)

void ABP_SkeletonWarlord_Elite_C::OnRep_Exceptional_Area_Location()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SkeletonWarlord_Elite_C", "OnRep_Exceptional Area Location");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SkeletonWarlord_Elite.BP_SkeletonWarlord_Elite_C.OnRep_Exceptional Area Radius
// (BlueprintCallable, BlueprintEvent)

void ABP_SkeletonWarlord_Elite_C::OnRep_Exceptional_Area_Radius()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SkeletonWarlord_Elite_C", "OnRep_Exceptional Area Radius");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SkeletonWarlord_Elite.BP_SkeletonWarlord_Elite_C.OnRep_Explosion Radius
// (BlueprintCallable, BlueprintEvent)

void ABP_SkeletonWarlord_Elite_C::OnRep_Explosion_Radius()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SkeletonWarlord_Elite_C", "OnRep_Explosion Radius");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SkeletonWarlord_Elite.BP_SkeletonWarlord_Elite_C.OnRep_Spawn Transform Location
// (BlueprintCallable, BlueprintEvent)

void ABP_SkeletonWarlord_Elite_C::OnRep_Spawn_Transform_Location()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SkeletonWarlord_Elite_C", "OnRep_Spawn Transform Location");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SkeletonWarlord_Elite.BP_SkeletonWarlord_Elite_C.Remove Curse GameplayCue
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ADCCharacterBase*                 DCCharacterBase                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_SkeletonWarlord_Elite_C::Remove_Curse_GameplayCue(class ADCCharacterBase* DCCharacterBase)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SkeletonWarlord_Elite_C", "Remove Curse GameplayCue");

	Params::BP_SkeletonWarlord_Elite_C_Remove_Curse_GameplayCue Parms{};

	Parms.DCCharacterBase = DCCharacterBase;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SkeletonWarlord_Elite.BP_SkeletonWarlord_Elite_C.Reset All Variables
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_SkeletonWarlord_Elite_C::Reset_All_Variables()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SkeletonWarlord_Elite_C", "Reset All Variables");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SkeletonWarlord_Elite.BP_SkeletonWarlord_Elite_C.Trigger In Combat Area
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           OverlappedActor                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_SkeletonWarlord_Elite_C::Trigger_In_Combat_Area(class AActor* OverlappedActor, class AActor* OtherActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SkeletonWarlord_Elite_C", "Trigger In Combat Area");

	Params::BP_SkeletonWarlord_Elite_C_Trigger_In_Combat_Area Parms{};

	Parms.OverlappedActor = OverlappedActor;
	Parms.OtherActor = OtherActor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SkeletonWarlord_Elite.BP_SkeletonWarlord_Elite_C.Trigger Out Combat Area
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           OverlappedActor                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_SkeletonWarlord_Elite_C::Trigger_Out_Combat_Area(class AActor* OverlappedActor, class AActor* OtherActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SkeletonWarlord_Elite_C", "Trigger Out Combat Area");

	Params::BP_SkeletonWarlord_Elite_C_Trigger_Out_Combat_Area Parms{};

	Parms.OverlappedActor = OverlappedActor;
	Parms.OtherActor = OtherActor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SkeletonWarlord_Elite.BP_SkeletonWarlord_Elite_C.GameplayTagUpdated
// (Event, Protected, BlueprintEvent)
// Parameters:
// struct FGameplayTag                     InGameplayTag                                          (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// int32                                   InCount                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_SkeletonWarlord_Elite_C::GameplayTagUpdated(const struct FGameplayTag& InGameplayTag, int32 InCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SkeletonWarlord_Elite_C", "GameplayTagUpdated");

	Params::BP_SkeletonWarlord_Elite_C_GameplayTagUpdated Parms{};

	Parms.InGameplayTag = std::move(InGameplayTag);
	Parms.InCount = InCount;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SkeletonWarlord_Elite.BP_SkeletonWarlord_Elite_C.OnSetAI
// (Event, Protected, BlueprintEvent)

void ABP_SkeletonWarlord_Elite_C::OnSetAI()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SkeletonWarlord_Elite_C", "OnSetAI");

	UObject::ProcessEvent(Func, nullptr);
}

}

