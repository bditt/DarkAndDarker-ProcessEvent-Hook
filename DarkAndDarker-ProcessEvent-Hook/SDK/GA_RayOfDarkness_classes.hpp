#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_RayOfDarkness

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "GA_SpellChanneling_classes.hpp"
#include "GameplayAbilities_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass GA_RayOfDarkness.GA_RayOfDarkness_C
// 0x0038 (0x06C0 - 0x0688)
class UGA_RayOfDarkness_C final : public UGA_SpellChanneling_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0688(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UClass*                                 EndPointActorClass;                                // 0x0690(0x0008)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class ABP_SpellBeamEndPoint_C*                SpawnedEndPointActor;                              // 0x0698(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class ADCCharacterBase*                       TargetCharacter;                                   // 0x06A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	TArray<struct FActiveGameplayEffectHandle>    AppliedEffectHandles;                              // 0x06A8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	class USpringArmComponent*                    AddedSpringArm;                                    // 0x06B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)

public:
	void AbilityActivated_BP(const struct FGameplayEventData& TriggerEventData, bool bIsSocketSightBlocked);
	void Cancelled_98E6F47F408C6A76B4B087A4F907F7D4(const struct FGameplayAbilityTargetDataHandle& Data);
	void ExecuteUbergraph_GA_RayOfDarkness(int32 EntryPoint);
	void K2_OnEndAbility(bool bWasCancelled);
	void RemoveAppliedEffectFromPrevTarget();
	void ValidData_98E6F47F408C6A76B4B087A4F907F7D4(const struct FGameplayAbilityTargetDataHandle& Data);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GA_RayOfDarkness_C">();
	}
	static class UGA_RayOfDarkness_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGA_RayOfDarkness_C>();
	}
};
static_assert(alignof(UGA_RayOfDarkness_C) == 0x000008, "Wrong alignment on UGA_RayOfDarkness_C");
static_assert(sizeof(UGA_RayOfDarkness_C) == 0x0006C0, "Wrong size on UGA_RayOfDarkness_C");
static_assert(offsetof(UGA_RayOfDarkness_C, UberGraphFrame) == 0x000688, "Member 'UGA_RayOfDarkness_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UGA_RayOfDarkness_C, EndPointActorClass) == 0x000690, "Member 'UGA_RayOfDarkness_C::EndPointActorClass' has a wrong offset!");
static_assert(offsetof(UGA_RayOfDarkness_C, SpawnedEndPointActor) == 0x000698, "Member 'UGA_RayOfDarkness_C::SpawnedEndPointActor' has a wrong offset!");
static_assert(offsetof(UGA_RayOfDarkness_C, TargetCharacter) == 0x0006A0, "Member 'UGA_RayOfDarkness_C::TargetCharacter' has a wrong offset!");
static_assert(offsetof(UGA_RayOfDarkness_C, AppliedEffectHandles) == 0x0006A8, "Member 'UGA_RayOfDarkness_C::AppliedEffectHandles' has a wrong offset!");
static_assert(offsetof(UGA_RayOfDarkness_C, AddedSpringArm) == 0x0006B8, "Member 'UGA_RayOfDarkness_C::AddedSpringArm' has a wrong offset!");

}

