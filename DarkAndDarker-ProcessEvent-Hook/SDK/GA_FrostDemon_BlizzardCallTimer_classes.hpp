#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_FrostDemon_BlizzardCallTimer

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "GA_MonsterGameplayAbilityBase_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass GA_FrostDemon_BlizzardCallTimer.GA_FrostDemon_BlizzardCallTimer_C
// 0x00D0 (0x0698 - 0x05C8)
class UGA_FrostDemon_BlizzardCallTimer_C final : public UGA_MonsterGameplayAbilityBase_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x05C8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	int32                                         Count;                                             // 0x05D0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3861[0x4];                                     // 0x05D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           Timer_Handle;                                      // 0x05D8(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEventData                     Trigger_Event_Data;                                // 0x05E0(0x00B0)(Edit, BlueprintVisible, DisableEditOnInstance)
	int32                                         Blizzard_Limit_Count;                              // 0x0690(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void AbilityActivated(const struct FGameplayEventData& TriggerEventData);
	void Call_Blizzard();
	void ExecuteUbergraph_GA_FrostDemon_BlizzardCallTimer(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GA_FrostDemon_BlizzardCallTimer_C">();
	}
	static class UGA_FrostDemon_BlizzardCallTimer_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGA_FrostDemon_BlizzardCallTimer_C>();
	}
};
static_assert(alignof(UGA_FrostDemon_BlizzardCallTimer_C) == 0x000008, "Wrong alignment on UGA_FrostDemon_BlizzardCallTimer_C");
static_assert(sizeof(UGA_FrostDemon_BlizzardCallTimer_C) == 0x000698, "Wrong size on UGA_FrostDemon_BlizzardCallTimer_C");
static_assert(offsetof(UGA_FrostDemon_BlizzardCallTimer_C, UberGraphFrame) == 0x0005C8, "Member 'UGA_FrostDemon_BlizzardCallTimer_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UGA_FrostDemon_BlizzardCallTimer_C, Count) == 0x0005D0, "Member 'UGA_FrostDemon_BlizzardCallTimer_C::Count' has a wrong offset!");
static_assert(offsetof(UGA_FrostDemon_BlizzardCallTimer_C, Timer_Handle) == 0x0005D8, "Member 'UGA_FrostDemon_BlizzardCallTimer_C::Timer_Handle' has a wrong offset!");
static_assert(offsetof(UGA_FrostDemon_BlizzardCallTimer_C, Trigger_Event_Data) == 0x0005E0, "Member 'UGA_FrostDemon_BlizzardCallTimer_C::Trigger_Event_Data' has a wrong offset!");
static_assert(offsetof(UGA_FrostDemon_BlizzardCallTimer_C, Blizzard_Limit_Count) == 0x000690, "Member 'UGA_FrostDemon_BlizzardCallTimer_C::Blizzard_Limit_Count' has a wrong offset!");

}

