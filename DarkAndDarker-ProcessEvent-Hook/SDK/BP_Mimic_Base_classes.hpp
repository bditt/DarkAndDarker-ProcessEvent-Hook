#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Mimic_Base

#include "Basic.hpp"

#include "BP_DCMonsterBaseWithOptions_classes.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Mimic_Base.BP_Mimic_Base_C
// 0x0090 (0x1470 - 0x13E0)
class ABP_Mimic_Base_C : public ABP_DCMonsterBaseWithOptions_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_Mimic_Base_C;                    // 0x13D8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBP_DCHitBox_C*                         BP_DCHitBox_Head;                                  // 0x13E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_DCHitBox_C*                         BP_DCHitBox_Slate;                                 // 0x13E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_DCHitBox_C*                         BP_DCHitBox_Body;                                  // 0x13F0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TMap<class AActor*, struct FTimerHandle>      TimerHandleMap;                                    // 0x13F8(0x0050)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	struct FPrimaryAssetId                        MimickingPropsId;                                  // 0x1448(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	TArray<struct FPrimaryAssetId>                Mimic_Attribute_Effect;                            // 0x1458(0x0010)(Edit, BlueprintVisible)
	bool                                          Transformed;                                       // 0x1468(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void Apply_Mimic_Attribute();
	void BndEvt__BP_Mimic_Impactable_K2Node_ComponentBoundEvent_1_ImpactEnduranceExhausted__DelegateSignature(float ExhaustedTime, TSubclassOf<class UGameplayEffect> GameplayEffectClass, const struct FDCGameplayEffectContext& EffectContext);
	void CheckStanceOne();
	void EventFMsgInteractFailed(const struct FMsgInteractFailed& Msg);
	void EventFMsgInteractStarted(const struct FMsgInteractStarted& Msg);
	void EventReceived_E61C493B48AD715A2EB816B4A4A8550A(const struct FGameplayEventData& Payload);
	void ExecuteUbergraph_BP_Mimic_Base(int32 EntryPoint);
	void GameplayTagUpdated(const struct FGameplayTag& InGameplayTag, int32 InCount);
	void InteractTargetInfoName(class FText* Param_Name);
	void OnFMsgGASAttributeNotifyBlueprint(const struct FMsgGASAttributeNotify& InMsg);
	void OnMessageReceived_0C3900FE47946FCE8C6258BAB1382319(class UMsgBaseNode* ProxyObject);
	void OnMessageReceived_CDDAFC994C6A97AC9DA3D1BB170EF599(class UMsgBaseNode* ProxyObject);
	void OnTimerExpired();
	void ReceiveBeginPlay();
	void ReceivePossessed(class AController* NewController);
	void SetRotationZero();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Mimic_Base_C">();
	}
	static class ABP_Mimic_Base_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_Mimic_Base_C>();
	}
};
static_assert(alignof(ABP_Mimic_Base_C) == 0x000010, "Wrong alignment on ABP_Mimic_Base_C");
static_assert(sizeof(ABP_Mimic_Base_C) == 0x001470, "Wrong size on ABP_Mimic_Base_C");
static_assert(offsetof(ABP_Mimic_Base_C, UberGraphFrame_BP_Mimic_Base_C) == 0x0013D8, "Member 'ABP_Mimic_Base_C::UberGraphFrame_BP_Mimic_Base_C' has a wrong offset!");
static_assert(offsetof(ABP_Mimic_Base_C, BP_DCHitBox_Head) == 0x0013E0, "Member 'ABP_Mimic_Base_C::BP_DCHitBox_Head' has a wrong offset!");
static_assert(offsetof(ABP_Mimic_Base_C, BP_DCHitBox_Slate) == 0x0013E8, "Member 'ABP_Mimic_Base_C::BP_DCHitBox_Slate' has a wrong offset!");
static_assert(offsetof(ABP_Mimic_Base_C, BP_DCHitBox_Body) == 0x0013F0, "Member 'ABP_Mimic_Base_C::BP_DCHitBox_Body' has a wrong offset!");
static_assert(offsetof(ABP_Mimic_Base_C, TimerHandleMap) == 0x0013F8, "Member 'ABP_Mimic_Base_C::TimerHandleMap' has a wrong offset!");
static_assert(offsetof(ABP_Mimic_Base_C, MimickingPropsId) == 0x001448, "Member 'ABP_Mimic_Base_C::MimickingPropsId' has a wrong offset!");
static_assert(offsetof(ABP_Mimic_Base_C, Mimic_Attribute_Effect) == 0x001458, "Member 'ABP_Mimic_Base_C::Mimic_Attribute_Effect' has a wrong offset!");
static_assert(offsetof(ABP_Mimic_Base_C, Transformed) == 0x001468, "Member 'ABP_Mimic_Base_C::Transformed' has a wrong offset!");

}

