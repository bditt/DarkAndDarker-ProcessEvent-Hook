#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_GiantDragonfly_Attack

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "GA_MonsterProjectileAttackBase_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass GA_GiantDragonfly_Attack.GA_GiantDragonfly_Attack_C
// 0x0040 (0x0888 - 0x0848)
class UGA_GiantDragonfly_Attack_C final : public UGA_MonsterProjectileAttackBase_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_GA_GiantDragonfly_Attack_C;         // 0x0848(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	double                                        Interval;                                          // 0x0850(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        StartZAngle;                                       // 0x0858(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        RotateZValue;                                      // 0x0860(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        StartYAngle;                                       // 0x0868(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        RotateYValue;                                      // 0x0870(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Probability;                                       // 0x0878(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Key_TargetActor;                                   // 0x0880(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void AbilityActivated(const struct FGameplayEventData& TriggerEventData);
	void CreateProjectiles(const struct FGameplayTag& EventTag, const struct FGameplayEventData& EventData, float FirePower, const struct FVector& StartLocation);
	void EventReceived_D5ACA6FE440316AD030BBD9DAFC03B8C(const struct FGameplayTag& EventTag, const struct FGameplayEventData& EventData);
	void ExecuteUbergraph_GA_GiantDragonfly_Attack(int32 EntryPoint);
	void Get_Angle_And_Interval_Per_Shot_Num(double ShotNum, double* Param_Interval, double* Final_Y_Angle, double* Final_Z_Angle);
	void OnSuccess_071F11194890A77D250DD8981AE1965F(class AActor* ProjectileActor);
	void OnSuccess_170067C34A65D85FB84E42B93D304C35(class AActor* ProjectileActor);
	void OnSuccess_8D0746724A5BB8C55BD729A85796F151(class AActor* ProjectileActor);
	void OnSuccess_B006B21D49F0C69A4B3DBFB20E8708E8(class AActor* ProjectileActor);
	void OnSuccess_CDC5EED6459E6038C7E9AF8563E48374(class AActor* ProjectileActor);
	void OnSuccess_DB727C2149FAF71130EEA6BD7E2097BD(class AActor* ProjectileActor);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GA_GiantDragonfly_Attack_C">();
	}
	static class UGA_GiantDragonfly_Attack_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGA_GiantDragonfly_Attack_C>();
	}
};
static_assert(alignof(UGA_GiantDragonfly_Attack_C) == 0x000008, "Wrong alignment on UGA_GiantDragonfly_Attack_C");
static_assert(sizeof(UGA_GiantDragonfly_Attack_C) == 0x000888, "Wrong size on UGA_GiantDragonfly_Attack_C");
static_assert(offsetof(UGA_GiantDragonfly_Attack_C, UberGraphFrame_GA_GiantDragonfly_Attack_C) == 0x000848, "Member 'UGA_GiantDragonfly_Attack_C::UberGraphFrame_GA_GiantDragonfly_Attack_C' has a wrong offset!");
static_assert(offsetof(UGA_GiantDragonfly_Attack_C, Interval) == 0x000850, "Member 'UGA_GiantDragonfly_Attack_C::Interval' has a wrong offset!");
static_assert(offsetof(UGA_GiantDragonfly_Attack_C, StartZAngle) == 0x000858, "Member 'UGA_GiantDragonfly_Attack_C::StartZAngle' has a wrong offset!");
static_assert(offsetof(UGA_GiantDragonfly_Attack_C, RotateZValue) == 0x000860, "Member 'UGA_GiantDragonfly_Attack_C::RotateZValue' has a wrong offset!");
static_assert(offsetof(UGA_GiantDragonfly_Attack_C, StartYAngle) == 0x000868, "Member 'UGA_GiantDragonfly_Attack_C::StartYAngle' has a wrong offset!");
static_assert(offsetof(UGA_GiantDragonfly_Attack_C, RotateYValue) == 0x000870, "Member 'UGA_GiantDragonfly_Attack_C::RotateYValue' has a wrong offset!");
static_assert(offsetof(UGA_GiantDragonfly_Attack_C, Probability) == 0x000878, "Member 'UGA_GiantDragonfly_Attack_C::Probability' has a wrong offset!");
static_assert(offsetof(UGA_GiantDragonfly_Attack_C, Key_TargetActor) == 0x000880, "Member 'UGA_GiantDragonfly_Attack_C::Key_TargetActor' has a wrong offset!");

}

