#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_TelescopeRest

#include "Basic.hpp"

#include "GameplayAbilities_structs.hpp"


namespace SDK::Params
{

// Function GA_TelescopeRest.GA_TelescopeRest_C.ExecuteUbergraph_GA_TelescopeRest
// 0x00C0 (0x00C0 - 0x0000)
struct GA_TelescopeRest_C_ExecuteUbergraph_GA_TelescopeRest final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_552B[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayEventData                     K2Node_Event_EventData;                            // 0x0008(0x00B0)(ConstParm)
	bool                                          K2Node_Event_bWasCancelled;                        // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_TelescopeRest_C_ExecuteUbergraph_GA_TelescopeRest) == 0x000008, "Wrong alignment on GA_TelescopeRest_C_ExecuteUbergraph_GA_TelescopeRest");
static_assert(sizeof(GA_TelescopeRest_C_ExecuteUbergraph_GA_TelescopeRest) == 0x0000C0, "Wrong size on GA_TelescopeRest_C_ExecuteUbergraph_GA_TelescopeRest");
static_assert(offsetof(GA_TelescopeRest_C_ExecuteUbergraph_GA_TelescopeRest, EntryPoint) == 0x000000, "Member 'GA_TelescopeRest_C_ExecuteUbergraph_GA_TelescopeRest::EntryPoint' has a wrong offset!");
static_assert(offsetof(GA_TelescopeRest_C_ExecuteUbergraph_GA_TelescopeRest, K2Node_Event_EventData) == 0x000008, "Member 'GA_TelescopeRest_C_ExecuteUbergraph_GA_TelescopeRest::K2Node_Event_EventData' has a wrong offset!");
static_assert(offsetof(GA_TelescopeRest_C_ExecuteUbergraph_GA_TelescopeRest, K2Node_Event_bWasCancelled) == 0x0000B8, "Member 'GA_TelescopeRest_C_ExecuteUbergraph_GA_TelescopeRest::K2Node_Event_bWasCancelled' has a wrong offset!");

// Function GA_TelescopeRest.GA_TelescopeRest_C.K2_ActivateAbilityFromEvent
// 0x00B0 (0x00B0 - 0x0000)
struct GA_TelescopeRest_C_K2_ActivateAbilityFromEvent final
{
public:
	struct FGameplayEventData                     EventData;                                         // 0x0000(0x00B0)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(GA_TelescopeRest_C_K2_ActivateAbilityFromEvent) == 0x000008, "Wrong alignment on GA_TelescopeRest_C_K2_ActivateAbilityFromEvent");
static_assert(sizeof(GA_TelescopeRest_C_K2_ActivateAbilityFromEvent) == 0x0000B0, "Wrong size on GA_TelescopeRest_C_K2_ActivateAbilityFromEvent");
static_assert(offsetof(GA_TelescopeRest_C_K2_ActivateAbilityFromEvent, EventData) == 0x000000, "Member 'GA_TelescopeRest_C_K2_ActivateAbilityFromEvent::EventData' has a wrong offset!");

// Function GA_TelescopeRest.GA_TelescopeRest_C.K2_OnEndAbility
// 0x0001 (0x0001 - 0x0000)
struct GA_TelescopeRest_C_K2_OnEndAbility final
{
public:
	bool                                          bWasCancelled;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_TelescopeRest_C_K2_OnEndAbility) == 0x000001, "Wrong alignment on GA_TelescopeRest_C_K2_OnEndAbility");
static_assert(sizeof(GA_TelescopeRest_C_K2_OnEndAbility) == 0x000001, "Wrong size on GA_TelescopeRest_C_K2_OnEndAbility");
static_assert(offsetof(GA_TelescopeRest_C_K2_OnEndAbility, bWasCancelled) == 0x000000, "Member 'GA_TelescopeRest_C_K2_OnEndAbility::bWasCancelled' has a wrong offset!");

}

