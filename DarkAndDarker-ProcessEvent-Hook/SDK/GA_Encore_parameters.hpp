#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_Encore

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"
#include "GameplayAbilities_structs.hpp"


namespace SDK::Params
{

// Function GA_Encore.GA_Encore_C.EventReceived_1D679BCA4BE8738D12DAEB8FB3E837DD
// 0x00B8 (0x00B8 - 0x0000)
struct GA_Encore_C_EventReceived_1D679BCA4BE8738D12DAEB8FB3E837DD final
{
public:
	struct FGameplayTag                           EventTag;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEventData                     EventData;                                         // 0x0008(0x00B0)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(GA_Encore_C_EventReceived_1D679BCA4BE8738D12DAEB8FB3E837DD) == 0x000008, "Wrong alignment on GA_Encore_C_EventReceived_1D679BCA4BE8738D12DAEB8FB3E837DD");
static_assert(sizeof(GA_Encore_C_EventReceived_1D679BCA4BE8738D12DAEB8FB3E837DD) == 0x0000B8, "Wrong size on GA_Encore_C_EventReceived_1D679BCA4BE8738D12DAEB8FB3E837DD");
static_assert(offsetof(GA_Encore_C_EventReceived_1D679BCA4BE8738D12DAEB8FB3E837DD, EventTag) == 0x000000, "Member 'GA_Encore_C_EventReceived_1D679BCA4BE8738D12DAEB8FB3E837DD::EventTag' has a wrong offset!");
static_assert(offsetof(GA_Encore_C_EventReceived_1D679BCA4BE8738D12DAEB8FB3E837DD, EventData) == 0x000008, "Member 'GA_Encore_C_EventReceived_1D679BCA4BE8738D12DAEB8FB3E837DD::EventData' has a wrong offset!");

// Function GA_Encore.GA_Encore_C.ExecuteUbergraph_GA_Encore
// 0x01A8 (0x01A8 - 0x0000)
struct GA_Encore_C_ExecuteUbergraph_GA_Encore final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_CustomEvent_EventTag;                       // 0x0004(0x0008)(NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5710[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayEventData                     K2Node_CustomEvent_EventData;                      // 0x0010(0x00B0)()
	TDelegate<void(const struct FGameplayTag& EventTag, const struct FGameplayEventData& EventData)> K2Node_CreateDelegate_OutputDelegate;              // 0x00C0(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEventData                     Temp_struct_Variable;                              // 0x00D0(0x00B0)()
	struct FGameplayTag                           Temp_struct_Variable_1;                            // 0x0180(0x0008)(NoDestructor, HasGetValueTypeHash)
	class UDCAT_WaitForGameplayEvents*            CallFunc_WaitForGameplayEvents_ReturnValue;        // 0x0188(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5711[0x3];                                     // 0x0191(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           K2Node_Event_SkillTag;                             // 0x0194(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_Event_CooldownTag;                          // 0x019C(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Encore_C_ExecuteUbergraph_GA_Encore) == 0x000008, "Wrong alignment on GA_Encore_C_ExecuteUbergraph_GA_Encore");
static_assert(sizeof(GA_Encore_C_ExecuteUbergraph_GA_Encore) == 0x0001A8, "Wrong size on GA_Encore_C_ExecuteUbergraph_GA_Encore");
static_assert(offsetof(GA_Encore_C_ExecuteUbergraph_GA_Encore, EntryPoint) == 0x000000, "Member 'GA_Encore_C_ExecuteUbergraph_GA_Encore::EntryPoint' has a wrong offset!");
static_assert(offsetof(GA_Encore_C_ExecuteUbergraph_GA_Encore, K2Node_CustomEvent_EventTag) == 0x000004, "Member 'GA_Encore_C_ExecuteUbergraph_GA_Encore::K2Node_CustomEvent_EventTag' has a wrong offset!");
static_assert(offsetof(GA_Encore_C_ExecuteUbergraph_GA_Encore, K2Node_CustomEvent_EventData) == 0x000010, "Member 'GA_Encore_C_ExecuteUbergraph_GA_Encore::K2Node_CustomEvent_EventData' has a wrong offset!");
static_assert(offsetof(GA_Encore_C_ExecuteUbergraph_GA_Encore, K2Node_CreateDelegate_OutputDelegate) == 0x0000C0, "Member 'GA_Encore_C_ExecuteUbergraph_GA_Encore::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(GA_Encore_C_ExecuteUbergraph_GA_Encore, Temp_struct_Variable) == 0x0000D0, "Member 'GA_Encore_C_ExecuteUbergraph_GA_Encore::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(GA_Encore_C_ExecuteUbergraph_GA_Encore, Temp_struct_Variable_1) == 0x000180, "Member 'GA_Encore_C_ExecuteUbergraph_GA_Encore::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(GA_Encore_C_ExecuteUbergraph_GA_Encore, CallFunc_WaitForGameplayEvents_ReturnValue) == 0x000188, "Member 'GA_Encore_C_ExecuteUbergraph_GA_Encore::CallFunc_WaitForGameplayEvents_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Encore_C_ExecuteUbergraph_GA_Encore, CallFunc_IsValid_ReturnValue) == 0x000190, "Member 'GA_Encore_C_ExecuteUbergraph_GA_Encore::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Encore_C_ExecuteUbergraph_GA_Encore, K2Node_Event_SkillTag) == 0x000194, "Member 'GA_Encore_C_ExecuteUbergraph_GA_Encore::K2Node_Event_SkillTag' has a wrong offset!");
static_assert(offsetof(GA_Encore_C_ExecuteUbergraph_GA_Encore, K2Node_Event_CooldownTag) == 0x00019C, "Member 'GA_Encore_C_ExecuteUbergraph_GA_Encore::K2Node_Event_CooldownTag' has a wrong offset!");

// Function GA_Encore.GA_Encore_C.ServerOnSkillActivate
// 0x0010 (0x0010 - 0x0000)
struct GA_Encore_C_ServerOnSkillActivate final
{
public:
	struct FGameplayTag                           SkillTag;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           CooldownTag;                                       // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Encore_C_ServerOnSkillActivate) == 0x000004, "Wrong alignment on GA_Encore_C_ServerOnSkillActivate");
static_assert(sizeof(GA_Encore_C_ServerOnSkillActivate) == 0x000010, "Wrong size on GA_Encore_C_ServerOnSkillActivate");
static_assert(offsetof(GA_Encore_C_ServerOnSkillActivate, SkillTag) == 0x000000, "Member 'GA_Encore_C_ServerOnSkillActivate::SkillTag' has a wrong offset!");
static_assert(offsetof(GA_Encore_C_ServerOnSkillActivate, CooldownTag) == 0x000008, "Member 'GA_Encore_C_ServerOnSkillActivate::CooldownTag' has a wrong offset!");

}

