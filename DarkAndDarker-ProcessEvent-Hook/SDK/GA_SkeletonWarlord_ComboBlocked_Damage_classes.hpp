#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_SkeletonWarlord_ComboBlocked_Damage

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "GA_MonsterGameplayAbilityBase_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass GA_SkeletonWarlord_ComboBlocked_Damage.GA_SkeletonWarlord_ComboBlocked_Damage_C
// 0x0030 (0x05F8 - 0x05C8)
class UGA_SkeletonWarlord_ComboBlocked_Damage_C final : public UGA_MonsterGameplayAbilityBase_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x05C8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FVector                                Spawn_Point;                                       // 0x05D0(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Explosion_Radius;                                  // 0x05E8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_52AC[0x4];                                     // 0x05EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           Add_Damage_TimerHandle;                            // 0x05F0(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void AbilityActivated(const struct FGameplayEventData& TriggerEventData);
	void CustomEvent();
	void ExecuteUbergraph_GA_SkeletonWarlord_ComboBlocked_Damage(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GA_SkeletonWarlord_ComboBlocked_Damage_C">();
	}
	static class UGA_SkeletonWarlord_ComboBlocked_Damage_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGA_SkeletonWarlord_ComboBlocked_Damage_C>();
	}
};
static_assert(alignof(UGA_SkeletonWarlord_ComboBlocked_Damage_C) == 0x000008, "Wrong alignment on UGA_SkeletonWarlord_ComboBlocked_Damage_C");
static_assert(sizeof(UGA_SkeletonWarlord_ComboBlocked_Damage_C) == 0x0005F8, "Wrong size on UGA_SkeletonWarlord_ComboBlocked_Damage_C");
static_assert(offsetof(UGA_SkeletonWarlord_ComboBlocked_Damage_C, UberGraphFrame) == 0x0005C8, "Member 'UGA_SkeletonWarlord_ComboBlocked_Damage_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UGA_SkeletonWarlord_ComboBlocked_Damage_C, Spawn_Point) == 0x0005D0, "Member 'UGA_SkeletonWarlord_ComboBlocked_Damage_C::Spawn_Point' has a wrong offset!");
static_assert(offsetof(UGA_SkeletonWarlord_ComboBlocked_Damage_C, Explosion_Radius) == 0x0005E8, "Member 'UGA_SkeletonWarlord_ComboBlocked_Damage_C::Explosion_Radius' has a wrong offset!");
static_assert(offsetof(UGA_SkeletonWarlord_ComboBlocked_Damage_C, Add_Damage_TimerHandle) == 0x0005F0, "Member 'UGA_SkeletonWarlord_ComboBlocked_Damage_C::Add_Damage_TimerHandle' has a wrong offset!");

}

