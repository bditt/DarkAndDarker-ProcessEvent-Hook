#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ABP_Lantern

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "DungeonCrawler_classes.hpp"
#include "CoreUObject_structs.hpp"
#include "ABP_Lantern_structs.hpp"
#include "AnimGraphRuntime_structs.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass ABP_Lantern.ABP_Lantern_C
// 0x0B60 (0x11C0 - 0x0660)
class UABP_Lantern_C final : public UItemWeaponAnimInstanceBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0660(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct ABP_Lantern::FAnimBlueprintGeneratedMutableData __AnimBlueprintMutables;                           // 0x0668(0x0010)(HasGetValueTypeHash)
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_PropertyAccess;             // 0x0678(0x0008)()
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_Base;                       // 0x0680(0x0008)()
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x0688(0x0020)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_1;                  // 0x06A8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult;                    // 0x06D0(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_4;                    // 0x06F8(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_1;                       // 0x0740(0x0020)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_3;                        // 0x0760(0x0128)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_1;             // 0x0888(0x0020)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_1;             // 0x08A8(0x0020)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_2;                        // 0x08C8(0x0128)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_3;                    // 0x09F0(0x0048)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_3;                   // 0x0A38(0x0048)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_1;                        // 0x0A80(0x0128)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_2;                   // 0x0BA8(0x0048)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace;               // 0x0BF0(0x0020)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace;               // 0x0C10(0x0020)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone;                          // 0x0C30(0x0128)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_2;                    // 0x0D58(0x0048)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot;                                // 0x0DA0(0x0048)()
	struct FAnimNode_RotationOffsetBlendSpace     AnimGraphNode_RotationOffsetBlendSpace;            // 0x0DE8(0x0118)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_1;                    // 0x0F00(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x0F48(0x0048)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_1;                   // 0x0F90(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult;                         // 0x0FD8(0x0020)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine;                        // 0x0FF8(0x00C8)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool;                     // 0x10C0(0x0048)()
	struct FAnimNode_PoseSnapshot                 AnimGraphNode_PoseSnapshot;                        // 0x1108(0x0090)()
	bool                                          bIsInHand;                                         // 0x1198(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4133[0x7];                                     // 0x1199(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               OwnerActorRotation;                                // 0x11A0(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bIsPrimaryAttacking;                               // 0x11B8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsSpecialAttacking;                               // 0x11B9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsInteractInstall;                                // 0x11BA(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsItemConsume;                                    // 0x11BB(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsItemEquipPrimary;                               // 0x11BC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsPlayMusic;                                      // 0x11BD(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsSkillAnimating;                                 // 0x11BE(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsPrimaryMontagePlaying;                          // 0x11BF(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void AnimGraph(struct FPoseLink* Param_AnimGraph);
	void BlueprintThreadSafeUpdateAnimation(float DeltaTime);
	void BlueprintUpdateAnimation(float DeltaTimeX);
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Lantern_AnimGraphNode_BlendListByBool_01D67BD44B9852EF767DA5931A92ECC2();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Lantern_AnimGraphNode_BlendListByBool_FCD1F97C478C954D9D553FB9B5F0D858();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Lantern_AnimGraphNode_ModifyBone_35AE8B904B7BCEEC064A8D86A8175F6F();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Lantern_AnimGraphNode_SequencePlayer_E122A4D948C5D31C9899F2BF10F6E186();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Lantern_AnimGraphNode_TransitionResult_677867BB4FE8C8CF64F511B52602A76E();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Lantern_AnimGraphNode_TransitionResult_E6E75154404BF5531C91919C63DF5452();
	void ExecuteUbergraph_ABP_Lantern(int32 EntryPoint);
	void OnItemDataUpdated(const struct FItemData& ItemData);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ABP_Lantern_C">();
	}
	static class UABP_Lantern_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UABP_Lantern_C>();
	}
};
static_assert(alignof(UABP_Lantern_C) == 0x000010, "Wrong alignment on UABP_Lantern_C");
static_assert(sizeof(UABP_Lantern_C) == 0x0011C0, "Wrong size on UABP_Lantern_C");
static_assert(offsetof(UABP_Lantern_C, UberGraphFrame) == 0x000660, "Member 'UABP_Lantern_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UABP_Lantern_C, __AnimBlueprintMutables) == 0x000668, "Member 'UABP_Lantern_C::__AnimBlueprintMutables' has a wrong offset!");
static_assert(offsetof(UABP_Lantern_C, AnimBlueprintExtension_PropertyAccess) == 0x000678, "Member 'UABP_Lantern_C::AnimBlueprintExtension_PropertyAccess' has a wrong offset!");
static_assert(offsetof(UABP_Lantern_C, AnimBlueprintExtension_Base) == 0x000680, "Member 'UABP_Lantern_C::AnimBlueprintExtension_Base' has a wrong offset!");
static_assert(offsetof(UABP_Lantern_C, AnimGraphNode_Root) == 0x000688, "Member 'UABP_Lantern_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UABP_Lantern_C, AnimGraphNode_TransitionResult_1) == 0x0006A8, "Member 'UABP_Lantern_C::AnimGraphNode_TransitionResult_1' has a wrong offset!");
static_assert(offsetof(UABP_Lantern_C, AnimGraphNode_TransitionResult) == 0x0006D0, "Member 'UABP_Lantern_C::AnimGraphNode_TransitionResult' has a wrong offset!");
static_assert(offsetof(UABP_Lantern_C, AnimGraphNode_SequencePlayer_4) == 0x0006F8, "Member 'UABP_Lantern_C::AnimGraphNode_SequencePlayer_4' has a wrong offset!");
static_assert(offsetof(UABP_Lantern_C, AnimGraphNode_StateResult_1) == 0x000740, "Member 'UABP_Lantern_C::AnimGraphNode_StateResult_1' has a wrong offset!");
static_assert(offsetof(UABP_Lantern_C, AnimGraphNode_ModifyBone_3) == 0x000760, "Member 'UABP_Lantern_C::AnimGraphNode_ModifyBone_3' has a wrong offset!");
static_assert(offsetof(UABP_Lantern_C, AnimGraphNode_ComponentToLocalSpace_1) == 0x000888, "Member 'UABP_Lantern_C::AnimGraphNode_ComponentToLocalSpace_1' has a wrong offset!");
static_assert(offsetof(UABP_Lantern_C, AnimGraphNode_LocalToComponentSpace_1) == 0x0008A8, "Member 'UABP_Lantern_C::AnimGraphNode_LocalToComponentSpace_1' has a wrong offset!");
static_assert(offsetof(UABP_Lantern_C, AnimGraphNode_ModifyBone_2) == 0x0008C8, "Member 'UABP_Lantern_C::AnimGraphNode_ModifyBone_2' has a wrong offset!");
static_assert(offsetof(UABP_Lantern_C, AnimGraphNode_SequencePlayer_3) == 0x0009F0, "Member 'UABP_Lantern_C::AnimGraphNode_SequencePlayer_3' has a wrong offset!");
static_assert(offsetof(UABP_Lantern_C, AnimGraphNode_BlendListByBool_3) == 0x000A38, "Member 'UABP_Lantern_C::AnimGraphNode_BlendListByBool_3' has a wrong offset!");
static_assert(offsetof(UABP_Lantern_C, AnimGraphNode_ModifyBone_1) == 0x000A80, "Member 'UABP_Lantern_C::AnimGraphNode_ModifyBone_1' has a wrong offset!");
static_assert(offsetof(UABP_Lantern_C, AnimGraphNode_BlendListByBool_2) == 0x000BA8, "Member 'UABP_Lantern_C::AnimGraphNode_BlendListByBool_2' has a wrong offset!");
static_assert(offsetof(UABP_Lantern_C, AnimGraphNode_ComponentToLocalSpace) == 0x000BF0, "Member 'UABP_Lantern_C::AnimGraphNode_ComponentToLocalSpace' has a wrong offset!");
static_assert(offsetof(UABP_Lantern_C, AnimGraphNode_LocalToComponentSpace) == 0x000C10, "Member 'UABP_Lantern_C::AnimGraphNode_LocalToComponentSpace' has a wrong offset!");
static_assert(offsetof(UABP_Lantern_C, AnimGraphNode_ModifyBone) == 0x000C30, "Member 'UABP_Lantern_C::AnimGraphNode_ModifyBone' has a wrong offset!");
static_assert(offsetof(UABP_Lantern_C, AnimGraphNode_SequencePlayer_2) == 0x000D58, "Member 'UABP_Lantern_C::AnimGraphNode_SequencePlayer_2' has a wrong offset!");
static_assert(offsetof(UABP_Lantern_C, AnimGraphNode_Slot) == 0x000DA0, "Member 'UABP_Lantern_C::AnimGraphNode_Slot' has a wrong offset!");
static_assert(offsetof(UABP_Lantern_C, AnimGraphNode_RotationOffsetBlendSpace) == 0x000DE8, "Member 'UABP_Lantern_C::AnimGraphNode_RotationOffsetBlendSpace' has a wrong offset!");
static_assert(offsetof(UABP_Lantern_C, AnimGraphNode_SequencePlayer_1) == 0x000F00, "Member 'UABP_Lantern_C::AnimGraphNode_SequencePlayer_1' has a wrong offset!");
static_assert(offsetof(UABP_Lantern_C, AnimGraphNode_SequencePlayer) == 0x000F48, "Member 'UABP_Lantern_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(UABP_Lantern_C, AnimGraphNode_BlendListByBool_1) == 0x000F90, "Member 'UABP_Lantern_C::AnimGraphNode_BlendListByBool_1' has a wrong offset!");
static_assert(offsetof(UABP_Lantern_C, AnimGraphNode_StateResult) == 0x000FD8, "Member 'UABP_Lantern_C::AnimGraphNode_StateResult' has a wrong offset!");
static_assert(offsetof(UABP_Lantern_C, AnimGraphNode_StateMachine) == 0x000FF8, "Member 'UABP_Lantern_C::AnimGraphNode_StateMachine' has a wrong offset!");
static_assert(offsetof(UABP_Lantern_C, AnimGraphNode_BlendListByBool) == 0x0010C0, "Member 'UABP_Lantern_C::AnimGraphNode_BlendListByBool' has a wrong offset!");
static_assert(offsetof(UABP_Lantern_C, AnimGraphNode_PoseSnapshot) == 0x001108, "Member 'UABP_Lantern_C::AnimGraphNode_PoseSnapshot' has a wrong offset!");
static_assert(offsetof(UABP_Lantern_C, bIsInHand) == 0x001198, "Member 'UABP_Lantern_C::bIsInHand' has a wrong offset!");
static_assert(offsetof(UABP_Lantern_C, OwnerActorRotation) == 0x0011A0, "Member 'UABP_Lantern_C::OwnerActorRotation' has a wrong offset!");
static_assert(offsetof(UABP_Lantern_C, bIsPrimaryAttacking) == 0x0011B8, "Member 'UABP_Lantern_C::bIsPrimaryAttacking' has a wrong offset!");
static_assert(offsetof(UABP_Lantern_C, bIsSpecialAttacking) == 0x0011B9, "Member 'UABP_Lantern_C::bIsSpecialAttacking' has a wrong offset!");
static_assert(offsetof(UABP_Lantern_C, bIsInteractInstall) == 0x0011BA, "Member 'UABP_Lantern_C::bIsInteractInstall' has a wrong offset!");
static_assert(offsetof(UABP_Lantern_C, bIsItemConsume) == 0x0011BB, "Member 'UABP_Lantern_C::bIsItemConsume' has a wrong offset!");
static_assert(offsetof(UABP_Lantern_C, bIsItemEquipPrimary) == 0x0011BC, "Member 'UABP_Lantern_C::bIsItemEquipPrimary' has a wrong offset!");
static_assert(offsetof(UABP_Lantern_C, bIsPlayMusic) == 0x0011BD, "Member 'UABP_Lantern_C::bIsPlayMusic' has a wrong offset!");
static_assert(offsetof(UABP_Lantern_C, bIsSkillAnimating) == 0x0011BE, "Member 'UABP_Lantern_C::bIsSkillAnimating' has a wrong offset!");
static_assert(offsetof(UABP_Lantern_C, bIsPrimaryMontagePlaying) == 0x0011BF, "Member 'UABP_Lantern_C::bIsPrimaryMontagePlaying' has a wrong offset!");

}

