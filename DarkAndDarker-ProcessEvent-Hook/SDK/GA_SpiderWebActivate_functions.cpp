#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_SpiderWebActivate

#include "Basic.hpp"

#include "GA_SpiderWebActivate_classes.hpp"
#include "GA_SpiderWebActivate_parameters.hpp"


namespace SDK
{

// Function GA_SpiderWebActivate.GA_SpiderWebActivate_C.AbilityActivated
// (Event, Public, BlueprintEvent)
// Parameters:
// struct FGameplayEventData               TriggerEventData                                       (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm)

void UGA_SpiderWebActivate_C::AbilityActivated(const struct FGameplayEventData& TriggerEventData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_SpiderWebActivate_C", "AbilityActivated");

	Params::GA_SpiderWebActivate_C_AbilityActivated Parms{};

	Parms.TriggerEventData = std::move(TriggerEventData);

	UObject::ProcessEvent(Func, &Parms);
}


// Function GA_SpiderWebActivate.GA_SpiderWebActivate_C.ExecuteUbergraph_GA_SpiderWebActivate
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UGA_SpiderWebActivate_C::ExecuteUbergraph_GA_SpiderWebActivate(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_SpiderWebActivate_C", "ExecuteUbergraph_GA_SpiderWebActivate");

	Params::GA_SpiderWebActivate_C_ExecuteUbergraph_GA_SpiderWebActivate Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GA_SpiderWebActivate.GA_SpiderWebActivate_C.K2_OnEndAbility
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bWasCancelled                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UGA_SpiderWebActivate_C::K2_OnEndAbility(bool bWasCancelled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_SpiderWebActivate_C", "K2_OnEndAbility");

	Params::GA_SpiderWebActivate_C_K2_OnEndAbility Parms{};

	Parms.bWasCancelled = bWasCancelled;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GA_SpiderWebActivate.GA_SpiderWebActivate_C.OnAuraOverlapBeginEvent
// (Event, Public, BlueprintEvent)
// Parameters:
// class AActor*                           TargetActor                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UGA_SpiderWebActivate_C::OnAuraOverlapBeginEvent(class AActor* TargetActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_SpiderWebActivate_C", "OnAuraOverlapBeginEvent");

	Params::GA_SpiderWebActivate_C_OnAuraOverlapBeginEvent Parms{};

	Parms.TargetActor = TargetActor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GA_SpiderWebActivate.GA_SpiderWebActivate_C.OnChange_99C7DE264BB694FE1F05E7934C39DE88
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   OldValue                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   NewValue                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UGA_SpiderWebActivate_C::OnChange_99C7DE264BB694FE1F05E7934C39DE88(float OldValue, float NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_SpiderWebActivate_C", "OnChange_99C7DE264BB694FE1F05E7934C39DE88");

	Params::GA_SpiderWebActivate_C_OnChange_99C7DE264BB694FE1F05E7934C39DE88 Parms{};

	Parms.OldValue = OldValue;
	Parms.NewValue = NewValue;

	UObject::ProcessEvent(Func, &Parms);
}

}

