#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_PedestalPortalScrollBase

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "DungeonCrawler_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_PedestalPortalScrollBase.BP_PedestalPortalScrollBase_C
// 0x0028 (0x0420 - 0x03F8)
class ABP_PedestalPortalScrollBase_C : public ADCPedestalPortalScrollBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x03F8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UDCAkComponent*                         DCAk;                                              // 0x0400(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          Box;                                               // 0x0408(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UDCSkeletalMeshComponent*               DCSkeletalMesh;                                    // 0x0410(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstance*                      RiseMaterial;                                      // 0x0418(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

public:
	void ClosePortalScroll(class ADCPlayerCharacterBase* Character);
	void ExecuteUbergraph_BP_PedestalPortalScrollBase(int32 EntryPoint);
	void FX_PlayerPortalInteraction(class ADCPlayerCharacterBase* PlayerCharacter);
	void InteractSucceed(class AActor* Interacter, const struct FGameplayTag& StateTag, const struct FGameplayTag& TriggerTag, const struct FHitResult& HitResult);
	void ReceiveBeginPlay();
	void SetPortalHeadStoneMaterial();
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_PedestalPortalScrollBase_C">();
	}
	static class ABP_PedestalPortalScrollBase_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_PedestalPortalScrollBase_C>();
	}
};
static_assert(alignof(ABP_PedestalPortalScrollBase_C) == 0x000008, "Wrong alignment on ABP_PedestalPortalScrollBase_C");
static_assert(sizeof(ABP_PedestalPortalScrollBase_C) == 0x000420, "Wrong size on ABP_PedestalPortalScrollBase_C");
static_assert(offsetof(ABP_PedestalPortalScrollBase_C, UberGraphFrame) == 0x0003F8, "Member 'ABP_PedestalPortalScrollBase_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_PedestalPortalScrollBase_C, DCAk) == 0x000400, "Member 'ABP_PedestalPortalScrollBase_C::DCAk' has a wrong offset!");
static_assert(offsetof(ABP_PedestalPortalScrollBase_C, Box) == 0x000408, "Member 'ABP_PedestalPortalScrollBase_C::Box' has a wrong offset!");
static_assert(offsetof(ABP_PedestalPortalScrollBase_C, DCSkeletalMesh) == 0x000410, "Member 'ABP_PedestalPortalScrollBase_C::DCSkeletalMesh' has a wrong offset!");
static_assert(offsetof(ABP_PedestalPortalScrollBase_C, RiseMaterial) == 0x000418, "Member 'ABP_PedestalPortalScrollBase_C::RiseMaterial' has a wrong offset!");

}

