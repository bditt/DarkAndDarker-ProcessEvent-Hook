#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_GoblinWarrior_Interaction_2

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "GA_PlayMontageAndWaitForEventBase_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass GA_GoblinWarrior_Interaction_2.GA_GoblinWarrior_Interaction_2_C
// 0x0010 (0x0688 - 0x0678)
class UGA_GoblinWarrior_Interaction_2_C final : public UGA_PlayMontageAndWaitForEventBase_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_GA_GoblinWarrior_Interaction_2_C;   // 0x0678(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FTimerHandle                           Rotation_TimerHandle;                              // 0x0680(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void AbilityActivated(const struct FGameplayEventData& TriggerEventData);
	void EventReceived_54FAB9564F96290A84B48B89342BD34A(const struct FGameplayEventData& Payload);
	void ExecuteUbergraph_GA_GoblinWarrior_Interaction_2(int32 EntryPoint);
	void K2_OnEndAbility(bool bWasCancelled);
	void Rotate_To_Actor();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GA_GoblinWarrior_Interaction_2_C">();
	}
	static class UGA_GoblinWarrior_Interaction_2_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGA_GoblinWarrior_Interaction_2_C>();
	}
};
static_assert(alignof(UGA_GoblinWarrior_Interaction_2_C) == 0x000008, "Wrong alignment on UGA_GoblinWarrior_Interaction_2_C");
static_assert(sizeof(UGA_GoblinWarrior_Interaction_2_C) == 0x000688, "Wrong size on UGA_GoblinWarrior_Interaction_2_C");
static_assert(offsetof(UGA_GoblinWarrior_Interaction_2_C, UberGraphFrame_GA_GoblinWarrior_Interaction_2_C) == 0x000678, "Member 'UGA_GoblinWarrior_Interaction_2_C::UberGraphFrame_GA_GoblinWarrior_Interaction_2_C' has a wrong offset!");
static_assert(offsetof(UGA_GoblinWarrior_Interaction_2_C, Rotation_TimerHandle) == 0x000680, "Member 'UGA_GoblinWarrior_Interaction_2_C::Rotation_TimerHandle' has a wrong offset!");

}

