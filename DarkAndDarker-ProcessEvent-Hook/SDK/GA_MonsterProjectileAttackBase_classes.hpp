#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_MonsterProjectileAttackBase

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "DungeonCrawler_structs.hpp"
#include "DungeonCrawler_classes.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass GA_MonsterProjectileAttackBase.GA_MonsterProjectileAttackBase_C
// 0x00F0 (0x0848 - 0x0758)
class UGA_MonsterProjectileAttackBase_C : public UGA_MonsterChargedRangedAttackBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0758(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	EHitBoxType                                   Hit_Box_To_Multi_Projectile;                       // 0x0760(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C94[0x7];                                     // 0x0761(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FVector>                        Spawn_Location;                                    // 0x0768(0x0010)(Edit, BlueprintVisible)
	TArray<struct FRotator>                       Shooting_Direction;                                // 0x0778(0x0010)(Edit, BlueprintVisible)
	struct FVector                                Spawn_Transform_Scale;                             // 0x0788(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Fire_Power;                                        // 0x07A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Set_Pierce_Count;                                  // 0x07A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Set_Obstacle_Pierce;                               // 0x07B0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C95[0x7];                                     // 0x07B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Set_Obstacle_Pierce_Decrease;                      // 0x07B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Is_Homing_Projectile;                              // 0x07C0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C96[0x7];                                     // 0x07C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Homing_Acceleration_Magnitude;                     // 0x07C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   TargetActor;                                       // 0x07D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_DCMonsterBase_C*                    As_BP_DCMonster_Base;                              // 0x07D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class ADCCharacterBase*                       As_DCCharacter_Base;                               // 0x07E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UProjectileMovementComponent*           Projectile_Movement;                               // 0x07E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AProjectileActor*                       Projectile_Actor;                                  // 0x07F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	double                                        RotationSpeed;                                     // 0x07F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Without_Pitch;                                     // 0x0800(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EHitBoxType                                   Hit_Box_To_Rotate;                                 // 0x0801(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C97[0x2];                                     // 0x0802(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           EndTagSignal;                                      // 0x0804(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C98[0x4];                                     // 0x080C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Target_s_HitBox_Location;                          // 0x0810(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Out_Socket_Location;                               // 0x0828(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Premade_Spec_Container_Tag;                        // 0x0840(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void AbilityActivated(const struct FGameplayEventData& TriggerEventData);
	void CreateProjectiles(const struct FGameplayTag& EventTag, const struct FGameplayEventData& EventData, float FirePower, const struct FVector& StartLocation);
	void EventReceived_FF8A911F49704E3033475794D8E16251(const struct FGameplayTag& EventTag, const struct FGameplayEventData& EventData);
	void ExecuteUbergraph_GA_MonsterProjectileAttackBase(int32 EntryPoint);
	void GetBBTargetActor(bool* Result, class UObject** Return_Value);
	void GetBBTargetActorToCharacterBase(bool* Result, class ADCCharacterBase** Param_As_DCCharacter_Base);
	void GetBBTargetActorToMonsterBase(bool* Result, class ABP_DCMonsterBaseWithOptions_C** DCMonsterBaseWithOptions);
	void OnSuccess_F5E50B8644363E6A2924759BA396758A(class AActor* ProjectileActor);
	void OnSuccess_F7E3C6614A5311DD050E5CB226F07D8A(class AActor* ProjectileActor);
	void Set_Options(class AProjectileActor* ProjectileActorInput);
	void SetHoming(bool* Bool);
	void SetSpec(class AProjectileActor** ProjectileActorOutput);
	void SetTransform(const struct FVector& ShootLocation_Input, const struct FRotator& ShootRotation_Input, struct FVector* ShootLocation_Output, struct FRotator* ShootRotation_Output);
	void SetTransform_To_Target_s_HitBox(const struct FVector& ShootLocation_Input, const struct FRotator& ShootRotation_Input, struct FVector* ShootLocation_Output, struct FRotator* ShootRotation_Output);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GA_MonsterProjectileAttackBase_C">();
	}
	static class UGA_MonsterProjectileAttackBase_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGA_MonsterProjectileAttackBase_C>();
	}
};
static_assert(alignof(UGA_MonsterProjectileAttackBase_C) == 0x000008, "Wrong alignment on UGA_MonsterProjectileAttackBase_C");
static_assert(sizeof(UGA_MonsterProjectileAttackBase_C) == 0x000848, "Wrong size on UGA_MonsterProjectileAttackBase_C");
static_assert(offsetof(UGA_MonsterProjectileAttackBase_C, UberGraphFrame) == 0x000758, "Member 'UGA_MonsterProjectileAttackBase_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UGA_MonsterProjectileAttackBase_C, Hit_Box_To_Multi_Projectile) == 0x000760, "Member 'UGA_MonsterProjectileAttackBase_C::Hit_Box_To_Multi_Projectile' has a wrong offset!");
static_assert(offsetof(UGA_MonsterProjectileAttackBase_C, Spawn_Location) == 0x000768, "Member 'UGA_MonsterProjectileAttackBase_C::Spawn_Location' has a wrong offset!");
static_assert(offsetof(UGA_MonsterProjectileAttackBase_C, Shooting_Direction) == 0x000778, "Member 'UGA_MonsterProjectileAttackBase_C::Shooting_Direction' has a wrong offset!");
static_assert(offsetof(UGA_MonsterProjectileAttackBase_C, Spawn_Transform_Scale) == 0x000788, "Member 'UGA_MonsterProjectileAttackBase_C::Spawn_Transform_Scale' has a wrong offset!");
static_assert(offsetof(UGA_MonsterProjectileAttackBase_C, Fire_Power) == 0x0007A0, "Member 'UGA_MonsterProjectileAttackBase_C::Fire_Power' has a wrong offset!");
static_assert(offsetof(UGA_MonsterProjectileAttackBase_C, Set_Pierce_Count) == 0x0007A8, "Member 'UGA_MonsterProjectileAttackBase_C::Set_Pierce_Count' has a wrong offset!");
static_assert(offsetof(UGA_MonsterProjectileAttackBase_C, Set_Obstacle_Pierce) == 0x0007B0, "Member 'UGA_MonsterProjectileAttackBase_C::Set_Obstacle_Pierce' has a wrong offset!");
static_assert(offsetof(UGA_MonsterProjectileAttackBase_C, Set_Obstacle_Pierce_Decrease) == 0x0007B8, "Member 'UGA_MonsterProjectileAttackBase_C::Set_Obstacle_Pierce_Decrease' has a wrong offset!");
static_assert(offsetof(UGA_MonsterProjectileAttackBase_C, Is_Homing_Projectile) == 0x0007C0, "Member 'UGA_MonsterProjectileAttackBase_C::Is_Homing_Projectile' has a wrong offset!");
static_assert(offsetof(UGA_MonsterProjectileAttackBase_C, Homing_Acceleration_Magnitude) == 0x0007C8, "Member 'UGA_MonsterProjectileAttackBase_C::Homing_Acceleration_Magnitude' has a wrong offset!");
static_assert(offsetof(UGA_MonsterProjectileAttackBase_C, TargetActor) == 0x0007D0, "Member 'UGA_MonsterProjectileAttackBase_C::TargetActor' has a wrong offset!");
static_assert(offsetof(UGA_MonsterProjectileAttackBase_C, As_BP_DCMonster_Base) == 0x0007D8, "Member 'UGA_MonsterProjectileAttackBase_C::As_BP_DCMonster_Base' has a wrong offset!");
static_assert(offsetof(UGA_MonsterProjectileAttackBase_C, As_DCCharacter_Base) == 0x0007E0, "Member 'UGA_MonsterProjectileAttackBase_C::As_DCCharacter_Base' has a wrong offset!");
static_assert(offsetof(UGA_MonsterProjectileAttackBase_C, Projectile_Movement) == 0x0007E8, "Member 'UGA_MonsterProjectileAttackBase_C::Projectile_Movement' has a wrong offset!");
static_assert(offsetof(UGA_MonsterProjectileAttackBase_C, Projectile_Actor) == 0x0007F0, "Member 'UGA_MonsterProjectileAttackBase_C::Projectile_Actor' has a wrong offset!");
static_assert(offsetof(UGA_MonsterProjectileAttackBase_C, RotationSpeed) == 0x0007F8, "Member 'UGA_MonsterProjectileAttackBase_C::RotationSpeed' has a wrong offset!");
static_assert(offsetof(UGA_MonsterProjectileAttackBase_C, Without_Pitch) == 0x000800, "Member 'UGA_MonsterProjectileAttackBase_C::Without_Pitch' has a wrong offset!");
static_assert(offsetof(UGA_MonsterProjectileAttackBase_C, Hit_Box_To_Rotate) == 0x000801, "Member 'UGA_MonsterProjectileAttackBase_C::Hit_Box_To_Rotate' has a wrong offset!");
static_assert(offsetof(UGA_MonsterProjectileAttackBase_C, EndTagSignal) == 0x000804, "Member 'UGA_MonsterProjectileAttackBase_C::EndTagSignal' has a wrong offset!");
static_assert(offsetof(UGA_MonsterProjectileAttackBase_C, Target_s_HitBox_Location) == 0x000810, "Member 'UGA_MonsterProjectileAttackBase_C::Target_s_HitBox_Location' has a wrong offset!");
static_assert(offsetof(UGA_MonsterProjectileAttackBase_C, Out_Socket_Location) == 0x000828, "Member 'UGA_MonsterProjectileAttackBase_C::Out_Socket_Location' has a wrong offset!");
static_assert(offsetof(UGA_MonsterProjectileAttackBase_C, Premade_Spec_Container_Tag) == 0x000840, "Member 'UGA_MonsterProjectileAttackBase_C::Premade_Spec_Container_Tag' has a wrong offset!");

}

