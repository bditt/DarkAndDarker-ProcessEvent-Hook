#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Slime

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "BP_DCMonsterBaseWithOptions_classes.hpp"
#include "Engine_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Slime.BP_Slime_C
// 0x0060 (0x1440 - 0x13E0)
class ABP_Slime_C : public ABP_DCMonsterBaseWithOptions_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_Slime_C;                         // 0x13D8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UNiagaraComponent*                      Niagara;                                           // 0x13E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      FXS_Trail;                                         // 0x13E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_DCHitBox_C*                         BP_DCHitBox;                                       // 0x13F0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPhysicalAnimationComponent*            PhysicalAnimation;                                 // 0x13F8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class FName                                   Body_Name;                                         // 0x1400(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Physics_Stop;                                      // 0x1408(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C00[0x3];                                     // 0x1409(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           IdleSoundTag;                                      // 0x140C(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           DeathSoundTag;                                     // 0x1414(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Trail_Color_Primary;                               // 0x141C(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Trail_Color_Secondary;                             // 0x142C(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_Slime(int32 EntryPoint);
	void FX_OnDeath();
	void GameplayTagUpdated(const struct FGameplayTag& InGameplayTag, int32 InCount);
	void OnFMsgGASActorDieNotifyBlueprint(const struct FMsgGASActorDieNotify& InMsg);
	void ReceiveBeginPlay();
	void ReceiveTick(float DeltaSeconds);
	void SetCharacterFXState(bool Does_Activate);
	void TriggerSkill(int32 Param_Index);
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Slime_C">();
	}
	static class ABP_Slime_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_Slime_C>();
	}
};
static_assert(alignof(ABP_Slime_C) == 0x000010, "Wrong alignment on ABP_Slime_C");
static_assert(sizeof(ABP_Slime_C) == 0x001440, "Wrong size on ABP_Slime_C");
static_assert(offsetof(ABP_Slime_C, UberGraphFrame_BP_Slime_C) == 0x0013D8, "Member 'ABP_Slime_C::UberGraphFrame_BP_Slime_C' has a wrong offset!");
static_assert(offsetof(ABP_Slime_C, Niagara) == 0x0013E0, "Member 'ABP_Slime_C::Niagara' has a wrong offset!");
static_assert(offsetof(ABP_Slime_C, FXS_Trail) == 0x0013E8, "Member 'ABP_Slime_C::FXS_Trail' has a wrong offset!");
static_assert(offsetof(ABP_Slime_C, BP_DCHitBox) == 0x0013F0, "Member 'ABP_Slime_C::BP_DCHitBox' has a wrong offset!");
static_assert(offsetof(ABP_Slime_C, PhysicalAnimation) == 0x0013F8, "Member 'ABP_Slime_C::PhysicalAnimation' has a wrong offset!");
static_assert(offsetof(ABP_Slime_C, Body_Name) == 0x001400, "Member 'ABP_Slime_C::Body_Name' has a wrong offset!");
static_assert(offsetof(ABP_Slime_C, Physics_Stop) == 0x001408, "Member 'ABP_Slime_C::Physics_Stop' has a wrong offset!");
static_assert(offsetof(ABP_Slime_C, IdleSoundTag) == 0x00140C, "Member 'ABP_Slime_C::IdleSoundTag' has a wrong offset!");
static_assert(offsetof(ABP_Slime_C, DeathSoundTag) == 0x001414, "Member 'ABP_Slime_C::DeathSoundTag' has a wrong offset!");
static_assert(offsetof(ABP_Slime_C, Trail_Color_Primary) == 0x00141C, "Member 'ABP_Slime_C::Trail_Color_Primary' has a wrong offset!");
static_assert(offsetof(ABP_Slime_C, Trail_Color_Secondary) == 0x00142C, "Member 'ABP_Slime_C::Trail_Color_Secondary' has a wrong offset!");

}

