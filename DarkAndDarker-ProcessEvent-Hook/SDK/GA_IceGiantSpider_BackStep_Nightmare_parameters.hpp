#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_IceGiantSpider_BackStep_Nightmare

#include "Basic.hpp"

#include "GameplayAbilities_structs.hpp"


namespace SDK::Params
{

// Function GA_IceGiantSpider_BackStep_Nightmare.GA_IceGiantSpider_BackStep_Nightmare_C.AbilityActivated
// 0x00B0 (0x00B0 - 0x0000)
struct GA_IceGiantSpider_BackStep_Nightmare_C_AbilityActivated final
{
public:
	struct FGameplayEventData                     TriggerEventData;                                  // 0x0000(0x00B0)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(GA_IceGiantSpider_BackStep_Nightmare_C_AbilityActivated) == 0x000008, "Wrong alignment on GA_IceGiantSpider_BackStep_Nightmare_C_AbilityActivated");
static_assert(sizeof(GA_IceGiantSpider_BackStep_Nightmare_C_AbilityActivated) == 0x0000B0, "Wrong size on GA_IceGiantSpider_BackStep_Nightmare_C_AbilityActivated");
static_assert(offsetof(GA_IceGiantSpider_BackStep_Nightmare_C_AbilityActivated, TriggerEventData) == 0x000000, "Member 'GA_IceGiantSpider_BackStep_Nightmare_C_AbilityActivated::TriggerEventData' has a wrong offset!");

// Function GA_IceGiantSpider_BackStep_Nightmare.GA_IceGiantSpider_BackStep_Nightmare_C.EventReceived_7CD3B9C743928CEA02A92A9BD5000D85
// 0x00B0 (0x00B0 - 0x0000)
struct GA_IceGiantSpider_BackStep_Nightmare_C_EventReceived_7CD3B9C743928CEA02A92A9BD5000D85 final
{
public:
	struct FGameplayEventData                     Payload;                                           // 0x0000(0x00B0)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(GA_IceGiantSpider_BackStep_Nightmare_C_EventReceived_7CD3B9C743928CEA02A92A9BD5000D85) == 0x000008, "Wrong alignment on GA_IceGiantSpider_BackStep_Nightmare_C_EventReceived_7CD3B9C743928CEA02A92A9BD5000D85");
static_assert(sizeof(GA_IceGiantSpider_BackStep_Nightmare_C_EventReceived_7CD3B9C743928CEA02A92A9BD5000D85) == 0x0000B0, "Wrong size on GA_IceGiantSpider_BackStep_Nightmare_C_EventReceived_7CD3B9C743928CEA02A92A9BD5000D85");
static_assert(offsetof(GA_IceGiantSpider_BackStep_Nightmare_C_EventReceived_7CD3B9C743928CEA02A92A9BD5000D85, Payload) == 0x000000, "Member 'GA_IceGiantSpider_BackStep_Nightmare_C_EventReceived_7CD3B9C743928CEA02A92A9BD5000D85::Payload' has a wrong offset!");

// Function GA_IceGiantSpider_BackStep_Nightmare.GA_IceGiantSpider_BackStep_Nightmare_C.ExecuteUbergraph_GA_IceGiantSpider_BackStep_Nightmare
// 0x0268 (0x0268 - 0x0000)
struct GA_IceGiantSpider_BackStep_Nightmare_C_ExecuteUbergraph_GA_IceGiantSpider_BackStep_Nightmare final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const struct FGameplayEventData& Payload)> K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4218[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayEventData                     K2Node_CustomEvent_Payload;                        // 0x0018(0x00B0)()
	struct FGameplayEventData                     Temp_struct_Variable;                              // 0x00C8(0x00B0)()
	class UAbilityTask_WaitGameplayEvent*         CallFunc_WaitGameplayEvent_ReturnValue;            // 0x0178(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4219[0x7];                                     // 0x0181(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_RandomFloatInRange_ReturnValue;           // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bWasCancelled;                        // 0x0191(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_421A[0x6];                                     // 0x0192(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayEventData                     K2Node_Event_TriggerEventData;                     // 0x0198(0x00B0)(ConstParm)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x0248(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0249(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_421B[0x6];                                     // 0x024A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetAvatarActorFromActorInfo_ReturnValue;  // 0x0250(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_IceGiantSpider_C*                   K2Node_DynamicCast_AsBP_Ice_Giant_Spider;          // 0x0258(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0260(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_IceGiantSpider_BackStep_Nightmare_C_ExecuteUbergraph_GA_IceGiantSpider_BackStep_Nightmare) == 0x000008, "Wrong alignment on GA_IceGiantSpider_BackStep_Nightmare_C_ExecuteUbergraph_GA_IceGiantSpider_BackStep_Nightmare");
static_assert(sizeof(GA_IceGiantSpider_BackStep_Nightmare_C_ExecuteUbergraph_GA_IceGiantSpider_BackStep_Nightmare) == 0x000268, "Wrong size on GA_IceGiantSpider_BackStep_Nightmare_C_ExecuteUbergraph_GA_IceGiantSpider_BackStep_Nightmare");
static_assert(offsetof(GA_IceGiantSpider_BackStep_Nightmare_C_ExecuteUbergraph_GA_IceGiantSpider_BackStep_Nightmare, EntryPoint) == 0x000000, "Member 'GA_IceGiantSpider_BackStep_Nightmare_C_ExecuteUbergraph_GA_IceGiantSpider_BackStep_Nightmare::EntryPoint' has a wrong offset!");
static_assert(offsetof(GA_IceGiantSpider_BackStep_Nightmare_C_ExecuteUbergraph_GA_IceGiantSpider_BackStep_Nightmare, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'GA_IceGiantSpider_BackStep_Nightmare_C_ExecuteUbergraph_GA_IceGiantSpider_BackStep_Nightmare::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(GA_IceGiantSpider_BackStep_Nightmare_C_ExecuteUbergraph_GA_IceGiantSpider_BackStep_Nightmare, K2Node_CustomEvent_Payload) == 0x000018, "Member 'GA_IceGiantSpider_BackStep_Nightmare_C_ExecuteUbergraph_GA_IceGiantSpider_BackStep_Nightmare::K2Node_CustomEvent_Payload' has a wrong offset!");
static_assert(offsetof(GA_IceGiantSpider_BackStep_Nightmare_C_ExecuteUbergraph_GA_IceGiantSpider_BackStep_Nightmare, Temp_struct_Variable) == 0x0000C8, "Member 'GA_IceGiantSpider_BackStep_Nightmare_C_ExecuteUbergraph_GA_IceGiantSpider_BackStep_Nightmare::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(GA_IceGiantSpider_BackStep_Nightmare_C_ExecuteUbergraph_GA_IceGiantSpider_BackStep_Nightmare, CallFunc_WaitGameplayEvent_ReturnValue) == 0x000178, "Member 'GA_IceGiantSpider_BackStep_Nightmare_C_ExecuteUbergraph_GA_IceGiantSpider_BackStep_Nightmare::CallFunc_WaitGameplayEvent_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_IceGiantSpider_BackStep_Nightmare_C_ExecuteUbergraph_GA_IceGiantSpider_BackStep_Nightmare, CallFunc_IsValid_ReturnValue) == 0x000180, "Member 'GA_IceGiantSpider_BackStep_Nightmare_C_ExecuteUbergraph_GA_IceGiantSpider_BackStep_Nightmare::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_IceGiantSpider_BackStep_Nightmare_C_ExecuteUbergraph_GA_IceGiantSpider_BackStep_Nightmare, CallFunc_RandomFloatInRange_ReturnValue) == 0x000188, "Member 'GA_IceGiantSpider_BackStep_Nightmare_C_ExecuteUbergraph_GA_IceGiantSpider_BackStep_Nightmare::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_IceGiantSpider_BackStep_Nightmare_C_ExecuteUbergraph_GA_IceGiantSpider_BackStep_Nightmare, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x000190, "Member 'GA_IceGiantSpider_BackStep_Nightmare_C_ExecuteUbergraph_GA_IceGiantSpider_BackStep_Nightmare::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_IceGiantSpider_BackStep_Nightmare_C_ExecuteUbergraph_GA_IceGiantSpider_BackStep_Nightmare, K2Node_Event_bWasCancelled) == 0x000191, "Member 'GA_IceGiantSpider_BackStep_Nightmare_C_ExecuteUbergraph_GA_IceGiantSpider_BackStep_Nightmare::K2Node_Event_bWasCancelled' has a wrong offset!");
static_assert(offsetof(GA_IceGiantSpider_BackStep_Nightmare_C_ExecuteUbergraph_GA_IceGiantSpider_BackStep_Nightmare, K2Node_Event_TriggerEventData) == 0x000198, "Member 'GA_IceGiantSpider_BackStep_Nightmare_C_ExecuteUbergraph_GA_IceGiantSpider_BackStep_Nightmare::K2Node_Event_TriggerEventData' has a wrong offset!");
static_assert(offsetof(GA_IceGiantSpider_BackStep_Nightmare_C_ExecuteUbergraph_GA_IceGiantSpider_BackStep_Nightmare, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x000248, "Member 'GA_IceGiantSpider_BackStep_Nightmare_C_ExecuteUbergraph_GA_IceGiantSpider_BackStep_Nightmare::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_IceGiantSpider_BackStep_Nightmare_C_ExecuteUbergraph_GA_IceGiantSpider_BackStep_Nightmare, CallFunc_BooleanOR_ReturnValue) == 0x000249, "Member 'GA_IceGiantSpider_BackStep_Nightmare_C_ExecuteUbergraph_GA_IceGiantSpider_BackStep_Nightmare::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_IceGiantSpider_BackStep_Nightmare_C_ExecuteUbergraph_GA_IceGiantSpider_BackStep_Nightmare, CallFunc_GetAvatarActorFromActorInfo_ReturnValue) == 0x000250, "Member 'GA_IceGiantSpider_BackStep_Nightmare_C_ExecuteUbergraph_GA_IceGiantSpider_BackStep_Nightmare::CallFunc_GetAvatarActorFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_IceGiantSpider_BackStep_Nightmare_C_ExecuteUbergraph_GA_IceGiantSpider_BackStep_Nightmare, K2Node_DynamicCast_AsBP_Ice_Giant_Spider) == 0x000258, "Member 'GA_IceGiantSpider_BackStep_Nightmare_C_ExecuteUbergraph_GA_IceGiantSpider_BackStep_Nightmare::K2Node_DynamicCast_AsBP_Ice_Giant_Spider' has a wrong offset!");
static_assert(offsetof(GA_IceGiantSpider_BackStep_Nightmare_C_ExecuteUbergraph_GA_IceGiantSpider_BackStep_Nightmare, K2Node_DynamicCast_bSuccess) == 0x000260, "Member 'GA_IceGiantSpider_BackStep_Nightmare_C_ExecuteUbergraph_GA_IceGiantSpider_BackStep_Nightmare::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function GA_IceGiantSpider_BackStep_Nightmare.GA_IceGiantSpider_BackStep_Nightmare_C.K2_OnEndAbility
// 0x0001 (0x0001 - 0x0000)
struct GA_IceGiantSpider_BackStep_Nightmare_C_K2_OnEndAbility final
{
public:
	bool                                          bWasCancelled;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_IceGiantSpider_BackStep_Nightmare_C_K2_OnEndAbility) == 0x000001, "Wrong alignment on GA_IceGiantSpider_BackStep_Nightmare_C_K2_OnEndAbility");
static_assert(sizeof(GA_IceGiantSpider_BackStep_Nightmare_C_K2_OnEndAbility) == 0x000001, "Wrong size on GA_IceGiantSpider_BackStep_Nightmare_C_K2_OnEndAbility");
static_assert(offsetof(GA_IceGiantSpider_BackStep_Nightmare_C_K2_OnEndAbility, bWasCancelled) == 0x000000, "Member 'GA_IceGiantSpider_BackStep_Nightmare_C_K2_OnEndAbility::bWasCancelled' has a wrong offset!");

}

