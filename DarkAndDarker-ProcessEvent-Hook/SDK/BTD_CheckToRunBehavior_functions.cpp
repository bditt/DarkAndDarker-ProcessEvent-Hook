#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BTD_CheckToRunBehavior

#include "Basic.hpp"

#include "BTD_CheckToRunBehavior_classes.hpp"
#include "BTD_CheckToRunBehavior_parameters.hpp"


namespace SDK
{

// Function BTD_CheckToRunBehavior.BTD_CheckToRunBehavior_C.Check Combat Action Type Function
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_DCMonsterBaseWithOptions_C*   MonsterBP                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    Return_Value                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBTD_CheckToRunBehavior_C::Check_Combat_Action_Type_Function(class ABP_DCMonsterBaseWithOptions_C* MonsterBP, bool* Return_Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BTD_CheckToRunBehavior_C", "Check Combat Action Type Function");

	Params::BTD_CheckToRunBehavior_C_Check_Combat_Action_Type_Function Parms{};

	Parms.MonsterBP = MonsterBP;

	UObject::ProcessEvent(Func, &Parms);

	if (Return_Value != nullptr)
		*Return_Value = Parms.Return_Value;
}


// Function BTD_CheckToRunBehavior.BTD_CheckToRunBehavior_C.Check Conditional Top Priority Action Condition Function
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_DCMonsterBaseWithOptions_C*   Monster_BP                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool UBTD_CheckToRunBehavior_C::Check_Conditional_Top_Priority_Action_Condition_Function(class ABP_DCMonsterBaseWithOptions_C* Monster_BP)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BTD_CheckToRunBehavior_C", "Check Conditional Top Priority Action Condition Function");

	Params::BTD_CheckToRunBehavior_C_Check_Conditional_Top_Priority_Action_Condition_Function Parms{};

	Parms.Monster_BP = Monster_BP;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BTD_CheckToRunBehavior.BTD_CheckToRunBehavior_C.Check Conditional Top Priority Action Type Function
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_DCMonsterBaseWithOptions_C*   Monster_BP                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    Return_Value                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBTD_CheckToRunBehavior_C::Check_Conditional_Top_Priority_Action_Type_Function(class ABP_DCMonsterBaseWithOptions_C* Monster_BP, bool* Return_Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BTD_CheckToRunBehavior_C", "Check Conditional Top Priority Action Type Function");

	Params::BTD_CheckToRunBehavior_C_Check_Conditional_Top_Priority_Action_Type_Function Parms{};

	Parms.Monster_BP = Monster_BP;

	UObject::ProcessEvent(Func, &Parms);

	if (Return_Value != nullptr)
		*Return_Value = Parms.Return_Value;
}


// Function BTD_CheckToRunBehavior.BTD_CheckToRunBehavior_C.Check Peace Action Type Function
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_DCMonsterBaseWithOptions_C*   MonsterBP                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool UBTD_CheckToRunBehavior_C::Check_Peace_Action_Type_Function(class ABP_DCMonsterBaseWithOptions_C* MonsterBP)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BTD_CheckToRunBehavior_C", "Check Peace Action Type Function");

	Params::BTD_CheckToRunBehavior_C_Check_Peace_Action_Type_Function Parms{};

	Parms.MonsterBP = MonsterBP;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BTD_CheckToRunBehavior.BTD_CheckToRunBehavior_C.PerformConditionCheckAI
// (Event, Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AAIController*                    OwnerController                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class APawn*                            ControlledPawn                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool UBTD_CheckToRunBehavior_C::PerformConditionCheckAI(class AAIController* OwnerController, class APawn* ControlledPawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BTD_CheckToRunBehavior_C", "PerformConditionCheckAI");

	Params::BTD_CheckToRunBehavior_C_PerformConditionCheckAI Parms{};

	Parms.OwnerController = OwnerController;
	Parms.ControlledPawn = ControlledPawn;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

