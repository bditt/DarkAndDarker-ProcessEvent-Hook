#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BTT_SetBBValue

#include "Basic.hpp"

#include "E_Variables_structs.hpp"
#include "Engine_structs.hpp"
#include "AIModule_structs.hpp"
#include "AIModule_classes.hpp"
#include "E_FloatValueCalculate_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BTT_SetBBValue.BTT_SetBBValue_C
// 0x0078 (0x0120 - 0x00A8)
class UBTT_SetBBValue_C final : public UBTTask_BlueprintBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x00A8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	E_Variables                                   Variable_Type;                                     // 0x00B0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A4B[0x7];                                     // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBlackboardKeySelector                 Select_Key;                                        // 0x00B8(0x0028)(Edit, BlueprintVisible)
	bool                                          TURR;                                              // 0x00E0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_FloatValueCalculate                         FloatCalculate;                                    // 0x00E1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A4C[0x6];                                     // 0x00E2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Float_Value;                                       // 0x00E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Random_Range_Float;                                // 0x00F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_FloatValueCalculate                         IntCalculate;                                      // 0x00F8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A4D[0x3];                                     // 0x00F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Int_Value;                                         // 0x00FC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Random_Range_Int;                                  // 0x0100(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A4E[0x4];                                     // 0x0104(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        BlackBoardFloatValue;                              // 0x0108(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         BlackBoardIntValue;                                // 0x0110(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_Int_Value;                                    // 0x0114(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_Float_Value;                                  // 0x0118(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BTT_SetBBValue(int32 EntryPoint);
	void FloatSet();
	void IntSet();
	void ReceiveExecuteAI(class AAIController* OwnerController, class APawn* ControlledPawn);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BTT_SetBBValue_C">();
	}
	static class UBTT_SetBBValue_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBTT_SetBBValue_C>();
	}
};
static_assert(alignof(UBTT_SetBBValue_C) == 0x000008, "Wrong alignment on UBTT_SetBBValue_C");
static_assert(sizeof(UBTT_SetBBValue_C) == 0x000120, "Wrong size on UBTT_SetBBValue_C");
static_assert(offsetof(UBTT_SetBBValue_C, UberGraphFrame) == 0x0000A8, "Member 'UBTT_SetBBValue_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBTT_SetBBValue_C, Variable_Type) == 0x0000B0, "Member 'UBTT_SetBBValue_C::Variable_Type' has a wrong offset!");
static_assert(offsetof(UBTT_SetBBValue_C, Select_Key) == 0x0000B8, "Member 'UBTT_SetBBValue_C::Select_Key' has a wrong offset!");
static_assert(offsetof(UBTT_SetBBValue_C, TURR) == 0x0000E0, "Member 'UBTT_SetBBValue_C::TURR' has a wrong offset!");
static_assert(offsetof(UBTT_SetBBValue_C, FloatCalculate) == 0x0000E1, "Member 'UBTT_SetBBValue_C::FloatCalculate' has a wrong offset!");
static_assert(offsetof(UBTT_SetBBValue_C, Float_Value) == 0x0000E8, "Member 'UBTT_SetBBValue_C::Float_Value' has a wrong offset!");
static_assert(offsetof(UBTT_SetBBValue_C, Random_Range_Float) == 0x0000F0, "Member 'UBTT_SetBBValue_C::Random_Range_Float' has a wrong offset!");
static_assert(offsetof(UBTT_SetBBValue_C, IntCalculate) == 0x0000F8, "Member 'UBTT_SetBBValue_C::IntCalculate' has a wrong offset!");
static_assert(offsetof(UBTT_SetBBValue_C, Int_Value) == 0x0000FC, "Member 'UBTT_SetBBValue_C::Int_Value' has a wrong offset!");
static_assert(offsetof(UBTT_SetBBValue_C, Random_Range_Int) == 0x000100, "Member 'UBTT_SetBBValue_C::Random_Range_Int' has a wrong offset!");
static_assert(offsetof(UBTT_SetBBValue_C, BlackBoardFloatValue) == 0x000108, "Member 'UBTT_SetBBValue_C::BlackBoardFloatValue' has a wrong offset!");
static_assert(offsetof(UBTT_SetBBValue_C, BlackBoardIntValue) == 0x000110, "Member 'UBTT_SetBBValue_C::BlackBoardIntValue' has a wrong offset!");
static_assert(offsetof(UBTT_SetBBValue_C, Temp_Int_Value) == 0x000114, "Member 'UBTT_SetBBValue_C::Temp_Int_Value' has a wrong offset!");
static_assert(offsetof(UBTT_SetBBValue_C, Temp_Float_Value) == 0x000118, "Member 'UBTT_SetBBValue_C::Temp_Float_Value' has a wrong offset!");

}

