#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ABP_IceTroll

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "AnimGraphRuntime_structs.hpp"
#include "ABP_IceTroll_structs.hpp"
#include "DungeonCrawler_classes.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass ABP_IceTroll.ABP_IceTroll_C
// 0x0A90 (0x0FC0 - 0x0530)
class UABP_IceTroll_C final : public UDCMonsterAnimInstanceBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0530(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct ABP_IceTroll::FAnimBlueprintGeneratedMutableData __AnimBlueprintMutables;                           // 0x0538(0x0008)(HasGetValueTypeHash)
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_PropertyAccess;             // 0x0540(0x0008)()
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_Base;                       // 0x0548(0x0008)()
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x0550(0x0020)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_8;                  // 0x0570(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_7;                  // 0x0598(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_6;                  // 0x05C0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_5;                  // 0x05E8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_4;                  // 0x0610(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_4;                     // 0x0638(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_3;                     // 0x0660(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_3;                    // 0x0688(0x0048)()
	struct FAnimNode_ApplyAdditive                AnimGraphNode_ApplyAdditive_1;                     // 0x06D0(0x00C8)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend_1;                  // 0x0798(0x00F0)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_5;                       // 0x0888(0x0020)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_2;                     // 0x08A8(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_1;                     // 0x08D0(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_2;                    // 0x08F8(0x0048)()
	struct FAnimNode_ApplyAdditive                AnimGraphNode_ApplyAdditive;                       // 0x0940(0x00C8)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend;                    // 0x0A08(0x00F0)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_4;                       // 0x0AF8(0x0020)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose;                       // 0x0B18(0x0028)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_3;                       // 0x0B40(0x0020)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine_1;                      // 0x0B60(0x00C8)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_3;                  // 0x0C28(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_2;                  // 0x0C50(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_1;                  // 0x0C78(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult;                    // 0x0CA0(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_1;                    // 0x0CC8(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_2;                       // 0x0D10(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x0D30(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_1;                       // 0x0D78(0x0020)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer;                    // 0x0D98(0x0070)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult;                         // 0x0E08(0x0020)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine;                        // 0x0E28(0x00C8)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot;                                // 0x0EF0(0x0048)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose;                      // 0x0F38(0x0080)()
	int32                                         DeadIndex;                                         // 0x0FB8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsDeadIndex1;                                     // 0x0FBC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsDeadIndex2;                                     // 0x0FBD(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsDeathCurveLarge;                                // 0x0FBE(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void AnimGraph(struct FPoseLink* Param_AnimGraph);
	void BlueprintThreadSafeUpdateAnimation(float DeltaTime);
	void ExecuteUbergraph_ABP_IceTroll(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ABP_IceTroll_C">();
	}
	static class UABP_IceTroll_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UABP_IceTroll_C>();
	}
};
static_assert(alignof(UABP_IceTroll_C) == 0x000010, "Wrong alignment on UABP_IceTroll_C");
static_assert(sizeof(UABP_IceTroll_C) == 0x000FC0, "Wrong size on UABP_IceTroll_C");
static_assert(offsetof(UABP_IceTroll_C, UberGraphFrame) == 0x000530, "Member 'UABP_IceTroll_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UABP_IceTroll_C, __AnimBlueprintMutables) == 0x000538, "Member 'UABP_IceTroll_C::__AnimBlueprintMutables' has a wrong offset!");
static_assert(offsetof(UABP_IceTroll_C, AnimBlueprintExtension_PropertyAccess) == 0x000540, "Member 'UABP_IceTroll_C::AnimBlueprintExtension_PropertyAccess' has a wrong offset!");
static_assert(offsetof(UABP_IceTroll_C, AnimBlueprintExtension_Base) == 0x000548, "Member 'UABP_IceTroll_C::AnimBlueprintExtension_Base' has a wrong offset!");
static_assert(offsetof(UABP_IceTroll_C, AnimGraphNode_Root) == 0x000550, "Member 'UABP_IceTroll_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UABP_IceTroll_C, AnimGraphNode_TransitionResult_8) == 0x000570, "Member 'UABP_IceTroll_C::AnimGraphNode_TransitionResult_8' has a wrong offset!");
static_assert(offsetof(UABP_IceTroll_C, AnimGraphNode_TransitionResult_7) == 0x000598, "Member 'UABP_IceTroll_C::AnimGraphNode_TransitionResult_7' has a wrong offset!");
static_assert(offsetof(UABP_IceTroll_C, AnimGraphNode_TransitionResult_6) == 0x0005C0, "Member 'UABP_IceTroll_C::AnimGraphNode_TransitionResult_6' has a wrong offset!");
static_assert(offsetof(UABP_IceTroll_C, AnimGraphNode_TransitionResult_5) == 0x0005E8, "Member 'UABP_IceTroll_C::AnimGraphNode_TransitionResult_5' has a wrong offset!");
static_assert(offsetof(UABP_IceTroll_C, AnimGraphNode_TransitionResult_4) == 0x000610, "Member 'UABP_IceTroll_C::AnimGraphNode_TransitionResult_4' has a wrong offset!");
static_assert(offsetof(UABP_IceTroll_C, AnimGraphNode_UseCachedPose_4) == 0x000638, "Member 'UABP_IceTroll_C::AnimGraphNode_UseCachedPose_4' has a wrong offset!");
static_assert(offsetof(UABP_IceTroll_C, AnimGraphNode_UseCachedPose_3) == 0x000660, "Member 'UABP_IceTroll_C::AnimGraphNode_UseCachedPose_3' has a wrong offset!");
static_assert(offsetof(UABP_IceTroll_C, AnimGraphNode_SequencePlayer_3) == 0x000688, "Member 'UABP_IceTroll_C::AnimGraphNode_SequencePlayer_3' has a wrong offset!");
static_assert(offsetof(UABP_IceTroll_C, AnimGraphNode_ApplyAdditive_1) == 0x0006D0, "Member 'UABP_IceTroll_C::AnimGraphNode_ApplyAdditive_1' has a wrong offset!");
static_assert(offsetof(UABP_IceTroll_C, AnimGraphNode_LayeredBoneBlend_1) == 0x000798, "Member 'UABP_IceTroll_C::AnimGraphNode_LayeredBoneBlend_1' has a wrong offset!");
static_assert(offsetof(UABP_IceTroll_C, AnimGraphNode_StateResult_5) == 0x000888, "Member 'UABP_IceTroll_C::AnimGraphNode_StateResult_5' has a wrong offset!");
static_assert(offsetof(UABP_IceTroll_C, AnimGraphNode_UseCachedPose_2) == 0x0008A8, "Member 'UABP_IceTroll_C::AnimGraphNode_UseCachedPose_2' has a wrong offset!");
static_assert(offsetof(UABP_IceTroll_C, AnimGraphNode_UseCachedPose_1) == 0x0008D0, "Member 'UABP_IceTroll_C::AnimGraphNode_UseCachedPose_1' has a wrong offset!");
static_assert(offsetof(UABP_IceTroll_C, AnimGraphNode_SequencePlayer_2) == 0x0008F8, "Member 'UABP_IceTroll_C::AnimGraphNode_SequencePlayer_2' has a wrong offset!");
static_assert(offsetof(UABP_IceTroll_C, AnimGraphNode_ApplyAdditive) == 0x000940, "Member 'UABP_IceTroll_C::AnimGraphNode_ApplyAdditive' has a wrong offset!");
static_assert(offsetof(UABP_IceTroll_C, AnimGraphNode_LayeredBoneBlend) == 0x000A08, "Member 'UABP_IceTroll_C::AnimGraphNode_LayeredBoneBlend' has a wrong offset!");
static_assert(offsetof(UABP_IceTroll_C, AnimGraphNode_StateResult_4) == 0x000AF8, "Member 'UABP_IceTroll_C::AnimGraphNode_StateResult_4' has a wrong offset!");
static_assert(offsetof(UABP_IceTroll_C, AnimGraphNode_UseCachedPose) == 0x000B18, "Member 'UABP_IceTroll_C::AnimGraphNode_UseCachedPose' has a wrong offset!");
static_assert(offsetof(UABP_IceTroll_C, AnimGraphNode_StateResult_3) == 0x000B40, "Member 'UABP_IceTroll_C::AnimGraphNode_StateResult_3' has a wrong offset!");
static_assert(offsetof(UABP_IceTroll_C, AnimGraphNode_StateMachine_1) == 0x000B60, "Member 'UABP_IceTroll_C::AnimGraphNode_StateMachine_1' has a wrong offset!");
static_assert(offsetof(UABP_IceTroll_C, AnimGraphNode_TransitionResult_3) == 0x000C28, "Member 'UABP_IceTroll_C::AnimGraphNode_TransitionResult_3' has a wrong offset!");
static_assert(offsetof(UABP_IceTroll_C, AnimGraphNode_TransitionResult_2) == 0x000C50, "Member 'UABP_IceTroll_C::AnimGraphNode_TransitionResult_2' has a wrong offset!");
static_assert(offsetof(UABP_IceTroll_C, AnimGraphNode_TransitionResult_1) == 0x000C78, "Member 'UABP_IceTroll_C::AnimGraphNode_TransitionResult_1' has a wrong offset!");
static_assert(offsetof(UABP_IceTroll_C, AnimGraphNode_TransitionResult) == 0x000CA0, "Member 'UABP_IceTroll_C::AnimGraphNode_TransitionResult' has a wrong offset!");
static_assert(offsetof(UABP_IceTroll_C, AnimGraphNode_SequencePlayer_1) == 0x000CC8, "Member 'UABP_IceTroll_C::AnimGraphNode_SequencePlayer_1' has a wrong offset!");
static_assert(offsetof(UABP_IceTroll_C, AnimGraphNode_StateResult_2) == 0x000D10, "Member 'UABP_IceTroll_C::AnimGraphNode_StateResult_2' has a wrong offset!");
static_assert(offsetof(UABP_IceTroll_C, AnimGraphNode_SequencePlayer) == 0x000D30, "Member 'UABP_IceTroll_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(UABP_IceTroll_C, AnimGraphNode_StateResult_1) == 0x000D78, "Member 'UABP_IceTroll_C::AnimGraphNode_StateResult_1' has a wrong offset!");
static_assert(offsetof(UABP_IceTroll_C, AnimGraphNode_BlendSpacePlayer) == 0x000D98, "Member 'UABP_IceTroll_C::AnimGraphNode_BlendSpacePlayer' has a wrong offset!");
static_assert(offsetof(UABP_IceTroll_C, AnimGraphNode_StateResult) == 0x000E08, "Member 'UABP_IceTroll_C::AnimGraphNode_StateResult' has a wrong offset!");
static_assert(offsetof(UABP_IceTroll_C, AnimGraphNode_StateMachine) == 0x000E28, "Member 'UABP_IceTroll_C::AnimGraphNode_StateMachine' has a wrong offset!");
static_assert(offsetof(UABP_IceTroll_C, AnimGraphNode_Slot) == 0x000EF0, "Member 'UABP_IceTroll_C::AnimGraphNode_Slot' has a wrong offset!");
static_assert(offsetof(UABP_IceTroll_C, AnimGraphNode_SaveCachedPose) == 0x000F38, "Member 'UABP_IceTroll_C::AnimGraphNode_SaveCachedPose' has a wrong offset!");
static_assert(offsetof(UABP_IceTroll_C, DeadIndex) == 0x000FB8, "Member 'UABP_IceTroll_C::DeadIndex' has a wrong offset!");
static_assert(offsetof(UABP_IceTroll_C, bIsDeadIndex1) == 0x000FBC, "Member 'UABP_IceTroll_C::bIsDeadIndex1' has a wrong offset!");
static_assert(offsetof(UABP_IceTroll_C, bIsDeadIndex2) == 0x000FBD, "Member 'UABP_IceTroll_C::bIsDeadIndex2' has a wrong offset!");
static_assert(offsetof(UABP_IceTroll_C, bIsDeathCurveLarge) == 0x000FBE, "Member 'UABP_IceTroll_C::bIsDeathCurveLarge' has a wrong offset!");

}

