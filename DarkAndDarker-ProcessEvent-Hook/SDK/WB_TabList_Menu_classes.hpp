#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_TabList_Menu

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CommonUI_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WB_TabList_Menu.WB_TabList_Menu_C
// 0x0060 (0x0440 - 0x03E0)
class UWB_TabList_Menu_C final : public UCommonTabListWidgetBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x03E0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UCommonActionWidget*                    NextTabAction;                                     // 0x03E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonActionWidget*                    PreviousTabAction;                                 // 0x03F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         TabButtonBox;                                      // 0x03F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	TArray<class FText>                           TabEntries_Text;                                   // 0x0400(0x0010)(Edit, BlueprintVisible)
	TArray<class FName>                           TabEntries_Name;                                   // 0x0410(0x0010)(Edit, BlueprintVisible)
	TArray<class UCommonActivatableWidget*>       TabEntries;                                        // 0x0420(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	class UCommonAnimatedSwitcher*                LinkedSwitcherWidget;                              // 0x0430(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         I;                                                 // 0x0438(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_WB_TabList_Menu(int32 EntryPoint);
	void EventOnTabSelected(class FName TabId);
	void Construct();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WB_TabList_Menu_C">();
	}
	static class UWB_TabList_Menu_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWB_TabList_Menu_C>();
	}
};
static_assert(alignof(UWB_TabList_Menu_C) == 0x000008, "Wrong alignment on UWB_TabList_Menu_C");
static_assert(sizeof(UWB_TabList_Menu_C) == 0x000440, "Wrong size on UWB_TabList_Menu_C");
static_assert(offsetof(UWB_TabList_Menu_C, UberGraphFrame) == 0x0003E0, "Member 'UWB_TabList_Menu_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWB_TabList_Menu_C, NextTabAction) == 0x0003E8, "Member 'UWB_TabList_Menu_C::NextTabAction' has a wrong offset!");
static_assert(offsetof(UWB_TabList_Menu_C, PreviousTabAction) == 0x0003F0, "Member 'UWB_TabList_Menu_C::PreviousTabAction' has a wrong offset!");
static_assert(offsetof(UWB_TabList_Menu_C, TabButtonBox) == 0x0003F8, "Member 'UWB_TabList_Menu_C::TabButtonBox' has a wrong offset!");
static_assert(offsetof(UWB_TabList_Menu_C, TabEntries_Text) == 0x000400, "Member 'UWB_TabList_Menu_C::TabEntries_Text' has a wrong offset!");
static_assert(offsetof(UWB_TabList_Menu_C, TabEntries_Name) == 0x000410, "Member 'UWB_TabList_Menu_C::TabEntries_Name' has a wrong offset!");
static_assert(offsetof(UWB_TabList_Menu_C, TabEntries) == 0x000420, "Member 'UWB_TabList_Menu_C::TabEntries' has a wrong offset!");
static_assert(offsetof(UWB_TabList_Menu_C, LinkedSwitcherWidget) == 0x000430, "Member 'UWB_TabList_Menu_C::LinkedSwitcherWidget' has a wrong offset!");
static_assert(offsetof(UWB_TabList_Menu_C, I) == 0x000438, "Member 'UWB_TabList_Menu_C::I' has a wrong offset!");

}

