#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_Halberd_UniquePassive

#include "Basic.hpp"

#include "GameplayAbilities_structs.hpp"


namespace SDK::Params
{

// Function GA_Halberd_UniquePassive.GA_Halberd_UniquePassive_C.EventReceived_3EF2DF974793AF751C3C3EBE5273AB0C
// 0x00B0 (0x00B0 - 0x0000)
struct GA_Halberd_UniquePassive_C_EventReceived_3EF2DF974793AF751C3C3EBE5273AB0C final
{
public:
	struct FGameplayEventData                     Payload;                                           // 0x0000(0x00B0)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(GA_Halberd_UniquePassive_C_EventReceived_3EF2DF974793AF751C3C3EBE5273AB0C) == 0x000008, "Wrong alignment on GA_Halberd_UniquePassive_C_EventReceived_3EF2DF974793AF751C3C3EBE5273AB0C");
static_assert(sizeof(GA_Halberd_UniquePassive_C_EventReceived_3EF2DF974793AF751C3C3EBE5273AB0C) == 0x0000B0, "Wrong size on GA_Halberd_UniquePassive_C_EventReceived_3EF2DF974793AF751C3C3EBE5273AB0C");
static_assert(offsetof(GA_Halberd_UniquePassive_C_EventReceived_3EF2DF974793AF751C3C3EBE5273AB0C, Payload) == 0x000000, "Member 'GA_Halberd_UniquePassive_C_EventReceived_3EF2DF974793AF751C3C3EBE5273AB0C::Payload' has a wrong offset!");

// Function GA_Halberd_UniquePassive.GA_Halberd_UniquePassive_C.ExecuteUbergraph_GA_Halberd_UniquePassive
// 0x0330 (0x0330 - 0x0000)
struct GA_Halberd_UniquePassive_C_ExecuteUbergraph_GA_Halberd_UniquePassive final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E77[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetAvatarActorFromActorInfo_ReturnValue;  // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEventData                     K2Node_CustomEvent_Payload;                        // 0x0010(0x00B0)()
	TDelegate<void(const struct FGameplayEventData& Payload)> K2Node_CreateDelegate_OutputDelegate;              // 0x00C0(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEventData                     Temp_struct_Variable;                              // 0x00D0(0x00B0)()
	class UAbilityTask_WaitGameplayEvent*         CallFunc_WaitGameplayEvent_ReturnValue;            // 0x0180(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E78[0x7];                                     // 0x0189(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        CallFunc_K2_GetRootComponent_ReturnValue;          // 0x0190(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E79[0x7];                                     // 0x0199(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayEventData                     K2Node_Event_EventData;                            // 0x01A0(0x00B0)(ConstParm)
	class UObject*                                CallFunc_GetCurrentSourceObject_ReturnValue;       // 0x0250(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 CallFunc_MakeGameplayCueParameters_ReturnValue;    // 0x0258(0x00D8)(ContainsInstancedReference)
};
static_assert(alignof(GA_Halberd_UniquePassive_C_ExecuteUbergraph_GA_Halberd_UniquePassive) == 0x000008, "Wrong alignment on GA_Halberd_UniquePassive_C_ExecuteUbergraph_GA_Halberd_UniquePassive");
static_assert(sizeof(GA_Halberd_UniquePassive_C_ExecuteUbergraph_GA_Halberd_UniquePassive) == 0x000330, "Wrong size on GA_Halberd_UniquePassive_C_ExecuteUbergraph_GA_Halberd_UniquePassive");
static_assert(offsetof(GA_Halberd_UniquePassive_C_ExecuteUbergraph_GA_Halberd_UniquePassive, EntryPoint) == 0x000000, "Member 'GA_Halberd_UniquePassive_C_ExecuteUbergraph_GA_Halberd_UniquePassive::EntryPoint' has a wrong offset!");
static_assert(offsetof(GA_Halberd_UniquePassive_C_ExecuteUbergraph_GA_Halberd_UniquePassive, CallFunc_GetAvatarActorFromActorInfo_ReturnValue) == 0x000008, "Member 'GA_Halberd_UniquePassive_C_ExecuteUbergraph_GA_Halberd_UniquePassive::CallFunc_GetAvatarActorFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Halberd_UniquePassive_C_ExecuteUbergraph_GA_Halberd_UniquePassive, K2Node_CustomEvent_Payload) == 0x000010, "Member 'GA_Halberd_UniquePassive_C_ExecuteUbergraph_GA_Halberd_UniquePassive::K2Node_CustomEvent_Payload' has a wrong offset!");
static_assert(offsetof(GA_Halberd_UniquePassive_C_ExecuteUbergraph_GA_Halberd_UniquePassive, K2Node_CreateDelegate_OutputDelegate) == 0x0000C0, "Member 'GA_Halberd_UniquePassive_C_ExecuteUbergraph_GA_Halberd_UniquePassive::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(GA_Halberd_UniquePassive_C_ExecuteUbergraph_GA_Halberd_UniquePassive, Temp_struct_Variable) == 0x0000D0, "Member 'GA_Halberd_UniquePassive_C_ExecuteUbergraph_GA_Halberd_UniquePassive::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(GA_Halberd_UniquePassive_C_ExecuteUbergraph_GA_Halberd_UniquePassive, CallFunc_WaitGameplayEvent_ReturnValue) == 0x000180, "Member 'GA_Halberd_UniquePassive_C_ExecuteUbergraph_GA_Halberd_UniquePassive::CallFunc_WaitGameplayEvent_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Halberd_UniquePassive_C_ExecuteUbergraph_GA_Halberd_UniquePassive, CallFunc_IsValid_ReturnValue) == 0x000188, "Member 'GA_Halberd_UniquePassive_C_ExecuteUbergraph_GA_Halberd_UniquePassive::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Halberd_UniquePassive_C_ExecuteUbergraph_GA_Halberd_UniquePassive, CallFunc_K2_GetRootComponent_ReturnValue) == 0x000190, "Member 'GA_Halberd_UniquePassive_C_ExecuteUbergraph_GA_Halberd_UniquePassive::CallFunc_K2_GetRootComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Halberd_UniquePassive_C_ExecuteUbergraph_GA_Halberd_UniquePassive, CallFunc_IsValid_ReturnValue_1) == 0x000198, "Member 'GA_Halberd_UniquePassive_C_ExecuteUbergraph_GA_Halberd_UniquePassive::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_Halberd_UniquePassive_C_ExecuteUbergraph_GA_Halberd_UniquePassive, K2Node_Event_EventData) == 0x0001A0, "Member 'GA_Halberd_UniquePassive_C_ExecuteUbergraph_GA_Halberd_UniquePassive::K2Node_Event_EventData' has a wrong offset!");
static_assert(offsetof(GA_Halberd_UniquePassive_C_ExecuteUbergraph_GA_Halberd_UniquePassive, CallFunc_GetCurrentSourceObject_ReturnValue) == 0x000250, "Member 'GA_Halberd_UniquePassive_C_ExecuteUbergraph_GA_Halberd_UniquePassive::CallFunc_GetCurrentSourceObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Halberd_UniquePassive_C_ExecuteUbergraph_GA_Halberd_UniquePassive, CallFunc_MakeGameplayCueParameters_ReturnValue) == 0x000258, "Member 'GA_Halberd_UniquePassive_C_ExecuteUbergraph_GA_Halberd_UniquePassive::CallFunc_MakeGameplayCueParameters_ReturnValue' has a wrong offset!");

// Function GA_Halberd_UniquePassive.GA_Halberd_UniquePassive_C.K2_ActivateAbilityFromEvent
// 0x00B0 (0x00B0 - 0x0000)
struct GA_Halberd_UniquePassive_C_K2_ActivateAbilityFromEvent final
{
public:
	struct FGameplayEventData                     EventData;                                         // 0x0000(0x00B0)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(GA_Halberd_UniquePassive_C_K2_ActivateAbilityFromEvent) == 0x000008, "Wrong alignment on GA_Halberd_UniquePassive_C_K2_ActivateAbilityFromEvent");
static_assert(sizeof(GA_Halberd_UniquePassive_C_K2_ActivateAbilityFromEvent) == 0x0000B0, "Wrong size on GA_Halberd_UniquePassive_C_K2_ActivateAbilityFromEvent");
static_assert(offsetof(GA_Halberd_UniquePassive_C_K2_ActivateAbilityFromEvent, EventData) == 0x000000, "Member 'GA_Halberd_UniquePassive_C_K2_ActivateAbilityFromEvent::EventData' has a wrong offset!");

}

