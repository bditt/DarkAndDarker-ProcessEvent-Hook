#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_GoblinMage_Attack_Nightmare

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function GA_GoblinMage_Attack_Nightmare.GA_GoblinMage_Attack_Nightmare_C.AbilityActivated
// 0x00B0 (0x00B0 - 0x0000)
struct GA_GoblinMage_Attack_Nightmare_C_AbilityActivated final
{
public:
	struct FGameplayEventData                     TriggerEventData;                                  // 0x0000(0x00B0)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(GA_GoblinMage_Attack_Nightmare_C_AbilityActivated) == 0x000008, "Wrong alignment on GA_GoblinMage_Attack_Nightmare_C_AbilityActivated");
static_assert(sizeof(GA_GoblinMage_Attack_Nightmare_C_AbilityActivated) == 0x0000B0, "Wrong size on GA_GoblinMage_Attack_Nightmare_C_AbilityActivated");
static_assert(offsetof(GA_GoblinMage_Attack_Nightmare_C_AbilityActivated, TriggerEventData) == 0x000000, "Member 'GA_GoblinMage_Attack_Nightmare_C_AbilityActivated::TriggerEventData' has a wrong offset!");

// Function GA_GoblinMage_Attack_Nightmare.GA_GoblinMage_Attack_Nightmare_C.CreateProjectiles
// 0x00D8 (0x00D8 - 0x0000)
struct GA_GoblinMage_Attack_Nightmare_C_CreateProjectiles final
{
public:
	struct FGameplayTag                           EventTag;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEventData                     EventData;                                         // 0x0008(0x00B0)(BlueprintVisible, BlueprintReadOnly, Parm)
	float                                         FirePower;                                         // 0x00B8(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5039[0x4];                                     // 0x00BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                StartLocation;                                     // 0x00C0(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_GoblinMage_Attack_Nightmare_C_CreateProjectiles) == 0x000008, "Wrong alignment on GA_GoblinMage_Attack_Nightmare_C_CreateProjectiles");
static_assert(sizeof(GA_GoblinMage_Attack_Nightmare_C_CreateProjectiles) == 0x0000D8, "Wrong size on GA_GoblinMage_Attack_Nightmare_C_CreateProjectiles");
static_assert(offsetof(GA_GoblinMage_Attack_Nightmare_C_CreateProjectiles, EventTag) == 0x000000, "Member 'GA_GoblinMage_Attack_Nightmare_C_CreateProjectiles::EventTag' has a wrong offset!");
static_assert(offsetof(GA_GoblinMage_Attack_Nightmare_C_CreateProjectiles, EventData) == 0x000008, "Member 'GA_GoblinMage_Attack_Nightmare_C_CreateProjectiles::EventData' has a wrong offset!");
static_assert(offsetof(GA_GoblinMage_Attack_Nightmare_C_CreateProjectiles, FirePower) == 0x0000B8, "Member 'GA_GoblinMage_Attack_Nightmare_C_CreateProjectiles::FirePower' has a wrong offset!");
static_assert(offsetof(GA_GoblinMage_Attack_Nightmare_C_CreateProjectiles, StartLocation) == 0x0000C0, "Member 'GA_GoblinMage_Attack_Nightmare_C_CreateProjectiles::StartLocation' has a wrong offset!");

// Function GA_GoblinMage_Attack_Nightmare.GA_GoblinMage_Attack_Nightmare_C.ExecuteUbergraph_GA_GoblinMage_Attack_Nightmare
// 0x01C0 (0x01C0 - 0x0000)
struct GA_GoblinMage_Attack_Nightmare_C_ExecuteUbergraph_GA_GoblinMage_Attack_Nightmare final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_Event_EventTag;                             // 0x0004(0x0008)(NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_503A[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayEventData                     K2Node_Event_EventData;                            // 0x0010(0x00B0)()
	float                                         K2Node_Event_FirePower;                            // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_503B[0x4];                                     // 0x00C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_Event_StartLocation;                        // 0x00C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEventData                     K2Node_Event_TriggerEventData;                     // 0x00E0(0x00B0)(ConstParm)
	bool                                          K2Node_Event_bWasCancelled;                        // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_503C[0x3];                                     // 0x0191(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0194(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0198(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x01A8(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_503D[0x7];                                     // 0x01B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetAvatarActorFromActorInfo_ReturnValue;  // 0x01B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_GoblinMage_Attack_Nightmare_C_ExecuteUbergraph_GA_GoblinMage_Attack_Nightmare) == 0x000008, "Wrong alignment on GA_GoblinMage_Attack_Nightmare_C_ExecuteUbergraph_GA_GoblinMage_Attack_Nightmare");
static_assert(sizeof(GA_GoblinMage_Attack_Nightmare_C_ExecuteUbergraph_GA_GoblinMage_Attack_Nightmare) == 0x0001C0, "Wrong size on GA_GoblinMage_Attack_Nightmare_C_ExecuteUbergraph_GA_GoblinMage_Attack_Nightmare");
static_assert(offsetof(GA_GoblinMage_Attack_Nightmare_C_ExecuteUbergraph_GA_GoblinMage_Attack_Nightmare, EntryPoint) == 0x000000, "Member 'GA_GoblinMage_Attack_Nightmare_C_ExecuteUbergraph_GA_GoblinMage_Attack_Nightmare::EntryPoint' has a wrong offset!");
static_assert(offsetof(GA_GoblinMage_Attack_Nightmare_C_ExecuteUbergraph_GA_GoblinMage_Attack_Nightmare, K2Node_Event_EventTag) == 0x000004, "Member 'GA_GoblinMage_Attack_Nightmare_C_ExecuteUbergraph_GA_GoblinMage_Attack_Nightmare::K2Node_Event_EventTag' has a wrong offset!");
static_assert(offsetof(GA_GoblinMage_Attack_Nightmare_C_ExecuteUbergraph_GA_GoblinMage_Attack_Nightmare, K2Node_Event_EventData) == 0x000010, "Member 'GA_GoblinMage_Attack_Nightmare_C_ExecuteUbergraph_GA_GoblinMage_Attack_Nightmare::K2Node_Event_EventData' has a wrong offset!");
static_assert(offsetof(GA_GoblinMage_Attack_Nightmare_C_ExecuteUbergraph_GA_GoblinMage_Attack_Nightmare, K2Node_Event_FirePower) == 0x0000C0, "Member 'GA_GoblinMage_Attack_Nightmare_C_ExecuteUbergraph_GA_GoblinMage_Attack_Nightmare::K2Node_Event_FirePower' has a wrong offset!");
static_assert(offsetof(GA_GoblinMage_Attack_Nightmare_C_ExecuteUbergraph_GA_GoblinMage_Attack_Nightmare, K2Node_Event_StartLocation) == 0x0000C8, "Member 'GA_GoblinMage_Attack_Nightmare_C_ExecuteUbergraph_GA_GoblinMage_Attack_Nightmare::K2Node_Event_StartLocation' has a wrong offset!");
static_assert(offsetof(GA_GoblinMage_Attack_Nightmare_C_ExecuteUbergraph_GA_GoblinMage_Attack_Nightmare, K2Node_Event_TriggerEventData) == 0x0000E0, "Member 'GA_GoblinMage_Attack_Nightmare_C_ExecuteUbergraph_GA_GoblinMage_Attack_Nightmare::K2Node_Event_TriggerEventData' has a wrong offset!");
static_assert(offsetof(GA_GoblinMage_Attack_Nightmare_C_ExecuteUbergraph_GA_GoblinMage_Attack_Nightmare, K2Node_Event_bWasCancelled) == 0x000190, "Member 'GA_GoblinMage_Attack_Nightmare_C_ExecuteUbergraph_GA_GoblinMage_Attack_Nightmare::K2Node_Event_bWasCancelled' has a wrong offset!");
static_assert(offsetof(GA_GoblinMage_Attack_Nightmare_C_ExecuteUbergraph_GA_GoblinMage_Attack_Nightmare, CallFunc_Add_IntInt_ReturnValue) == 0x000194, "Member 'GA_GoblinMage_Attack_Nightmare_C_ExecuteUbergraph_GA_GoblinMage_Attack_Nightmare::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_GoblinMage_Attack_Nightmare_C_ExecuteUbergraph_GA_GoblinMage_Attack_Nightmare, K2Node_CreateDelegate_OutputDelegate) == 0x000198, "Member 'GA_GoblinMage_Attack_Nightmare_C_ExecuteUbergraph_GA_GoblinMage_Attack_Nightmare::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(GA_GoblinMage_Attack_Nightmare_C_ExecuteUbergraph_GA_GoblinMage_Attack_Nightmare, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x0001A8, "Member 'GA_GoblinMage_Attack_Nightmare_C_ExecuteUbergraph_GA_GoblinMage_Attack_Nightmare::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_GoblinMage_Attack_Nightmare_C_ExecuteUbergraph_GA_GoblinMage_Attack_Nightmare, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x0001B0, "Member 'GA_GoblinMage_Attack_Nightmare_C_ExecuteUbergraph_GA_GoblinMage_Attack_Nightmare::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_GoblinMage_Attack_Nightmare_C_ExecuteUbergraph_GA_GoblinMage_Attack_Nightmare, CallFunc_GetAvatarActorFromActorInfo_ReturnValue) == 0x0001B8, "Member 'GA_GoblinMage_Attack_Nightmare_C_ExecuteUbergraph_GA_GoblinMage_Attack_Nightmare::CallFunc_GetAvatarActorFromActorInfo_ReturnValue' has a wrong offset!");

// Function GA_GoblinMage_Attack_Nightmare.GA_GoblinMage_Attack_Nightmare_C.K2_OnEndAbility
// 0x0001 (0x0001 - 0x0000)
struct GA_GoblinMage_Attack_Nightmare_C_K2_OnEndAbility final
{
public:
	bool                                          bWasCancelled;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_GoblinMage_Attack_Nightmare_C_K2_OnEndAbility) == 0x000001, "Wrong alignment on GA_GoblinMage_Attack_Nightmare_C_K2_OnEndAbility");
static_assert(sizeof(GA_GoblinMage_Attack_Nightmare_C_K2_OnEndAbility) == 0x000001, "Wrong size on GA_GoblinMage_Attack_Nightmare_C_K2_OnEndAbility");
static_assert(offsetof(GA_GoblinMage_Attack_Nightmare_C_K2_OnEndAbility, bWasCancelled) == 0x000000, "Member 'GA_GoblinMage_Attack_Nightmare_C_K2_OnEndAbility::bWasCancelled' has a wrong offset!");

}

