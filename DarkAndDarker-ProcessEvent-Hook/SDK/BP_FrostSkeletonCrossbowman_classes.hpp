#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_FrostSkeletonCrossbowman

#include "Basic.hpp"

#include "BP_DCMonsterBaseWithOptions_classes.hpp"
#include "Engine_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_FrostSkeletonCrossbowman.BP_FrostSkeletonCrossbowman_C
// 0x0060 (0x1440 - 0x13E0)
#pragma pack(push, 0x1)
class alignas(0x10) ABP_FrostSkeletonCrossbowman_C : public ABP_DCMonsterBaseWithOptions_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_FrostSkeletonCrossbowman_C;      // 0x13D8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UMaterialBillboardComponent*            Billboard_EyeGlow_R;                               // 0x13E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UMaterialBillboardComponent*            Billboard_EyeGlow_L;                               // 0x13E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      FXS_Aura_Weapon;                                   // 0x13F0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_DCHitBox_C*                         Foot_l;                                            // 0x13F8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_DCHitBox_C*                         Foot_r;                                            // 0x1400(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_DCHitBox_C*                         Calf_l;                                            // 0x1408(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_DCHitBox_C*                         Calf_r;                                            // 0x1410(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_DCHitBox_C*                         Thigh_l;                                           // 0x1418(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_DCHitBox_C*                         Thigh_r;                                           // 0x1420(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_DCHitBox_C*                         Body;                                              // 0x1428(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_DCHitBox_C*                         Head;                                              // 0x1430(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)

public:
	void ChangeFXState(bool New_State, class UNiagaraComponent* Niagara_System_Component);
	void ChangeFXStateOnTagUpdate(class UNiagaraComponent* Niagara_Component, const struct FGameplayTag& In_Gameplay_Tag, int32 In_Count);
	void ExecuteUbergraph_BP_FrostSkeletonCrossbowman(int32 EntryPoint);
	void GameplayTagUpdated(const struct FGameplayTag& InGameplayTag, int32 InCount);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_FrostSkeletonCrossbowman_C">();
	}
	static class ABP_FrostSkeletonCrossbowman_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_FrostSkeletonCrossbowman_C>();
	}
};
#pragma pack(pop)
static_assert(alignof(ABP_FrostSkeletonCrossbowman_C) == 0x000010, "Wrong alignment on ABP_FrostSkeletonCrossbowman_C");
static_assert(sizeof(ABP_FrostSkeletonCrossbowman_C) == 0x001440, "Wrong size on ABP_FrostSkeletonCrossbowman_C");
static_assert(offsetof(ABP_FrostSkeletonCrossbowman_C, UberGraphFrame_BP_FrostSkeletonCrossbowman_C) == 0x0013D8, "Member 'ABP_FrostSkeletonCrossbowman_C::UberGraphFrame_BP_FrostSkeletonCrossbowman_C' has a wrong offset!");
static_assert(offsetof(ABP_FrostSkeletonCrossbowman_C, Billboard_EyeGlow_R) == 0x0013E0, "Member 'ABP_FrostSkeletonCrossbowman_C::Billboard_EyeGlow_R' has a wrong offset!");
static_assert(offsetof(ABP_FrostSkeletonCrossbowman_C, Billboard_EyeGlow_L) == 0x0013E8, "Member 'ABP_FrostSkeletonCrossbowman_C::Billboard_EyeGlow_L' has a wrong offset!");
static_assert(offsetof(ABP_FrostSkeletonCrossbowman_C, FXS_Aura_Weapon) == 0x0013F0, "Member 'ABP_FrostSkeletonCrossbowman_C::FXS_Aura_Weapon' has a wrong offset!");
static_assert(offsetof(ABP_FrostSkeletonCrossbowman_C, Foot_l) == 0x0013F8, "Member 'ABP_FrostSkeletonCrossbowman_C::Foot_l' has a wrong offset!");
static_assert(offsetof(ABP_FrostSkeletonCrossbowman_C, Foot_r) == 0x001400, "Member 'ABP_FrostSkeletonCrossbowman_C::Foot_r' has a wrong offset!");
static_assert(offsetof(ABP_FrostSkeletonCrossbowman_C, Calf_l) == 0x001408, "Member 'ABP_FrostSkeletonCrossbowman_C::Calf_l' has a wrong offset!");
static_assert(offsetof(ABP_FrostSkeletonCrossbowman_C, Calf_r) == 0x001410, "Member 'ABP_FrostSkeletonCrossbowman_C::Calf_r' has a wrong offset!");
static_assert(offsetof(ABP_FrostSkeletonCrossbowman_C, Thigh_l) == 0x001418, "Member 'ABP_FrostSkeletonCrossbowman_C::Thigh_l' has a wrong offset!");
static_assert(offsetof(ABP_FrostSkeletonCrossbowman_C, Thigh_r) == 0x001420, "Member 'ABP_FrostSkeletonCrossbowman_C::Thigh_r' has a wrong offset!");
static_assert(offsetof(ABP_FrostSkeletonCrossbowman_C, Body) == 0x001428, "Member 'ABP_FrostSkeletonCrossbowman_C::Body' has a wrong offset!");
static_assert(offsetof(ABP_FrostSkeletonCrossbowman_C, Head) == 0x001430, "Member 'ABP_FrostSkeletonCrossbowman_C::Head' has a wrong offset!");

}

