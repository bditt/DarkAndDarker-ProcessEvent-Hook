#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ABP_Pavise

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "DungeonCrawler_structs.hpp"


namespace SDK::Params
{

// Function ABP_Pavise.ABP_Pavise_C.AnimGraph
// 0x0010 (0x0010 - 0x0000)
struct ABP_Pavise_C_AnimGraph final
{
public:
	struct FPoseLink                              Param_AnimGraph;                                   // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(ABP_Pavise_C_AnimGraph) == 0x000008, "Wrong alignment on ABP_Pavise_C_AnimGraph");
static_assert(sizeof(ABP_Pavise_C_AnimGraph) == 0x000010, "Wrong size on ABP_Pavise_C_AnimGraph");
static_assert(offsetof(ABP_Pavise_C_AnimGraph, Param_AnimGraph) == 0x000000, "Member 'ABP_Pavise_C_AnimGraph::Param_AnimGraph' has a wrong offset!");

// Function ABP_Pavise.ABP_Pavise_C.ExecuteUbergraph_ABP_Pavise
// 0x0110 (0x0110 - 0x0000)
struct ABP_Pavise_C_ExecuteUbergraph_ABP_Pavise final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3F5C[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FItemData                              K2Node_Event_ItemData;                             // 0x0008(0x0100)(ConstParm)
	bool                                          CallFunc_EqualEqual_GameplayTag_ReturnValue;       // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_GameplayTag_ReturnValue_1;     // 0x0109(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_Pavise_C_ExecuteUbergraph_ABP_Pavise) == 0x000008, "Wrong alignment on ABP_Pavise_C_ExecuteUbergraph_ABP_Pavise");
static_assert(sizeof(ABP_Pavise_C_ExecuteUbergraph_ABP_Pavise) == 0x000110, "Wrong size on ABP_Pavise_C_ExecuteUbergraph_ABP_Pavise");
static_assert(offsetof(ABP_Pavise_C_ExecuteUbergraph_ABP_Pavise, EntryPoint) == 0x000000, "Member 'ABP_Pavise_C_ExecuteUbergraph_ABP_Pavise::EntryPoint' has a wrong offset!");
static_assert(offsetof(ABP_Pavise_C_ExecuteUbergraph_ABP_Pavise, K2Node_Event_ItemData) == 0x000008, "Member 'ABP_Pavise_C_ExecuteUbergraph_ABP_Pavise::K2Node_Event_ItemData' has a wrong offset!");
static_assert(offsetof(ABP_Pavise_C_ExecuteUbergraph_ABP_Pavise, CallFunc_EqualEqual_GameplayTag_ReturnValue) == 0x000108, "Member 'ABP_Pavise_C_ExecuteUbergraph_ABP_Pavise::CallFunc_EqualEqual_GameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Pavise_C_ExecuteUbergraph_ABP_Pavise, CallFunc_EqualEqual_GameplayTag_ReturnValue_1) == 0x000109, "Member 'ABP_Pavise_C_ExecuteUbergraph_ABP_Pavise::CallFunc_EqualEqual_GameplayTag_ReturnValue_1' has a wrong offset!");

// Function ABP_Pavise.ABP_Pavise_C.OnItemDataUpdated_1
// 0x0100 (0x0100 - 0x0000)
struct ABP_Pavise_C_OnItemDataUpdated_1 final
{
public:
	struct FItemData                              ItemData;                                          // 0x0000(0x0100)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(ABP_Pavise_C_OnItemDataUpdated_1) == 0x000008, "Wrong alignment on ABP_Pavise_C_OnItemDataUpdated_1");
static_assert(sizeof(ABP_Pavise_C_OnItemDataUpdated_1) == 0x000100, "Wrong size on ABP_Pavise_C_OnItemDataUpdated_1");
static_assert(offsetof(ABP_Pavise_C_OnItemDataUpdated_1, ItemData) == 0x000000, "Member 'ABP_Pavise_C_OnItemDataUpdated_1::ItemData' has a wrong offset!");

}

