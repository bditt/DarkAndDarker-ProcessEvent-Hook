#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BTT_GetTargetActor

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "GameplayTags_structs.hpp"


namespace SDK::Params
{

// Function BTT_GetTargetActor.BTT_GetTargetActor_C.ClearVariables
// 0x0008 (0x0008 - 0x0000)
struct BTT_GetTargetActor_C_ClearVariables final
{
public:
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTT_GetTargetActor_C_ClearVariables) == 0x000004, "Wrong alignment on BTT_GetTargetActor_C_ClearVariables");
static_assert(sizeof(BTT_GetTargetActor_C_ClearVariables) == 0x000008, "Wrong size on BTT_GetTargetActor_C_ClearVariables");
static_assert(offsetof(BTT_GetTargetActor_C_ClearVariables, CallFunc_Array_Length_ReturnValue) == 0x000000, "Member 'BTT_GetTargetActor_C_ClearVariables::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_GetTargetActor_C_ClearVariables, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000004, "Member 'BTT_GetTargetActor_C_ClearVariables::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BTT_GetTargetActor.BTT_GetTargetActor_C.ExecuteUbergraph_BTT_GetTargetActor
// 0x0108 (0x0108 - 0x0000)
struct BTT_GetTargetActor_C_ExecuteUbergraph_BTT_GetTargetActor final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TargetingType_Bool;                       // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FilterTags_Bool;                          // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FilterRange_Bool;                         // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Sorting_Bool;                             // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3AB6[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ADCCharacterBase*                       CallFunc_PickTarget_ReturnValue;                   // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3AB7[0x6];                                     // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ADCCharacterBase*                       CallFunc_PickRandomTarget_ReturnValue;             // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3AB8[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AAIController*                          K2Node_Event_OwnerController;                      // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_ControlledPawn;                       // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_DCMonsterBaseWithOptions_C*         K2Node_DynamicCast_AsBP_DCMonster_Base_with_Options; // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3AB9[0x7];                                     // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBlackboardComponent*                   CallFunc_GetBlackboard_ReturnValue;                // 0x0050(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UAIPerceptionComponent*                 CallFunc_GetAIPerceptionComponent_ReturnValue;     // 0x0058(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FilterHP_Bool;                            // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3ABA[0x3];                                     // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0068(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Filter_Target_From_Spawn_Location_Return_Value; // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3ABB[0x7];                                     // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ADCCharacterBase*>               CallFunc_Filter_Target_From_Spawn_Location_Result; // 0x0088(0x0010)(ReferenceParm)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0098(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Get_Target_Array_Return_Value;            // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3ABC[0x7];                                     // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ADCCharacterBase*>               CallFunc_Get_Target_Array_TargetArray;             // 0x00B8(0x0010)(ReferenceParm)
	bool                                          CallFunc_Filter_Target_From_Spawn_Location_Return_Value_1; // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3ABD[0x7];                                     // 0x00C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ADCCharacterBase*>               CallFunc_Filter_Target_From_Spawn_Location_Result_1; // 0x00D0(0x0010)(ReferenceParm)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3ABE[0x7];                                     // 0x00E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ADCCharacterBase*                       CallFunc_Array_Get_Item;                           // 0x00E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3ABF[0x3];                                     // 0x00FD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTT_GetTargetActor_C_ExecuteUbergraph_BTT_GetTargetActor) == 0x000008, "Wrong alignment on BTT_GetTargetActor_C_ExecuteUbergraph_BTT_GetTargetActor");
static_assert(sizeof(BTT_GetTargetActor_C_ExecuteUbergraph_BTT_GetTargetActor) == 0x000108, "Wrong size on BTT_GetTargetActor_C_ExecuteUbergraph_BTT_GetTargetActor");
static_assert(offsetof(BTT_GetTargetActor_C_ExecuteUbergraph_BTT_GetTargetActor, EntryPoint) == 0x000000, "Member 'BTT_GetTargetActor_C_ExecuteUbergraph_BTT_GetTargetActor::EntryPoint' has a wrong offset!");
static_assert(offsetof(BTT_GetTargetActor_C_ExecuteUbergraph_BTT_GetTargetActor, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000004, "Member 'BTT_GetTargetActor_C_ExecuteUbergraph_BTT_GetTargetActor::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_GetTargetActor_C_ExecuteUbergraph_BTT_GetTargetActor, CallFunc_TargetingType_Bool) == 0x000005, "Member 'BTT_GetTargetActor_C_ExecuteUbergraph_BTT_GetTargetActor::CallFunc_TargetingType_Bool' has a wrong offset!");
static_assert(offsetof(BTT_GetTargetActor_C_ExecuteUbergraph_BTT_GetTargetActor, CallFunc_FilterTags_Bool) == 0x000006, "Member 'BTT_GetTargetActor_C_ExecuteUbergraph_BTT_GetTargetActor::CallFunc_FilterTags_Bool' has a wrong offset!");
static_assert(offsetof(BTT_GetTargetActor_C_ExecuteUbergraph_BTT_GetTargetActor, CallFunc_FilterRange_Bool) == 0x000007, "Member 'BTT_GetTargetActor_C_ExecuteUbergraph_BTT_GetTargetActor::CallFunc_FilterRange_Bool' has a wrong offset!");
static_assert(offsetof(BTT_GetTargetActor_C_ExecuteUbergraph_BTT_GetTargetActor, CallFunc_Sorting_Bool) == 0x000008, "Member 'BTT_GetTargetActor_C_ExecuteUbergraph_BTT_GetTargetActor::CallFunc_Sorting_Bool' has a wrong offset!");
static_assert(offsetof(BTT_GetTargetActor_C_ExecuteUbergraph_BTT_GetTargetActor, CallFunc_PickTarget_ReturnValue) == 0x000010, "Member 'BTT_GetTargetActor_C_ExecuteUbergraph_BTT_GetTargetActor::CallFunc_PickTarget_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_GetTargetActor_C_ExecuteUbergraph_BTT_GetTargetActor, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'BTT_GetTargetActor_C_ExecuteUbergraph_BTT_GetTargetActor::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_GetTargetActor_C_ExecuteUbergraph_BTT_GetTargetActor, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000019, "Member 'BTT_GetTargetActor_C_ExecuteUbergraph_BTT_GetTargetActor::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_GetTargetActor_C_ExecuteUbergraph_BTT_GetTargetActor, CallFunc_PickRandomTarget_ReturnValue) == 0x000020, "Member 'BTT_GetTargetActor_C_ExecuteUbergraph_BTT_GetTargetActor::CallFunc_PickRandomTarget_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_GetTargetActor_C_ExecuteUbergraph_BTT_GetTargetActor, CallFunc_IsValid_ReturnValue_1) == 0x000028, "Member 'BTT_GetTargetActor_C_ExecuteUbergraph_BTT_GetTargetActor::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BTT_GetTargetActor_C_ExecuteUbergraph_BTT_GetTargetActor, K2Node_Event_OwnerController) == 0x000030, "Member 'BTT_GetTargetActor_C_ExecuteUbergraph_BTT_GetTargetActor::K2Node_Event_OwnerController' has a wrong offset!");
static_assert(offsetof(BTT_GetTargetActor_C_ExecuteUbergraph_BTT_GetTargetActor, K2Node_Event_ControlledPawn) == 0x000038, "Member 'BTT_GetTargetActor_C_ExecuteUbergraph_BTT_GetTargetActor::K2Node_Event_ControlledPawn' has a wrong offset!");
static_assert(offsetof(BTT_GetTargetActor_C_ExecuteUbergraph_BTT_GetTargetActor, K2Node_DynamicCast_AsBP_DCMonster_Base_with_Options) == 0x000040, "Member 'BTT_GetTargetActor_C_ExecuteUbergraph_BTT_GetTargetActor::K2Node_DynamicCast_AsBP_DCMonster_Base_with_Options' has a wrong offset!");
static_assert(offsetof(BTT_GetTargetActor_C_ExecuteUbergraph_BTT_GetTargetActor, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'BTT_GetTargetActor_C_ExecuteUbergraph_BTT_GetTargetActor::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BTT_GetTargetActor_C_ExecuteUbergraph_BTT_GetTargetActor, CallFunc_GetBlackboard_ReturnValue) == 0x000050, "Member 'BTT_GetTargetActor_C_ExecuteUbergraph_BTT_GetTargetActor::CallFunc_GetBlackboard_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_GetTargetActor_C_ExecuteUbergraph_BTT_GetTargetActor, CallFunc_GetAIPerceptionComponent_ReturnValue) == 0x000058, "Member 'BTT_GetTargetActor_C_ExecuteUbergraph_BTT_GetTargetActor::CallFunc_GetAIPerceptionComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_GetTargetActor_C_ExecuteUbergraph_BTT_GetTargetActor, CallFunc_FilterHP_Bool) == 0x000060, "Member 'BTT_GetTargetActor_C_ExecuteUbergraph_BTT_GetTargetActor::CallFunc_FilterHP_Bool' has a wrong offset!");
static_assert(offsetof(BTT_GetTargetActor_C_ExecuteUbergraph_BTT_GetTargetActor, Temp_int_Array_Index_Variable) == 0x000064, "Member 'BTT_GetTargetActor_C_ExecuteUbergraph_BTT_GetTargetActor::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BTT_GetTargetActor_C_ExecuteUbergraph_BTT_GetTargetActor, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000068, "Member 'BTT_GetTargetActor_C_ExecuteUbergraph_BTT_GetTargetActor::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_GetTargetActor_C_ExecuteUbergraph_BTT_GetTargetActor, CallFunc_Filter_Target_From_Spawn_Location_Return_Value) == 0x000080, "Member 'BTT_GetTargetActor_C_ExecuteUbergraph_BTT_GetTargetActor::CallFunc_Filter_Target_From_Spawn_Location_Return_Value' has a wrong offset!");
static_assert(offsetof(BTT_GetTargetActor_C_ExecuteUbergraph_BTT_GetTargetActor, CallFunc_Filter_Target_From_Spawn_Location_Result) == 0x000088, "Member 'BTT_GetTargetActor_C_ExecuteUbergraph_BTT_GetTargetActor::CallFunc_Filter_Target_From_Spawn_Location_Result' has a wrong offset!");
static_assert(offsetof(BTT_GetTargetActor_C_ExecuteUbergraph_BTT_GetTargetActor, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000098, "Member 'BTT_GetTargetActor_C_ExecuteUbergraph_BTT_GetTargetActor::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BTT_GetTargetActor_C_ExecuteUbergraph_BTT_GetTargetActor, CallFunc_Get_Target_Array_Return_Value) == 0x0000B0, "Member 'BTT_GetTargetActor_C_ExecuteUbergraph_BTT_GetTargetActor::CallFunc_Get_Target_Array_Return_Value' has a wrong offset!");
static_assert(offsetof(BTT_GetTargetActor_C_ExecuteUbergraph_BTT_GetTargetActor, CallFunc_Get_Target_Array_TargetArray) == 0x0000B8, "Member 'BTT_GetTargetActor_C_ExecuteUbergraph_BTT_GetTargetActor::CallFunc_Get_Target_Array_TargetArray' has a wrong offset!");
static_assert(offsetof(BTT_GetTargetActor_C_ExecuteUbergraph_BTT_GetTargetActor, CallFunc_Filter_Target_From_Spawn_Location_Return_Value_1) == 0x0000C8, "Member 'BTT_GetTargetActor_C_ExecuteUbergraph_BTT_GetTargetActor::CallFunc_Filter_Target_From_Spawn_Location_Return_Value_1' has a wrong offset!");
static_assert(offsetof(BTT_GetTargetActor_C_ExecuteUbergraph_BTT_GetTargetActor, CallFunc_Filter_Target_From_Spawn_Location_Result_1) == 0x0000D0, "Member 'BTT_GetTargetActor_C_ExecuteUbergraph_BTT_GetTargetActor::CallFunc_Filter_Target_From_Spawn_Location_Result_1' has a wrong offset!");
static_assert(offsetof(BTT_GetTargetActor_C_ExecuteUbergraph_BTT_GetTargetActor, CallFunc_IsValid_ReturnValue_2) == 0x0000E0, "Member 'BTT_GetTargetActor_C_ExecuteUbergraph_BTT_GetTargetActor::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BTT_GetTargetActor_C_ExecuteUbergraph_BTT_GetTargetActor, CallFunc_Array_Get_Item) == 0x0000E8, "Member 'BTT_GetTargetActor_C_ExecuteUbergraph_BTT_GetTargetActor::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BTT_GetTargetActor_C_ExecuteUbergraph_BTT_GetTargetActor, CallFunc_Array_Length_ReturnValue) == 0x0000F0, "Member 'BTT_GetTargetActor_C_ExecuteUbergraph_BTT_GetTargetActor::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_GetTargetActor_C_ExecuteUbergraph_BTT_GetTargetActor, CallFunc_Array_AddUnique_ReturnValue) == 0x0000F4, "Member 'BTT_GetTargetActor_C_ExecuteUbergraph_BTT_GetTargetActor::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_GetTargetActor_C_ExecuteUbergraph_BTT_GetTargetActor, Temp_int_Loop_Counter_Variable) == 0x0000F8, "Member 'BTT_GetTargetActor_C_ExecuteUbergraph_BTT_GetTargetActor::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BTT_GetTargetActor_C_ExecuteUbergraph_BTT_GetTargetActor, CallFunc_Less_IntInt_ReturnValue) == 0x0000FC, "Member 'BTT_GetTargetActor_C_ExecuteUbergraph_BTT_GetTargetActor::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_GetTargetActor_C_ExecuteUbergraph_BTT_GetTargetActor, CallFunc_Add_IntInt_ReturnValue) == 0x000100, "Member 'BTT_GetTargetActor_C_ExecuteUbergraph_BTT_GetTargetActor::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BTT_GetTargetActor.BTT_GetTargetActor_C.FilterHP
// 0x00D0 (0x00D0 - 0x0000)
struct BTT_GetTargetActor_C_FilterHP final
{
public:
	bool                                          Bool;                                              // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3AC0[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3AC1[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_1;        // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3AC2[0x3];                                     // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_2;        // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3AC3[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ADCCharacterBase*                       CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3AC4[0x3];                                     // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_2;            // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetFloatAttribute_bSuccessfullyFoundAttribute; // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3AC5[0x3];                                     // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetFloatAttribute_ReturnValue;            // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue;                          // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetFloatAttribute_bSuccessfullyFoundAttribute_1; // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3AC6[0x3];                                     // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetFloatAttribute_ReturnValue_1;          // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3AC7[0x7];                                     // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ADCCharacterBase*                       CallFunc_Array_Get_Item_1;                         // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue_1;           // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetFloatAttribute_bSuccessfullyFoundAttribute_2; // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3AC8[0x2];                                     // 0x007A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetFloatAttribute_ReturnValue_2;          // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetFloatAttribute_bSuccessfullyFoundAttribute_3; // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3AC9[0x3];                                     // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetFloatAttribute_ReturnValue_3;          // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3ACA[0x4];                                     // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_3;            // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3ACB[0x4];                                     // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue_1;                        // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x00AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3ACC[0x3];                                     // 0x00AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_B_ImplicitCast;       // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_A_ImplicitCast;       // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_B_ImplicitCast_1;     // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_A_ImplicitCast_1;     // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTT_GetTargetActor_C_FilterHP) == 0x000008, "Wrong alignment on BTT_GetTargetActor_C_FilterHP");
static_assert(sizeof(BTT_GetTargetActor_C_FilterHP) == 0x0000D0, "Wrong size on BTT_GetTargetActor_C_FilterHP");
static_assert(offsetof(BTT_GetTargetActor_C_FilterHP, Bool) == 0x000000, "Member 'BTT_GetTargetActor_C_FilterHP::Bool' has a wrong offset!");
static_assert(offsetof(BTT_GetTargetActor_C_FilterHP, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BTT_GetTargetActor_C_FilterHP::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BTT_GetTargetActor_C_FilterHP, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'BTT_GetTargetActor_C_FilterHP::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BTT_GetTargetActor_C_FilterHP, CallFunc_Subtract_IntInt_ReturnValue) == 0x00000C, "Member 'BTT_GetTargetActor_C_FilterHP::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_GetTargetActor_C_FilterHP, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000010, "Member 'BTT_GetTargetActor_C_FilterHP::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_GetTargetActor_C_FilterHP, Temp_int_Array_Index_Variable_1) == 0x000014, "Member 'BTT_GetTargetActor_C_FilterHP::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BTT_GetTargetActor_C_FilterHP, Temp_int_Loop_Counter_Variable_1) == 0x000018, "Member 'BTT_GetTargetActor_C_FilterHP::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BTT_GetTargetActor_C_FilterHP, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x00001C, "Member 'BTT_GetTargetActor_C_FilterHP::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BTT_GetTargetActor_C_FilterHP, CallFunc_GreaterEqual_IntInt_ReturnValue_1) == 0x000020, "Member 'BTT_GetTargetActor_C_FilterHP::CallFunc_GreaterEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BTT_GetTargetActor_C_FilterHP, CallFunc_Array_Length_ReturnValue) == 0x000024, "Member 'BTT_GetTargetActor_C_FilterHP::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_GetTargetActor_C_FilterHP, CallFunc_GreaterEqual_IntInt_ReturnValue_2) == 0x000028, "Member 'BTT_GetTargetActor_C_FilterHP::CallFunc_GreaterEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BTT_GetTargetActor_C_FilterHP, CallFunc_Array_Get_Item) == 0x000030, "Member 'BTT_GetTargetActor_C_FilterHP::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BTT_GetTargetActor_C_FilterHP, CallFunc_Array_Length_ReturnValue_1) == 0x000038, "Member 'BTT_GetTargetActor_C_FilterHP::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BTT_GetTargetActor_C_FilterHP, CallFunc_Array_RemoveItem_ReturnValue) == 0x00003C, "Member 'BTT_GetTargetActor_C_FilterHP::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_GetTargetActor_C_FilterHP, CallFunc_Subtract_IntInt_ReturnValue_2) == 0x000040, "Member 'BTT_GetTargetActor_C_FilterHP::CallFunc_Subtract_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BTT_GetTargetActor_C_FilterHP, CallFunc_GetFloatAttribute_bSuccessfullyFoundAttribute) == 0x000044, "Member 'BTT_GetTargetActor_C_FilterHP::CallFunc_GetFloatAttribute_bSuccessfullyFoundAttribute' has a wrong offset!");
static_assert(offsetof(BTT_GetTargetActor_C_FilterHP, CallFunc_GetFloatAttribute_ReturnValue) == 0x000048, "Member 'BTT_GetTargetActor_C_FilterHP::CallFunc_GetFloatAttribute_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_GetTargetActor_C_FilterHP, CallFunc_Max_ReturnValue) == 0x00004C, "Member 'BTT_GetTargetActor_C_FilterHP::CallFunc_Max_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_GetTargetActor_C_FilterHP, CallFunc_GetFloatAttribute_bSuccessfullyFoundAttribute_1) == 0x000050, "Member 'BTT_GetTargetActor_C_FilterHP::CallFunc_GetFloatAttribute_bSuccessfullyFoundAttribute_1' has a wrong offset!");
static_assert(offsetof(BTT_GetTargetActor_C_FilterHP, CallFunc_GetFloatAttribute_ReturnValue_1) == 0x000054, "Member 'BTT_GetTargetActor_C_FilterHP::CallFunc_GetFloatAttribute_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BTT_GetTargetActor_C_FilterHP, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000058, "Member 'BTT_GetTargetActor_C_FilterHP::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_GetTargetActor_C_FilterHP, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000060, "Member 'BTT_GetTargetActor_C_FilterHP::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_GetTargetActor_C_FilterHP, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000068, "Member 'BTT_GetTargetActor_C_FilterHP::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_GetTargetActor_C_FilterHP, CallFunc_Array_Get_Item_1) == 0x000070, "Member 'BTT_GetTargetActor_C_FilterHP::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BTT_GetTargetActor_C_FilterHP, CallFunc_Array_RemoveItem_ReturnValue_1) == 0x000078, "Member 'BTT_GetTargetActor_C_FilterHP::CallFunc_Array_RemoveItem_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BTT_GetTargetActor_C_FilterHP, CallFunc_GetFloatAttribute_bSuccessfullyFoundAttribute_2) == 0x000079, "Member 'BTT_GetTargetActor_C_FilterHP::CallFunc_GetFloatAttribute_bSuccessfullyFoundAttribute_2' has a wrong offset!");
static_assert(offsetof(BTT_GetTargetActor_C_FilterHP, CallFunc_GetFloatAttribute_ReturnValue_2) == 0x00007C, "Member 'BTT_GetTargetActor_C_FilterHP::CallFunc_GetFloatAttribute_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BTT_GetTargetActor_C_FilterHP, CallFunc_GetFloatAttribute_bSuccessfullyFoundAttribute_3) == 0x000080, "Member 'BTT_GetTargetActor_C_FilterHP::CallFunc_GetFloatAttribute_bSuccessfullyFoundAttribute_3' has a wrong offset!");
static_assert(offsetof(BTT_GetTargetActor_C_FilterHP, CallFunc_GetFloatAttribute_ReturnValue_3) == 0x000084, "Member 'BTT_GetTargetActor_C_FilterHP::CallFunc_GetFloatAttribute_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BTT_GetTargetActor_C_FilterHP, CallFunc_Array_Length_ReturnValue_2) == 0x000088, "Member 'BTT_GetTargetActor_C_FilterHP::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BTT_GetTargetActor_C_FilterHP, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x000090, "Member 'BTT_GetTargetActor_C_FilterHP::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BTT_GetTargetActor_C_FilterHP, CallFunc_Subtract_IntInt_ReturnValue_3) == 0x000098, "Member 'BTT_GetTargetActor_C_FilterHP::CallFunc_Subtract_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BTT_GetTargetActor_C_FilterHP, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x0000A0, "Member 'BTT_GetTargetActor_C_FilterHP::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BTT_GetTargetActor_C_FilterHP, CallFunc_Max_ReturnValue_1) == 0x0000A8, "Member 'BTT_GetTargetActor_C_FilterHP::CallFunc_Max_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BTT_GetTargetActor_C_FilterHP, CallFunc_Less_DoubleDouble_ReturnValue) == 0x0000AC, "Member 'BTT_GetTargetActor_C_FilterHP::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_GetTargetActor_C_FilterHP, CallFunc_Divide_DoubleDouble_B_ImplicitCast) == 0x0000B0, "Member 'BTT_GetTargetActor_C_FilterHP::CallFunc_Divide_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BTT_GetTargetActor_C_FilterHP, CallFunc_Divide_DoubleDouble_A_ImplicitCast) == 0x0000B8, "Member 'BTT_GetTargetActor_C_FilterHP::CallFunc_Divide_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BTT_GetTargetActor_C_FilterHP, CallFunc_Divide_DoubleDouble_B_ImplicitCast_1) == 0x0000C0, "Member 'BTT_GetTargetActor_C_FilterHP::CallFunc_Divide_DoubleDouble_B_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BTT_GetTargetActor_C_FilterHP, CallFunc_Divide_DoubleDouble_A_ImplicitCast_1) == 0x0000C8, "Member 'BTT_GetTargetActor_C_FilterHP::CallFunc_Divide_DoubleDouble_A_ImplicitCast_1' has a wrong offset!");

// Function BTT_GetTargetActor.BTT_GetTargetActor_C.FilterRange
// 0x0050 (0x0050 - 0x0000)
struct BTT_GetTargetActor_C_FilterRange final
{
public:
	bool                                          Bool;                                              // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Get_Max_Distance_From_Perception_Result;  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3ACD[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Get_Max_Distance_From_Perception_Return_Value; // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Get_Max_Distance_From_Perception_Result_1; // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3ACE[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Get_Max_Distance_From_Perception_Return_Value_1; // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FilterTargetsOverDistance_ReturnValue;    // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FilterTargetsOverXYRange_ReturnValue;     // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue;      // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FilterTargetsWithinXYRange_ReturnValue;   // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FilterTargetsWithinDistance_ReturnValue;  // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FilterTargetsWithinDirectionAngleAndAllowedAngle_ReturnValue; // 0x0026(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3ACF[0x1];                                     // 0x0027(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetVisionAngle_ReturnValue;               // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FilterTargetsWithinDirectionAngleAndAllowedAngle_ReturnValue_1; // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3AD0[0x2];                                     // 0x002E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_FilterTargetsOverDistance_Distance_ImplicitCast; // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FilterTargetsOverXYRange_XYRange_ImplicitCast; // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FilterTargetsWithinXYRange_XYRange_ImplicitCast; // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FilterTargetsWithinDistance_Distance_ImplicitCast; // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FilterTargetsWithinDirectionAngleAndAllowedAngle_AllowedAngle_ImplicitCast; // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FilterTargetsWithinDirectionAngleAndAllowedAngle_DirectionalAngle_ImplicitCast; // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FilterTargetsWithinDirectionAngleAndAllowedAngle_DirectionalAngle_ImplicitCast_1; // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTT_GetTargetActor_C_FilterRange) == 0x000008, "Wrong alignment on BTT_GetTargetActor_C_FilterRange");
static_assert(sizeof(BTT_GetTargetActor_C_FilterRange) == 0x000050, "Wrong size on BTT_GetTargetActor_C_FilterRange");
static_assert(offsetof(BTT_GetTargetActor_C_FilterRange, Bool) == 0x000000, "Member 'BTT_GetTargetActor_C_FilterRange::Bool' has a wrong offset!");
static_assert(offsetof(BTT_GetTargetActor_C_FilterRange, CallFunc_Get_Max_Distance_From_Perception_Result) == 0x000001, "Member 'BTT_GetTargetActor_C_FilterRange::CallFunc_Get_Max_Distance_From_Perception_Result' has a wrong offset!");
static_assert(offsetof(BTT_GetTargetActor_C_FilterRange, CallFunc_Get_Max_Distance_From_Perception_Return_Value) == 0x000008, "Member 'BTT_GetTargetActor_C_FilterRange::CallFunc_Get_Max_Distance_From_Perception_Return_Value' has a wrong offset!");
static_assert(offsetof(BTT_GetTargetActor_C_FilterRange, CallFunc_Get_Max_Distance_From_Perception_Result_1) == 0x000010, "Member 'BTT_GetTargetActor_C_FilterRange::CallFunc_Get_Max_Distance_From_Perception_Result_1' has a wrong offset!");
static_assert(offsetof(BTT_GetTargetActor_C_FilterRange, CallFunc_Get_Max_Distance_From_Perception_Return_Value_1) == 0x000018, "Member 'BTT_GetTargetActor_C_FilterRange::CallFunc_Get_Max_Distance_From_Perception_Return_Value_1' has a wrong offset!");
static_assert(offsetof(BTT_GetTargetActor_C_FilterRange, K2Node_SwitchEnum_CmpSuccess) == 0x000020, "Member 'BTT_GetTargetActor_C_FilterRange::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BTT_GetTargetActor_C_FilterRange, CallFunc_FilterTargetsOverDistance_ReturnValue) == 0x000021, "Member 'BTT_GetTargetActor_C_FilterRange::CallFunc_FilterTargetsOverDistance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_GetTargetActor_C_FilterRange, CallFunc_FilterTargetsOverXYRange_ReturnValue) == 0x000022, "Member 'BTT_GetTargetActor_C_FilterRange::CallFunc_FilterTargetsOverXYRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_GetTargetActor_C_FilterRange, CallFunc_EqualEqual_DoubleDouble_ReturnValue) == 0x000023, "Member 'BTT_GetTargetActor_C_FilterRange::CallFunc_EqualEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_GetTargetActor_C_FilterRange, CallFunc_FilterTargetsWithinXYRange_ReturnValue) == 0x000024, "Member 'BTT_GetTargetActor_C_FilterRange::CallFunc_FilterTargetsWithinXYRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_GetTargetActor_C_FilterRange, CallFunc_FilterTargetsWithinDistance_ReturnValue) == 0x000025, "Member 'BTT_GetTargetActor_C_FilterRange::CallFunc_FilterTargetsWithinDistance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_GetTargetActor_C_FilterRange, CallFunc_FilterTargetsWithinDirectionAngleAndAllowedAngle_ReturnValue) == 0x000026, "Member 'BTT_GetTargetActor_C_FilterRange::CallFunc_FilterTargetsWithinDirectionAngleAndAllowedAngle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_GetTargetActor_C_FilterRange, CallFunc_GetVisionAngle_ReturnValue) == 0x000028, "Member 'BTT_GetTargetActor_C_FilterRange::CallFunc_GetVisionAngle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_GetTargetActor_C_FilterRange, CallFunc_FilterTargetsWithinDirectionAngleAndAllowedAngle_ReturnValue_1) == 0x00002C, "Member 'BTT_GetTargetActor_C_FilterRange::CallFunc_FilterTargetsWithinDirectionAngleAndAllowedAngle_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BTT_GetTargetActor_C_FilterRange, K2Node_SwitchEnum_CmpSuccess_1) == 0x00002D, "Member 'BTT_GetTargetActor_C_FilterRange::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(BTT_GetTargetActor_C_FilterRange, CallFunc_FilterTargetsOverDistance_Distance_ImplicitCast) == 0x000030, "Member 'BTT_GetTargetActor_C_FilterRange::CallFunc_FilterTargetsOverDistance_Distance_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BTT_GetTargetActor_C_FilterRange, CallFunc_FilterTargetsOverXYRange_XYRange_ImplicitCast) == 0x000034, "Member 'BTT_GetTargetActor_C_FilterRange::CallFunc_FilterTargetsOverXYRange_XYRange_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BTT_GetTargetActor_C_FilterRange, CallFunc_FilterTargetsWithinXYRange_XYRange_ImplicitCast) == 0x000038, "Member 'BTT_GetTargetActor_C_FilterRange::CallFunc_FilterTargetsWithinXYRange_XYRange_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BTT_GetTargetActor_C_FilterRange, CallFunc_FilterTargetsWithinDistance_Distance_ImplicitCast) == 0x00003C, "Member 'BTT_GetTargetActor_C_FilterRange::CallFunc_FilterTargetsWithinDistance_Distance_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BTT_GetTargetActor_C_FilterRange, CallFunc_FilterTargetsWithinDirectionAngleAndAllowedAngle_AllowedAngle_ImplicitCast) == 0x000040, "Member 'BTT_GetTargetActor_C_FilterRange::CallFunc_FilterTargetsWithinDirectionAngleAndAllowedAngle_AllowedAngle_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BTT_GetTargetActor_C_FilterRange, CallFunc_FilterTargetsWithinDirectionAngleAndAllowedAngle_DirectionalAngle_ImplicitCast) == 0x000044, "Member 'BTT_GetTargetActor_C_FilterRange::CallFunc_FilterTargetsWithinDirectionAngleAndAllowedAngle_DirectionalAngle_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BTT_GetTargetActor_C_FilterRange, CallFunc_FilterTargetsWithinDirectionAngleAndAllowedAngle_DirectionalAngle_ImplicitCast_1) == 0x000048, "Member 'BTT_GetTargetActor_C_FilterRange::CallFunc_FilterTargetsWithinDirectionAngleAndAllowedAngle_DirectionalAngle_ImplicitCast_1' has a wrong offset!");

// Function BTT_GetTargetActor.BTT_GetTargetActor_C.FilterTags
// 0x0058 (0x0058 - 0x0000)
struct BTT_GetTargetActor_C_FilterTags final
{
public:
	bool                                          Bool;                                              // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3AD1[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3AD2[0x2];                                     // 0x001A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3AD3[0x3];                                     // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FilterUnTagedTargets_ReturnValue;         // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3AD4[0x2];                                     // 0x003E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           CallFunc_Array_Get_Item_1;                         // 0x0040(0x0008)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_4;               // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FilterTagedTargets_ReturnValue;           // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_4;                // 0x004D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3AD5[0x2];                                     // 0x004E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_5;               // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_5;                // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTT_GetTargetActor_C_FilterTags) == 0x000004, "Wrong alignment on BTT_GetTargetActor_C_FilterTags");
static_assert(sizeof(BTT_GetTargetActor_C_FilterTags) == 0x000058, "Wrong size on BTT_GetTargetActor_C_FilterTags");
static_assert(offsetof(BTT_GetTargetActor_C_FilterTags, Bool) == 0x000000, "Member 'BTT_GetTargetActor_C_FilterTags::Bool' has a wrong offset!");
static_assert(offsetof(BTT_GetTargetActor_C_FilterTags, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BTT_GetTargetActor_C_FilterTags::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BTT_GetTargetActor_C_FilterTags, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BTT_GetTargetActor_C_FilterTags::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_GetTargetActor_C_FilterTags, Temp_int_Array_Index_Variable) == 0x00000C, "Member 'BTT_GetTargetActor_C_FilterTags::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BTT_GetTargetActor_C_FilterTags, CallFunc_Array_Length_ReturnValue) == 0x000010, "Member 'BTT_GetTargetActor_C_FilterTags::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_GetTargetActor_C_FilterTags, CallFunc_Array_Length_ReturnValue_1) == 0x000014, "Member 'BTT_GetTargetActor_C_FilterTags::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BTT_GetTargetActor_C_FilterTags, CallFunc_Less_IntInt_ReturnValue) == 0x000018, "Member 'BTT_GetTargetActor_C_FilterTags::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_GetTargetActor_C_FilterTags, CallFunc_Less_IntInt_ReturnValue_1) == 0x000019, "Member 'BTT_GetTargetActor_C_FilterTags::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BTT_GetTargetActor_C_FilterTags, Temp_int_Loop_Counter_Variable_1) == 0x00001C, "Member 'BTT_GetTargetActor_C_FilterTags::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BTT_GetTargetActor_C_FilterTags, CallFunc_Array_Length_ReturnValue_2) == 0x000020, "Member 'BTT_GetTargetActor_C_FilterTags::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BTT_GetTargetActor_C_FilterTags, CallFunc_Add_IntInt_ReturnValue_1) == 0x000024, "Member 'BTT_GetTargetActor_C_FilterTags::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BTT_GetTargetActor_C_FilterTags, CallFunc_Less_IntInt_ReturnValue_2) == 0x000028, "Member 'BTT_GetTargetActor_C_FilterTags::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BTT_GetTargetActor_C_FilterTags, Temp_int_Array_Index_Variable_1) == 0x00002C, "Member 'BTT_GetTargetActor_C_FilterTags::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BTT_GetTargetActor_C_FilterTags, CallFunc_Array_Get_Item) == 0x000030, "Member 'BTT_GetTargetActor_C_FilterTags::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BTT_GetTargetActor_C_FilterTags, CallFunc_Array_Length_ReturnValue_3) == 0x000038, "Member 'BTT_GetTargetActor_C_FilterTags::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BTT_GetTargetActor_C_FilterTags, CallFunc_FilterUnTagedTargets_ReturnValue) == 0x00003C, "Member 'BTT_GetTargetActor_C_FilterTags::CallFunc_FilterUnTagedTargets_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_GetTargetActor_C_FilterTags, CallFunc_Less_IntInt_ReturnValue_3) == 0x00003D, "Member 'BTT_GetTargetActor_C_FilterTags::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BTT_GetTargetActor_C_FilterTags, CallFunc_Array_Get_Item_1) == 0x000040, "Member 'BTT_GetTargetActor_C_FilterTags::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BTT_GetTargetActor_C_FilterTags, CallFunc_Array_Length_ReturnValue_4) == 0x000048, "Member 'BTT_GetTargetActor_C_FilterTags::CallFunc_Array_Length_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BTT_GetTargetActor_C_FilterTags, CallFunc_FilterTagedTargets_ReturnValue) == 0x00004C, "Member 'BTT_GetTargetActor_C_FilterTags::CallFunc_FilterTagedTargets_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_GetTargetActor_C_FilterTags, CallFunc_Less_IntInt_ReturnValue_4) == 0x00004D, "Member 'BTT_GetTargetActor_C_FilterTags::CallFunc_Less_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BTT_GetTargetActor_C_FilterTags, CallFunc_Array_Length_ReturnValue_5) == 0x000050, "Member 'BTT_GetTargetActor_C_FilterTags::CallFunc_Array_Length_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BTT_GetTargetActor_C_FilterTags, CallFunc_Less_IntInt_ReturnValue_5) == 0x000054, "Member 'BTT_GetTargetActor_C_FilterTags::CallFunc_Less_IntInt_ReturnValue_5' has a wrong offset!");

// Function BTT_GetTargetActor.BTT_GetTargetActor_C.ReceiveExecuteAI
// 0x0010 (0x0010 - 0x0000)
struct BTT_GetTargetActor_C_ReceiveExecuteAI final
{
public:
	class AAIController*                          OwnerController;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  Param_ControlledPawn;                              // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTT_GetTargetActor_C_ReceiveExecuteAI) == 0x000008, "Wrong alignment on BTT_GetTargetActor_C_ReceiveExecuteAI");
static_assert(sizeof(BTT_GetTargetActor_C_ReceiveExecuteAI) == 0x000010, "Wrong size on BTT_GetTargetActor_C_ReceiveExecuteAI");
static_assert(offsetof(BTT_GetTargetActor_C_ReceiveExecuteAI, OwnerController) == 0x000000, "Member 'BTT_GetTargetActor_C_ReceiveExecuteAI::OwnerController' has a wrong offset!");
static_assert(offsetof(BTT_GetTargetActor_C_ReceiveExecuteAI, Param_ControlledPawn) == 0x000008, "Member 'BTT_GetTargetActor_C_ReceiveExecuteAI::Param_ControlledPawn' has a wrong offset!");

// Function BTT_GetTargetActor.BTT_GetTargetActor_C.Sorting
// 0x0190 (0x0190 - 0x0000)
struct BTT_GetTargetActor_C_Sorting final
{
public:
	bool                                          Bool;                                              // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3AD6[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SortTargetsByDistance_ReturnValue;        // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3AD7[0x3];                                     // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_2;                               // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3AD8[0x2];                                     // 0x0032(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_3;                               // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3AD9[0x3];                                     // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_5;                 // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3ADA[0x3];                                     // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_6;                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ADCCharacterBase*                       CallFunc_Array_Get_Item;                           // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_7;                 // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetAggroPoint_bSuccessfully;              // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3ADB[0x3];                                     // 0x0065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetAggroPoint_ReturnValue;                // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3ADC[0x4];                                     // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ADCCharacterBase*                       CallFunc_Array_Get_Item_1;                         // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_8;                 // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetAggroPoint_bSuccessfully_1;            // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3ADD[0x3];                                     // 0x007D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetAggroPoint_ReturnValue_1;              // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue;      // 0x0085(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3ADE[0x2];                                     // 0x0086(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class ADCCharacterBase*                       CallFunc_Array_Get_Item_2;                         // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_4;               // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_2;           // 0x009D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetFloatAttribute_bSuccessfullyFoundAttribute; // 0x009E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3ADF[0x1];                                     // 0x009F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetFloatAttribute_ReturnValue;            // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3AE0[0x4];                                     // 0x00A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ADCCharacterBase*                       CallFunc_Array_Get_Item_3;                         // 0x00A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetFloatAttribute_bSuccessfullyFoundAttribute_1; // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3AE1[0x3];                                     // 0x00B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetFloatAttribute_ReturnValue_1;          // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x00B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x00BA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3AE2[0x1];                                     // 0x00BB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_5;               // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_1;        // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00C2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00C3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3AE3[0x4];                                     // 0x00C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ADCCharacterBase*                       CallFunc_Array_Get_Item_4;                         // 0x00C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ADCCharacterBase*                       CallFunc_Array_Get_Item_5;                         // 0x00D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetFloatAttribute_bSuccessfullyFoundAttribute_2; // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3AE4[0x3];                                     // 0x00D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetFloatAttribute_ReturnValue_2;          // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetFloatAttribute_bSuccessfullyFoundAttribute_3; // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3AE5[0x3];                                     // 0x00E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetFloatAttribute_ReturnValue_3;          // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetFloatAttribute_bSuccessfullyFoundAttribute_4; // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3AE6[0x3];                                     // 0x00E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetFloatAttribute_ReturnValue_4;          // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetFloatAttribute_bSuccessfullyFoundAttribute_5; // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3AE7[0x3];                                     // 0x00F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetFloatAttribute_ReturnValue_5;          // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_4;                               // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3AE8[0x4];                                     // 0x0104(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ADCCharacterBase*                       CallFunc_Array_Get_Item_6;                         // 0x0110(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_1;       // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3AE9[0x3];                                     // 0x0119(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue_1;          // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_3;           // 0x0121(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3AEA[0x2];                                     // 0x0122(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_9;                 // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_6;               // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_2;            // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_3;            // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_4;           // 0x0134(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_5;           // 0x0135(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SortTargetsByAggro_ReturnValue;           // 0x0136(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SortTargetsByDistance_ReturnValue_1;      // 0x0137(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_2;                    // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3AEB[0x7];                                     // 0x0139(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast;   // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_EqualEqual_DoubleDouble_B_ImplicitCast;   // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Less_DoubleDouble_B_ImplicitCast;         // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Greater_DoubleDouble_B_ImplicitCast;      // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Less_DoubleDouble_A_ImplicitCast;         // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast;      // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_B_ImplicitCast;       // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_A_ImplicitCast;       // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_B_ImplicitCast_1;     // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_A_ImplicitCast_1;     // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTT_GetTargetActor_C_Sorting) == 0x000008, "Wrong alignment on BTT_GetTargetActor_C_Sorting");
static_assert(sizeof(BTT_GetTargetActor_C_Sorting) == 0x000190, "Wrong size on BTT_GetTargetActor_C_Sorting");
static_assert(offsetof(BTT_GetTargetActor_C_Sorting, Bool) == 0x000000, "Member 'BTT_GetTargetActor_C_Sorting::Bool' has a wrong offset!");
static_assert(offsetof(BTT_GetTargetActor_C_Sorting, Temp_int_Variable) == 0x000004, "Member 'BTT_GetTargetActor_C_Sorting::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BTT_GetTargetActor_C_Sorting, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BTT_GetTargetActor_C_Sorting::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_GetTargetActor_C_Sorting, CallFunc_Add_IntInt_ReturnValue_1) == 0x00000C, "Member 'BTT_GetTargetActor_C_Sorting::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BTT_GetTargetActor_C_Sorting, Temp_int_Variable_1) == 0x000010, "Member 'BTT_GetTargetActor_C_Sorting::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BTT_GetTargetActor_C_Sorting, CallFunc_Add_IntInt_ReturnValue_2) == 0x000014, "Member 'BTT_GetTargetActor_C_Sorting::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BTT_GetTargetActor_C_Sorting, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'BTT_GetTargetActor_C_Sorting::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_GetTargetActor_C_Sorting, CallFunc_SortTargetsByDistance_ReturnValue) == 0x00001C, "Member 'BTT_GetTargetActor_C_Sorting::CallFunc_SortTargetsByDistance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_GetTargetActor_C_Sorting, Temp_int_Variable_2) == 0x000020, "Member 'BTT_GetTargetActor_C_Sorting::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(BTT_GetTargetActor_C_Sorting, CallFunc_Add_IntInt_ReturnValue_3) == 0x000024, "Member 'BTT_GetTargetActor_C_Sorting::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BTT_GetTargetActor_C_Sorting, CallFunc_Array_Length_ReturnValue_1) == 0x000028, "Member 'BTT_GetTargetActor_C_Sorting::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BTT_GetTargetActor_C_Sorting, CallFunc_Array_Length_ReturnValue_2) == 0x00002C, "Member 'BTT_GetTargetActor_C_Sorting::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BTT_GetTargetActor_C_Sorting, CallFunc_Greater_IntInt_ReturnValue) == 0x000030, "Member 'BTT_GetTargetActor_C_Sorting::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_GetTargetActor_C_Sorting, K2Node_SwitchEnum_CmpSuccess) == 0x000031, "Member 'BTT_GetTargetActor_C_Sorting::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BTT_GetTargetActor_C_Sorting, Temp_int_Variable_3) == 0x000034, "Member 'BTT_GetTargetActor_C_Sorting::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(BTT_GetTargetActor_C_Sorting, CallFunc_Array_Length_ReturnValue_3) == 0x000038, "Member 'BTT_GetTargetActor_C_Sorting::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BTT_GetTargetActor_C_Sorting, CallFunc_Add_IntInt_ReturnValue_4) == 0x00003C, "Member 'BTT_GetTargetActor_C_Sorting::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BTT_GetTargetActor_C_Sorting, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000040, "Member 'BTT_GetTargetActor_C_Sorting::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_GetTargetActor_C_Sorting, CallFunc_Add_IntInt_ReturnValue_5) == 0x000044, "Member 'BTT_GetTargetActor_C_Sorting::CallFunc_Add_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BTT_GetTargetActor_C_Sorting, Temp_int_Loop_Counter_Variable) == 0x000048, "Member 'BTT_GetTargetActor_C_Sorting::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BTT_GetTargetActor_C_Sorting, CallFunc_Less_IntInt_ReturnValue) == 0x00004C, "Member 'BTT_GetTargetActor_C_Sorting::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_GetTargetActor_C_Sorting, CallFunc_Add_IntInt_ReturnValue_6) == 0x000050, "Member 'BTT_GetTargetActor_C_Sorting::CallFunc_Add_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BTT_GetTargetActor_C_Sorting, Temp_int_Array_Index_Variable) == 0x000054, "Member 'BTT_GetTargetActor_C_Sorting::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BTT_GetTargetActor_C_Sorting, CallFunc_Array_Get_Item) == 0x000058, "Member 'BTT_GetTargetActor_C_Sorting::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BTT_GetTargetActor_C_Sorting, CallFunc_Add_IntInt_ReturnValue_7) == 0x000060, "Member 'BTT_GetTargetActor_C_Sorting::CallFunc_Add_IntInt_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BTT_GetTargetActor_C_Sorting, CallFunc_GetAggroPoint_bSuccessfully) == 0x000064, "Member 'BTT_GetTargetActor_C_Sorting::CallFunc_GetAggroPoint_bSuccessfully' has a wrong offset!");
static_assert(offsetof(BTT_GetTargetActor_C_Sorting, CallFunc_GetAggroPoint_ReturnValue) == 0x000068, "Member 'BTT_GetTargetActor_C_Sorting::CallFunc_GetAggroPoint_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_GetTargetActor_C_Sorting, CallFunc_Array_Get_Item_1) == 0x000070, "Member 'BTT_GetTargetActor_C_Sorting::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BTT_GetTargetActor_C_Sorting, CallFunc_Add_IntInt_ReturnValue_8) == 0x000078, "Member 'BTT_GetTargetActor_C_Sorting::CallFunc_Add_IntInt_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BTT_GetTargetActor_C_Sorting, CallFunc_GetAggroPoint_bSuccessfully_1) == 0x00007C, "Member 'BTT_GetTargetActor_C_Sorting::CallFunc_GetAggroPoint_bSuccessfully_1' has a wrong offset!");
static_assert(offsetof(BTT_GetTargetActor_C_Sorting, CallFunc_GetAggroPoint_ReturnValue_1) == 0x000080, "Member 'BTT_GetTargetActor_C_Sorting::CallFunc_GetAggroPoint_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BTT_GetTargetActor_C_Sorting, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000084, "Member 'BTT_GetTargetActor_C_Sorting::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_GetTargetActor_C_Sorting, CallFunc_EqualEqual_DoubleDouble_ReturnValue) == 0x000085, "Member 'BTT_GetTargetActor_C_Sorting::CallFunc_EqualEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_GetTargetActor_C_Sorting, CallFunc_Array_Get_Item_2) == 0x000088, "Member 'BTT_GetTargetActor_C_Sorting::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BTT_GetTargetActor_C_Sorting, CallFunc_Array_Length_ReturnValue_4) == 0x000090, "Member 'BTT_GetTargetActor_C_Sorting::CallFunc_Array_Length_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BTT_GetTargetActor_C_Sorting, CallFunc_Subtract_IntInt_ReturnValue) == 0x000094, "Member 'BTT_GetTargetActor_C_Sorting::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_GetTargetActor_C_Sorting, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x000098, "Member 'BTT_GetTargetActor_C_Sorting::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BTT_GetTargetActor_C_Sorting, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x00009C, "Member 'BTT_GetTargetActor_C_Sorting::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BTT_GetTargetActor_C_Sorting, CallFunc_LessEqual_IntInt_ReturnValue_2) == 0x00009D, "Member 'BTT_GetTargetActor_C_Sorting::CallFunc_LessEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BTT_GetTargetActor_C_Sorting, CallFunc_GetFloatAttribute_bSuccessfullyFoundAttribute) == 0x00009E, "Member 'BTT_GetTargetActor_C_Sorting::CallFunc_GetFloatAttribute_bSuccessfullyFoundAttribute' has a wrong offset!");
static_assert(offsetof(BTT_GetTargetActor_C_Sorting, CallFunc_GetFloatAttribute_ReturnValue) == 0x0000A0, "Member 'BTT_GetTargetActor_C_Sorting::CallFunc_GetFloatAttribute_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_GetTargetActor_C_Sorting, CallFunc_Array_Get_Item_3) == 0x0000A8, "Member 'BTT_GetTargetActor_C_Sorting::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(BTT_GetTargetActor_C_Sorting, CallFunc_GetFloatAttribute_bSuccessfullyFoundAttribute_1) == 0x0000B0, "Member 'BTT_GetTargetActor_C_Sorting::CallFunc_GetFloatAttribute_bSuccessfullyFoundAttribute_1' has a wrong offset!");
static_assert(offsetof(BTT_GetTargetActor_C_Sorting, CallFunc_GetFloatAttribute_ReturnValue_1) == 0x0000B4, "Member 'BTT_GetTargetActor_C_Sorting::CallFunc_GetFloatAttribute_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BTT_GetTargetActor_C_Sorting, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x0000B8, "Member 'BTT_GetTargetActor_C_Sorting::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_GetTargetActor_C_Sorting, CallFunc_Less_DoubleDouble_ReturnValue) == 0x0000B9, "Member 'BTT_GetTargetActor_C_Sorting::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_GetTargetActor_C_Sorting, K2Node_SwitchEnum_CmpSuccess_1) == 0x0000BA, "Member 'BTT_GetTargetActor_C_Sorting::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(BTT_GetTargetActor_C_Sorting, CallFunc_Array_Length_ReturnValue_5) == 0x0000BC, "Member 'BTT_GetTargetActor_C_Sorting::CallFunc_Array_Length_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BTT_GetTargetActor_C_Sorting, Temp_bool_True_if_break_was_hit_Variable) == 0x0000C0, "Member 'BTT_GetTargetActor_C_Sorting::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BTT_GetTargetActor_C_Sorting, CallFunc_GreaterEqual_IntInt_ReturnValue_1) == 0x0000C1, "Member 'BTT_GetTargetActor_C_Sorting::CallFunc_GreaterEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BTT_GetTargetActor_C_Sorting, CallFunc_Not_PreBool_ReturnValue) == 0x0000C2, "Member 'BTT_GetTargetActor_C_Sorting::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_GetTargetActor_C_Sorting, CallFunc_BooleanAND_ReturnValue) == 0x0000C3, "Member 'BTT_GetTargetActor_C_Sorting::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_GetTargetActor_C_Sorting, CallFunc_Array_Get_Item_4) == 0x0000C8, "Member 'BTT_GetTargetActor_C_Sorting::CallFunc_Array_Get_Item_4' has a wrong offset!");
static_assert(offsetof(BTT_GetTargetActor_C_Sorting, CallFunc_Array_Get_Item_5) == 0x0000D0, "Member 'BTT_GetTargetActor_C_Sorting::CallFunc_Array_Get_Item_5' has a wrong offset!");
static_assert(offsetof(BTT_GetTargetActor_C_Sorting, CallFunc_GetFloatAttribute_bSuccessfullyFoundAttribute_2) == 0x0000D8, "Member 'BTT_GetTargetActor_C_Sorting::CallFunc_GetFloatAttribute_bSuccessfullyFoundAttribute_2' has a wrong offset!");
static_assert(offsetof(BTT_GetTargetActor_C_Sorting, CallFunc_GetFloatAttribute_ReturnValue_2) == 0x0000DC, "Member 'BTT_GetTargetActor_C_Sorting::CallFunc_GetFloatAttribute_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BTT_GetTargetActor_C_Sorting, CallFunc_GetFloatAttribute_bSuccessfullyFoundAttribute_3) == 0x0000E0, "Member 'BTT_GetTargetActor_C_Sorting::CallFunc_GetFloatAttribute_bSuccessfullyFoundAttribute_3' has a wrong offset!");
static_assert(offsetof(BTT_GetTargetActor_C_Sorting, CallFunc_GetFloatAttribute_ReturnValue_3) == 0x0000E4, "Member 'BTT_GetTargetActor_C_Sorting::CallFunc_GetFloatAttribute_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BTT_GetTargetActor_C_Sorting, CallFunc_GetFloatAttribute_bSuccessfullyFoundAttribute_4) == 0x0000E8, "Member 'BTT_GetTargetActor_C_Sorting::CallFunc_GetFloatAttribute_bSuccessfullyFoundAttribute_4' has a wrong offset!");
static_assert(offsetof(BTT_GetTargetActor_C_Sorting, CallFunc_GetFloatAttribute_ReturnValue_4) == 0x0000EC, "Member 'BTT_GetTargetActor_C_Sorting::CallFunc_GetFloatAttribute_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BTT_GetTargetActor_C_Sorting, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x0000F0, "Member 'BTT_GetTargetActor_C_Sorting::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_GetTargetActor_C_Sorting, CallFunc_GetFloatAttribute_bSuccessfullyFoundAttribute_5) == 0x0000F8, "Member 'BTT_GetTargetActor_C_Sorting::CallFunc_GetFloatAttribute_bSuccessfullyFoundAttribute_5' has a wrong offset!");
static_assert(offsetof(BTT_GetTargetActor_C_Sorting, CallFunc_GetFloatAttribute_ReturnValue_5) == 0x0000FC, "Member 'BTT_GetTargetActor_C_Sorting::CallFunc_GetFloatAttribute_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BTT_GetTargetActor_C_Sorting, Temp_int_Variable_4) == 0x000100, "Member 'BTT_GetTargetActor_C_Sorting::Temp_int_Variable_4' has a wrong offset!");
static_assert(offsetof(BTT_GetTargetActor_C_Sorting, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x000108, "Member 'BTT_GetTargetActor_C_Sorting::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BTT_GetTargetActor_C_Sorting, CallFunc_Array_Get_Item_6) == 0x000110, "Member 'BTT_GetTargetActor_C_Sorting::CallFunc_Array_Get_Item_6' has a wrong offset!");
static_assert(offsetof(BTT_GetTargetActor_C_Sorting, CallFunc_Greater_DoubleDouble_ReturnValue_1) == 0x000118, "Member 'BTT_GetTargetActor_C_Sorting::CallFunc_Greater_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BTT_GetTargetActor_C_Sorting, CallFunc_Array_AddUnique_ReturnValue) == 0x00011C, "Member 'BTT_GetTargetActor_C_Sorting::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_GetTargetActor_C_Sorting, CallFunc_Less_DoubleDouble_ReturnValue_1) == 0x000120, "Member 'BTT_GetTargetActor_C_Sorting::CallFunc_Less_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BTT_GetTargetActor_C_Sorting, CallFunc_LessEqual_IntInt_ReturnValue_3) == 0x000121, "Member 'BTT_GetTargetActor_C_Sorting::CallFunc_LessEqual_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BTT_GetTargetActor_C_Sorting, CallFunc_Add_IntInt_ReturnValue_9) == 0x000124, "Member 'BTT_GetTargetActor_C_Sorting::CallFunc_Add_IntInt_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BTT_GetTargetActor_C_Sorting, CallFunc_Array_Length_ReturnValue_6) == 0x000128, "Member 'BTT_GetTargetActor_C_Sorting::CallFunc_Array_Length_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BTT_GetTargetActor_C_Sorting, CallFunc_Subtract_IntInt_ReturnValue_2) == 0x00012C, "Member 'BTT_GetTargetActor_C_Sorting::CallFunc_Subtract_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BTT_GetTargetActor_C_Sorting, CallFunc_Subtract_IntInt_ReturnValue_3) == 0x000130, "Member 'BTT_GetTargetActor_C_Sorting::CallFunc_Subtract_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BTT_GetTargetActor_C_Sorting, CallFunc_LessEqual_IntInt_ReturnValue_4) == 0x000134, "Member 'BTT_GetTargetActor_C_Sorting::CallFunc_LessEqual_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BTT_GetTargetActor_C_Sorting, CallFunc_LessEqual_IntInt_ReturnValue_5) == 0x000135, "Member 'BTT_GetTargetActor_C_Sorting::CallFunc_LessEqual_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BTT_GetTargetActor_C_Sorting, CallFunc_SortTargetsByAggro_ReturnValue) == 0x000136, "Member 'BTT_GetTargetActor_C_Sorting::CallFunc_SortTargetsByAggro_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_GetTargetActor_C_Sorting, CallFunc_SortTargetsByDistance_ReturnValue_1) == 0x000137, "Member 'BTT_GetTargetActor_C_Sorting::CallFunc_SortTargetsByDistance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BTT_GetTargetActor_C_Sorting, K2Node_SwitchEnum_CmpSuccess_2) == 0x000138, "Member 'BTT_GetTargetActor_C_Sorting::K2Node_SwitchEnum_CmpSuccess_2' has a wrong offset!");
static_assert(offsetof(BTT_GetTargetActor_C_Sorting, CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast) == 0x000140, "Member 'BTT_GetTargetActor_C_Sorting::CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BTT_GetTargetActor_C_Sorting, CallFunc_EqualEqual_DoubleDouble_B_ImplicitCast) == 0x000148, "Member 'BTT_GetTargetActor_C_Sorting::CallFunc_EqualEqual_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BTT_GetTargetActor_C_Sorting, CallFunc_Less_DoubleDouble_B_ImplicitCast) == 0x000150, "Member 'BTT_GetTargetActor_C_Sorting::CallFunc_Less_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BTT_GetTargetActor_C_Sorting, CallFunc_Greater_DoubleDouble_B_ImplicitCast) == 0x000158, "Member 'BTT_GetTargetActor_C_Sorting::CallFunc_Greater_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BTT_GetTargetActor_C_Sorting, CallFunc_Less_DoubleDouble_A_ImplicitCast) == 0x000160, "Member 'BTT_GetTargetActor_C_Sorting::CallFunc_Less_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BTT_GetTargetActor_C_Sorting, CallFunc_Greater_DoubleDouble_A_ImplicitCast) == 0x000168, "Member 'BTT_GetTargetActor_C_Sorting::CallFunc_Greater_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BTT_GetTargetActor_C_Sorting, CallFunc_Divide_DoubleDouble_B_ImplicitCast) == 0x000170, "Member 'BTT_GetTargetActor_C_Sorting::CallFunc_Divide_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BTT_GetTargetActor_C_Sorting, CallFunc_Divide_DoubleDouble_A_ImplicitCast) == 0x000178, "Member 'BTT_GetTargetActor_C_Sorting::CallFunc_Divide_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BTT_GetTargetActor_C_Sorting, CallFunc_Divide_DoubleDouble_B_ImplicitCast_1) == 0x000180, "Member 'BTT_GetTargetActor_C_Sorting::CallFunc_Divide_DoubleDouble_B_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BTT_GetTargetActor_C_Sorting, CallFunc_Divide_DoubleDouble_A_ImplicitCast_1) == 0x000188, "Member 'BTT_GetTargetActor_C_Sorting::CallFunc_Divide_DoubleDouble_A_ImplicitCast_1' has a wrong offset!");

// Function BTT_GetTargetActor.BTT_GetTargetActor_C.TargetingType
// 0x000C (0x000C - 0x0000)
struct BTT_GetTargetActor_C_TargetingType final
{
public:
	bool                                          Bool;                                              // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3AEC[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTT_GetTargetActor_C_TargetingType) == 0x000004, "Wrong alignment on BTT_GetTargetActor_C_TargetingType");
static_assert(sizeof(BTT_GetTargetActor_C_TargetingType) == 0x00000C, "Wrong size on BTT_GetTargetActor_C_TargetingType");
static_assert(offsetof(BTT_GetTargetActor_C_TargetingType, Bool) == 0x000000, "Member 'BTT_GetTargetActor_C_TargetingType::Bool' has a wrong offset!");
static_assert(offsetof(BTT_GetTargetActor_C_TargetingType, CallFunc_Array_Length_ReturnValue) == 0x000004, "Member 'BTT_GetTargetActor_C_TargetingType::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_GetTargetActor_C_TargetingType, CallFunc_Less_IntInt_ReturnValue) == 0x000008, "Member 'BTT_GetTargetActor_C_TargetingType::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

}

