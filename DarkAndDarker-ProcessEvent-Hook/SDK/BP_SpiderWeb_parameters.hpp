#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_SpiderWeb

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "AkAudio_structs.hpp"


namespace SDK::Params
{

// Function BP_SpiderWeb.BP_SpiderWeb_C.ExchangeYZ
// 0x0068 (0x0068 - 0x0000)
struct BP_SpiderWeb_C_ExchangeYZ final
{
public:
	struct FVector                                In;                                                // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Out;                                               // 0x0018(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0050(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SpiderWeb_C_ExchangeYZ) == 0x000008, "Wrong alignment on BP_SpiderWeb_C_ExchangeYZ");
static_assert(sizeof(BP_SpiderWeb_C_ExchangeYZ) == 0x000068, "Wrong size on BP_SpiderWeb_C_ExchangeYZ");
static_assert(offsetof(BP_SpiderWeb_C_ExchangeYZ, In) == 0x000000, "Member 'BP_SpiderWeb_C_ExchangeYZ::In' has a wrong offset!");
static_assert(offsetof(BP_SpiderWeb_C_ExchangeYZ, Out) == 0x000018, "Member 'BP_SpiderWeb_C_ExchangeYZ::Out' has a wrong offset!");
static_assert(offsetof(BP_SpiderWeb_C_ExchangeYZ, CallFunc_BreakVector_X) == 0x000030, "Member 'BP_SpiderWeb_C_ExchangeYZ::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_SpiderWeb_C_ExchangeYZ, CallFunc_BreakVector_Y) == 0x000038, "Member 'BP_SpiderWeb_C_ExchangeYZ::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_SpiderWeb_C_ExchangeYZ, CallFunc_BreakVector_Z) == 0x000040, "Member 'BP_SpiderWeb_C_ExchangeYZ::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_SpiderWeb_C_ExchangeYZ, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000048, "Member 'BP_SpiderWeb_C_ExchangeYZ::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpiderWeb_C_ExchangeYZ, CallFunc_MakeVector_ReturnValue) == 0x000050, "Member 'BP_SpiderWeb_C_ExchangeYZ::CallFunc_MakeVector_ReturnValue' has a wrong offset!");

// Function BP_SpiderWeb.BP_SpiderWeb_C.ExecuteUbergraph_BP_SpiderWeb
// 0x0048 (0x0048 - 0x0000)
struct BP_SpiderWeb_C_ExecuteUbergraph_BP_SpiderWeb final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_566E[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable;                            // 0x0008(0x0010)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_1;               // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_2;               // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_566F[0x2];                                     // 0x001A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           K2Node_Event_InGameplayTag;                        // 0x001C(0x0008)(ConstParm, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_InCount;                              // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess;   // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5670[0x6];                                     // 0x002A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue_1; // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_PostAkEvent_ReturnValue;                  // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SpiderWeb_C_ExecuteUbergraph_BP_SpiderWeb) == 0x000008, "Wrong alignment on BP_SpiderWeb_C_ExecuteUbergraph_BP_SpiderWeb");
static_assert(sizeof(BP_SpiderWeb_C_ExecuteUbergraph_BP_SpiderWeb) == 0x000048, "Wrong size on BP_SpiderWeb_C_ExecuteUbergraph_BP_SpiderWeb");
static_assert(offsetof(BP_SpiderWeb_C_ExecuteUbergraph_BP_SpiderWeb, EntryPoint) == 0x000000, "Member 'BP_SpiderWeb_C_ExecuteUbergraph_BP_SpiderWeb::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_SpiderWeb_C_ExecuteUbergraph_BP_SpiderWeb, CallFunc_HasAuthority_ReturnValue) == 0x000004, "Member 'BP_SpiderWeb_C_ExecuteUbergraph_BP_SpiderWeb::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpiderWeb_C_ExecuteUbergraph_BP_SpiderWeb, Temp_delegate_Variable) == 0x000008, "Member 'BP_SpiderWeb_C_ExecuteUbergraph_BP_SpiderWeb::Temp_delegate_Variable' has a wrong offset!");
static_assert(offsetof(BP_SpiderWeb_C_ExecuteUbergraph_BP_SpiderWeb, CallFunc_HasAuthority_ReturnValue_1) == 0x000018, "Member 'BP_SpiderWeb_C_ExecuteUbergraph_BP_SpiderWeb::CallFunc_HasAuthority_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SpiderWeb_C_ExecuteUbergraph_BP_SpiderWeb, CallFunc_HasAuthority_ReturnValue_2) == 0x000019, "Member 'BP_SpiderWeb_C_ExecuteUbergraph_BP_SpiderWeb::CallFunc_HasAuthority_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SpiderWeb_C_ExecuteUbergraph_BP_SpiderWeb, K2Node_Event_InGameplayTag) == 0x00001C, "Member 'BP_SpiderWeb_C_ExecuteUbergraph_BP_SpiderWeb::K2Node_Event_InGameplayTag' has a wrong offset!");
static_assert(offsetof(BP_SpiderWeb_C_ExecuteUbergraph_BP_SpiderWeb, K2Node_Event_InCount) == 0x000024, "Member 'BP_SpiderWeb_C_ExecuteUbergraph_BP_SpiderWeb::K2Node_Event_InCount' has a wrong offset!");
static_assert(offsetof(BP_SpiderWeb_C_ExecuteUbergraph_BP_SpiderWeb, CallFunc_Greater_IntInt_ReturnValue) == 0x000028, "Member 'BP_SpiderWeb_C_ExecuteUbergraph_BP_SpiderWeb::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpiderWeb_C_ExecuteUbergraph_BP_SpiderWeb, GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess) == 0x000029, "Member 'BP_SpiderWeb_C_ExecuteUbergraph_BP_SpiderWeb::GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_SpiderWeb_C_ExecuteUbergraph_BP_SpiderWeb, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000030, "Member 'BP_SpiderWeb_C_ExecuteUbergraph_BP_SpiderWeb::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpiderWeb_C_ExecuteUbergraph_BP_SpiderWeb, CallFunc_CreateDynamicMaterialInstance_ReturnValue_1) == 0x000038, "Member 'BP_SpiderWeb_C_ExecuteUbergraph_BP_SpiderWeb::CallFunc_CreateDynamicMaterialInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SpiderWeb_C_ExecuteUbergraph_BP_SpiderWeb, CallFunc_PostAkEvent_ReturnValue) == 0x000040, "Member 'BP_SpiderWeb_C_ExecuteUbergraph_BP_SpiderWeb::CallFunc_PostAkEvent_ReturnValue' has a wrong offset!");

// Function BP_SpiderWeb.BP_SpiderWeb_C.GameplayTagUpdated
// 0x000C (0x000C - 0x0000)
struct BP_SpiderWeb_C_GameplayTagUpdated final
{
public:
	struct FGameplayTag                           InGameplayTag;                                     // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	int32                                         InCount;                                           // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SpiderWeb_C_GameplayTagUpdated) == 0x000004, "Wrong alignment on BP_SpiderWeb_C_GameplayTagUpdated");
static_assert(sizeof(BP_SpiderWeb_C_GameplayTagUpdated) == 0x00000C, "Wrong size on BP_SpiderWeb_C_GameplayTagUpdated");
static_assert(offsetof(BP_SpiderWeb_C_GameplayTagUpdated, InGameplayTag) == 0x000000, "Member 'BP_SpiderWeb_C_GameplayTagUpdated::InGameplayTag' has a wrong offset!");
static_assert(offsetof(BP_SpiderWeb_C_GameplayTagUpdated, InCount) == 0x000008, "Member 'BP_SpiderWeb_C_GameplayTagUpdated::InCount' has a wrong offset!");

// Function BP_SpiderWeb.BP_SpiderWeb_C.GetDestroyCount
// 0x0004 (0x0004 - 0x0000)
struct BP_SpiderWeb_C_GetDestroyCount final
{
public:
	int32                                         Result;                                            // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SpiderWeb_C_GetDestroyCount) == 0x000004, "Wrong alignment on BP_SpiderWeb_C_GetDestroyCount");
static_assert(sizeof(BP_SpiderWeb_C_GetDestroyCount) == 0x000004, "Wrong size on BP_SpiderWeb_C_GetDestroyCount");
static_assert(offsetof(BP_SpiderWeb_C_GetDestroyCount, Result) == 0x000000, "Member 'BP_SpiderWeb_C_GetDestroyCount::Result' has a wrong offset!");

// Function BP_SpiderWeb.BP_SpiderWeb_C.GetRecoveryTime
// 0x0008 (0x0008 - 0x0000)
struct BP_SpiderWeb_C_GetRecoveryTime final
{
public:
	double                                        Result;                                            // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SpiderWeb_C_GetRecoveryTime) == 0x000008, "Wrong alignment on BP_SpiderWeb_C_GetRecoveryTime");
static_assert(sizeof(BP_SpiderWeb_C_GetRecoveryTime) == 0x000008, "Wrong size on BP_SpiderWeb_C_GetRecoveryTime");
static_assert(offsetof(BP_SpiderWeb_C_GetRecoveryTime, Result) == 0x000000, "Member 'BP_SpiderWeb_C_GetRecoveryTime::Result' has a wrong offset!");

// Function BP_SpiderWeb.BP_SpiderWeb_C.IsContactCountDestroy
// 0x0001 (0x0001 - 0x0000)
struct BP_SpiderWeb_C_IsContactCountDestroy final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SpiderWeb_C_IsContactCountDestroy) == 0x000001, "Wrong alignment on BP_SpiderWeb_C_IsContactCountDestroy");
static_assert(sizeof(BP_SpiderWeb_C_IsContactCountDestroy) == 0x000001, "Wrong size on BP_SpiderWeb_C_IsContactCountDestroy");
static_assert(offsetof(BP_SpiderWeb_C_IsContactCountDestroy, Result) == 0x000000, "Member 'BP_SpiderWeb_C_IsContactCountDestroy::Result' has a wrong offset!");

// Function BP_SpiderWeb.BP_SpiderWeb_C.IsDisableDestroyContact
// 0x0001 (0x0001 - 0x0000)
struct BP_SpiderWeb_C_IsDisableDestroyContact final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SpiderWeb_C_IsDisableDestroyContact) == 0x000001, "Wrong alignment on BP_SpiderWeb_C_IsDisableDestroyContact");
static_assert(sizeof(BP_SpiderWeb_C_IsDisableDestroyContact) == 0x000001, "Wrong size on BP_SpiderWeb_C_IsDisableDestroyContact");
static_assert(offsetof(BP_SpiderWeb_C_IsDisableDestroyContact, Result) == 0x000000, "Member 'BP_SpiderWeb_C_IsDisableDestroyContact::Result' has a wrong offset!");

// Function BP_SpiderWeb.BP_SpiderWeb_C.IsRecovery
// 0x0001 (0x0001 - 0x0000)
struct BP_SpiderWeb_C_IsRecovery final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SpiderWeb_C_IsRecovery) == 0x000001, "Wrong alignment on BP_SpiderWeb_C_IsRecovery");
static_assert(sizeof(BP_SpiderWeb_C_IsRecovery) == 0x000001, "Wrong size on BP_SpiderWeb_C_IsRecovery");
static_assert(offsetof(BP_SpiderWeb_C_IsRecovery, Result) == 0x000000, "Member 'BP_SpiderWeb_C_IsRecovery::Result' has a wrong offset!");

// Function BP_SpiderWeb.BP_SpiderWeb_C.SetPointPosition
// 0x0118 (0x0118 - 0x0000)
struct BP_SpiderWeb_C_SetPointPosition final
{
public:
	class UMaterialInstanceDynamic*               Material_Instance;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Param_TopLeft;                                     // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Param_TopRight;                                    // 0x0020(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Param_BotLeft;                                     // 0x0038(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Param_BotRight;                                    // 0x0050(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Influence;                                         // 0x0068(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_ExchangeYZ_Out;                           // 0x0070(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_VectorToLinearColor_ReturnValue;     // 0x0088(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_ExchangeYZ_Out_1;                         // 0x0098(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_VectorToLinearColor_ReturnValue_1;   // 0x00B0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_ExchangeYZ_Out_2;                         // 0x00C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_VectorToLinearColor_ReturnValue_2;   // 0x00D8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_ExchangeYZ_Out_3;                         // 0x00E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_VectorToLinearColor_ReturnValue_3;   // 0x0100(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast; // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SpiderWeb_C_SetPointPosition) == 0x000008, "Wrong alignment on BP_SpiderWeb_C_SetPointPosition");
static_assert(sizeof(BP_SpiderWeb_C_SetPointPosition) == 0x000118, "Wrong size on BP_SpiderWeb_C_SetPointPosition");
static_assert(offsetof(BP_SpiderWeb_C_SetPointPosition, Material_Instance) == 0x000000, "Member 'BP_SpiderWeb_C_SetPointPosition::Material_Instance' has a wrong offset!");
static_assert(offsetof(BP_SpiderWeb_C_SetPointPosition, Param_TopLeft) == 0x000008, "Member 'BP_SpiderWeb_C_SetPointPosition::Param_TopLeft' has a wrong offset!");
static_assert(offsetof(BP_SpiderWeb_C_SetPointPosition, Param_TopRight) == 0x000020, "Member 'BP_SpiderWeb_C_SetPointPosition::Param_TopRight' has a wrong offset!");
static_assert(offsetof(BP_SpiderWeb_C_SetPointPosition, Param_BotLeft) == 0x000038, "Member 'BP_SpiderWeb_C_SetPointPosition::Param_BotLeft' has a wrong offset!");
static_assert(offsetof(BP_SpiderWeb_C_SetPointPosition, Param_BotRight) == 0x000050, "Member 'BP_SpiderWeb_C_SetPointPosition::Param_BotRight' has a wrong offset!");
static_assert(offsetof(BP_SpiderWeb_C_SetPointPosition, Influence) == 0x000068, "Member 'BP_SpiderWeb_C_SetPointPosition::Influence' has a wrong offset!");
static_assert(offsetof(BP_SpiderWeb_C_SetPointPosition, CallFunc_ExchangeYZ_Out) == 0x000070, "Member 'BP_SpiderWeb_C_SetPointPosition::CallFunc_ExchangeYZ_Out' has a wrong offset!");
static_assert(offsetof(BP_SpiderWeb_C_SetPointPosition, CallFunc_Conv_VectorToLinearColor_ReturnValue) == 0x000088, "Member 'BP_SpiderWeb_C_SetPointPosition::CallFunc_Conv_VectorToLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpiderWeb_C_SetPointPosition, CallFunc_ExchangeYZ_Out_1) == 0x000098, "Member 'BP_SpiderWeb_C_SetPointPosition::CallFunc_ExchangeYZ_Out_1' has a wrong offset!");
static_assert(offsetof(BP_SpiderWeb_C_SetPointPosition, CallFunc_Conv_VectorToLinearColor_ReturnValue_1) == 0x0000B0, "Member 'BP_SpiderWeb_C_SetPointPosition::CallFunc_Conv_VectorToLinearColor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SpiderWeb_C_SetPointPosition, CallFunc_ExchangeYZ_Out_2) == 0x0000C0, "Member 'BP_SpiderWeb_C_SetPointPosition::CallFunc_ExchangeYZ_Out_2' has a wrong offset!");
static_assert(offsetof(BP_SpiderWeb_C_SetPointPosition, CallFunc_Conv_VectorToLinearColor_ReturnValue_2) == 0x0000D8, "Member 'BP_SpiderWeb_C_SetPointPosition::CallFunc_Conv_VectorToLinearColor_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SpiderWeb_C_SetPointPosition, CallFunc_ExchangeYZ_Out_3) == 0x0000E8, "Member 'BP_SpiderWeb_C_SetPointPosition::CallFunc_ExchangeYZ_Out_3' has a wrong offset!");
static_assert(offsetof(BP_SpiderWeb_C_SetPointPosition, CallFunc_Conv_VectorToLinearColor_ReturnValue_3) == 0x000100, "Member 'BP_SpiderWeb_C_SetPointPosition::CallFunc_Conv_VectorToLinearColor_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SpiderWeb_C_SetPointPosition, CallFunc_SetScalarParameterValue_Value_ImplicitCast) == 0x000110, "Member 'BP_SpiderWeb_C_SetPointPosition::CallFunc_SetScalarParameterValue_Value_ImplicitCast' has a wrong offset!");

// Function BP_SpiderWeb.BP_SpiderWeb_C.UpdateSpiderWebMaterial
// 0x0028 (0x0028 - 0x0000)
struct BP_SpiderWeb_C_UpdateSpiderWebMaterial final
{
public:
	class UMaterialInstanceDynamic*               InDynamicMaterialInstance;                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CurrentMaterialInstance;                           // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5671[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetTimeSeconds_ReturnValue;               // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast; // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SpiderWeb_C_UpdateSpiderWebMaterial) == 0x000008, "Wrong alignment on BP_SpiderWeb_C_UpdateSpiderWebMaterial");
static_assert(sizeof(BP_SpiderWeb_C_UpdateSpiderWebMaterial) == 0x000028, "Wrong size on BP_SpiderWeb_C_UpdateSpiderWebMaterial");
static_assert(offsetof(BP_SpiderWeb_C_UpdateSpiderWebMaterial, InDynamicMaterialInstance) == 0x000000, "Member 'BP_SpiderWeb_C_UpdateSpiderWebMaterial::InDynamicMaterialInstance' has a wrong offset!");
static_assert(offsetof(BP_SpiderWeb_C_UpdateSpiderWebMaterial, CurrentMaterialInstance) == 0x000008, "Member 'BP_SpiderWeb_C_UpdateSpiderWebMaterial::CurrentMaterialInstance' has a wrong offset!");
static_assert(offsetof(BP_SpiderWeb_C_UpdateSpiderWebMaterial, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BP_SpiderWeb_C_UpdateSpiderWebMaterial::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpiderWeb_C_UpdateSpiderWebMaterial, CallFunc_GetTimeSeconds_ReturnValue) == 0x000018, "Member 'BP_SpiderWeb_C_UpdateSpiderWebMaterial::CallFunc_GetTimeSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpiderWeb_C_UpdateSpiderWebMaterial, CallFunc_SetScalarParameterValue_Value_ImplicitCast) == 0x000020, "Member 'BP_SpiderWeb_C_UpdateSpiderWebMaterial::CallFunc_SetScalarParameterValue_Value_ImplicitCast' has a wrong offset!");

// Function BP_SpiderWeb.BP_SpiderWeb_C.UserConstructionScript
// 0x0088 (0x0088 - 0x0000)
struct BP_SpiderWeb_C_UserConstructionScript final
{
public:
	struct FVector                                CallFunc_K2_GetComponentScale_ReturnValue;         // 0x0000(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue;          // 0x0020(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x0038(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetStaticMesh_ReturnValue;                // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5672[0x7];                                     // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector_X;                            // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0070(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SpiderWeb_C_UserConstructionScript) == 0x000008, "Wrong alignment on BP_SpiderWeb_C_UserConstructionScript");
static_assert(sizeof(BP_SpiderWeb_C_UserConstructionScript) == 0x000088, "Wrong size on BP_SpiderWeb_C_UserConstructionScript");
static_assert(offsetof(BP_SpiderWeb_C_UserConstructionScript, CallFunc_K2_GetComponentScale_ReturnValue) == 0x000000, "Member 'BP_SpiderWeb_C_UserConstructionScript::CallFunc_K2_GetComponentScale_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpiderWeb_C_UserConstructionScript, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000018, "Member 'BP_SpiderWeb_C_UserConstructionScript::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpiderWeb_C_UserConstructionScript, CallFunc_Conv_DoubleToVector_ReturnValue) == 0x000020, "Member 'BP_SpiderWeb_C_UserConstructionScript::CallFunc_Conv_DoubleToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpiderWeb_C_UserConstructionScript, CallFunc_Multiply_VectorVector_ReturnValue) == 0x000038, "Member 'BP_SpiderWeb_C_UserConstructionScript::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpiderWeb_C_UserConstructionScript, CallFunc_SetStaticMesh_ReturnValue) == 0x000050, "Member 'BP_SpiderWeb_C_UserConstructionScript::CallFunc_SetStaticMesh_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpiderWeb_C_UserConstructionScript, CallFunc_BreakVector_X) == 0x000058, "Member 'BP_SpiderWeb_C_UserConstructionScript::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_SpiderWeb_C_UserConstructionScript, CallFunc_BreakVector_Y) == 0x000060, "Member 'BP_SpiderWeb_C_UserConstructionScript::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_SpiderWeb_C_UserConstructionScript, CallFunc_BreakVector_Z) == 0x000068, "Member 'BP_SpiderWeb_C_UserConstructionScript::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_SpiderWeb_C_UserConstructionScript, CallFunc_MakeVector_ReturnValue) == 0x000070, "Member 'BP_SpiderWeb_C_UserConstructionScript::CallFunc_MakeVector_ReturnValue' has a wrong offset!");

}

