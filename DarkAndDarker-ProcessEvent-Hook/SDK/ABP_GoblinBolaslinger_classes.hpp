#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ABP_GoblinBolaslinger

#include "Basic.hpp"

#include "ABP_GoblinBolaslinger_structs.hpp"
#include "AnimGraphRuntime_structs.hpp"
#include "Engine_structs.hpp"
#include "DungeonCrawler_classes.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass ABP_GoblinBolaslinger.ABP_GoblinBolaslinger_C
// 0x2250 (0x2780 - 0x0530)
class UABP_GoblinBolaslinger_C final : public UDCMonsterAnimInstanceBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0530(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct ABP_GoblinBolaslinger::FAnimBlueprintGeneratedMutableData __AnimBlueprintMutables;                           // 0x0538(0x000C)(HasGetValueTypeHash)
	uint8                                         Pad_4FAA[0x4];                                     // 0x0544(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_PropertyAccess;             // 0x0548(0x0008)()
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_Base;                       // 0x0550(0x0008)()
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x0558(0x0020)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_2;             // 0x0578(0x0020)()
	uint8                                         Pad_4FAB[0x8];                                     // 0x0598(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnimNode_AnimDynamics                 AnimGraphNode_AnimDynamics_2;                      // 0x05A0(0x0520)()
	struct FAnimNode_AnimDynamics                 AnimGraphNode_AnimDynamics_1;                      // 0x0AC0(0x0520)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot;                                // 0x0FE0(0x0048)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_15;                 // 0x1028(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_14;                 // 0x1050(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_13;                 // 0x1078(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_12;                 // 0x10A0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_11;                 // 0x10C8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_10;                 // 0x10F0(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_6;                    // 0x1118(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_6;                       // 0x1160(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_5;                    // 0x1180(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_5;                       // 0x11C8(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_4;                    // 0x11E8(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_4;                       // 0x1230(0x0020)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer;                    // 0x1250(0x0070)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_3;                       // 0x12C0(0x0020)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine_1;                      // 0x12E0(0x00C8)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_1;                    // 0x13A8(0x0080)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_9;                  // 0x1428(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_8;                  // 0x1450(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_7;                  // 0x1478(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_6;                  // 0x14A0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_5;                  // 0x14C8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_4;                  // 0x14F0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_3;                  // 0x1518(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_2;                  // 0x1540(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_1;                  // 0x1568(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult;                    // 0x1590(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_3;                    // 0x15B8(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_2;                    // 0x1600(0x0048)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_8;                     // 0x1648(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_7;                     // 0x1670(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_6;                     // 0x1698(0x0028)()
	struct FAnimNode_ApplyAdditive                AnimGraphNode_ApplyAdditive_3;                     // 0x16C0(0x00C8)()
	struct FAnimNode_ApplyAdditive                AnimGraphNode_ApplyAdditive_2;                     // 0x1788(0x00C8)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_1;             // 0x1850(0x0020)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_2;             // 0x1870(0x0020)()
	struct FAnimNode_LegIK                        AnimGraphNode_LegIK_1;                             // 0x1890(0x00F8)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_2;                   // 0x1988(0x0048)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend_1;                  // 0x19D0(0x00F0)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_2;                       // 0x1AC0(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_1;                    // 0x1AE0(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x1B28(0x0048)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_5;                     // 0x1B70(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_4;                     // 0x1B98(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_3;                     // 0x1BC0(0x0028)()
	struct FAnimNode_ApplyAdditive                AnimGraphNode_ApplyAdditive_1;                     // 0x1BE8(0x00C8)()
	struct FAnimNode_ApplyAdditive                AnimGraphNode_ApplyAdditive;                       // 0x1CB0(0x00C8)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace;               // 0x1D78(0x0020)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_1;             // 0x1D98(0x0020)()
	struct FAnimNode_LegIK                        AnimGraphNode_LegIK;                               // 0x1DB8(0x00F8)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_1;                   // 0x1EB0(0x0048)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend;                    // 0x1EF8(0x00F0)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_1;                       // 0x1FE8(0x0020)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_2;                     // 0x2008(0x0028)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult;                         // 0x2030(0x0020)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine;                        // 0x2050(0x00C8)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace;               // 0x2118(0x0020)()
	uint8                                         Pad_4FAC[0x8];                                     // 0x2138(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnimNode_AnimDynamics                 AnimGraphNode_AnimDynamics;                        // 0x2140(0x0520)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_1;                     // 0x2660(0x0028)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose;                      // 0x2688(0x0080)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose;                       // 0x2708(0x0028)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool;                     // 0x2730(0x0048)()
	int32                                         Deadbody_Index;                                    // 0x2778(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          DeadbodyIndex1;                                    // 0x277C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          DeadbodyIndex2;                                    // 0x277D(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          DeadbodyIndex3;                                    // 0x277E(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsDeathCurveLarge;                                // 0x277F(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void AnimGraph(struct FPoseLink* Param_AnimGraph);
	void BlueprintThreadSafeUpdateAnimation(float DeltaTime);
	void ExecuteUbergraph_ABP_GoblinBolaslinger(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ABP_GoblinBolaslinger_C">();
	}
	static class UABP_GoblinBolaslinger_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UABP_GoblinBolaslinger_C>();
	}
};
static_assert(alignof(UABP_GoblinBolaslinger_C) == 0x000010, "Wrong alignment on UABP_GoblinBolaslinger_C");
static_assert(sizeof(UABP_GoblinBolaslinger_C) == 0x002780, "Wrong size on UABP_GoblinBolaslinger_C");
static_assert(offsetof(UABP_GoblinBolaslinger_C, UberGraphFrame) == 0x000530, "Member 'UABP_GoblinBolaslinger_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UABP_GoblinBolaslinger_C, __AnimBlueprintMutables) == 0x000538, "Member 'UABP_GoblinBolaslinger_C::__AnimBlueprintMutables' has a wrong offset!");
static_assert(offsetof(UABP_GoblinBolaslinger_C, AnimBlueprintExtension_PropertyAccess) == 0x000548, "Member 'UABP_GoblinBolaslinger_C::AnimBlueprintExtension_PropertyAccess' has a wrong offset!");
static_assert(offsetof(UABP_GoblinBolaslinger_C, AnimBlueprintExtension_Base) == 0x000550, "Member 'UABP_GoblinBolaslinger_C::AnimBlueprintExtension_Base' has a wrong offset!");
static_assert(offsetof(UABP_GoblinBolaslinger_C, AnimGraphNode_Root) == 0x000558, "Member 'UABP_GoblinBolaslinger_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UABP_GoblinBolaslinger_C, AnimGraphNode_ComponentToLocalSpace_2) == 0x000578, "Member 'UABP_GoblinBolaslinger_C::AnimGraphNode_ComponentToLocalSpace_2' has a wrong offset!");
static_assert(offsetof(UABP_GoblinBolaslinger_C, AnimGraphNode_AnimDynamics_2) == 0x0005A0, "Member 'UABP_GoblinBolaslinger_C::AnimGraphNode_AnimDynamics_2' has a wrong offset!");
static_assert(offsetof(UABP_GoblinBolaslinger_C, AnimGraphNode_AnimDynamics_1) == 0x000AC0, "Member 'UABP_GoblinBolaslinger_C::AnimGraphNode_AnimDynamics_1' has a wrong offset!");
static_assert(offsetof(UABP_GoblinBolaslinger_C, AnimGraphNode_Slot) == 0x000FE0, "Member 'UABP_GoblinBolaslinger_C::AnimGraphNode_Slot' has a wrong offset!");
static_assert(offsetof(UABP_GoblinBolaslinger_C, AnimGraphNode_TransitionResult_15) == 0x001028, "Member 'UABP_GoblinBolaslinger_C::AnimGraphNode_TransitionResult_15' has a wrong offset!");
static_assert(offsetof(UABP_GoblinBolaslinger_C, AnimGraphNode_TransitionResult_14) == 0x001050, "Member 'UABP_GoblinBolaslinger_C::AnimGraphNode_TransitionResult_14' has a wrong offset!");
static_assert(offsetof(UABP_GoblinBolaslinger_C, AnimGraphNode_TransitionResult_13) == 0x001078, "Member 'UABP_GoblinBolaslinger_C::AnimGraphNode_TransitionResult_13' has a wrong offset!");
static_assert(offsetof(UABP_GoblinBolaslinger_C, AnimGraphNode_TransitionResult_12) == 0x0010A0, "Member 'UABP_GoblinBolaslinger_C::AnimGraphNode_TransitionResult_12' has a wrong offset!");
static_assert(offsetof(UABP_GoblinBolaslinger_C, AnimGraphNode_TransitionResult_11) == 0x0010C8, "Member 'UABP_GoblinBolaslinger_C::AnimGraphNode_TransitionResult_11' has a wrong offset!");
static_assert(offsetof(UABP_GoblinBolaslinger_C, AnimGraphNode_TransitionResult_10) == 0x0010F0, "Member 'UABP_GoblinBolaslinger_C::AnimGraphNode_TransitionResult_10' has a wrong offset!");
static_assert(offsetof(UABP_GoblinBolaslinger_C, AnimGraphNode_SequencePlayer_6) == 0x001118, "Member 'UABP_GoblinBolaslinger_C::AnimGraphNode_SequencePlayer_6' has a wrong offset!");
static_assert(offsetof(UABP_GoblinBolaslinger_C, AnimGraphNode_StateResult_6) == 0x001160, "Member 'UABP_GoblinBolaslinger_C::AnimGraphNode_StateResult_6' has a wrong offset!");
static_assert(offsetof(UABP_GoblinBolaslinger_C, AnimGraphNode_SequencePlayer_5) == 0x001180, "Member 'UABP_GoblinBolaslinger_C::AnimGraphNode_SequencePlayer_5' has a wrong offset!");
static_assert(offsetof(UABP_GoblinBolaslinger_C, AnimGraphNode_StateResult_5) == 0x0011C8, "Member 'UABP_GoblinBolaslinger_C::AnimGraphNode_StateResult_5' has a wrong offset!");
static_assert(offsetof(UABP_GoblinBolaslinger_C, AnimGraphNode_SequencePlayer_4) == 0x0011E8, "Member 'UABP_GoblinBolaslinger_C::AnimGraphNode_SequencePlayer_4' has a wrong offset!");
static_assert(offsetof(UABP_GoblinBolaslinger_C, AnimGraphNode_StateResult_4) == 0x001230, "Member 'UABP_GoblinBolaslinger_C::AnimGraphNode_StateResult_4' has a wrong offset!");
static_assert(offsetof(UABP_GoblinBolaslinger_C, AnimGraphNode_BlendSpacePlayer) == 0x001250, "Member 'UABP_GoblinBolaslinger_C::AnimGraphNode_BlendSpacePlayer' has a wrong offset!");
static_assert(offsetof(UABP_GoblinBolaslinger_C, AnimGraphNode_StateResult_3) == 0x0012C0, "Member 'UABP_GoblinBolaslinger_C::AnimGraphNode_StateResult_3' has a wrong offset!");
static_assert(offsetof(UABP_GoblinBolaslinger_C, AnimGraphNode_StateMachine_1) == 0x0012E0, "Member 'UABP_GoblinBolaslinger_C::AnimGraphNode_StateMachine_1' has a wrong offset!");
static_assert(offsetof(UABP_GoblinBolaslinger_C, AnimGraphNode_SaveCachedPose_1) == 0x0013A8, "Member 'UABP_GoblinBolaslinger_C::AnimGraphNode_SaveCachedPose_1' has a wrong offset!");
static_assert(offsetof(UABP_GoblinBolaslinger_C, AnimGraphNode_TransitionResult_9) == 0x001428, "Member 'UABP_GoblinBolaslinger_C::AnimGraphNode_TransitionResult_9' has a wrong offset!");
static_assert(offsetof(UABP_GoblinBolaslinger_C, AnimGraphNode_TransitionResult_8) == 0x001450, "Member 'UABP_GoblinBolaslinger_C::AnimGraphNode_TransitionResult_8' has a wrong offset!");
static_assert(offsetof(UABP_GoblinBolaslinger_C, AnimGraphNode_TransitionResult_7) == 0x001478, "Member 'UABP_GoblinBolaslinger_C::AnimGraphNode_TransitionResult_7' has a wrong offset!");
static_assert(offsetof(UABP_GoblinBolaslinger_C, AnimGraphNode_TransitionResult_6) == 0x0014A0, "Member 'UABP_GoblinBolaslinger_C::AnimGraphNode_TransitionResult_6' has a wrong offset!");
static_assert(offsetof(UABP_GoblinBolaslinger_C, AnimGraphNode_TransitionResult_5) == 0x0014C8, "Member 'UABP_GoblinBolaslinger_C::AnimGraphNode_TransitionResult_5' has a wrong offset!");
static_assert(offsetof(UABP_GoblinBolaslinger_C, AnimGraphNode_TransitionResult_4) == 0x0014F0, "Member 'UABP_GoblinBolaslinger_C::AnimGraphNode_TransitionResult_4' has a wrong offset!");
static_assert(offsetof(UABP_GoblinBolaslinger_C, AnimGraphNode_TransitionResult_3) == 0x001518, "Member 'UABP_GoblinBolaslinger_C::AnimGraphNode_TransitionResult_3' has a wrong offset!");
static_assert(offsetof(UABP_GoblinBolaslinger_C, AnimGraphNode_TransitionResult_2) == 0x001540, "Member 'UABP_GoblinBolaslinger_C::AnimGraphNode_TransitionResult_2' has a wrong offset!");
static_assert(offsetof(UABP_GoblinBolaslinger_C, AnimGraphNode_TransitionResult_1) == 0x001568, "Member 'UABP_GoblinBolaslinger_C::AnimGraphNode_TransitionResult_1' has a wrong offset!");
static_assert(offsetof(UABP_GoblinBolaslinger_C, AnimGraphNode_TransitionResult) == 0x001590, "Member 'UABP_GoblinBolaslinger_C::AnimGraphNode_TransitionResult' has a wrong offset!");
static_assert(offsetof(UABP_GoblinBolaslinger_C, AnimGraphNode_SequencePlayer_3) == 0x0015B8, "Member 'UABP_GoblinBolaslinger_C::AnimGraphNode_SequencePlayer_3' has a wrong offset!");
static_assert(offsetof(UABP_GoblinBolaslinger_C, AnimGraphNode_SequencePlayer_2) == 0x001600, "Member 'UABP_GoblinBolaslinger_C::AnimGraphNode_SequencePlayer_2' has a wrong offset!");
static_assert(offsetof(UABP_GoblinBolaslinger_C, AnimGraphNode_UseCachedPose_8) == 0x001648, "Member 'UABP_GoblinBolaslinger_C::AnimGraphNode_UseCachedPose_8' has a wrong offset!");
static_assert(offsetof(UABP_GoblinBolaslinger_C, AnimGraphNode_UseCachedPose_7) == 0x001670, "Member 'UABP_GoblinBolaslinger_C::AnimGraphNode_UseCachedPose_7' has a wrong offset!");
static_assert(offsetof(UABP_GoblinBolaslinger_C, AnimGraphNode_UseCachedPose_6) == 0x001698, "Member 'UABP_GoblinBolaslinger_C::AnimGraphNode_UseCachedPose_6' has a wrong offset!");
static_assert(offsetof(UABP_GoblinBolaslinger_C, AnimGraphNode_ApplyAdditive_3) == 0x0016C0, "Member 'UABP_GoblinBolaslinger_C::AnimGraphNode_ApplyAdditive_3' has a wrong offset!");
static_assert(offsetof(UABP_GoblinBolaslinger_C, AnimGraphNode_ApplyAdditive_2) == 0x001788, "Member 'UABP_GoblinBolaslinger_C::AnimGraphNode_ApplyAdditive_2' has a wrong offset!");
static_assert(offsetof(UABP_GoblinBolaslinger_C, AnimGraphNode_ComponentToLocalSpace_1) == 0x001850, "Member 'UABP_GoblinBolaslinger_C::AnimGraphNode_ComponentToLocalSpace_1' has a wrong offset!");
static_assert(offsetof(UABP_GoblinBolaslinger_C, AnimGraphNode_LocalToComponentSpace_2) == 0x001870, "Member 'UABP_GoblinBolaslinger_C::AnimGraphNode_LocalToComponentSpace_2' has a wrong offset!");
static_assert(offsetof(UABP_GoblinBolaslinger_C, AnimGraphNode_LegIK_1) == 0x001890, "Member 'UABP_GoblinBolaslinger_C::AnimGraphNode_LegIK_1' has a wrong offset!");
static_assert(offsetof(UABP_GoblinBolaslinger_C, AnimGraphNode_BlendListByBool_2) == 0x001988, "Member 'UABP_GoblinBolaslinger_C::AnimGraphNode_BlendListByBool_2' has a wrong offset!");
static_assert(offsetof(UABP_GoblinBolaslinger_C, AnimGraphNode_LayeredBoneBlend_1) == 0x0019D0, "Member 'UABP_GoblinBolaslinger_C::AnimGraphNode_LayeredBoneBlend_1' has a wrong offset!");
static_assert(offsetof(UABP_GoblinBolaslinger_C, AnimGraphNode_StateResult_2) == 0x001AC0, "Member 'UABP_GoblinBolaslinger_C::AnimGraphNode_StateResult_2' has a wrong offset!");
static_assert(offsetof(UABP_GoblinBolaslinger_C, AnimGraphNode_SequencePlayer_1) == 0x001AE0, "Member 'UABP_GoblinBolaslinger_C::AnimGraphNode_SequencePlayer_1' has a wrong offset!");
static_assert(offsetof(UABP_GoblinBolaslinger_C, AnimGraphNode_SequencePlayer) == 0x001B28, "Member 'UABP_GoblinBolaslinger_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(UABP_GoblinBolaslinger_C, AnimGraphNode_UseCachedPose_5) == 0x001B70, "Member 'UABP_GoblinBolaslinger_C::AnimGraphNode_UseCachedPose_5' has a wrong offset!");
static_assert(offsetof(UABP_GoblinBolaslinger_C, AnimGraphNode_UseCachedPose_4) == 0x001B98, "Member 'UABP_GoblinBolaslinger_C::AnimGraphNode_UseCachedPose_4' has a wrong offset!");
static_assert(offsetof(UABP_GoblinBolaslinger_C, AnimGraphNode_UseCachedPose_3) == 0x001BC0, "Member 'UABP_GoblinBolaslinger_C::AnimGraphNode_UseCachedPose_3' has a wrong offset!");
static_assert(offsetof(UABP_GoblinBolaslinger_C, AnimGraphNode_ApplyAdditive_1) == 0x001BE8, "Member 'UABP_GoblinBolaslinger_C::AnimGraphNode_ApplyAdditive_1' has a wrong offset!");
static_assert(offsetof(UABP_GoblinBolaslinger_C, AnimGraphNode_ApplyAdditive) == 0x001CB0, "Member 'UABP_GoblinBolaslinger_C::AnimGraphNode_ApplyAdditive' has a wrong offset!");
static_assert(offsetof(UABP_GoblinBolaslinger_C, AnimGraphNode_ComponentToLocalSpace) == 0x001D78, "Member 'UABP_GoblinBolaslinger_C::AnimGraphNode_ComponentToLocalSpace' has a wrong offset!");
static_assert(offsetof(UABP_GoblinBolaslinger_C, AnimGraphNode_LocalToComponentSpace_1) == 0x001D98, "Member 'UABP_GoblinBolaslinger_C::AnimGraphNode_LocalToComponentSpace_1' has a wrong offset!");
static_assert(offsetof(UABP_GoblinBolaslinger_C, AnimGraphNode_LegIK) == 0x001DB8, "Member 'UABP_GoblinBolaslinger_C::AnimGraphNode_LegIK' has a wrong offset!");
static_assert(offsetof(UABP_GoblinBolaslinger_C, AnimGraphNode_BlendListByBool_1) == 0x001EB0, "Member 'UABP_GoblinBolaslinger_C::AnimGraphNode_BlendListByBool_1' has a wrong offset!");
static_assert(offsetof(UABP_GoblinBolaslinger_C, AnimGraphNode_LayeredBoneBlend) == 0x001EF8, "Member 'UABP_GoblinBolaslinger_C::AnimGraphNode_LayeredBoneBlend' has a wrong offset!");
static_assert(offsetof(UABP_GoblinBolaslinger_C, AnimGraphNode_StateResult_1) == 0x001FE8, "Member 'UABP_GoblinBolaslinger_C::AnimGraphNode_StateResult_1' has a wrong offset!");
static_assert(offsetof(UABP_GoblinBolaslinger_C, AnimGraphNode_UseCachedPose_2) == 0x002008, "Member 'UABP_GoblinBolaslinger_C::AnimGraphNode_UseCachedPose_2' has a wrong offset!");
static_assert(offsetof(UABP_GoblinBolaslinger_C, AnimGraphNode_StateResult) == 0x002030, "Member 'UABP_GoblinBolaslinger_C::AnimGraphNode_StateResult' has a wrong offset!");
static_assert(offsetof(UABP_GoblinBolaslinger_C, AnimGraphNode_StateMachine) == 0x002050, "Member 'UABP_GoblinBolaslinger_C::AnimGraphNode_StateMachine' has a wrong offset!");
static_assert(offsetof(UABP_GoblinBolaslinger_C, AnimGraphNode_LocalToComponentSpace) == 0x002118, "Member 'UABP_GoblinBolaslinger_C::AnimGraphNode_LocalToComponentSpace' has a wrong offset!");
static_assert(offsetof(UABP_GoblinBolaslinger_C, AnimGraphNode_AnimDynamics) == 0x002140, "Member 'UABP_GoblinBolaslinger_C::AnimGraphNode_AnimDynamics' has a wrong offset!");
static_assert(offsetof(UABP_GoblinBolaslinger_C, AnimGraphNode_UseCachedPose_1) == 0x002660, "Member 'UABP_GoblinBolaslinger_C::AnimGraphNode_UseCachedPose_1' has a wrong offset!");
static_assert(offsetof(UABP_GoblinBolaslinger_C, AnimGraphNode_SaveCachedPose) == 0x002688, "Member 'UABP_GoblinBolaslinger_C::AnimGraphNode_SaveCachedPose' has a wrong offset!");
static_assert(offsetof(UABP_GoblinBolaslinger_C, AnimGraphNode_UseCachedPose) == 0x002708, "Member 'UABP_GoblinBolaslinger_C::AnimGraphNode_UseCachedPose' has a wrong offset!");
static_assert(offsetof(UABP_GoblinBolaslinger_C, AnimGraphNode_BlendListByBool) == 0x002730, "Member 'UABP_GoblinBolaslinger_C::AnimGraphNode_BlendListByBool' has a wrong offset!");
static_assert(offsetof(UABP_GoblinBolaslinger_C, Deadbody_Index) == 0x002778, "Member 'UABP_GoblinBolaslinger_C::Deadbody_Index' has a wrong offset!");
static_assert(offsetof(UABP_GoblinBolaslinger_C, DeadbodyIndex1) == 0x00277C, "Member 'UABP_GoblinBolaslinger_C::DeadbodyIndex1' has a wrong offset!");
static_assert(offsetof(UABP_GoblinBolaslinger_C, DeadbodyIndex2) == 0x00277D, "Member 'UABP_GoblinBolaslinger_C::DeadbodyIndex2' has a wrong offset!");
static_assert(offsetof(UABP_GoblinBolaslinger_C, DeadbodyIndex3) == 0x00277E, "Member 'UABP_GoblinBolaslinger_C::DeadbodyIndex3' has a wrong offset!");
static_assert(offsetof(UABP_GoblinBolaslinger_C, bIsDeathCurveLarge) == 0x00277F, "Member 'UABP_GoblinBolaslinger_C::bIsDeathCurveLarge' has a wrong offset!");

}

