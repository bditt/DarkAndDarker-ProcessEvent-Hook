#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_ShapeShiftMemory2

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "DungeonCrawler_structs.hpp"
#include "DungeonCrawler_classes.hpp"
#include "GameplayTags_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass GA_ShapeShiftMemory2.GA_ShapeShiftMemory2_C
// 0x0028 (0x05C8 - 0x05A0)
class UGA_ShapeShiftMemory2_C final : public UDCGameplayAbilityBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x05A0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FGameplayTag                           ReleaseTag;                                        // 0x05A8(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           SkillOneReleaseTag;                                // 0x05B0(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           SkillTwoReleaseTag;                                // 0x05B8(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	EWidgetGameGroupType                          Widget_Game_Group_Type;                            // 0x05C0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void EventReceived_345B18A04C3698AD62CE7EB57199F830(const struct FGameplayEventData& Payload);
	void ExecuteUbergraph_GA_ShapeShiftMemory2(int32 EntryPoint);
	void K2_ActivateAbilityFromEvent(const struct FGameplayEventData& EventData);
	void K2_OnEndAbility(bool bWasCancelled);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GA_ShapeShiftMemory2_C">();
	}
	static class UGA_ShapeShiftMemory2_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGA_ShapeShiftMemory2_C>();
	}
};
static_assert(alignof(UGA_ShapeShiftMemory2_C) == 0x000008, "Wrong alignment on UGA_ShapeShiftMemory2_C");
static_assert(sizeof(UGA_ShapeShiftMemory2_C) == 0x0005C8, "Wrong size on UGA_ShapeShiftMemory2_C");
static_assert(offsetof(UGA_ShapeShiftMemory2_C, UberGraphFrame) == 0x0005A0, "Member 'UGA_ShapeShiftMemory2_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UGA_ShapeShiftMemory2_C, ReleaseTag) == 0x0005A8, "Member 'UGA_ShapeShiftMemory2_C::ReleaseTag' has a wrong offset!");
static_assert(offsetof(UGA_ShapeShiftMemory2_C, SkillOneReleaseTag) == 0x0005B0, "Member 'UGA_ShapeShiftMemory2_C::SkillOneReleaseTag' has a wrong offset!");
static_assert(offsetof(UGA_ShapeShiftMemory2_C, SkillTwoReleaseTag) == 0x0005B8, "Member 'UGA_ShapeShiftMemory2_C::SkillTwoReleaseTag' has a wrong offset!");
static_assert(offsetof(UGA_ShapeShiftMemory2_C, Widget_Game_Group_Type) == 0x0005C0, "Member 'UGA_ShapeShiftMemory2_C::Widget_Game_Group_Type' has a wrong offset!");

}

