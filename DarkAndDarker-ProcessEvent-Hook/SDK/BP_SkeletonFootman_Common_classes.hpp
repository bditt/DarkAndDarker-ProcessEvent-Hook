#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_SkeletonFootman_Common

#include "Basic.hpp"

#include "BP_Skeleton_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_SkeletonFootman_Common.BP_SkeletonFootman_Common_C
// 0x0050 (0x1430 - 0x13E0)
class ABP_SkeletonFootman_Common_C : public ABP_Skeleton_C
{
public:
	class UBP_DCHitBox_C*                         BP_DCHitBox_Foot_L;                                // 0x13D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_DCHitBox_C*                         BP_DCHitBox_Foot_R;                                // 0x13E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_DCHitBox_C*                         BP_DCHitBox_Upper_Leg_L;                           // 0x13E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_DCHitBox_C*                         BP_DCHitBox_Upper_Leg_R;                           // 0x13F0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_DCHitBox_C*                         BP_DCHitBox_Down_Leg_L;                            // 0x13F8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_DCHitBox_C*                         BP_DCHitBox_Down_Leg_R;                            // 0x1400(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_DCHitBox_C*                         BP_DCHitBox_Body;                                  // 0x1408(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_DCHitBox_C*                         BP_DCHitBox_Head;                                  // 0x1410(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<class ADCCharacterBase*>               Target_Array_0;                                    // 0x1418(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_SkeletonFootman_Common_C">();
	}
	static class ABP_SkeletonFootman_Common_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_SkeletonFootman_Common_C>();
	}
};
static_assert(alignof(ABP_SkeletonFootman_Common_C) == 0x000010, "Wrong alignment on ABP_SkeletonFootman_Common_C");
static_assert(sizeof(ABP_SkeletonFootman_Common_C) == 0x001430, "Wrong size on ABP_SkeletonFootman_Common_C");
static_assert(offsetof(ABP_SkeletonFootman_Common_C, BP_DCHitBox_Foot_L) == 0x0013D8, "Member 'ABP_SkeletonFootman_Common_C::BP_DCHitBox_Foot_L' has a wrong offset!");
static_assert(offsetof(ABP_SkeletonFootman_Common_C, BP_DCHitBox_Foot_R) == 0x0013E0, "Member 'ABP_SkeletonFootman_Common_C::BP_DCHitBox_Foot_R' has a wrong offset!");
static_assert(offsetof(ABP_SkeletonFootman_Common_C, BP_DCHitBox_Upper_Leg_L) == 0x0013E8, "Member 'ABP_SkeletonFootman_Common_C::BP_DCHitBox_Upper_Leg_L' has a wrong offset!");
static_assert(offsetof(ABP_SkeletonFootman_Common_C, BP_DCHitBox_Upper_Leg_R) == 0x0013F0, "Member 'ABP_SkeletonFootman_Common_C::BP_DCHitBox_Upper_Leg_R' has a wrong offset!");
static_assert(offsetof(ABP_SkeletonFootman_Common_C, BP_DCHitBox_Down_Leg_L) == 0x0013F8, "Member 'ABP_SkeletonFootman_Common_C::BP_DCHitBox_Down_Leg_L' has a wrong offset!");
static_assert(offsetof(ABP_SkeletonFootman_Common_C, BP_DCHitBox_Down_Leg_R) == 0x001400, "Member 'ABP_SkeletonFootman_Common_C::BP_DCHitBox_Down_Leg_R' has a wrong offset!");
static_assert(offsetof(ABP_SkeletonFootman_Common_C, BP_DCHitBox_Body) == 0x001408, "Member 'ABP_SkeletonFootman_Common_C::BP_DCHitBox_Body' has a wrong offset!");
static_assert(offsetof(ABP_SkeletonFootman_Common_C, BP_DCHitBox_Head) == 0x001410, "Member 'ABP_SkeletonFootman_Common_C::BP_DCHitBox_Head' has a wrong offset!");
static_assert(offsetof(ABP_SkeletonFootman_Common_C, Target_Array_0) == 0x001418, "Member 'ABP_SkeletonFootman_Common_C::Target_Array_0' has a wrong offset!");

}

