#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ThornBarrier

#include "Basic.hpp"

#include "BP_ThornBarrier_classes.hpp"
#include "BP_ThornBarrier_parameters.hpp"


namespace SDK
{

// Function BP_ThornBarrier.BP_ThornBarrier_C.ExecuteUbergraph_BP_ThornBarrier
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ThornBarrier_C::ExecuteUbergraph_BP_ThornBarrier(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ThornBarrier_C", "ExecuteUbergraph_BP_ThornBarrier");

	Params::BP_ThornBarrier_C_ExecuteUbergraph_BP_ThornBarrier Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ThornBarrier.BP_ThornBarrier_C.GameplayTagUpdated
// (Event, Protected, BlueprintEvent)
// Parameters:
// struct FGameplayTag                     InGameplayTag                                          (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// int32                                   InCount                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ThornBarrier_C::GameplayTagUpdated(const struct FGameplayTag& InGameplayTag, int32 InCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ThornBarrier_C", "GameplayTagUpdated");

	Params::BP_ThornBarrier_C_GameplayTagUpdated Parms{};

	Parms.InGameplayTag = std::move(InGameplayTag);
	Parms.InCount = InCount;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ThornBarrier.BP_ThornBarrier_C.OnImpactEnduranceExhausted
// (Event, Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   ExhaustedTime                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TSubclassOf<class UGameplayEffect>      GameplayEffectClass                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
// struct FDCGameplayEffectContext         EffectContext                                          (BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference)

void ABP_ThornBarrier_C::OnImpactEnduranceExhausted(float ExhaustedTime, TSubclassOf<class UGameplayEffect> GameplayEffectClass, const struct FDCGameplayEffectContext& EffectContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ThornBarrier_C", "OnImpactEnduranceExhausted");

	Params::BP_ThornBarrier_C_OnImpactEnduranceExhausted Parms{};

	Parms.ExhaustedTime = ExhaustedTime;
	Parms.GameplayEffectClass = GameplayEffectClass;
	Parms.EffectContext = std::move(EffectContext);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ThornBarrier.BP_ThornBarrier_C.OnRep_Radius
// (BlueprintCallable, BlueprintEvent)

void ABP_ThornBarrier_C::OnRep_Radius()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ThornBarrier_C", "OnRep_Radius");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ThornBarrier.BP_ThornBarrier_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_ThornBarrier_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ThornBarrier_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ThornBarrier.BP_ThornBarrier_C.SetSizes
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_ThornBarrier_C::SetSizes()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ThornBarrier_C", "SetSizes");

	UObject::ProcessEvent(Func, nullptr);
}

}

