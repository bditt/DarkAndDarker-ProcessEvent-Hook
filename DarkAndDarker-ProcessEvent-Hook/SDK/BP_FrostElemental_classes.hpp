#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_FrostElemental

#include "Basic.hpp"

#include "BP_DCMonsterBaseWithOptions_classes.hpp"
#include "Engine_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_FrostElemental.BP_FrostElemental_C
// 0x0020 (0x1400 - 0x13E0)
class ABP_FrostElemental_C final : public ABP_DCMonsterBaseWithOptions_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_FrostElemental_C;                // 0x13D8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	double                                        Acceptance_Radius;                                 // 0x13E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Explosion_Radius;                                  // 0x13E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_FrostWyvern_C*                      Summoner;                                          // 0x13F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	double                                        Explosion_Time;                                    // 0x13F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_FrostElemental(int32 EntryPoint);
	void GameplayTagUpdated(const struct FGameplayTag& InGameplayTag, int32 InCount);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_FrostElemental_C">();
	}
	static class ABP_FrostElemental_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_FrostElemental_C>();
	}
};
static_assert(alignof(ABP_FrostElemental_C) == 0x000010, "Wrong alignment on ABP_FrostElemental_C");
static_assert(sizeof(ABP_FrostElemental_C) == 0x001400, "Wrong size on ABP_FrostElemental_C");
static_assert(offsetof(ABP_FrostElemental_C, UberGraphFrame_BP_FrostElemental_C) == 0x0013D8, "Member 'ABP_FrostElemental_C::UberGraphFrame_BP_FrostElemental_C' has a wrong offset!");
static_assert(offsetof(ABP_FrostElemental_C, Acceptance_Radius) == 0x0013E0, "Member 'ABP_FrostElemental_C::Acceptance_Radius' has a wrong offset!");
static_assert(offsetof(ABP_FrostElemental_C, Explosion_Radius) == 0x0013E8, "Member 'ABP_FrostElemental_C::Explosion_Radius' has a wrong offset!");
static_assert(offsetof(ABP_FrostElemental_C, Summoner) == 0x0013F0, "Member 'ABP_FrostElemental_C::Summoner' has a wrong offset!");
static_assert(offsetof(ABP_FrostElemental_C, Explosion_Time) == 0x0013F8, "Member 'ABP_FrostElemental_C::Explosion_Time' has a wrong offset!");

}

