#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_GoblinWarrior_FleePhase

#include "Basic.hpp"

#include "GameplayAbilities_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "AIModule_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function GA_GoblinWarrior_FleePhase.GA_GoblinWarrior_FleePhase_C.AbilityActivated
// 0x00B0 (0x00B0 - 0x0000)
struct GA_GoblinWarrior_FleePhase_C_AbilityActivated final
{
public:
	struct FGameplayEventData                     TriggerEventData;                                  // 0x0000(0x00B0)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(GA_GoblinWarrior_FleePhase_C_AbilityActivated) == 0x000008, "Wrong alignment on GA_GoblinWarrior_FleePhase_C_AbilityActivated");
static_assert(sizeof(GA_GoblinWarrior_FleePhase_C_AbilityActivated) == 0x0000B0, "Wrong size on GA_GoblinWarrior_FleePhase_C_AbilityActivated");
static_assert(offsetof(GA_GoblinWarrior_FleePhase_C_AbilityActivated, TriggerEventData) == 0x000000, "Member 'GA_GoblinWarrior_FleePhase_C_AbilityActivated::TriggerEventData' has a wrong offset!");

// Function GA_GoblinWarrior_FleePhase.GA_GoblinWarrior_FleePhase_C.EventReceived_81379A3849C747B5C64706BF518AB608
// 0x00B8 (0x00B8 - 0x0000)
struct GA_GoblinWarrior_FleePhase_C_EventReceived_81379A3849C747B5C64706BF518AB608 final
{
public:
	struct FGameplayTag                           EventTag;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEventData                     EventData;                                         // 0x0008(0x00B0)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(GA_GoblinWarrior_FleePhase_C_EventReceived_81379A3849C747B5C64706BF518AB608) == 0x000008, "Wrong alignment on GA_GoblinWarrior_FleePhase_C_EventReceived_81379A3849C747B5C64706BF518AB608");
static_assert(sizeof(GA_GoblinWarrior_FleePhase_C_EventReceived_81379A3849C747B5C64706BF518AB608) == 0x0000B8, "Wrong size on GA_GoblinWarrior_FleePhase_C_EventReceived_81379A3849C747B5C64706BF518AB608");
static_assert(offsetof(GA_GoblinWarrior_FleePhase_C_EventReceived_81379A3849C747B5C64706BF518AB608, EventTag) == 0x000000, "Member 'GA_GoblinWarrior_FleePhase_C_EventReceived_81379A3849C747B5C64706BF518AB608::EventTag' has a wrong offset!");
static_assert(offsetof(GA_GoblinWarrior_FleePhase_C_EventReceived_81379A3849C747B5C64706BF518AB608, EventData) == 0x000008, "Member 'GA_GoblinWarrior_FleePhase_C_EventReceived_81379A3849C747B5C64706BF518AB608::EventData' has a wrong offset!");

// Function GA_GoblinWarrior_FleePhase.GA_GoblinWarrior_FleePhase_C.EventReceived_BF3F566141F89016543AD490488A3AD7
// 0x00B0 (0x00B0 - 0x0000)
struct GA_GoblinWarrior_FleePhase_C_EventReceived_BF3F566141F89016543AD490488A3AD7 final
{
public:
	struct FGameplayEventData                     Payload;                                           // 0x0000(0x00B0)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(GA_GoblinWarrior_FleePhase_C_EventReceived_BF3F566141F89016543AD490488A3AD7) == 0x000008, "Wrong alignment on GA_GoblinWarrior_FleePhase_C_EventReceived_BF3F566141F89016543AD490488A3AD7");
static_assert(sizeof(GA_GoblinWarrior_FleePhase_C_EventReceived_BF3F566141F89016543AD490488A3AD7) == 0x0000B0, "Wrong size on GA_GoblinWarrior_FleePhase_C_EventReceived_BF3F566141F89016543AD490488A3AD7");
static_assert(offsetof(GA_GoblinWarrior_FleePhase_C_EventReceived_BF3F566141F89016543AD490488A3AD7, Payload) == 0x000000, "Member 'GA_GoblinWarrior_FleePhase_C_EventReceived_BF3F566141F89016543AD490488A3AD7::Payload' has a wrong offset!");

// Function GA_GoblinWarrior_FleePhase.GA_GoblinWarrior_FleePhase_C.ExecuteUbergraph_GA_GoblinWarrior_FleePhase
// 0x0B80 (0x0B80 - 0x0000)
struct GA_GoblinWarrior_FleePhase_C_ExecuteUbergraph_GA_GoblinWarrior_FleePhase final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_506B[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetAvatarActorFromActorInfo_ReturnValue;  // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0010(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const struct FGameplayTag& EventTag, const struct FGameplayEventData& EventData)> K2Node_CreateDelegate_OutputDelegate;              // 0x0028(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_CustomEvent_EventTag_1;                     // 0x0038(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayEventData                     K2Node_CustomEvent_EventData_1;                    // 0x0040(0x00B0)()
	struct FGameplayTag                           K2Node_CustomEvent_EventTag;                       // 0x00F0(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayEventData                     K2Node_CustomEvent_EventData;                      // 0x00F8(0x00B0)()
	TDelegate<void(const struct FGameplayTag& EventTag, const struct FGameplayEventData& EventData)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x01A8(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEventData                     Temp_struct_Variable;                              // 0x01B8(0x00B0)()
	struct FGameplayTag                           Temp_struct_Variable_1;                            // 0x0268(0x0008)(NoDestructor, HasGetValueTypeHash)
	class UDCAT_PlayMontageAndWaitForEvent*       CallFunc_PlayMontageAndWaitForEvent_ReturnValue;   // 0x0270(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(EPathFollowingResult MovementResult)> K2Node_CreateDelegate_OutputDelegate_2;            // 0x0278(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0288(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPathFollowingResult                          K2Node_CustomEvent_MovementResult_1;               // 0x0289(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPathFollowingResult                          K2Node_CustomEvent_MovementResult;                 // 0x028A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_506C[0x1];                                     // 0x028B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(EPathFollowingResult MovementResult)> K2Node_CreateDelegate_OutputDelegate_3;            // 0x028C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EPathFollowingResult                          Temp_byte_Variable;                                // 0x029C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_506D[0x3];                                     // 0x029D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           K2Node_CustomEvent_EventTag_3;                     // 0x02A0(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayEventData                     K2Node_CustomEvent_EventData_3;                    // 0x02A8(0x00B0)()
	class AActor*                                 CallFunc_GetAvatarActorFromActorInfo_ReturnValue_1; // 0x0358(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0360(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_2;        // 0x0378(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetAvatarActorFromActorInfo_ReturnValue_2; // 0x0390(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_3;        // 0x0398(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const struct FGameplayTag& EventTag, const struct FGameplayEventData& EventData)> K2Node_CreateDelegate_OutputDelegate_4;            // 0x03B0(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetAvatarActorFromActorInfo_ReturnValue_3; // 0x03C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_4;        // 0x03C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetAvatarActorFromActorInfo_ReturnValue_4; // 0x03E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Vector_Distance_ReturnValue;              // 0x03E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_5;        // 0x03F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetAvatarActorFromActorInfo_ReturnValue_5; // 0x0408(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_6;        // 0x0410(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_7;        // 0x0428(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Vector_Distance_ReturnValue_1;            // 0x0440(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x0448(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_506E[0x3];                                     // 0x0449(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           K2Node_CustomEvent_EventTag_4;                     // 0x044C(0x0008)(NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_506F[0x4];                                     // 0x0454(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayEventData                     K2Node_CustomEvent_EventData_4;                    // 0x0458(0x00B0)()
	TDelegate<void(const struct FGameplayTag& EventTag, const struct FGameplayEventData& EventData)> K2Node_CreateDelegate_OutputDelegate_5;            // 0x0508(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0518(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5070[0x7];                                     // 0x0519(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_8;        // 0x0520(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0538(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5071[0x7];                                     // 0x0539(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_9;        // 0x0540(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetAvatarActorFromActorInfo_ReturnValue_6; // 0x0558(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0560(0x0060)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEventData                     K2Node_Event_TriggerEventData;                     // 0x05C0(0x00B0)(ConstParm)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0670(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0688(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x06A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_FindLookAtRotation_ReturnValue;           // 0x06B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_SetActorRotation_ReturnValue;          // 0x06D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5072[0x7];                                     // 0x06D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetAvatarActorFromActorInfo_ReturnValue_7; // 0x06D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_DCMonsterBaseWithOptions_C*         K2Node_DynamicCast_AsBP_DCMonster_Base_with_Options; // 0x06E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x06E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5073[0x3];                                     // 0x06E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_6;            // 0x06EC(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5074[0x4];                                     // 0x06FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x0700(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_7;            // 0x0708(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0718(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bWasCancelled;                        // 0x0720(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5075[0x7];                                     // 0x0721(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_10;       // 0x0728(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAbilityTask_WaitGameplayEvent*         CallFunc_WaitGameplayEvent_ReturnValue;            // 0x0740(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue_1;        // 0x0748(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0750(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue_1;  // 0x0751(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5076[0x2];                                     // 0x0752(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           K2Node_CustomEvent_EventTag_2;                     // 0x0754(0x0008)(NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5077[0x4];                                     // 0x075C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayEventData                     K2Node_CustomEvent_EventData_2;                    // 0x0760(0x00B0)()
	struct FGameplayEventData                     Temp_struct_Variable_2;                            // 0x0810(0x00B0)()
	TDelegate<void(const struct FGameplayTag& EventTag, const struct FGameplayEventData& EventData)> K2Node_CreateDelegate_OutputDelegate_8;            // 0x08C0(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_9;            // 0x08D0(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue_2;        // 0x08E0(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayEventData                     K2Node_CustomEvent_Payload;                        // 0x08E8(0x00B0)()
	TDelegate<void(const struct FGameplayEventData& Payload)> K2Node_CreateDelegate_OutputDelegate_10;           // 0x0998(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AAIController*                          CallFunc_GetAIController_ReturnValue;              // 0x09A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetAvatarActorFromActorInfo_ReturnValue_8; // 0x09B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AAIController*                          CallFunc_GetAIController_ReturnValue_1;            // 0x09B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetAvatarActorFromActorInfo_ReturnValue_9; // 0x09C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AAIController*                          CallFunc_GetAIController_ReturnValue_2;            // 0x09C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetAvatarActorFromActorInfo_ReturnValue_10; // 0x09D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AAIController*                          CallFunc_GetAIController_ReturnValue_3;            // 0x09D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Vector_Distance2D_ReturnValue;            // 0x09E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetAvatarActorFromActorInfo_ReturnValue_11; // 0x09E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x09F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5078[0xF];                                     // 0x09F1(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue_1;               // 0x0A00(0x0060)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location_1;                // 0x0A60(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_1;                // 0x0A78(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_1;                   // 0x0A90(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_FindLookAtRotation_ReturnValue_1;         // 0x0AA8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_SetActorRotation_ReturnValue_1;        // 0x0AC0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x0AC1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5079[0x6];                                     // 0x0AC2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_11;       // 0x0AC8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_FindLookAtRotation_ReturnValue_2;         // 0x0AE0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x0AF8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue;          // 0x0B10(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x0B28(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0B40(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAIAsyncTaskBlueprintProxy*             CallFunc_CreateMoveToProxyObject_ReturnValue;      // 0x0B58(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x0B60(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_507A[0x3];                                     // 0x0B61(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_K2_SetTimerDelegate_Time_ImplicitCast;    // 0x0B64(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_K2_SetTimerDelegate_Time_ImplicitCast_1;  // 0x0B68(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_507B[0x4];                                     // 0x0B6C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GreaterEqual_DoubleDouble_B_ImplicitCast; // 0x0B70(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_DoubleToVector_InDouble_ImplicitCast; // 0x0B78(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_GoblinWarrior_FleePhase_C_ExecuteUbergraph_GA_GoblinWarrior_FleePhase) == 0x000010, "Wrong alignment on GA_GoblinWarrior_FleePhase_C_ExecuteUbergraph_GA_GoblinWarrior_FleePhase");
static_assert(sizeof(GA_GoblinWarrior_FleePhase_C_ExecuteUbergraph_GA_GoblinWarrior_FleePhase) == 0x000B80, "Wrong size on GA_GoblinWarrior_FleePhase_C_ExecuteUbergraph_GA_GoblinWarrior_FleePhase");
static_assert(offsetof(GA_GoblinWarrior_FleePhase_C_ExecuteUbergraph_GA_GoblinWarrior_FleePhase, EntryPoint) == 0x000000, "Member 'GA_GoblinWarrior_FleePhase_C_ExecuteUbergraph_GA_GoblinWarrior_FleePhase::EntryPoint' has a wrong offset!");
static_assert(offsetof(GA_GoblinWarrior_FleePhase_C_ExecuteUbergraph_GA_GoblinWarrior_FleePhase, CallFunc_GetAvatarActorFromActorInfo_ReturnValue) == 0x000008, "Member 'GA_GoblinWarrior_FleePhase_C_ExecuteUbergraph_GA_GoblinWarrior_FleePhase::CallFunc_GetAvatarActorFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_GoblinWarrior_FleePhase_C_ExecuteUbergraph_GA_GoblinWarrior_FleePhase, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000010, "Member 'GA_GoblinWarrior_FleePhase_C_ExecuteUbergraph_GA_GoblinWarrior_FleePhase::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_GoblinWarrior_FleePhase_C_ExecuteUbergraph_GA_GoblinWarrior_FleePhase, K2Node_CreateDelegate_OutputDelegate) == 0x000028, "Member 'GA_GoblinWarrior_FleePhase_C_ExecuteUbergraph_GA_GoblinWarrior_FleePhase::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(GA_GoblinWarrior_FleePhase_C_ExecuteUbergraph_GA_GoblinWarrior_FleePhase, K2Node_CustomEvent_EventTag_1) == 0x000038, "Member 'GA_GoblinWarrior_FleePhase_C_ExecuteUbergraph_GA_GoblinWarrior_FleePhase::K2Node_CustomEvent_EventTag_1' has a wrong offset!");
static_assert(offsetof(GA_GoblinWarrior_FleePhase_C_ExecuteUbergraph_GA_GoblinWarrior_FleePhase, K2Node_CustomEvent_EventData_1) == 0x000040, "Member 'GA_GoblinWarrior_FleePhase_C_ExecuteUbergraph_GA_GoblinWarrior_FleePhase::K2Node_CustomEvent_EventData_1' has a wrong offset!");
static_assert(offsetof(GA_GoblinWarrior_FleePhase_C_ExecuteUbergraph_GA_GoblinWarrior_FleePhase, K2Node_CustomEvent_EventTag) == 0x0000F0, "Member 'GA_GoblinWarrior_FleePhase_C_ExecuteUbergraph_GA_GoblinWarrior_FleePhase::K2Node_CustomEvent_EventTag' has a wrong offset!");
static_assert(offsetof(GA_GoblinWarrior_FleePhase_C_ExecuteUbergraph_GA_GoblinWarrior_FleePhase, K2Node_CustomEvent_EventData) == 0x0000F8, "Member 'GA_GoblinWarrior_FleePhase_C_ExecuteUbergraph_GA_GoblinWarrior_FleePhase::K2Node_CustomEvent_EventData' has a wrong offset!");
static_assert(offsetof(GA_GoblinWarrior_FleePhase_C_ExecuteUbergraph_GA_GoblinWarrior_FleePhase, K2Node_CreateDelegate_OutputDelegate_1) == 0x0001A8, "Member 'GA_GoblinWarrior_FleePhase_C_ExecuteUbergraph_GA_GoblinWarrior_FleePhase::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(GA_GoblinWarrior_FleePhase_C_ExecuteUbergraph_GA_GoblinWarrior_FleePhase, Temp_struct_Variable) == 0x0001B8, "Member 'GA_GoblinWarrior_FleePhase_C_ExecuteUbergraph_GA_GoblinWarrior_FleePhase::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(GA_GoblinWarrior_FleePhase_C_ExecuteUbergraph_GA_GoblinWarrior_FleePhase, Temp_struct_Variable_1) == 0x000268, "Member 'GA_GoblinWarrior_FleePhase_C_ExecuteUbergraph_GA_GoblinWarrior_FleePhase::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(GA_GoblinWarrior_FleePhase_C_ExecuteUbergraph_GA_GoblinWarrior_FleePhase, CallFunc_PlayMontageAndWaitForEvent_ReturnValue) == 0x000270, "Member 'GA_GoblinWarrior_FleePhase_C_ExecuteUbergraph_GA_GoblinWarrior_FleePhase::CallFunc_PlayMontageAndWaitForEvent_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_GoblinWarrior_FleePhase_C_ExecuteUbergraph_GA_GoblinWarrior_FleePhase, K2Node_CreateDelegate_OutputDelegate_2) == 0x000278, "Member 'GA_GoblinWarrior_FleePhase_C_ExecuteUbergraph_GA_GoblinWarrior_FleePhase::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(GA_GoblinWarrior_FleePhase_C_ExecuteUbergraph_GA_GoblinWarrior_FleePhase, CallFunc_IsValid_ReturnValue) == 0x000288, "Member 'GA_GoblinWarrior_FleePhase_C_ExecuteUbergraph_GA_GoblinWarrior_FleePhase::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_GoblinWarrior_FleePhase_C_ExecuteUbergraph_GA_GoblinWarrior_FleePhase, K2Node_CustomEvent_MovementResult_1) == 0x000289, "Member 'GA_GoblinWarrior_FleePhase_C_ExecuteUbergraph_GA_GoblinWarrior_FleePhase::K2Node_CustomEvent_MovementResult_1' has a wrong offset!");
static_assert(offsetof(GA_GoblinWarrior_FleePhase_C_ExecuteUbergraph_GA_GoblinWarrior_FleePhase, K2Node_CustomEvent_MovementResult) == 0x00028A, "Member 'GA_GoblinWarrior_FleePhase_C_ExecuteUbergraph_GA_GoblinWarrior_FleePhase::K2Node_CustomEvent_MovementResult' has a wrong offset!");
static_assert(offsetof(GA_GoblinWarrior_FleePhase_C_ExecuteUbergraph_GA_GoblinWarrior_FleePhase, K2Node_CreateDelegate_OutputDelegate_3) == 0x00028C, "Member 'GA_GoblinWarrior_FleePhase_C_ExecuteUbergraph_GA_GoblinWarrior_FleePhase::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(GA_GoblinWarrior_FleePhase_C_ExecuteUbergraph_GA_GoblinWarrior_FleePhase, Temp_byte_Variable) == 0x00029C, "Member 'GA_GoblinWarrior_FleePhase_C_ExecuteUbergraph_GA_GoblinWarrior_FleePhase::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(GA_GoblinWarrior_FleePhase_C_ExecuteUbergraph_GA_GoblinWarrior_FleePhase, K2Node_CustomEvent_EventTag_3) == 0x0002A0, "Member 'GA_GoblinWarrior_FleePhase_C_ExecuteUbergraph_GA_GoblinWarrior_FleePhase::K2Node_CustomEvent_EventTag_3' has a wrong offset!");
static_assert(offsetof(GA_GoblinWarrior_FleePhase_C_ExecuteUbergraph_GA_GoblinWarrior_FleePhase, K2Node_CustomEvent_EventData_3) == 0x0002A8, "Member 'GA_GoblinWarrior_FleePhase_C_ExecuteUbergraph_GA_GoblinWarrior_FleePhase::K2Node_CustomEvent_EventData_3' has a wrong offset!");
static_assert(offsetof(GA_GoblinWarrior_FleePhase_C_ExecuteUbergraph_GA_GoblinWarrior_FleePhase, CallFunc_GetAvatarActorFromActorInfo_ReturnValue_1) == 0x000358, "Member 'GA_GoblinWarrior_FleePhase_C_ExecuteUbergraph_GA_GoblinWarrior_FleePhase::CallFunc_GetAvatarActorFromActorInfo_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_GoblinWarrior_FleePhase_C_ExecuteUbergraph_GA_GoblinWarrior_FleePhase, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000360, "Member 'GA_GoblinWarrior_FleePhase_C_ExecuteUbergraph_GA_GoblinWarrior_FleePhase::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_GoblinWarrior_FleePhase_C_ExecuteUbergraph_GA_GoblinWarrior_FleePhase, CallFunc_K2_GetActorLocation_ReturnValue_2) == 0x000378, "Member 'GA_GoblinWarrior_FleePhase_C_ExecuteUbergraph_GA_GoblinWarrior_FleePhase::CallFunc_K2_GetActorLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GA_GoblinWarrior_FleePhase_C_ExecuteUbergraph_GA_GoblinWarrior_FleePhase, CallFunc_GetAvatarActorFromActorInfo_ReturnValue_2) == 0x000390, "Member 'GA_GoblinWarrior_FleePhase_C_ExecuteUbergraph_GA_GoblinWarrior_FleePhase::CallFunc_GetAvatarActorFromActorInfo_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GA_GoblinWarrior_FleePhase_C_ExecuteUbergraph_GA_GoblinWarrior_FleePhase, CallFunc_K2_GetActorLocation_ReturnValue_3) == 0x000398, "Member 'GA_GoblinWarrior_FleePhase_C_ExecuteUbergraph_GA_GoblinWarrior_FleePhase::CallFunc_K2_GetActorLocation_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(GA_GoblinWarrior_FleePhase_C_ExecuteUbergraph_GA_GoblinWarrior_FleePhase, K2Node_CreateDelegate_OutputDelegate_4) == 0x0003B0, "Member 'GA_GoblinWarrior_FleePhase_C_ExecuteUbergraph_GA_GoblinWarrior_FleePhase::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(GA_GoblinWarrior_FleePhase_C_ExecuteUbergraph_GA_GoblinWarrior_FleePhase, CallFunc_GetAvatarActorFromActorInfo_ReturnValue_3) == 0x0003C0, "Member 'GA_GoblinWarrior_FleePhase_C_ExecuteUbergraph_GA_GoblinWarrior_FleePhase::CallFunc_GetAvatarActorFromActorInfo_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(GA_GoblinWarrior_FleePhase_C_ExecuteUbergraph_GA_GoblinWarrior_FleePhase, CallFunc_K2_GetActorLocation_ReturnValue_4) == 0x0003C8, "Member 'GA_GoblinWarrior_FleePhase_C_ExecuteUbergraph_GA_GoblinWarrior_FleePhase::CallFunc_K2_GetActorLocation_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(GA_GoblinWarrior_FleePhase_C_ExecuteUbergraph_GA_GoblinWarrior_FleePhase, CallFunc_GetAvatarActorFromActorInfo_ReturnValue_4) == 0x0003E0, "Member 'GA_GoblinWarrior_FleePhase_C_ExecuteUbergraph_GA_GoblinWarrior_FleePhase::CallFunc_GetAvatarActorFromActorInfo_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(GA_GoblinWarrior_FleePhase_C_ExecuteUbergraph_GA_GoblinWarrior_FleePhase, CallFunc_Vector_Distance_ReturnValue) == 0x0003E8, "Member 'GA_GoblinWarrior_FleePhase_C_ExecuteUbergraph_GA_GoblinWarrior_FleePhase::CallFunc_Vector_Distance_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_GoblinWarrior_FleePhase_C_ExecuteUbergraph_GA_GoblinWarrior_FleePhase, CallFunc_K2_GetActorLocation_ReturnValue_5) == 0x0003F0, "Member 'GA_GoblinWarrior_FleePhase_C_ExecuteUbergraph_GA_GoblinWarrior_FleePhase::CallFunc_K2_GetActorLocation_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(GA_GoblinWarrior_FleePhase_C_ExecuteUbergraph_GA_GoblinWarrior_FleePhase, CallFunc_GetAvatarActorFromActorInfo_ReturnValue_5) == 0x000408, "Member 'GA_GoblinWarrior_FleePhase_C_ExecuteUbergraph_GA_GoblinWarrior_FleePhase::CallFunc_GetAvatarActorFromActorInfo_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(GA_GoblinWarrior_FleePhase_C_ExecuteUbergraph_GA_GoblinWarrior_FleePhase, CallFunc_K2_GetActorLocation_ReturnValue_6) == 0x000410, "Member 'GA_GoblinWarrior_FleePhase_C_ExecuteUbergraph_GA_GoblinWarrior_FleePhase::CallFunc_K2_GetActorLocation_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(GA_GoblinWarrior_FleePhase_C_ExecuteUbergraph_GA_GoblinWarrior_FleePhase, CallFunc_K2_GetActorLocation_ReturnValue_7) == 0x000428, "Member 'GA_GoblinWarrior_FleePhase_C_ExecuteUbergraph_GA_GoblinWarrior_FleePhase::CallFunc_K2_GetActorLocation_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(GA_GoblinWarrior_FleePhase_C_ExecuteUbergraph_GA_GoblinWarrior_FleePhase, CallFunc_Vector_Distance_ReturnValue_1) == 0x000440, "Member 'GA_GoblinWarrior_FleePhase_C_ExecuteUbergraph_GA_GoblinWarrior_FleePhase::CallFunc_Vector_Distance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_GoblinWarrior_FleePhase_C_ExecuteUbergraph_GA_GoblinWarrior_FleePhase, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x000448, "Member 'GA_GoblinWarrior_FleePhase_C_ExecuteUbergraph_GA_GoblinWarrior_FleePhase::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_GoblinWarrior_FleePhase_C_ExecuteUbergraph_GA_GoblinWarrior_FleePhase, K2Node_CustomEvent_EventTag_4) == 0x00044C, "Member 'GA_GoblinWarrior_FleePhase_C_ExecuteUbergraph_GA_GoblinWarrior_FleePhase::K2Node_CustomEvent_EventTag_4' has a wrong offset!");
static_assert(offsetof(GA_GoblinWarrior_FleePhase_C_ExecuteUbergraph_GA_GoblinWarrior_FleePhase, K2Node_CustomEvent_EventData_4) == 0x000458, "Member 'GA_GoblinWarrior_FleePhase_C_ExecuteUbergraph_GA_GoblinWarrior_FleePhase::K2Node_CustomEvent_EventData_4' has a wrong offset!");
static_assert(offsetof(GA_GoblinWarrior_FleePhase_C_ExecuteUbergraph_GA_GoblinWarrior_FleePhase, K2Node_CreateDelegate_OutputDelegate_5) == 0x000508, "Member 'GA_GoblinWarrior_FleePhase_C_ExecuteUbergraph_GA_GoblinWarrior_FleePhase::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(GA_GoblinWarrior_FleePhase_C_ExecuteUbergraph_GA_GoblinWarrior_FleePhase, CallFunc_IsValid_ReturnValue_1) == 0x000518, "Member 'GA_GoblinWarrior_FleePhase_C_ExecuteUbergraph_GA_GoblinWarrior_FleePhase::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_GoblinWarrior_FleePhase_C_ExecuteUbergraph_GA_GoblinWarrior_FleePhase, CallFunc_K2_GetActorLocation_ReturnValue_8) == 0x000520, "Member 'GA_GoblinWarrior_FleePhase_C_ExecuteUbergraph_GA_GoblinWarrior_FleePhase::CallFunc_K2_GetActorLocation_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(GA_GoblinWarrior_FleePhase_C_ExecuteUbergraph_GA_GoblinWarrior_FleePhase, CallFunc_IsValid_ReturnValue_2) == 0x000538, "Member 'GA_GoblinWarrior_FleePhase_C_ExecuteUbergraph_GA_GoblinWarrior_FleePhase::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GA_GoblinWarrior_FleePhase_C_ExecuteUbergraph_GA_GoblinWarrior_FleePhase, CallFunc_K2_GetActorLocation_ReturnValue_9) == 0x000540, "Member 'GA_GoblinWarrior_FleePhase_C_ExecuteUbergraph_GA_GoblinWarrior_FleePhase::CallFunc_K2_GetActorLocation_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(GA_GoblinWarrior_FleePhase_C_ExecuteUbergraph_GA_GoblinWarrior_FleePhase, CallFunc_GetAvatarActorFromActorInfo_ReturnValue_6) == 0x000558, "Member 'GA_GoblinWarrior_FleePhase_C_ExecuteUbergraph_GA_GoblinWarrior_FleePhase::CallFunc_GetAvatarActorFromActorInfo_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(GA_GoblinWarrior_FleePhase_C_ExecuteUbergraph_GA_GoblinWarrior_FleePhase, CallFunc_GetTransform_ReturnValue) == 0x000560, "Member 'GA_GoblinWarrior_FleePhase_C_ExecuteUbergraph_GA_GoblinWarrior_FleePhase::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_GoblinWarrior_FleePhase_C_ExecuteUbergraph_GA_GoblinWarrior_FleePhase, K2Node_Event_TriggerEventData) == 0x0005C0, "Member 'GA_GoblinWarrior_FleePhase_C_ExecuteUbergraph_GA_GoblinWarrior_FleePhase::K2Node_Event_TriggerEventData' has a wrong offset!");
static_assert(offsetof(GA_GoblinWarrior_FleePhase_C_ExecuteUbergraph_GA_GoblinWarrior_FleePhase, CallFunc_BreakTransform_Location) == 0x000670, "Member 'GA_GoblinWarrior_FleePhase_C_ExecuteUbergraph_GA_GoblinWarrior_FleePhase::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(GA_GoblinWarrior_FleePhase_C_ExecuteUbergraph_GA_GoblinWarrior_FleePhase, CallFunc_BreakTransform_Rotation) == 0x000688, "Member 'GA_GoblinWarrior_FleePhase_C_ExecuteUbergraph_GA_GoblinWarrior_FleePhase::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(GA_GoblinWarrior_FleePhase_C_ExecuteUbergraph_GA_GoblinWarrior_FleePhase, CallFunc_BreakTransform_Scale) == 0x0006A0, "Member 'GA_GoblinWarrior_FleePhase_C_ExecuteUbergraph_GA_GoblinWarrior_FleePhase::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(GA_GoblinWarrior_FleePhase_C_ExecuteUbergraph_GA_GoblinWarrior_FleePhase, CallFunc_FindLookAtRotation_ReturnValue) == 0x0006B8, "Member 'GA_GoblinWarrior_FleePhase_C_ExecuteUbergraph_GA_GoblinWarrior_FleePhase::CallFunc_FindLookAtRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_GoblinWarrior_FleePhase_C_ExecuteUbergraph_GA_GoblinWarrior_FleePhase, CallFunc_K2_SetActorRotation_ReturnValue) == 0x0006D0, "Member 'GA_GoblinWarrior_FleePhase_C_ExecuteUbergraph_GA_GoblinWarrior_FleePhase::CallFunc_K2_SetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_GoblinWarrior_FleePhase_C_ExecuteUbergraph_GA_GoblinWarrior_FleePhase, CallFunc_GetAvatarActorFromActorInfo_ReturnValue_7) == 0x0006D8, "Member 'GA_GoblinWarrior_FleePhase_C_ExecuteUbergraph_GA_GoblinWarrior_FleePhase::CallFunc_GetAvatarActorFromActorInfo_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(GA_GoblinWarrior_FleePhase_C_ExecuteUbergraph_GA_GoblinWarrior_FleePhase, K2Node_DynamicCast_AsBP_DCMonster_Base_with_Options) == 0x0006E0, "Member 'GA_GoblinWarrior_FleePhase_C_ExecuteUbergraph_GA_GoblinWarrior_FleePhase::K2Node_DynamicCast_AsBP_DCMonster_Base_with_Options' has a wrong offset!");
static_assert(offsetof(GA_GoblinWarrior_FleePhase_C_ExecuteUbergraph_GA_GoblinWarrior_FleePhase, K2Node_DynamicCast_bSuccess) == 0x0006E8, "Member 'GA_GoblinWarrior_FleePhase_C_ExecuteUbergraph_GA_GoblinWarrior_FleePhase::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GA_GoblinWarrior_FleePhase_C_ExecuteUbergraph_GA_GoblinWarrior_FleePhase, K2Node_CreateDelegate_OutputDelegate_6) == 0x0006EC, "Member 'GA_GoblinWarrior_FleePhase_C_ExecuteUbergraph_GA_GoblinWarrior_FleePhase::K2Node_CreateDelegate_OutputDelegate_6' has a wrong offset!");
static_assert(offsetof(GA_GoblinWarrior_FleePhase_C_ExecuteUbergraph_GA_GoblinWarrior_FleePhase, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x000700, "Member 'GA_GoblinWarrior_FleePhase_C_ExecuteUbergraph_GA_GoblinWarrior_FleePhase::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_GoblinWarrior_FleePhase_C_ExecuteUbergraph_GA_GoblinWarrior_FleePhase, K2Node_CreateDelegate_OutputDelegate_7) == 0x000708, "Member 'GA_GoblinWarrior_FleePhase_C_ExecuteUbergraph_GA_GoblinWarrior_FleePhase::K2Node_CreateDelegate_OutputDelegate_7' has a wrong offset!");
static_assert(offsetof(GA_GoblinWarrior_FleePhase_C_ExecuteUbergraph_GA_GoblinWarrior_FleePhase, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000718, "Member 'GA_GoblinWarrior_FleePhase_C_ExecuteUbergraph_GA_GoblinWarrior_FleePhase::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_GoblinWarrior_FleePhase_C_ExecuteUbergraph_GA_GoblinWarrior_FleePhase, K2Node_Event_bWasCancelled) == 0x000720, "Member 'GA_GoblinWarrior_FleePhase_C_ExecuteUbergraph_GA_GoblinWarrior_FleePhase::K2Node_Event_bWasCancelled' has a wrong offset!");
static_assert(offsetof(GA_GoblinWarrior_FleePhase_C_ExecuteUbergraph_GA_GoblinWarrior_FleePhase, CallFunc_K2_GetActorLocation_ReturnValue_10) == 0x000728, "Member 'GA_GoblinWarrior_FleePhase_C_ExecuteUbergraph_GA_GoblinWarrior_FleePhase::CallFunc_K2_GetActorLocation_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(GA_GoblinWarrior_FleePhase_C_ExecuteUbergraph_GA_GoblinWarrior_FleePhase, CallFunc_WaitGameplayEvent_ReturnValue) == 0x000740, "Member 'GA_GoblinWarrior_FleePhase_C_ExecuteUbergraph_GA_GoblinWarrior_FleePhase::CallFunc_WaitGameplayEvent_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_GoblinWarrior_FleePhase_C_ExecuteUbergraph_GA_GoblinWarrior_FleePhase, CallFunc_K2_SetTimerDelegate_ReturnValue_1) == 0x000748, "Member 'GA_GoblinWarrior_FleePhase_C_ExecuteUbergraph_GA_GoblinWarrior_FleePhase::CallFunc_K2_SetTimerDelegate_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_GoblinWarrior_FleePhase_C_ExecuteUbergraph_GA_GoblinWarrior_FleePhase, CallFunc_IsValid_ReturnValue_3) == 0x000750, "Member 'GA_GoblinWarrior_FleePhase_C_ExecuteUbergraph_GA_GoblinWarrior_FleePhase::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(GA_GoblinWarrior_FleePhase_C_ExecuteUbergraph_GA_GoblinWarrior_FleePhase, CallFunc_GreaterEqual_DoubleDouble_ReturnValue_1) == 0x000751, "Member 'GA_GoblinWarrior_FleePhase_C_ExecuteUbergraph_GA_GoblinWarrior_FleePhase::CallFunc_GreaterEqual_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_GoblinWarrior_FleePhase_C_ExecuteUbergraph_GA_GoblinWarrior_FleePhase, K2Node_CustomEvent_EventTag_2) == 0x000754, "Member 'GA_GoblinWarrior_FleePhase_C_ExecuteUbergraph_GA_GoblinWarrior_FleePhase::K2Node_CustomEvent_EventTag_2' has a wrong offset!");
static_assert(offsetof(GA_GoblinWarrior_FleePhase_C_ExecuteUbergraph_GA_GoblinWarrior_FleePhase, K2Node_CustomEvent_EventData_2) == 0x000760, "Member 'GA_GoblinWarrior_FleePhase_C_ExecuteUbergraph_GA_GoblinWarrior_FleePhase::K2Node_CustomEvent_EventData_2' has a wrong offset!");
static_assert(offsetof(GA_GoblinWarrior_FleePhase_C_ExecuteUbergraph_GA_GoblinWarrior_FleePhase, Temp_struct_Variable_2) == 0x000810, "Member 'GA_GoblinWarrior_FleePhase_C_ExecuteUbergraph_GA_GoblinWarrior_FleePhase::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(GA_GoblinWarrior_FleePhase_C_ExecuteUbergraph_GA_GoblinWarrior_FleePhase, K2Node_CreateDelegate_OutputDelegate_8) == 0x0008C0, "Member 'GA_GoblinWarrior_FleePhase_C_ExecuteUbergraph_GA_GoblinWarrior_FleePhase::K2Node_CreateDelegate_OutputDelegate_8' has a wrong offset!");
static_assert(offsetof(GA_GoblinWarrior_FleePhase_C_ExecuteUbergraph_GA_GoblinWarrior_FleePhase, K2Node_CreateDelegate_OutputDelegate_9) == 0x0008D0, "Member 'GA_GoblinWarrior_FleePhase_C_ExecuteUbergraph_GA_GoblinWarrior_FleePhase::K2Node_CreateDelegate_OutputDelegate_9' has a wrong offset!");
static_assert(offsetof(GA_GoblinWarrior_FleePhase_C_ExecuteUbergraph_GA_GoblinWarrior_FleePhase, CallFunc_K2_SetTimerDelegate_ReturnValue_2) == 0x0008E0, "Member 'GA_GoblinWarrior_FleePhase_C_ExecuteUbergraph_GA_GoblinWarrior_FleePhase::CallFunc_K2_SetTimerDelegate_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GA_GoblinWarrior_FleePhase_C_ExecuteUbergraph_GA_GoblinWarrior_FleePhase, K2Node_CustomEvent_Payload) == 0x0008E8, "Member 'GA_GoblinWarrior_FleePhase_C_ExecuteUbergraph_GA_GoblinWarrior_FleePhase::K2Node_CustomEvent_Payload' has a wrong offset!");
static_assert(offsetof(GA_GoblinWarrior_FleePhase_C_ExecuteUbergraph_GA_GoblinWarrior_FleePhase, K2Node_CreateDelegate_OutputDelegate_10) == 0x000998, "Member 'GA_GoblinWarrior_FleePhase_C_ExecuteUbergraph_GA_GoblinWarrior_FleePhase::K2Node_CreateDelegate_OutputDelegate_10' has a wrong offset!");
static_assert(offsetof(GA_GoblinWarrior_FleePhase_C_ExecuteUbergraph_GA_GoblinWarrior_FleePhase, CallFunc_GetAIController_ReturnValue) == 0x0009A8, "Member 'GA_GoblinWarrior_FleePhase_C_ExecuteUbergraph_GA_GoblinWarrior_FleePhase::CallFunc_GetAIController_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_GoblinWarrior_FleePhase_C_ExecuteUbergraph_GA_GoblinWarrior_FleePhase, CallFunc_GetAvatarActorFromActorInfo_ReturnValue_8) == 0x0009B0, "Member 'GA_GoblinWarrior_FleePhase_C_ExecuteUbergraph_GA_GoblinWarrior_FleePhase::CallFunc_GetAvatarActorFromActorInfo_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(GA_GoblinWarrior_FleePhase_C_ExecuteUbergraph_GA_GoblinWarrior_FleePhase, CallFunc_GetAIController_ReturnValue_1) == 0x0009B8, "Member 'GA_GoblinWarrior_FleePhase_C_ExecuteUbergraph_GA_GoblinWarrior_FleePhase::CallFunc_GetAIController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_GoblinWarrior_FleePhase_C_ExecuteUbergraph_GA_GoblinWarrior_FleePhase, CallFunc_GetAvatarActorFromActorInfo_ReturnValue_9) == 0x0009C0, "Member 'GA_GoblinWarrior_FleePhase_C_ExecuteUbergraph_GA_GoblinWarrior_FleePhase::CallFunc_GetAvatarActorFromActorInfo_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(GA_GoblinWarrior_FleePhase_C_ExecuteUbergraph_GA_GoblinWarrior_FleePhase, CallFunc_GetAIController_ReturnValue_2) == 0x0009C8, "Member 'GA_GoblinWarrior_FleePhase_C_ExecuteUbergraph_GA_GoblinWarrior_FleePhase::CallFunc_GetAIController_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GA_GoblinWarrior_FleePhase_C_ExecuteUbergraph_GA_GoblinWarrior_FleePhase, CallFunc_GetAvatarActorFromActorInfo_ReturnValue_10) == 0x0009D0, "Member 'GA_GoblinWarrior_FleePhase_C_ExecuteUbergraph_GA_GoblinWarrior_FleePhase::CallFunc_GetAvatarActorFromActorInfo_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(GA_GoblinWarrior_FleePhase_C_ExecuteUbergraph_GA_GoblinWarrior_FleePhase, CallFunc_GetAIController_ReturnValue_3) == 0x0009D8, "Member 'GA_GoblinWarrior_FleePhase_C_ExecuteUbergraph_GA_GoblinWarrior_FleePhase::CallFunc_GetAIController_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(GA_GoblinWarrior_FleePhase_C_ExecuteUbergraph_GA_GoblinWarrior_FleePhase, CallFunc_Vector_Distance2D_ReturnValue) == 0x0009E0, "Member 'GA_GoblinWarrior_FleePhase_C_ExecuteUbergraph_GA_GoblinWarrior_FleePhase::CallFunc_Vector_Distance2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_GoblinWarrior_FleePhase_C_ExecuteUbergraph_GA_GoblinWarrior_FleePhase, CallFunc_GetAvatarActorFromActorInfo_ReturnValue_11) == 0x0009E8, "Member 'GA_GoblinWarrior_FleePhase_C_ExecuteUbergraph_GA_GoblinWarrior_FleePhase::CallFunc_GetAvatarActorFromActorInfo_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(GA_GoblinWarrior_FleePhase_C_ExecuteUbergraph_GA_GoblinWarrior_FleePhase, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x0009F0, "Member 'GA_GoblinWarrior_FleePhase_C_ExecuteUbergraph_GA_GoblinWarrior_FleePhase::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_GoblinWarrior_FleePhase_C_ExecuteUbergraph_GA_GoblinWarrior_FleePhase, CallFunc_GetTransform_ReturnValue_1) == 0x000A00, "Member 'GA_GoblinWarrior_FleePhase_C_ExecuteUbergraph_GA_GoblinWarrior_FleePhase::CallFunc_GetTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_GoblinWarrior_FleePhase_C_ExecuteUbergraph_GA_GoblinWarrior_FleePhase, CallFunc_BreakTransform_Location_1) == 0x000A60, "Member 'GA_GoblinWarrior_FleePhase_C_ExecuteUbergraph_GA_GoblinWarrior_FleePhase::CallFunc_BreakTransform_Location_1' has a wrong offset!");
static_assert(offsetof(GA_GoblinWarrior_FleePhase_C_ExecuteUbergraph_GA_GoblinWarrior_FleePhase, CallFunc_BreakTransform_Rotation_1) == 0x000A78, "Member 'GA_GoblinWarrior_FleePhase_C_ExecuteUbergraph_GA_GoblinWarrior_FleePhase::CallFunc_BreakTransform_Rotation_1' has a wrong offset!");
static_assert(offsetof(GA_GoblinWarrior_FleePhase_C_ExecuteUbergraph_GA_GoblinWarrior_FleePhase, CallFunc_BreakTransform_Scale_1) == 0x000A90, "Member 'GA_GoblinWarrior_FleePhase_C_ExecuteUbergraph_GA_GoblinWarrior_FleePhase::CallFunc_BreakTransform_Scale_1' has a wrong offset!");
static_assert(offsetof(GA_GoblinWarrior_FleePhase_C_ExecuteUbergraph_GA_GoblinWarrior_FleePhase, CallFunc_FindLookAtRotation_ReturnValue_1) == 0x000AA8, "Member 'GA_GoblinWarrior_FleePhase_C_ExecuteUbergraph_GA_GoblinWarrior_FleePhase::CallFunc_FindLookAtRotation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_GoblinWarrior_FleePhase_C_ExecuteUbergraph_GA_GoblinWarrior_FleePhase, CallFunc_K2_SetActorRotation_ReturnValue_1) == 0x000AC0, "Member 'GA_GoblinWarrior_FleePhase_C_ExecuteUbergraph_GA_GoblinWarrior_FleePhase::CallFunc_K2_SetActorRotation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_GoblinWarrior_FleePhase_C_ExecuteUbergraph_GA_GoblinWarrior_FleePhase, CallFunc_IsValid_ReturnValue_4) == 0x000AC1, "Member 'GA_GoblinWarrior_FleePhase_C_ExecuteUbergraph_GA_GoblinWarrior_FleePhase::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(GA_GoblinWarrior_FleePhase_C_ExecuteUbergraph_GA_GoblinWarrior_FleePhase, CallFunc_K2_GetActorLocation_ReturnValue_11) == 0x000AC8, "Member 'GA_GoblinWarrior_FleePhase_C_ExecuteUbergraph_GA_GoblinWarrior_FleePhase::CallFunc_K2_GetActorLocation_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(GA_GoblinWarrior_FleePhase_C_ExecuteUbergraph_GA_GoblinWarrior_FleePhase, CallFunc_FindLookAtRotation_ReturnValue_2) == 0x000AE0, "Member 'GA_GoblinWarrior_FleePhase_C_ExecuteUbergraph_GA_GoblinWarrior_FleePhase::CallFunc_FindLookAtRotation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GA_GoblinWarrior_FleePhase_C_ExecuteUbergraph_GA_GoblinWarrior_FleePhase, CallFunc_GetForwardVector_ReturnValue) == 0x000AF8, "Member 'GA_GoblinWarrior_FleePhase_C_ExecuteUbergraph_GA_GoblinWarrior_FleePhase::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_GoblinWarrior_FleePhase_C_ExecuteUbergraph_GA_GoblinWarrior_FleePhase, CallFunc_Conv_DoubleToVector_ReturnValue) == 0x000B10, "Member 'GA_GoblinWarrior_FleePhase_C_ExecuteUbergraph_GA_GoblinWarrior_FleePhase::CallFunc_Conv_DoubleToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_GoblinWarrior_FleePhase_C_ExecuteUbergraph_GA_GoblinWarrior_FleePhase, CallFunc_Multiply_VectorVector_ReturnValue) == 0x000B28, "Member 'GA_GoblinWarrior_FleePhase_C_ExecuteUbergraph_GA_GoblinWarrior_FleePhase::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_GoblinWarrior_FleePhase_C_ExecuteUbergraph_GA_GoblinWarrior_FleePhase, CallFunc_Add_VectorVector_ReturnValue) == 0x000B40, "Member 'GA_GoblinWarrior_FleePhase_C_ExecuteUbergraph_GA_GoblinWarrior_FleePhase::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_GoblinWarrior_FleePhase_C_ExecuteUbergraph_GA_GoblinWarrior_FleePhase, CallFunc_CreateMoveToProxyObject_ReturnValue) == 0x000B58, "Member 'GA_GoblinWarrior_FleePhase_C_ExecuteUbergraph_GA_GoblinWarrior_FleePhase::CallFunc_CreateMoveToProxyObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_GoblinWarrior_FleePhase_C_ExecuteUbergraph_GA_GoblinWarrior_FleePhase, CallFunc_IsValid_ReturnValue_5) == 0x000B60, "Member 'GA_GoblinWarrior_FleePhase_C_ExecuteUbergraph_GA_GoblinWarrior_FleePhase::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(GA_GoblinWarrior_FleePhase_C_ExecuteUbergraph_GA_GoblinWarrior_FleePhase, CallFunc_K2_SetTimerDelegate_Time_ImplicitCast) == 0x000B64, "Member 'GA_GoblinWarrior_FleePhase_C_ExecuteUbergraph_GA_GoblinWarrior_FleePhase::CallFunc_K2_SetTimerDelegate_Time_ImplicitCast' has a wrong offset!");
static_assert(offsetof(GA_GoblinWarrior_FleePhase_C_ExecuteUbergraph_GA_GoblinWarrior_FleePhase, CallFunc_K2_SetTimerDelegate_Time_ImplicitCast_1) == 0x000B68, "Member 'GA_GoblinWarrior_FleePhase_C_ExecuteUbergraph_GA_GoblinWarrior_FleePhase::CallFunc_K2_SetTimerDelegate_Time_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(GA_GoblinWarrior_FleePhase_C_ExecuteUbergraph_GA_GoblinWarrior_FleePhase, CallFunc_GreaterEqual_DoubleDouble_B_ImplicitCast) == 0x000B70, "Member 'GA_GoblinWarrior_FleePhase_C_ExecuteUbergraph_GA_GoblinWarrior_FleePhase::CallFunc_GreaterEqual_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(GA_GoblinWarrior_FleePhase_C_ExecuteUbergraph_GA_GoblinWarrior_FleePhase, CallFunc_Conv_DoubleToVector_InDouble_ImplicitCast) == 0x000B78, "Member 'GA_GoblinWarrior_FleePhase_C_ExecuteUbergraph_GA_GoblinWarrior_FleePhase::CallFunc_Conv_DoubleToVector_InDouble_ImplicitCast' has a wrong offset!");

// Function GA_GoblinWarrior_FleePhase.GA_GoblinWarrior_FleePhase_C.K2_OnEndAbility
// 0x0001 (0x0001 - 0x0000)
struct GA_GoblinWarrior_FleePhase_C_K2_OnEndAbility final
{
public:
	bool                                          bWasCancelled;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_GoblinWarrior_FleePhase_C_K2_OnEndAbility) == 0x000001, "Wrong alignment on GA_GoblinWarrior_FleePhase_C_K2_OnEndAbility");
static_assert(sizeof(GA_GoblinWarrior_FleePhase_C_K2_OnEndAbility) == 0x000001, "Wrong size on GA_GoblinWarrior_FleePhase_C_K2_OnEndAbility");
static_assert(offsetof(GA_GoblinWarrior_FleePhase_C_K2_OnEndAbility, bWasCancelled) == 0x000000, "Member 'GA_GoblinWarrior_FleePhase_C_K2_OnEndAbility::bWasCancelled' has a wrong offset!");

// Function GA_GoblinWarrior_FleePhase.GA_GoblinWarrior_FleePhase_C.OnBlendOut_81379A3849C747B5C64706BF518AB608
// 0x00B8 (0x00B8 - 0x0000)
struct GA_GoblinWarrior_FleePhase_C_OnBlendOut_81379A3849C747B5C64706BF518AB608 final
{
public:
	struct FGameplayTag                           EventTag;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEventData                     EventData;                                         // 0x0008(0x00B0)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(GA_GoblinWarrior_FleePhase_C_OnBlendOut_81379A3849C747B5C64706BF518AB608) == 0x000008, "Wrong alignment on GA_GoblinWarrior_FleePhase_C_OnBlendOut_81379A3849C747B5C64706BF518AB608");
static_assert(sizeof(GA_GoblinWarrior_FleePhase_C_OnBlendOut_81379A3849C747B5C64706BF518AB608) == 0x0000B8, "Wrong size on GA_GoblinWarrior_FleePhase_C_OnBlendOut_81379A3849C747B5C64706BF518AB608");
static_assert(offsetof(GA_GoblinWarrior_FleePhase_C_OnBlendOut_81379A3849C747B5C64706BF518AB608, EventTag) == 0x000000, "Member 'GA_GoblinWarrior_FleePhase_C_OnBlendOut_81379A3849C747B5C64706BF518AB608::EventTag' has a wrong offset!");
static_assert(offsetof(GA_GoblinWarrior_FleePhase_C_OnBlendOut_81379A3849C747B5C64706BF518AB608, EventData) == 0x000008, "Member 'GA_GoblinWarrior_FleePhase_C_OnBlendOut_81379A3849C747B5C64706BF518AB608::EventData' has a wrong offset!");

// Function GA_GoblinWarrior_FleePhase.GA_GoblinWarrior_FleePhase_C.OnCancelled_81379A3849C747B5C64706BF518AB608
// 0x00B8 (0x00B8 - 0x0000)
struct GA_GoblinWarrior_FleePhase_C_OnCancelled_81379A3849C747B5C64706BF518AB608 final
{
public:
	struct FGameplayTag                           EventTag;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEventData                     EventData;                                         // 0x0008(0x00B0)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(GA_GoblinWarrior_FleePhase_C_OnCancelled_81379A3849C747B5C64706BF518AB608) == 0x000008, "Wrong alignment on GA_GoblinWarrior_FleePhase_C_OnCancelled_81379A3849C747B5C64706BF518AB608");
static_assert(sizeof(GA_GoblinWarrior_FleePhase_C_OnCancelled_81379A3849C747B5C64706BF518AB608) == 0x0000B8, "Wrong size on GA_GoblinWarrior_FleePhase_C_OnCancelled_81379A3849C747B5C64706BF518AB608");
static_assert(offsetof(GA_GoblinWarrior_FleePhase_C_OnCancelled_81379A3849C747B5C64706BF518AB608, EventTag) == 0x000000, "Member 'GA_GoblinWarrior_FleePhase_C_OnCancelled_81379A3849C747B5C64706BF518AB608::EventTag' has a wrong offset!");
static_assert(offsetof(GA_GoblinWarrior_FleePhase_C_OnCancelled_81379A3849C747B5C64706BF518AB608, EventData) == 0x000008, "Member 'GA_GoblinWarrior_FleePhase_C_OnCancelled_81379A3849C747B5C64706BF518AB608::EventData' has a wrong offset!");

// Function GA_GoblinWarrior_FleePhase.GA_GoblinWarrior_FleePhase_C.OnCompleted_81379A3849C747B5C64706BF518AB608
// 0x00B8 (0x00B8 - 0x0000)
struct GA_GoblinWarrior_FleePhase_C_OnCompleted_81379A3849C747B5C64706BF518AB608 final
{
public:
	struct FGameplayTag                           EventTag;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEventData                     EventData;                                         // 0x0008(0x00B0)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(GA_GoblinWarrior_FleePhase_C_OnCompleted_81379A3849C747B5C64706BF518AB608) == 0x000008, "Wrong alignment on GA_GoblinWarrior_FleePhase_C_OnCompleted_81379A3849C747B5C64706BF518AB608");
static_assert(sizeof(GA_GoblinWarrior_FleePhase_C_OnCompleted_81379A3849C747B5C64706BF518AB608) == 0x0000B8, "Wrong size on GA_GoblinWarrior_FleePhase_C_OnCompleted_81379A3849C747B5C64706BF518AB608");
static_assert(offsetof(GA_GoblinWarrior_FleePhase_C_OnCompleted_81379A3849C747B5C64706BF518AB608, EventTag) == 0x000000, "Member 'GA_GoblinWarrior_FleePhase_C_OnCompleted_81379A3849C747B5C64706BF518AB608::EventTag' has a wrong offset!");
static_assert(offsetof(GA_GoblinWarrior_FleePhase_C_OnCompleted_81379A3849C747B5C64706BF518AB608, EventData) == 0x000008, "Member 'GA_GoblinWarrior_FleePhase_C_OnCompleted_81379A3849C747B5C64706BF518AB608::EventData' has a wrong offset!");

// Function GA_GoblinWarrior_FleePhase.GA_GoblinWarrior_FleePhase_C.OnFail_1A840F70482377B71FCEADBD5ACE2499
// 0x0001 (0x0001 - 0x0000)
struct GA_GoblinWarrior_FleePhase_C_OnFail_1A840F70482377B71FCEADBD5ACE2499 final
{
public:
	EPathFollowingResult                          MovementResult;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_GoblinWarrior_FleePhase_C_OnFail_1A840F70482377B71FCEADBD5ACE2499) == 0x000001, "Wrong alignment on GA_GoblinWarrior_FleePhase_C_OnFail_1A840F70482377B71FCEADBD5ACE2499");
static_assert(sizeof(GA_GoblinWarrior_FleePhase_C_OnFail_1A840F70482377B71FCEADBD5ACE2499) == 0x000001, "Wrong size on GA_GoblinWarrior_FleePhase_C_OnFail_1A840F70482377B71FCEADBD5ACE2499");
static_assert(offsetof(GA_GoblinWarrior_FleePhase_C_OnFail_1A840F70482377B71FCEADBD5ACE2499, MovementResult) == 0x000000, "Member 'GA_GoblinWarrior_FleePhase_C_OnFail_1A840F70482377B71FCEADBD5ACE2499::MovementResult' has a wrong offset!");

// Function GA_GoblinWarrior_FleePhase.GA_GoblinWarrior_FleePhase_C.OnInterrupted_81379A3849C747B5C64706BF518AB608
// 0x00B8 (0x00B8 - 0x0000)
struct GA_GoblinWarrior_FleePhase_C_OnInterrupted_81379A3849C747B5C64706BF518AB608 final
{
public:
	struct FGameplayTag                           EventTag;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEventData                     EventData;                                         // 0x0008(0x00B0)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(GA_GoblinWarrior_FleePhase_C_OnInterrupted_81379A3849C747B5C64706BF518AB608) == 0x000008, "Wrong alignment on GA_GoblinWarrior_FleePhase_C_OnInterrupted_81379A3849C747B5C64706BF518AB608");
static_assert(sizeof(GA_GoblinWarrior_FleePhase_C_OnInterrupted_81379A3849C747B5C64706BF518AB608) == 0x0000B8, "Wrong size on GA_GoblinWarrior_FleePhase_C_OnInterrupted_81379A3849C747B5C64706BF518AB608");
static_assert(offsetof(GA_GoblinWarrior_FleePhase_C_OnInterrupted_81379A3849C747B5C64706BF518AB608, EventTag) == 0x000000, "Member 'GA_GoblinWarrior_FleePhase_C_OnInterrupted_81379A3849C747B5C64706BF518AB608::EventTag' has a wrong offset!");
static_assert(offsetof(GA_GoblinWarrior_FleePhase_C_OnInterrupted_81379A3849C747B5C64706BF518AB608, EventData) == 0x000008, "Member 'GA_GoblinWarrior_FleePhase_C_OnInterrupted_81379A3849C747B5C64706BF518AB608::EventData' has a wrong offset!");

// Function GA_GoblinWarrior_FleePhase.GA_GoblinWarrior_FleePhase_C.OnSuccess_1A840F70482377B71FCEADBD5ACE2499
// 0x0001 (0x0001 - 0x0000)
struct GA_GoblinWarrior_FleePhase_C_OnSuccess_1A840F70482377B71FCEADBD5ACE2499 final
{
public:
	EPathFollowingResult                          MovementResult;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_GoblinWarrior_FleePhase_C_OnSuccess_1A840F70482377B71FCEADBD5ACE2499) == 0x000001, "Wrong alignment on GA_GoblinWarrior_FleePhase_C_OnSuccess_1A840F70482377B71FCEADBD5ACE2499");
static_assert(sizeof(GA_GoblinWarrior_FleePhase_C_OnSuccess_1A840F70482377B71FCEADBD5ACE2499) == 0x000001, "Wrong size on GA_GoblinWarrior_FleePhase_C_OnSuccess_1A840F70482377B71FCEADBD5ACE2499");
static_assert(offsetof(GA_GoblinWarrior_FleePhase_C_OnSuccess_1A840F70482377B71FCEADBD5ACE2499, MovementResult) == 0x000000, "Member 'GA_GoblinWarrior_FleePhase_C_OnSuccess_1A840F70482377B71FCEADBD5ACE2499::MovementResult' has a wrong offset!");

}

