#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_IceKoboldAxeman_Attack_1

#include "Basic.hpp"

#include "GameplayAbilities_structs.hpp"


namespace SDK::Params
{

// Function GA_IceKoboldAxeman_Attack_1.GA_IceKoboldAxeman_Attack_1_C.AbilityActivated
// 0x00B0 (0x00B0 - 0x0000)
struct GA_IceKoboldAxeman_Attack_1_C_AbilityActivated final
{
public:
	struct FGameplayEventData                     TriggerEventData;                                  // 0x0000(0x00B0)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(GA_IceKoboldAxeman_Attack_1_C_AbilityActivated) == 0x000008, "Wrong alignment on GA_IceKoboldAxeman_Attack_1_C_AbilityActivated");
static_assert(sizeof(GA_IceKoboldAxeman_Attack_1_C_AbilityActivated) == 0x0000B0, "Wrong size on GA_IceKoboldAxeman_Attack_1_C_AbilityActivated");
static_assert(offsetof(GA_IceKoboldAxeman_Attack_1_C_AbilityActivated, TriggerEventData) == 0x000000, "Member 'GA_IceKoboldAxeman_Attack_1_C_AbilityActivated::TriggerEventData' has a wrong offset!");

// Function GA_IceKoboldAxeman_Attack_1.GA_IceKoboldAxeman_Attack_1_C.EventReceived_84F2680C4FE7A0336D46748689BFA0E9
// 0x00B0 (0x00B0 - 0x0000)
struct GA_IceKoboldAxeman_Attack_1_C_EventReceived_84F2680C4FE7A0336D46748689BFA0E9 final
{
public:
	struct FGameplayEventData                     Payload;                                           // 0x0000(0x00B0)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(GA_IceKoboldAxeman_Attack_1_C_EventReceived_84F2680C4FE7A0336D46748689BFA0E9) == 0x000008, "Wrong alignment on GA_IceKoboldAxeman_Attack_1_C_EventReceived_84F2680C4FE7A0336D46748689BFA0E9");
static_assert(sizeof(GA_IceKoboldAxeman_Attack_1_C_EventReceived_84F2680C4FE7A0336D46748689BFA0E9) == 0x0000B0, "Wrong size on GA_IceKoboldAxeman_Attack_1_C_EventReceived_84F2680C4FE7A0336D46748689BFA0E9");
static_assert(offsetof(GA_IceKoboldAxeman_Attack_1_C_EventReceived_84F2680C4FE7A0336D46748689BFA0E9, Payload) == 0x000000, "Member 'GA_IceKoboldAxeman_Attack_1_C_EventReceived_84F2680C4FE7A0336D46748689BFA0E9::Payload' has a wrong offset!");

// Function GA_IceKoboldAxeman_Attack_1.GA_IceKoboldAxeman_Attack_1_C.ExecuteUbergraph_GA_IceKoboldAxeman_Attack_1
// 0x0288 (0x0288 - 0x0000)
struct GA_IceKoboldAxeman_Attack_1_C_ExecuteUbergraph_GA_IceKoboldAxeman_Attack_1 final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5122[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetAvatarActorFromActorInfo_ReturnValue;  // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Get_Enemies_In_Range_And_Angle_From_Actor_Result; // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5123[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ADCCharacterBase*>               CallFunc_Get_Enemies_In_Range_And_Angle_From_Actor_DCCharacterBase; // 0x0018(0x0010)(ReferenceParm)
	TDelegate<void(const struct FGameplayEventData& Payload)> K2Node_CreateDelegate_OutputDelegate;              // 0x0028(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEventData                     K2Node_CustomEvent_Payload;                        // 0x0038(0x00B0)()
	struct FGameplayEventData                     Temp_struct_Variable;                              // 0x00E8(0x00B0)()
	class UAbilityTask_WaitGameplayEvent*         CallFunc_WaitGameplayEvent_ReturnValue;            // 0x0198(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5124[0x7];                                     // 0x01A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_RandomFloatInRange_ReturnValue;           // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5125[0x7];                                     // 0x01B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayEventData                     K2Node_Event_TriggerEventData;                     // 0x01B8(0x00B0)(ConstParm)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x0268(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0269(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5126[0x6];                                     // 0x026A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetAvatarActorFromActorInfo_ReturnValue_1; // 0x0270(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_IceKoboldAxeman_C*                  K2Node_DynamicCast_AsBP_Ice_Kobold_Axeman;         // 0x0278(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0280(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckGradeType_ReturnValue;               // 0x0281(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_IceKoboldAxeman_Attack_1_C_ExecuteUbergraph_GA_IceKoboldAxeman_Attack_1) == 0x000008, "Wrong alignment on GA_IceKoboldAxeman_Attack_1_C_ExecuteUbergraph_GA_IceKoboldAxeman_Attack_1");
static_assert(sizeof(GA_IceKoboldAxeman_Attack_1_C_ExecuteUbergraph_GA_IceKoboldAxeman_Attack_1) == 0x000288, "Wrong size on GA_IceKoboldAxeman_Attack_1_C_ExecuteUbergraph_GA_IceKoboldAxeman_Attack_1");
static_assert(offsetof(GA_IceKoboldAxeman_Attack_1_C_ExecuteUbergraph_GA_IceKoboldAxeman_Attack_1, EntryPoint) == 0x000000, "Member 'GA_IceKoboldAxeman_Attack_1_C_ExecuteUbergraph_GA_IceKoboldAxeman_Attack_1::EntryPoint' has a wrong offset!");
static_assert(offsetof(GA_IceKoboldAxeman_Attack_1_C_ExecuteUbergraph_GA_IceKoboldAxeman_Attack_1, CallFunc_GetAvatarActorFromActorInfo_ReturnValue) == 0x000008, "Member 'GA_IceKoboldAxeman_Attack_1_C_ExecuteUbergraph_GA_IceKoboldAxeman_Attack_1::CallFunc_GetAvatarActorFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_IceKoboldAxeman_Attack_1_C_ExecuteUbergraph_GA_IceKoboldAxeman_Attack_1, CallFunc_Get_Enemies_In_Range_And_Angle_From_Actor_Result) == 0x000010, "Member 'GA_IceKoboldAxeman_Attack_1_C_ExecuteUbergraph_GA_IceKoboldAxeman_Attack_1::CallFunc_Get_Enemies_In_Range_And_Angle_From_Actor_Result' has a wrong offset!");
static_assert(offsetof(GA_IceKoboldAxeman_Attack_1_C_ExecuteUbergraph_GA_IceKoboldAxeman_Attack_1, CallFunc_Get_Enemies_In_Range_And_Angle_From_Actor_DCCharacterBase) == 0x000018, "Member 'GA_IceKoboldAxeman_Attack_1_C_ExecuteUbergraph_GA_IceKoboldAxeman_Attack_1::CallFunc_Get_Enemies_In_Range_And_Angle_From_Actor_DCCharacterBase' has a wrong offset!");
static_assert(offsetof(GA_IceKoboldAxeman_Attack_1_C_ExecuteUbergraph_GA_IceKoboldAxeman_Attack_1, K2Node_CreateDelegate_OutputDelegate) == 0x000028, "Member 'GA_IceKoboldAxeman_Attack_1_C_ExecuteUbergraph_GA_IceKoboldAxeman_Attack_1::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(GA_IceKoboldAxeman_Attack_1_C_ExecuteUbergraph_GA_IceKoboldAxeman_Attack_1, K2Node_CustomEvent_Payload) == 0x000038, "Member 'GA_IceKoboldAxeman_Attack_1_C_ExecuteUbergraph_GA_IceKoboldAxeman_Attack_1::K2Node_CustomEvent_Payload' has a wrong offset!");
static_assert(offsetof(GA_IceKoboldAxeman_Attack_1_C_ExecuteUbergraph_GA_IceKoboldAxeman_Attack_1, Temp_struct_Variable) == 0x0000E8, "Member 'GA_IceKoboldAxeman_Attack_1_C_ExecuteUbergraph_GA_IceKoboldAxeman_Attack_1::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(GA_IceKoboldAxeman_Attack_1_C_ExecuteUbergraph_GA_IceKoboldAxeman_Attack_1, CallFunc_WaitGameplayEvent_ReturnValue) == 0x000198, "Member 'GA_IceKoboldAxeman_Attack_1_C_ExecuteUbergraph_GA_IceKoboldAxeman_Attack_1::CallFunc_WaitGameplayEvent_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_IceKoboldAxeman_Attack_1_C_ExecuteUbergraph_GA_IceKoboldAxeman_Attack_1, CallFunc_IsValid_ReturnValue) == 0x0001A0, "Member 'GA_IceKoboldAxeman_Attack_1_C_ExecuteUbergraph_GA_IceKoboldAxeman_Attack_1::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_IceKoboldAxeman_Attack_1_C_ExecuteUbergraph_GA_IceKoboldAxeman_Attack_1, CallFunc_RandomFloatInRange_ReturnValue) == 0x0001A8, "Member 'GA_IceKoboldAxeman_Attack_1_C_ExecuteUbergraph_GA_IceKoboldAxeman_Attack_1::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_IceKoboldAxeman_Attack_1_C_ExecuteUbergraph_GA_IceKoboldAxeman_Attack_1, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x0001B0, "Member 'GA_IceKoboldAxeman_Attack_1_C_ExecuteUbergraph_GA_IceKoboldAxeman_Attack_1::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_IceKoboldAxeman_Attack_1_C_ExecuteUbergraph_GA_IceKoboldAxeman_Attack_1, K2Node_Event_TriggerEventData) == 0x0001B8, "Member 'GA_IceKoboldAxeman_Attack_1_C_ExecuteUbergraph_GA_IceKoboldAxeman_Attack_1::K2Node_Event_TriggerEventData' has a wrong offset!");
static_assert(offsetof(GA_IceKoboldAxeman_Attack_1_C_ExecuteUbergraph_GA_IceKoboldAxeman_Attack_1, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x000268, "Member 'GA_IceKoboldAxeman_Attack_1_C_ExecuteUbergraph_GA_IceKoboldAxeman_Attack_1::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_IceKoboldAxeman_Attack_1_C_ExecuteUbergraph_GA_IceKoboldAxeman_Attack_1, CallFunc_BooleanOR_ReturnValue) == 0x000269, "Member 'GA_IceKoboldAxeman_Attack_1_C_ExecuteUbergraph_GA_IceKoboldAxeman_Attack_1::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_IceKoboldAxeman_Attack_1_C_ExecuteUbergraph_GA_IceKoboldAxeman_Attack_1, CallFunc_GetAvatarActorFromActorInfo_ReturnValue_1) == 0x000270, "Member 'GA_IceKoboldAxeman_Attack_1_C_ExecuteUbergraph_GA_IceKoboldAxeman_Attack_1::CallFunc_GetAvatarActorFromActorInfo_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_IceKoboldAxeman_Attack_1_C_ExecuteUbergraph_GA_IceKoboldAxeman_Attack_1, K2Node_DynamicCast_AsBP_Ice_Kobold_Axeman) == 0x000278, "Member 'GA_IceKoboldAxeman_Attack_1_C_ExecuteUbergraph_GA_IceKoboldAxeman_Attack_1::K2Node_DynamicCast_AsBP_Ice_Kobold_Axeman' has a wrong offset!");
static_assert(offsetof(GA_IceKoboldAxeman_Attack_1_C_ExecuteUbergraph_GA_IceKoboldAxeman_Attack_1, K2Node_DynamicCast_bSuccess) == 0x000280, "Member 'GA_IceKoboldAxeman_Attack_1_C_ExecuteUbergraph_GA_IceKoboldAxeman_Attack_1::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GA_IceKoboldAxeman_Attack_1_C_ExecuteUbergraph_GA_IceKoboldAxeman_Attack_1, CallFunc_CheckGradeType_ReturnValue) == 0x000281, "Member 'GA_IceKoboldAxeman_Attack_1_C_ExecuteUbergraph_GA_IceKoboldAxeman_Attack_1::CallFunc_CheckGradeType_ReturnValue' has a wrong offset!");

}

