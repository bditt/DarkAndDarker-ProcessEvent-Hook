#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_SkeletonWarlord_Crystal

#include "Basic.hpp"

#include "BP_DCMonsterBaseWithOptions_classes.hpp"
#include "Engine_structs.hpp"
#include "AkAudio_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_SkeletonWarlord_Crystal.BP_SkeletonWarlord_Crystal_C
// 0x0040 (0x1420 - 0x13E0)
class ABP_SkeletonWarlord_Crystal_C final : public ABP_DCMonsterBaseWithOptions_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_SkeletonWarlord_Crystal_C;       // 0x13D8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UDCAkComponent*                         DCAk_Beam;                                         // 0x13E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          Box;                                               // 0x13E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_DCHitBox_C*                         BP_DCHitBox;                                       // 0x13F0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<class ABP_PlayerCharacter_C*>          BeamBox_Overlapped_Enemies;                        // 0x13F8(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	bool                                          IsDead_;                                           // 0x1408(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_52EE[0x3];                                     // 0x1409(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Dig_Count;                                         // 0x140C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_SkeletonWarlord_Elite_C*            Summoner;                                          // 0x1410(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void Added_6F9A1F9B40FC1A0090124C810F485B47();
	void BeamBox_Overlap_In(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void BeamBox_Overlap_Out(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void Destroy();
	void ExecuteUbergraph_BP_SkeletonWarlord_Crystal(int32 EntryPoint);
	void OnBeforeDeath();
	void OnFMsgGASAttributeNotifyBlueprint(const struct FMsgGASAttributeNotify& InMsg);
	void OnRep_End_Location();
	void OnRep_Start_Location();
	void OnSetAI();
	void ReceiveBeginPlay();
	void ReceiveTick(float DeltaSeconds);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_SkeletonWarlord_Crystal_C">();
	}
	static class ABP_SkeletonWarlord_Crystal_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_SkeletonWarlord_Crystal_C>();
	}
};
static_assert(alignof(ABP_SkeletonWarlord_Crystal_C) == 0x000010, "Wrong alignment on ABP_SkeletonWarlord_Crystal_C");
static_assert(sizeof(ABP_SkeletonWarlord_Crystal_C) == 0x001420, "Wrong size on ABP_SkeletonWarlord_Crystal_C");
static_assert(offsetof(ABP_SkeletonWarlord_Crystal_C, UberGraphFrame_BP_SkeletonWarlord_Crystal_C) == 0x0013D8, "Member 'ABP_SkeletonWarlord_Crystal_C::UberGraphFrame_BP_SkeletonWarlord_Crystal_C' has a wrong offset!");
static_assert(offsetof(ABP_SkeletonWarlord_Crystal_C, DCAk_Beam) == 0x0013E0, "Member 'ABP_SkeletonWarlord_Crystal_C::DCAk_Beam' has a wrong offset!");
static_assert(offsetof(ABP_SkeletonWarlord_Crystal_C, Box) == 0x0013E8, "Member 'ABP_SkeletonWarlord_Crystal_C::Box' has a wrong offset!");
static_assert(offsetof(ABP_SkeletonWarlord_Crystal_C, BP_DCHitBox) == 0x0013F0, "Member 'ABP_SkeletonWarlord_Crystal_C::BP_DCHitBox' has a wrong offset!");
static_assert(offsetof(ABP_SkeletonWarlord_Crystal_C, BeamBox_Overlapped_Enemies) == 0x0013F8, "Member 'ABP_SkeletonWarlord_Crystal_C::BeamBox_Overlapped_Enemies' has a wrong offset!");
static_assert(offsetof(ABP_SkeletonWarlord_Crystal_C, IsDead_) == 0x001408, "Member 'ABP_SkeletonWarlord_Crystal_C::IsDead_' has a wrong offset!");
static_assert(offsetof(ABP_SkeletonWarlord_Crystal_C, Dig_Count) == 0x00140C, "Member 'ABP_SkeletonWarlord_Crystal_C::Dig_Count' has a wrong offset!");
static_assert(offsetof(ABP_SkeletonWarlord_Crystal_C, Summoner) == 0x001410, "Member 'ABP_SkeletonWarlord_Crystal_C::Summoner' has a wrong offset!");

}

