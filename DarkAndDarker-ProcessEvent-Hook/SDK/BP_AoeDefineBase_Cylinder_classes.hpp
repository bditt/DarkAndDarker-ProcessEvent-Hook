#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AoeDefineBase_Cylinder

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "BP_AoeDefineBase_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_AoeDefineBase_Cylinder.BP_AoeDefineBase_Cylinder_C
// 0x0020 (0x0920 - 0x0900)
class ABP_AoeDefineBase_Cylinder_C : public ABP_AoeDefineBase_C
{
public:
	uint8                                         Pad_56E5[0x4];                                     // 0x08F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_AoeDefineBase_Cylinder_C;        // 0x08F8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UDCStaticMeshComponent*                 DCStaticMeshCylinder;                              // 0x0900(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        Radius;                                            // 0x0908(0x0008)(Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	double                                        Height;                                            // 0x0910(0x0008)(Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_AoeDefineBase_Cylinder(int32 EntryPoint);
	void OnRep_Height();
	void OnRep_Radius();
	void ReceiveBeginPlay();
	void Set_Collision_Profile_Activate(class UPrimitiveComponent* Target);
	void Set_Collision_Profile_Deactivate(class UPrimitiveComponent* Target);
	void SetCylinderSize();
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_AoeDefineBase_Cylinder_C">();
	}
	static class ABP_AoeDefineBase_Cylinder_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_AoeDefineBase_Cylinder_C>();
	}
};
static_assert(alignof(ABP_AoeDefineBase_Cylinder_C) == 0x000010, "Wrong alignment on ABP_AoeDefineBase_Cylinder_C");
static_assert(sizeof(ABP_AoeDefineBase_Cylinder_C) == 0x000920, "Wrong size on ABP_AoeDefineBase_Cylinder_C");
static_assert(offsetof(ABP_AoeDefineBase_Cylinder_C, UberGraphFrame_BP_AoeDefineBase_Cylinder_C) == 0x0008F8, "Member 'ABP_AoeDefineBase_Cylinder_C::UberGraphFrame_BP_AoeDefineBase_Cylinder_C' has a wrong offset!");
static_assert(offsetof(ABP_AoeDefineBase_Cylinder_C, DCStaticMeshCylinder) == 0x000900, "Member 'ABP_AoeDefineBase_Cylinder_C::DCStaticMeshCylinder' has a wrong offset!");
static_assert(offsetof(ABP_AoeDefineBase_Cylinder_C, Radius) == 0x000908, "Member 'ABP_AoeDefineBase_Cylinder_C::Radius' has a wrong offset!");
static_assert(offsetof(ABP_AoeDefineBase_Cylinder_C, Height) == 0x000910, "Member 'ABP_AoeDefineBase_Cylinder_C::Height' has a wrong offset!");

}

