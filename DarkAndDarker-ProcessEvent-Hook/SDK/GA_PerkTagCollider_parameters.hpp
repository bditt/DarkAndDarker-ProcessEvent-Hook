#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_PerkTagCollider

#include "Basic.hpp"

#include "DungeonCrawler_structs.hpp"


namespace SDK::Params
{

// Function GA_PerkTagCollider.GA_PerkTagCollider_C.GetColliderRadius
// 0x00B8 (0x00B8 - 0x0000)
struct GA_PerkTagCollider_C_GetColliderRadius final
{
public:
	double                                        Radius;                                            // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetColliderRadius_Radius;                 // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FDesignDataPerk                        CallFunc_GetDesignDataPerk_ReturnValue;            // 0x0010(0x0098)()
	bool                                          CallFunc_IsValidPrimaryAssetId_ReturnValue;        // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5586[0x7];                                     // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_FunctionResult_Radius_ImplicitCast;         // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_PerkTagCollider_C_GetColliderRadius) == 0x000008, "Wrong alignment on GA_PerkTagCollider_C_GetColliderRadius");
static_assert(sizeof(GA_PerkTagCollider_C_GetColliderRadius) == 0x0000B8, "Wrong size on GA_PerkTagCollider_C_GetColliderRadius");
static_assert(offsetof(GA_PerkTagCollider_C_GetColliderRadius, Radius) == 0x000000, "Member 'GA_PerkTagCollider_C_GetColliderRadius::Radius' has a wrong offset!");
static_assert(offsetof(GA_PerkTagCollider_C_GetColliderRadius, CallFunc_GetColliderRadius_Radius) == 0x000008, "Member 'GA_PerkTagCollider_C_GetColliderRadius::CallFunc_GetColliderRadius_Radius' has a wrong offset!");
static_assert(offsetof(GA_PerkTagCollider_C_GetColliderRadius, CallFunc_GetDesignDataPerk_ReturnValue) == 0x000010, "Member 'GA_PerkTagCollider_C_GetColliderRadius::CallFunc_GetDesignDataPerk_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_PerkTagCollider_C_GetColliderRadius, CallFunc_IsValidPrimaryAssetId_ReturnValue) == 0x0000A8, "Member 'GA_PerkTagCollider_C_GetColliderRadius::CallFunc_IsValidPrimaryAssetId_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_PerkTagCollider_C_GetColliderRadius, K2Node_FunctionResult_Radius_ImplicitCast) == 0x0000B0, "Member 'GA_PerkTagCollider_C_GetColliderRadius::K2Node_FunctionResult_Radius_ImplicitCast' has a wrong offset!");

}

