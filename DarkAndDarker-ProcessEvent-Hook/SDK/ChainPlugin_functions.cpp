#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ChainPlugin

#include "Basic.hpp"

#include "ChainPlugin_classes.hpp"
#include "ChainPlugin_parameters.hpp"


namespace SDK
{

// Function ChainPlugin.ChainComponent.ApplyForce
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                          InPosition                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InRadius                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          InForce                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<int32>                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<int32> UChainComponent::ApplyForce(const struct FVector& InPosition, float InRadius, const struct FVector& InForce)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ChainComponent", "ApplyForce");

	Params::ChainComponent_ApplyForce Parms{};

	Parms.InPosition = std::move(InPosition);
	Parms.InRadius = InRadius;
	Parms.InForce = std::move(InForce);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ChainPlugin.ChainComponent.AttachEndToActor
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FComponentReference              ComponentReference                                     (Parm, NativeAccessSpecifierPublic)
// class FName                             Socket                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UChainComponent::AttachEndToActor(const struct FComponentReference& ComponentReference, class FName Socket)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ChainComponent", "AttachEndToActor");

	Params::ChainComponent_AttachEndToActor Parms{};

	Parms.ComponentReference = std::move(ComponentReference);
	Parms.Socket = Socket;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ChainPlugin.ChainComponent.AttachStartToActor
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FComponentReference              ComponentReference                                     (Parm, NativeAccessSpecifierPublic)
// class FName                             Socket                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UChainComponent::AttachStartToActor(const struct FComponentReference& ComponentReference, class FName Socket)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ChainComponent", "AttachStartToActor");

	Params::ChainComponent_AttachStartToActor Parms{};

	Parms.ComponentReference = std::move(ComponentReference);
	Parms.Socket = Socket;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ChainPlugin.ChainComponent.getChainPoint
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// int32                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector UChainComponent::GetChainPoint(int32 Param_Index)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ChainComponent", "getChainPoint");

	Params::ChainComponent_GetChainPoint Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ChainPlugin.ChainComponent.GetChainPoints
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<struct FChainPoint>              ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<struct FChainPoint> UChainComponent::GetChainPoints()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ChainComponent", "GetChainPoints");

	Params::ChainComponent_GetChainPoints Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}

}

