#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ABP_GiantCentipede

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function ABP_GiantCentipede.ABP_GiantCentipede_C.AnimGraph
// 0x0010 (0x0010 - 0x0000)
struct ABP_GiantCentipede_C_AnimGraph final
{
public:
	struct FPoseLink                              Param_AnimGraph;                                   // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(ABP_GiantCentipede_C_AnimGraph) == 0x000008, "Wrong alignment on ABP_GiantCentipede_C_AnimGraph");
static_assert(sizeof(ABP_GiantCentipede_C_AnimGraph) == 0x000010, "Wrong size on ABP_GiantCentipede_C_AnimGraph");
static_assert(offsetof(ABP_GiantCentipede_C_AnimGraph, Param_AnimGraph) == 0x000000, "Member 'ABP_GiantCentipede_C_AnimGraph::Param_AnimGraph' has a wrong offset!");

// Function ABP_GiantCentipede.ABP_GiantCentipede_C.BlueprintThreadSafeUpdateAnimation
// 0x0028 (0x0028 - 0x0000)
struct ABP_GiantCentipede_C_BlueprintThreadSafeUpdateAnimation final
{
public:
	float                                         DeltaTime;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_452B[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_452C[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_A_ImplicitCast;       // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast;      // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_GiantCentipede_C_BlueprintThreadSafeUpdateAnimation) == 0x000008, "Wrong alignment on ABP_GiantCentipede_C_BlueprintThreadSafeUpdateAnimation");
static_assert(sizeof(ABP_GiantCentipede_C_BlueprintThreadSafeUpdateAnimation) == 0x000028, "Wrong size on ABP_GiantCentipede_C_BlueprintThreadSafeUpdateAnimation");
static_assert(offsetof(ABP_GiantCentipede_C_BlueprintThreadSafeUpdateAnimation, DeltaTime) == 0x000000, "Member 'ABP_GiantCentipede_C_BlueprintThreadSafeUpdateAnimation::DeltaTime' has a wrong offset!");
static_assert(offsetof(ABP_GiantCentipede_C_BlueprintThreadSafeUpdateAnimation, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000008, "Member 'ABP_GiantCentipede_C_BlueprintThreadSafeUpdateAnimation::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_GiantCentipede_C_BlueprintThreadSafeUpdateAnimation, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000010, "Member 'ABP_GiantCentipede_C_BlueprintThreadSafeUpdateAnimation::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_GiantCentipede_C_BlueprintThreadSafeUpdateAnimation, CallFunc_Divide_DoubleDouble_A_ImplicitCast) == 0x000018, "Member 'ABP_GiantCentipede_C_BlueprintThreadSafeUpdateAnimation::CallFunc_Divide_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ABP_GiantCentipede_C_BlueprintThreadSafeUpdateAnimation, CallFunc_Greater_DoubleDouble_A_ImplicitCast) == 0x000020, "Member 'ABP_GiantCentipede_C_BlueprintThreadSafeUpdateAnimation::CallFunc_Greater_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function ABP_GiantCentipede.ABP_GiantCentipede_C.BlueprintUpdateAnimation
// 0x0004 (0x0004 - 0x0000)
struct ABP_GiantCentipede_C_BlueprintUpdateAnimation final
{
public:
	float                                         DeltaTimeX;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_GiantCentipede_C_BlueprintUpdateAnimation) == 0x000004, "Wrong alignment on ABP_GiantCentipede_C_BlueprintUpdateAnimation");
static_assert(sizeof(ABP_GiantCentipede_C_BlueprintUpdateAnimation) == 0x000004, "Wrong size on ABP_GiantCentipede_C_BlueprintUpdateAnimation");
static_assert(offsetof(ABP_GiantCentipede_C_BlueprintUpdateAnimation, DeltaTimeX) == 0x000000, "Member 'ABP_GiantCentipede_C_BlueprintUpdateAnimation::DeltaTimeX' has a wrong offset!");

// Function ABP_GiantCentipede.ABP_GiantCentipede_C.ExecuteUbergraph_ABP_GiantCentipede
// 0x0090 (0x0090 - 0x0000)
struct ABP_GiantCentipede_C_ExecuteUbergraph_ABP_GiantCentipede final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaTimeX;                           // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_TryGetPawnOwner_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_DoubleDouble_ReturnValue;        // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_452D[0x6];                                     // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetVelocity_ReturnValue;                  // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_GiantCentipede_C*                   K2Node_DynamicCast_AsBP_Giant_Centipede;           // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_452E[0x7];                                     // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_VSizeXY_ReturnValue;                      // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x0048(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_CalculateDirection_ReturnValue;           // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_452F[0x4];                                     // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_TryGetPawnOwner_ReturnValue_1;            // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ADCMonsterBase*                         K2Node_DynamicCast_AsDCMonster_Base;               // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4530[0x7];                                     // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_NotEqual_DoubleDouble_A_ImplicitCast;     // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_Direction_ImplicitCast;         // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_GiantCentipede_C_ExecuteUbergraph_ABP_GiantCentipede) == 0x000008, "Wrong alignment on ABP_GiantCentipede_C_ExecuteUbergraph_ABP_GiantCentipede");
static_assert(sizeof(ABP_GiantCentipede_C_ExecuteUbergraph_ABP_GiantCentipede) == 0x000090, "Wrong size on ABP_GiantCentipede_C_ExecuteUbergraph_ABP_GiantCentipede");
static_assert(offsetof(ABP_GiantCentipede_C_ExecuteUbergraph_ABP_GiantCentipede, EntryPoint) == 0x000000, "Member 'ABP_GiantCentipede_C_ExecuteUbergraph_ABP_GiantCentipede::EntryPoint' has a wrong offset!");
static_assert(offsetof(ABP_GiantCentipede_C_ExecuteUbergraph_ABP_GiantCentipede, K2Node_Event_DeltaTimeX) == 0x000004, "Member 'ABP_GiantCentipede_C_ExecuteUbergraph_ABP_GiantCentipede::K2Node_Event_DeltaTimeX' has a wrong offset!");
static_assert(offsetof(ABP_GiantCentipede_C_ExecuteUbergraph_ABP_GiantCentipede, CallFunc_TryGetPawnOwner_ReturnValue) == 0x000008, "Member 'ABP_GiantCentipede_C_ExecuteUbergraph_ABP_GiantCentipede::CallFunc_TryGetPawnOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_GiantCentipede_C_ExecuteUbergraph_ABP_GiantCentipede, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'ABP_GiantCentipede_C_ExecuteUbergraph_ABP_GiantCentipede::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_GiantCentipede_C_ExecuteUbergraph_ABP_GiantCentipede, CallFunc_NotEqual_DoubleDouble_ReturnValue) == 0x000011, "Member 'ABP_GiantCentipede_C_ExecuteUbergraph_ABP_GiantCentipede::CallFunc_NotEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_GiantCentipede_C_ExecuteUbergraph_ABP_GiantCentipede, CallFunc_GetVelocity_ReturnValue) == 0x000018, "Member 'ABP_GiantCentipede_C_ExecuteUbergraph_ABP_GiantCentipede::CallFunc_GetVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_GiantCentipede_C_ExecuteUbergraph_ABP_GiantCentipede, K2Node_DynamicCast_AsBP_Giant_Centipede) == 0x000030, "Member 'ABP_GiantCentipede_C_ExecuteUbergraph_ABP_GiantCentipede::K2Node_DynamicCast_AsBP_Giant_Centipede' has a wrong offset!");
static_assert(offsetof(ABP_GiantCentipede_C_ExecuteUbergraph_ABP_GiantCentipede, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'ABP_GiantCentipede_C_ExecuteUbergraph_ABP_GiantCentipede::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ABP_GiantCentipede_C_ExecuteUbergraph_ABP_GiantCentipede, CallFunc_VSizeXY_ReturnValue) == 0x000040, "Member 'ABP_GiantCentipede_C_ExecuteUbergraph_ABP_GiantCentipede::CallFunc_VSizeXY_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_GiantCentipede_C_ExecuteUbergraph_ABP_GiantCentipede, CallFunc_K2_GetActorRotation_ReturnValue) == 0x000048, "Member 'ABP_GiantCentipede_C_ExecuteUbergraph_ABP_GiantCentipede::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_GiantCentipede_C_ExecuteUbergraph_ABP_GiantCentipede, CallFunc_CalculateDirection_ReturnValue) == 0x000060, "Member 'ABP_GiantCentipede_C_ExecuteUbergraph_ABP_GiantCentipede::CallFunc_CalculateDirection_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_GiantCentipede_C_ExecuteUbergraph_ABP_GiantCentipede, CallFunc_TryGetPawnOwner_ReturnValue_1) == 0x000068, "Member 'ABP_GiantCentipede_C_ExecuteUbergraph_ABP_GiantCentipede::CallFunc_TryGetPawnOwner_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_GiantCentipede_C_ExecuteUbergraph_ABP_GiantCentipede, K2Node_DynamicCast_AsDCMonster_Base) == 0x000070, "Member 'ABP_GiantCentipede_C_ExecuteUbergraph_ABP_GiantCentipede::K2Node_DynamicCast_AsDCMonster_Base' has a wrong offset!");
static_assert(offsetof(ABP_GiantCentipede_C_ExecuteUbergraph_ABP_GiantCentipede, K2Node_DynamicCast_bSuccess_1) == 0x000078, "Member 'ABP_GiantCentipede_C_ExecuteUbergraph_ABP_GiantCentipede::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(ABP_GiantCentipede_C_ExecuteUbergraph_ABP_GiantCentipede, CallFunc_NotEqual_DoubleDouble_A_ImplicitCast) == 0x000080, "Member 'ABP_GiantCentipede_C_ExecuteUbergraph_ABP_GiantCentipede::CallFunc_NotEqual_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ABP_GiantCentipede_C_ExecuteUbergraph_ABP_GiantCentipede, K2Node_VariableSet_Direction_ImplicitCast) == 0x000088, "Member 'ABP_GiantCentipede_C_ExecuteUbergraph_ABP_GiantCentipede::K2Node_VariableSet_Direction_ImplicitCast' has a wrong offset!");

}

