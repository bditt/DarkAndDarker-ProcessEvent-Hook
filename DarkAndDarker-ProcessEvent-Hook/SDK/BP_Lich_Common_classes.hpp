#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Lich_Common

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "BP_DCMonsterBaseWithOptions_Boss_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Lich_Common.BP_Lich_Common_C
// 0x0090 (0x1490 - 0x1400)
class ABP_Lich_Common_C : public ABP_DCMonsterBaseWithOptions_Boss_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_Lich_Common_C;                   // 0x13F8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBP_DCHitBox_C*                         BP_DCHitBox1;                                      // 0x1400(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_DCHitBox_C*                         BP_DCHitBox9;                                      // 0x1408(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_DCHitBox_C*                         BP_DCHitBox8;                                      // 0x1410(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_DCHitBox_C*                         BP_DCHitBox7;                                      // 0x1418(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_DCHitBox_C*                         BP_DCHitBox6;                                      // 0x1420(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_DCHitBox_C*                         BP_DCHitBox5;                                      // 0x1428(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_DCHitBox_C*                         BP_DCHitBox4;                                      // 0x1430(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_DCHitBox_C*                         BP_DCHitBox3;                                      // 0x1438(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_DCHitBox_C*                         BP_DCHitBox2;                                      // 0x1440(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_DCHitBox_C*                         BP_DCHitBox;                                       // 0x1448(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        CurseSelector;                                     // 0x1450(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        HPRatio_Curse_Trigger_Cycle;                       // 0x1458(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Number_Of_Players;                                 // 0x1460(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Used_Frenzy;                                       // 0x1464(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_477E[0x3];                                     // 0x1465(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ADCAoeBase*                             DeathSwarm;                                        // 0x1468(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	double                                        Curse_Explosion_Radius;                            // 0x1470(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ABP_Lich_StrongAttack_C*>        Spawned_Homing_Missile;                            // 0x1478(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)

public:
	void BndEvt__BP_Lich_DCGameObjectLink_K2Node_ComponentBoundEvent_3_DCGameObjectLinkComponentUMsgGameLinkerRequest__DelegateSignature(const struct FObjectLinkRequestEvent& RecvEvent, class UObjectLinkMetaDataBlueprint* SendEventParam);
	void Combat_Activated();
	void Comeback_Activated();
	void Comeback_Event_End(bool Arrived_SpawnLocation);
	void ExecuteUbergraph_BP_Lich_Common(int32 EntryPoint);
	void GameplayTagUpdated(const struct FGameplayTag& InGameplayTag, int32 InCount);
	void OnBeforeDeath();
	void OnSetAI();
	void ReceiveBeginPlay();
	void Remove_Frenzy();
	void Reset_Variables();
	void Send_Signal_Summonee_To_Die();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Lich_Common_C">();
	}
	static class ABP_Lich_Common_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_Lich_Common_C>();
	}
};
static_assert(alignof(ABP_Lich_Common_C) == 0x000010, "Wrong alignment on ABP_Lich_Common_C");
static_assert(sizeof(ABP_Lich_Common_C) == 0x001490, "Wrong size on ABP_Lich_Common_C");
static_assert(offsetof(ABP_Lich_Common_C, UberGraphFrame_BP_Lich_Common_C) == 0x0013F8, "Member 'ABP_Lich_Common_C::UberGraphFrame_BP_Lich_Common_C' has a wrong offset!");
static_assert(offsetof(ABP_Lich_Common_C, BP_DCHitBox1) == 0x001400, "Member 'ABP_Lich_Common_C::BP_DCHitBox1' has a wrong offset!");
static_assert(offsetof(ABP_Lich_Common_C, BP_DCHitBox9) == 0x001408, "Member 'ABP_Lich_Common_C::BP_DCHitBox9' has a wrong offset!");
static_assert(offsetof(ABP_Lich_Common_C, BP_DCHitBox8) == 0x001410, "Member 'ABP_Lich_Common_C::BP_DCHitBox8' has a wrong offset!");
static_assert(offsetof(ABP_Lich_Common_C, BP_DCHitBox7) == 0x001418, "Member 'ABP_Lich_Common_C::BP_DCHitBox7' has a wrong offset!");
static_assert(offsetof(ABP_Lich_Common_C, BP_DCHitBox6) == 0x001420, "Member 'ABP_Lich_Common_C::BP_DCHitBox6' has a wrong offset!");
static_assert(offsetof(ABP_Lich_Common_C, BP_DCHitBox5) == 0x001428, "Member 'ABP_Lich_Common_C::BP_DCHitBox5' has a wrong offset!");
static_assert(offsetof(ABP_Lich_Common_C, BP_DCHitBox4) == 0x001430, "Member 'ABP_Lich_Common_C::BP_DCHitBox4' has a wrong offset!");
static_assert(offsetof(ABP_Lich_Common_C, BP_DCHitBox3) == 0x001438, "Member 'ABP_Lich_Common_C::BP_DCHitBox3' has a wrong offset!");
static_assert(offsetof(ABP_Lich_Common_C, BP_DCHitBox2) == 0x001440, "Member 'ABP_Lich_Common_C::BP_DCHitBox2' has a wrong offset!");
static_assert(offsetof(ABP_Lich_Common_C, BP_DCHitBox) == 0x001448, "Member 'ABP_Lich_Common_C::BP_DCHitBox' has a wrong offset!");
static_assert(offsetof(ABP_Lich_Common_C, CurseSelector) == 0x001450, "Member 'ABP_Lich_Common_C::CurseSelector' has a wrong offset!");
static_assert(offsetof(ABP_Lich_Common_C, HPRatio_Curse_Trigger_Cycle) == 0x001458, "Member 'ABP_Lich_Common_C::HPRatio_Curse_Trigger_Cycle' has a wrong offset!");
static_assert(offsetof(ABP_Lich_Common_C, Number_Of_Players) == 0x001460, "Member 'ABP_Lich_Common_C::Number_Of_Players' has a wrong offset!");
static_assert(offsetof(ABP_Lich_Common_C, Used_Frenzy) == 0x001464, "Member 'ABP_Lich_Common_C::Used_Frenzy' has a wrong offset!");
static_assert(offsetof(ABP_Lich_Common_C, DeathSwarm) == 0x001468, "Member 'ABP_Lich_Common_C::DeathSwarm' has a wrong offset!");
static_assert(offsetof(ABP_Lich_Common_C, Curse_Explosion_Radius) == 0x001470, "Member 'ABP_Lich_Common_C::Curse_Explosion_Radius' has a wrong offset!");
static_assert(offsetof(ABP_Lich_Common_C, Spawned_Homing_Missile) == 0x001478, "Member 'ABP_Lich_Common_C::Spawned_Homing_Missile' has a wrong offset!");

}

