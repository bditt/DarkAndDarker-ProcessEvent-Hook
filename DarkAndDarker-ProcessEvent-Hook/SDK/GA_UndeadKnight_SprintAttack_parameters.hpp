#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_UndeadKnight_SprintAttack

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "GameplayAbilities_structs.hpp"


namespace SDK::Params
{

// Function GA_UndeadKnight_SprintAttack.GA_UndeadKnight_SprintAttack_C.ExecuteUbergraph_GA_UndeadKnight_SprintAttack
// 0x0038 (0x0038 - 0x0000)
struct GA_UndeadKnight_SprintAttack_C_ExecuteUbergraph_GA_UndeadKnight_SprintAttack final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_181D[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FPrimaryAssetId>                K2Node_MakeArray_Array;                            // 0x0008(0x0010)(ConstParm, ReferenceParm)
	bool                                          K2Node_Event_bWasCancelled;                        // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_181E[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetAvatarActorFromActorInfo_ReturnValue;  // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<struct FActiveGameplayEffectHandle>    CallFunc_ApplyGameplayEffectByIds_ReturnValue;     // 0x0028(0x0010)(ReferenceParm)
};
static_assert(alignof(GA_UndeadKnight_SprintAttack_C_ExecuteUbergraph_GA_UndeadKnight_SprintAttack) == 0x000008, "Wrong alignment on GA_UndeadKnight_SprintAttack_C_ExecuteUbergraph_GA_UndeadKnight_SprintAttack");
static_assert(sizeof(GA_UndeadKnight_SprintAttack_C_ExecuteUbergraph_GA_UndeadKnight_SprintAttack) == 0x000038, "Wrong size on GA_UndeadKnight_SprintAttack_C_ExecuteUbergraph_GA_UndeadKnight_SprintAttack");
static_assert(offsetof(GA_UndeadKnight_SprintAttack_C_ExecuteUbergraph_GA_UndeadKnight_SprintAttack, EntryPoint) == 0x000000, "Member 'GA_UndeadKnight_SprintAttack_C_ExecuteUbergraph_GA_UndeadKnight_SprintAttack::EntryPoint' has a wrong offset!");
static_assert(offsetof(GA_UndeadKnight_SprintAttack_C_ExecuteUbergraph_GA_UndeadKnight_SprintAttack, K2Node_MakeArray_Array) == 0x000008, "Member 'GA_UndeadKnight_SprintAttack_C_ExecuteUbergraph_GA_UndeadKnight_SprintAttack::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(GA_UndeadKnight_SprintAttack_C_ExecuteUbergraph_GA_UndeadKnight_SprintAttack, K2Node_Event_bWasCancelled) == 0x000018, "Member 'GA_UndeadKnight_SprintAttack_C_ExecuteUbergraph_GA_UndeadKnight_SprintAttack::K2Node_Event_bWasCancelled' has a wrong offset!");
static_assert(offsetof(GA_UndeadKnight_SprintAttack_C_ExecuteUbergraph_GA_UndeadKnight_SprintAttack, CallFunc_GetAvatarActorFromActorInfo_ReturnValue) == 0x000020, "Member 'GA_UndeadKnight_SprintAttack_C_ExecuteUbergraph_GA_UndeadKnight_SprintAttack::CallFunc_GetAvatarActorFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_UndeadKnight_SprintAttack_C_ExecuteUbergraph_GA_UndeadKnight_SprintAttack, CallFunc_ApplyGameplayEffectByIds_ReturnValue) == 0x000028, "Member 'GA_UndeadKnight_SprintAttack_C_ExecuteUbergraph_GA_UndeadKnight_SprintAttack::CallFunc_ApplyGameplayEffectByIds_ReturnValue' has a wrong offset!");

// Function GA_UndeadKnight_SprintAttack.GA_UndeadKnight_SprintAttack_C.K2_OnEndAbility
// 0x0001 (0x0001 - 0x0000)
struct GA_UndeadKnight_SprintAttack_C_K2_OnEndAbility final
{
public:
	bool                                          bWasCancelled;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_UndeadKnight_SprintAttack_C_K2_OnEndAbility) == 0x000001, "Wrong alignment on GA_UndeadKnight_SprintAttack_C_K2_OnEndAbility");
static_assert(sizeof(GA_UndeadKnight_SprintAttack_C_K2_OnEndAbility) == 0x000001, "Wrong size on GA_UndeadKnight_SprintAttack_C_K2_OnEndAbility");
static_assert(offsetof(GA_UndeadKnight_SprintAttack_C_K2_OnEndAbility, bWasCancelled) == 0x000000, "Member 'GA_UndeadKnight_SprintAttack_C_K2_OnEndAbility::bWasCancelled' has a wrong offset!");

}

