#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ABP_Tletukl

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "AnimGraphRuntime_structs.hpp"
#include "ABP_Tletukl_structs.hpp"
#include "DungeonCrawler_classes.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass ABP_Tletukl.ABP_Tletukl_C
// 0x01A0 (0x06D0 - 0x0530)
class UABP_Tletukl_C final : public UDCMonsterAnimInstanceBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0530(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct ABP_Tletukl::FAnimBlueprintGeneratedMutableData __AnimBlueprintMutables;                           // 0x0538(0x0008)(HasGetValueTypeHash)
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_PropertyAccess;             // 0x0540(0x0008)()
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_Base;                       // 0x0548(0x0008)()
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x0550(0x0020)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer;                    // 0x0570(0x0070)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult;                         // 0x05E0(0x0020)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine;                        // 0x0600(0x00C8)()

public:
	void AnimGraph(struct FPoseLink* Param_AnimGraph);
	void ExecuteUbergraph_ABP_Tletukl(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ABP_Tletukl_C">();
	}
	static class UABP_Tletukl_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UABP_Tletukl_C>();
	}
};
static_assert(alignof(UABP_Tletukl_C) == 0x000010, "Wrong alignment on UABP_Tletukl_C");
static_assert(sizeof(UABP_Tletukl_C) == 0x0006D0, "Wrong size on UABP_Tletukl_C");
static_assert(offsetof(UABP_Tletukl_C, UberGraphFrame) == 0x000530, "Member 'UABP_Tletukl_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UABP_Tletukl_C, __AnimBlueprintMutables) == 0x000538, "Member 'UABP_Tletukl_C::__AnimBlueprintMutables' has a wrong offset!");
static_assert(offsetof(UABP_Tletukl_C, AnimBlueprintExtension_PropertyAccess) == 0x000540, "Member 'UABP_Tletukl_C::AnimBlueprintExtension_PropertyAccess' has a wrong offset!");
static_assert(offsetof(UABP_Tletukl_C, AnimBlueprintExtension_Base) == 0x000548, "Member 'UABP_Tletukl_C::AnimBlueprintExtension_Base' has a wrong offset!");
static_assert(offsetof(UABP_Tletukl_C, AnimGraphNode_Root) == 0x000550, "Member 'UABP_Tletukl_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UABP_Tletukl_C, AnimGraphNode_BlendSpacePlayer) == 0x000570, "Member 'UABP_Tletukl_C::AnimGraphNode_BlendSpacePlayer' has a wrong offset!");
static_assert(offsetof(UABP_Tletukl_C, AnimGraphNode_StateResult) == 0x0005E0, "Member 'UABP_Tletukl_C::AnimGraphNode_StateResult' has a wrong offset!");
static_assert(offsetof(UABP_Tletukl_C, AnimGraphNode_StateMachine) == 0x000600, "Member 'UABP_Tletukl_C::AnimGraphNode_StateMachine' has a wrong offset!");

}

