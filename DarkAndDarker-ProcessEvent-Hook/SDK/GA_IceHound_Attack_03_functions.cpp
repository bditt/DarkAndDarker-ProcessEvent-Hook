#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_IceHound_Attack_03

#include "Basic.hpp"

#include "GA_IceHound_Attack_03_classes.hpp"
#include "GA_IceHound_Attack_03_parameters.hpp"


namespace SDK
{

// Function GA_IceHound_Attack_03.GA_IceHound_Attack_03_C.ExecuteUbergraph_GA_IceHound_Attack_03
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UGA_IceHound_Attack_03_C::ExecuteUbergraph_GA_IceHound_Attack_03(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_IceHound_Attack_03_C", "ExecuteUbergraph_GA_IceHound_Attack_03");

	Params::GA_IceHound_Attack_03_C_ExecuteUbergraph_GA_IceHound_Attack_03 Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GA_IceHound_Attack_03.GA_IceHound_Attack_03_C.ServerTargetDataReceived
// (Event, Protected, BlueprintEvent)
// Parameters:
// struct FGameplayTag                     EventTag                                               (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// struct FGameplayTag                     InChannelTag                                           (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// struct FGameplayEventData               EventData                                              (BlueprintVisible, BlueprintReadOnly, Parm)

void UGA_IceHound_Attack_03_C::ServerTargetDataReceived(const struct FGameplayTag& EventTag, const struct FGameplayTag& InChannelTag, const struct FGameplayEventData& EventData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_IceHound_Attack_03_C", "ServerTargetDataReceived");

	Params::GA_IceHound_Attack_03_C_ServerTargetDataReceived Parms{};

	Parms.EventTag = std::move(EventTag);
	Parms.InChannelTag = std::move(InChannelTag);
	Parms.EventData = std::move(EventData);

	UObject::ProcessEvent(Func, &Parms);
}

}

