#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: FS_DC_SleepDisable_Generic

#include "Basic.hpp"

#include "Chaos_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "EFieldShapeType_structs.hpp"
#include "EFieldSleepType_structs.hpp"
#include "FieldSystemEngine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass FS_DC_SleepDisable_Generic.FS_DC_SleepDisable_Generic_C
// 0x01D0 (0x0470 - 0x02A0)
class AFS_DC_SleepDisable_Generic_C final : public AFieldSystemActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02A0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBoxComponent*                          PlaneVolumeBoxCol;                                 // 0x02A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UTextRenderComponent*                   TresholdTitleText;                                 // 0x02B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UTextRenderComponent*                   ActiveTitleText;                                   // 0x02B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UUniformScalar*                         UniformScalar;                                     // 0x02C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UTextRenderComponent*                   ThresholdValueText;                                // 0x02C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UTextRenderComponent*                   ActiveValueText;                                   // 0x02D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPlaneFalloff*                          PlaneFalloff_Magnitude;                            // 0x02D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class URadialFalloff*                         RadialFalloff_Magnitude;                           // 0x02E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UCullingField*                          CullingField_Plane;                                // 0x02E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class URadialFalloff*                         RadialFalloff;                                     // 0x02F0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UCullingField*                          CullingField_Box;                                  // 0x02F8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPlaneFalloff*                          PlaneFalloff;                                      // 0x0300(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class URadialVector*                          RadialVector;                                      // 0x0308(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UUniformInteger*                        UniformInteger;                                    // 0x0310(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxFalloff*                            BoxFalloff_Magnitude;                              // 0x0318(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UCullingField*                          CullingField_Sphere;                               // 0x0320(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UArrowComponent*                        Arrow;                                             // 0x0328(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   BoxVolume;                                         // 0x0330(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SphereVolume;                                      // 0x0338(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   PlaneVolume;                                       // 0x0340(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          BoxVolumeCol;                                      // 0x0348(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USphereComponent*                       SphereVolumeCol;                                   // 0x0350(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UTextRenderComponent*                   SleepTitleText;                                    // 0x0358(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UTextRenderComponent*                   Sleep_Text;                                        // 0x0360(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UCullingField*                          CullingField;                                      // 0x0368(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxFalloff*                            BoxFalloff;                                        // 0x0370(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	bool                                          Field_Active;                                      // 0x0378(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_4C35[0x7];                                     // 0x0379(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Threshold;                                         // 0x0380(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	EFieldShapeType                               Field_Falloff_Shape;                               // 0x0388(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFieldSleepType                               Field_Behavior;                                    // 0x0389(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Debug;                                             // 0x038A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFieldFalloffType                             FaloffType;                                        // 0x038B(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C36[0x4];                                     // 0x038C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              FalloffMinMax;                                     // 0x0390(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFieldPhysicsType                             PhysicsType;                                       // 0x03A0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C37[0x3];                                     // 0x03A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Deactivated;                                       // 0x03A4(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ShowDebugText;                                     // 0x03B4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ShowWireFrame;                                     // 0x03B5(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C38[0x2];                                     // 0x03B6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMeshComponent*                   FieldVolume;                                       // 0x03B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           DeactivatedText;                                   // 0x03C0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   SleepText;                                         // 0x03D0(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FText                                   DisableText;                                       // 0x03E8(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FText                                   KillText;                                          // 0x0400(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          ShowSolidShapes;                                   // 0x0418(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C39[0x3];                                     // 0x0419(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Sleep_Colour_Def;                                  // 0x041C(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           DisableColour;                                     // 0x042C(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           KillColour;                                        // 0x043C(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Sleep_Colour;                                      // 0x044C(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C3A[0x4];                                     // 0x045C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Text_Vertical_Offset;                              // 0x0460(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        TextScaleMult;                                     // 0x0468(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_FS_DC_SleepDisable_Generic(int32 EntryPoint);
	void Falloff_Field_Switch(double Magnitude, EFieldFalloffType Param_FaloffType, class UCullingField** Param_CullingField);
	void ReceiveBeginPlay();
	void ReceiveTick(float DeltaSeconds);
	void SetFalloffVisibility();
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"FS_DC_SleepDisable_Generic_C">();
	}
	static class AFS_DC_SleepDisable_Generic_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AFS_DC_SleepDisable_Generic_C>();
	}
};
static_assert(alignof(AFS_DC_SleepDisable_Generic_C) == 0x000008, "Wrong alignment on AFS_DC_SleepDisable_Generic_C");
static_assert(sizeof(AFS_DC_SleepDisable_Generic_C) == 0x000470, "Wrong size on AFS_DC_SleepDisable_Generic_C");
static_assert(offsetof(AFS_DC_SleepDisable_Generic_C, UberGraphFrame) == 0x0002A0, "Member 'AFS_DC_SleepDisable_Generic_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AFS_DC_SleepDisable_Generic_C, PlaneVolumeBoxCol) == 0x0002A8, "Member 'AFS_DC_SleepDisable_Generic_C::PlaneVolumeBoxCol' has a wrong offset!");
static_assert(offsetof(AFS_DC_SleepDisable_Generic_C, TresholdTitleText) == 0x0002B0, "Member 'AFS_DC_SleepDisable_Generic_C::TresholdTitleText' has a wrong offset!");
static_assert(offsetof(AFS_DC_SleepDisable_Generic_C, ActiveTitleText) == 0x0002B8, "Member 'AFS_DC_SleepDisable_Generic_C::ActiveTitleText' has a wrong offset!");
static_assert(offsetof(AFS_DC_SleepDisable_Generic_C, UniformScalar) == 0x0002C0, "Member 'AFS_DC_SleepDisable_Generic_C::UniformScalar' has a wrong offset!");
static_assert(offsetof(AFS_DC_SleepDisable_Generic_C, ThresholdValueText) == 0x0002C8, "Member 'AFS_DC_SleepDisable_Generic_C::ThresholdValueText' has a wrong offset!");
static_assert(offsetof(AFS_DC_SleepDisable_Generic_C, ActiveValueText) == 0x0002D0, "Member 'AFS_DC_SleepDisable_Generic_C::ActiveValueText' has a wrong offset!");
static_assert(offsetof(AFS_DC_SleepDisable_Generic_C, PlaneFalloff_Magnitude) == 0x0002D8, "Member 'AFS_DC_SleepDisable_Generic_C::PlaneFalloff_Magnitude' has a wrong offset!");
static_assert(offsetof(AFS_DC_SleepDisable_Generic_C, RadialFalloff_Magnitude) == 0x0002E0, "Member 'AFS_DC_SleepDisable_Generic_C::RadialFalloff_Magnitude' has a wrong offset!");
static_assert(offsetof(AFS_DC_SleepDisable_Generic_C, CullingField_Plane) == 0x0002E8, "Member 'AFS_DC_SleepDisable_Generic_C::CullingField_Plane' has a wrong offset!");
static_assert(offsetof(AFS_DC_SleepDisable_Generic_C, RadialFalloff) == 0x0002F0, "Member 'AFS_DC_SleepDisable_Generic_C::RadialFalloff' has a wrong offset!");
static_assert(offsetof(AFS_DC_SleepDisable_Generic_C, CullingField_Box) == 0x0002F8, "Member 'AFS_DC_SleepDisable_Generic_C::CullingField_Box' has a wrong offset!");
static_assert(offsetof(AFS_DC_SleepDisable_Generic_C, PlaneFalloff) == 0x000300, "Member 'AFS_DC_SleepDisable_Generic_C::PlaneFalloff' has a wrong offset!");
static_assert(offsetof(AFS_DC_SleepDisable_Generic_C, RadialVector) == 0x000308, "Member 'AFS_DC_SleepDisable_Generic_C::RadialVector' has a wrong offset!");
static_assert(offsetof(AFS_DC_SleepDisable_Generic_C, UniformInteger) == 0x000310, "Member 'AFS_DC_SleepDisable_Generic_C::UniformInteger' has a wrong offset!");
static_assert(offsetof(AFS_DC_SleepDisable_Generic_C, BoxFalloff_Magnitude) == 0x000318, "Member 'AFS_DC_SleepDisable_Generic_C::BoxFalloff_Magnitude' has a wrong offset!");
static_assert(offsetof(AFS_DC_SleepDisable_Generic_C, CullingField_Sphere) == 0x000320, "Member 'AFS_DC_SleepDisable_Generic_C::CullingField_Sphere' has a wrong offset!");
static_assert(offsetof(AFS_DC_SleepDisable_Generic_C, Arrow) == 0x000328, "Member 'AFS_DC_SleepDisable_Generic_C::Arrow' has a wrong offset!");
static_assert(offsetof(AFS_DC_SleepDisable_Generic_C, BoxVolume) == 0x000330, "Member 'AFS_DC_SleepDisable_Generic_C::BoxVolume' has a wrong offset!");
static_assert(offsetof(AFS_DC_SleepDisable_Generic_C, SphereVolume) == 0x000338, "Member 'AFS_DC_SleepDisable_Generic_C::SphereVolume' has a wrong offset!");
static_assert(offsetof(AFS_DC_SleepDisable_Generic_C, PlaneVolume) == 0x000340, "Member 'AFS_DC_SleepDisable_Generic_C::PlaneVolume' has a wrong offset!");
static_assert(offsetof(AFS_DC_SleepDisable_Generic_C, BoxVolumeCol) == 0x000348, "Member 'AFS_DC_SleepDisable_Generic_C::BoxVolumeCol' has a wrong offset!");
static_assert(offsetof(AFS_DC_SleepDisable_Generic_C, SphereVolumeCol) == 0x000350, "Member 'AFS_DC_SleepDisable_Generic_C::SphereVolumeCol' has a wrong offset!");
static_assert(offsetof(AFS_DC_SleepDisable_Generic_C, SleepTitleText) == 0x000358, "Member 'AFS_DC_SleepDisable_Generic_C::SleepTitleText' has a wrong offset!");
static_assert(offsetof(AFS_DC_SleepDisable_Generic_C, Sleep_Text) == 0x000360, "Member 'AFS_DC_SleepDisable_Generic_C::Sleep_Text' has a wrong offset!");
static_assert(offsetof(AFS_DC_SleepDisable_Generic_C, CullingField) == 0x000368, "Member 'AFS_DC_SleepDisable_Generic_C::CullingField' has a wrong offset!");
static_assert(offsetof(AFS_DC_SleepDisable_Generic_C, BoxFalloff) == 0x000370, "Member 'AFS_DC_SleepDisable_Generic_C::BoxFalloff' has a wrong offset!");
static_assert(offsetof(AFS_DC_SleepDisable_Generic_C, Field_Active) == 0x000378, "Member 'AFS_DC_SleepDisable_Generic_C::Field_Active' has a wrong offset!");
static_assert(offsetof(AFS_DC_SleepDisable_Generic_C, Threshold) == 0x000380, "Member 'AFS_DC_SleepDisable_Generic_C::Threshold' has a wrong offset!");
static_assert(offsetof(AFS_DC_SleepDisable_Generic_C, Field_Falloff_Shape) == 0x000388, "Member 'AFS_DC_SleepDisable_Generic_C::Field_Falloff_Shape' has a wrong offset!");
static_assert(offsetof(AFS_DC_SleepDisable_Generic_C, Field_Behavior) == 0x000389, "Member 'AFS_DC_SleepDisable_Generic_C::Field_Behavior' has a wrong offset!");
static_assert(offsetof(AFS_DC_SleepDisable_Generic_C, Debug) == 0x00038A, "Member 'AFS_DC_SleepDisable_Generic_C::Debug' has a wrong offset!");
static_assert(offsetof(AFS_DC_SleepDisable_Generic_C, FaloffType) == 0x00038B, "Member 'AFS_DC_SleepDisable_Generic_C::FaloffType' has a wrong offset!");
static_assert(offsetof(AFS_DC_SleepDisable_Generic_C, FalloffMinMax) == 0x000390, "Member 'AFS_DC_SleepDisable_Generic_C::FalloffMinMax' has a wrong offset!");
static_assert(offsetof(AFS_DC_SleepDisable_Generic_C, PhysicsType) == 0x0003A0, "Member 'AFS_DC_SleepDisable_Generic_C::PhysicsType' has a wrong offset!");
static_assert(offsetof(AFS_DC_SleepDisable_Generic_C, Deactivated) == 0x0003A4, "Member 'AFS_DC_SleepDisable_Generic_C::Deactivated' has a wrong offset!");
static_assert(offsetof(AFS_DC_SleepDisable_Generic_C, ShowDebugText) == 0x0003B4, "Member 'AFS_DC_SleepDisable_Generic_C::ShowDebugText' has a wrong offset!");
static_assert(offsetof(AFS_DC_SleepDisable_Generic_C, ShowWireFrame) == 0x0003B5, "Member 'AFS_DC_SleepDisable_Generic_C::ShowWireFrame' has a wrong offset!");
static_assert(offsetof(AFS_DC_SleepDisable_Generic_C, FieldVolume) == 0x0003B8, "Member 'AFS_DC_SleepDisable_Generic_C::FieldVolume' has a wrong offset!");
static_assert(offsetof(AFS_DC_SleepDisable_Generic_C, DeactivatedText) == 0x0003C0, "Member 'AFS_DC_SleepDisable_Generic_C::DeactivatedText' has a wrong offset!");
static_assert(offsetof(AFS_DC_SleepDisable_Generic_C, SleepText) == 0x0003D0, "Member 'AFS_DC_SleepDisable_Generic_C::SleepText' has a wrong offset!");
static_assert(offsetof(AFS_DC_SleepDisable_Generic_C, DisableText) == 0x0003E8, "Member 'AFS_DC_SleepDisable_Generic_C::DisableText' has a wrong offset!");
static_assert(offsetof(AFS_DC_SleepDisable_Generic_C, KillText) == 0x000400, "Member 'AFS_DC_SleepDisable_Generic_C::KillText' has a wrong offset!");
static_assert(offsetof(AFS_DC_SleepDisable_Generic_C, ShowSolidShapes) == 0x000418, "Member 'AFS_DC_SleepDisable_Generic_C::ShowSolidShapes' has a wrong offset!");
static_assert(offsetof(AFS_DC_SleepDisable_Generic_C, Sleep_Colour_Def) == 0x00041C, "Member 'AFS_DC_SleepDisable_Generic_C::Sleep_Colour_Def' has a wrong offset!");
static_assert(offsetof(AFS_DC_SleepDisable_Generic_C, DisableColour) == 0x00042C, "Member 'AFS_DC_SleepDisable_Generic_C::DisableColour' has a wrong offset!");
static_assert(offsetof(AFS_DC_SleepDisable_Generic_C, KillColour) == 0x00043C, "Member 'AFS_DC_SleepDisable_Generic_C::KillColour' has a wrong offset!");
static_assert(offsetof(AFS_DC_SleepDisable_Generic_C, Sleep_Colour) == 0x00044C, "Member 'AFS_DC_SleepDisable_Generic_C::Sleep_Colour' has a wrong offset!");
static_assert(offsetof(AFS_DC_SleepDisable_Generic_C, Text_Vertical_Offset) == 0x000460, "Member 'AFS_DC_SleepDisable_Generic_C::Text_Vertical_Offset' has a wrong offset!");
static_assert(offsetof(AFS_DC_SleepDisable_Generic_C, TextScaleMult) == 0x000468, "Member 'AFS_DC_SleepDisable_Generic_C::TextScaleMult' has a wrong offset!");

}

