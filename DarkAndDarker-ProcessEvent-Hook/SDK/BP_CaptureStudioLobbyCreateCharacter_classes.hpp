#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_CaptureStudioLobbyCreateCharacter

#include "Basic.hpp"

#include "DungeonCrawler_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_CaptureStudioLobbyCreateCharacter.BP_CaptureStudioLobbyCreateCharacter_C
// 0x0050 (0x0310 - 0x02C0)
class ABP_CaptureStudioLobbyCreateCharacter_C final : public ADCCaptureStudioActor
{
public:
	class UStaticMeshComponent*                   Cube;                                              // 0x02C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UDirectionalLightComponent*             DirectionalLight;                                  // 0x02C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPointLightComponent*                   PointLight;                                        // 0x02D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USpotLightComponent*                    SpotLight2;                                        // 0x02D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USpotLightComponent*                    SpotLight;                                         // 0x02E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPointLightComponent*                   PointLight1;                                       // 0x02E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USpotLightComponent*                    SpotLight1;                                        // 0x02F0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        Scene;                                             // 0x02F8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UArrowComponent*                        Arrow;                                             // 0x0300(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UCameraComponent*                       WatchCameraForDev;                                 // 0x0308(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_CaptureStudioLobbyCreateCharacter_C">();
	}
	static class ABP_CaptureStudioLobbyCreateCharacter_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_CaptureStudioLobbyCreateCharacter_C>();
	}
};
static_assert(alignof(ABP_CaptureStudioLobbyCreateCharacter_C) == 0x000008, "Wrong alignment on ABP_CaptureStudioLobbyCreateCharacter_C");
static_assert(sizeof(ABP_CaptureStudioLobbyCreateCharacter_C) == 0x000310, "Wrong size on ABP_CaptureStudioLobbyCreateCharacter_C");
static_assert(offsetof(ABP_CaptureStudioLobbyCreateCharacter_C, Cube) == 0x0002C0, "Member 'ABP_CaptureStudioLobbyCreateCharacter_C::Cube' has a wrong offset!");
static_assert(offsetof(ABP_CaptureStudioLobbyCreateCharacter_C, DirectionalLight) == 0x0002C8, "Member 'ABP_CaptureStudioLobbyCreateCharacter_C::DirectionalLight' has a wrong offset!");
static_assert(offsetof(ABP_CaptureStudioLobbyCreateCharacter_C, PointLight) == 0x0002D0, "Member 'ABP_CaptureStudioLobbyCreateCharacter_C::PointLight' has a wrong offset!");
static_assert(offsetof(ABP_CaptureStudioLobbyCreateCharacter_C, SpotLight2) == 0x0002D8, "Member 'ABP_CaptureStudioLobbyCreateCharacter_C::SpotLight2' has a wrong offset!");
static_assert(offsetof(ABP_CaptureStudioLobbyCreateCharacter_C, SpotLight) == 0x0002E0, "Member 'ABP_CaptureStudioLobbyCreateCharacter_C::SpotLight' has a wrong offset!");
static_assert(offsetof(ABP_CaptureStudioLobbyCreateCharacter_C, PointLight1) == 0x0002E8, "Member 'ABP_CaptureStudioLobbyCreateCharacter_C::PointLight1' has a wrong offset!");
static_assert(offsetof(ABP_CaptureStudioLobbyCreateCharacter_C, SpotLight1) == 0x0002F0, "Member 'ABP_CaptureStudioLobbyCreateCharacter_C::SpotLight1' has a wrong offset!");
static_assert(offsetof(ABP_CaptureStudioLobbyCreateCharacter_C, Scene) == 0x0002F8, "Member 'ABP_CaptureStudioLobbyCreateCharacter_C::Scene' has a wrong offset!");
static_assert(offsetof(ABP_CaptureStudioLobbyCreateCharacter_C, Arrow) == 0x000300, "Member 'ABP_CaptureStudioLobbyCreateCharacter_C::Arrow' has a wrong offset!");
static_assert(offsetof(ABP_CaptureStudioLobbyCreateCharacter_C, WatchCameraForDev) == 0x000308, "Member 'ABP_CaptureStudioLobbyCreateCharacter_C::WatchCameraForDev' has a wrong offset!");

}

