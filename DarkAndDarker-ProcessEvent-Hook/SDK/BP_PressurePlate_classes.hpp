#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_PressurePlate

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "BP_TriggerBase_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_PressurePlate.BP_PressurePlate_C
// 0x0018 (0x04F0 - 0x04D8)
class ABP_PressurePlate_C final : public ABP_TriggerBase_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_PressurePlate_C;                 // 0x04D8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBoxComponent*                          ActiveBox;                                         // 0x04E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	int32                                         Count;                                             // 0x04E8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void BndEvt__BP_FloorSpikeTrap_ActiveBox_K2Node_ComponentBoundEvent_4_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void BndEvt__BP_PressurePlates_ActiveBox_K2Node_ComponentBoundEvent_0_ComponentEndOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void ExecuteUbergraph_BP_PressurePlate(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_PressurePlate_C">();
	}
	static class ABP_PressurePlate_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_PressurePlate_C>();
	}
};
static_assert(alignof(ABP_PressurePlate_C) == 0x000008, "Wrong alignment on ABP_PressurePlate_C");
static_assert(sizeof(ABP_PressurePlate_C) == 0x0004F0, "Wrong size on ABP_PressurePlate_C");
static_assert(offsetof(ABP_PressurePlate_C, UberGraphFrame_BP_PressurePlate_C) == 0x0004D8, "Member 'ABP_PressurePlate_C::UberGraphFrame_BP_PressurePlate_C' has a wrong offset!");
static_assert(offsetof(ABP_PressurePlate_C, ActiveBox) == 0x0004E0, "Member 'ABP_PressurePlate_C::ActiveBox' has a wrong offset!");
static_assert(offsetof(ABP_PressurePlate_C, Count) == 0x0004E8, "Member 'ABP_PressurePlate_C::Count' has a wrong offset!");

}

