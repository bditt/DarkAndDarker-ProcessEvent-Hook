#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_BloodPactAbyssalFlame

#include "Basic.hpp"

#include "GameplayAbilities_structs.hpp"


namespace SDK::Params
{

// Function GA_BloodPactAbyssalFlame.GA_BloodPactAbyssalFlame_C.ExecuteUbergraph_GA_BloodPactAbyssalFlame
// 0x02E8 (0x02E8 - 0x0000)
struct GA_BloodPactAbyssalFlame_C_ExecuteUbergraph_GA_BloodPactAbyssalFlame final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_568F[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_CustomEvent_OverlapActor_1;                 // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetConstantFloat_ReturnValue;             // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5690[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_CustomEvent_OverlapActor;                   // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class AActor* OverlapActor)>   K2Node_CreateDelegate_OutputDelegate;              // 0x0020(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Temp_object_Variable;                              // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEventData                     Temp_struct_Variable;                              // 0x0038(0x00B0)(ConstParm)
	TArray<struct FActiveGameplayEffectHandle>    CallFunc_ApplyEffectContainer_ReturnValue;         // 0x00E8(0x0010)(ReferenceParm)
	class UAbilitySystemComponent*                CallFunc_GetAbilitySystemComponent_ReturnValue;    // 0x00F8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5691[0x3];                                     // 0x0101(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0104(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5692[0x4];                                     // 0x0114(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAbilityTask_WaitGameplayTagRemoved*    CallFunc_WaitGameplayTagRemove_ReturnValue;        // 0x0118(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5693[0x7];                                     // 0x0121(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetAvatarActorFromActorInfo_ReturnValue;  // 0x0128(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UDCAT_OverlapActorsInRadius*            CallFunc_OverlapActorsInRadius_ReturnValue;        // 0x0130(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEventData                     K2Node_MakeStruct_GameplayEventData;               // 0x0138(0x00B0)()
	TArray<struct FActiveGameplayEffectHandle>    CallFunc_ApplyEffectContainer_ReturnValue_1;       // 0x01E8(0x0010)(ReferenceParm)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x01F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5694[0x7];                                     // 0x01F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetAvatarActorFromActorInfo_ReturnValue_1; // 0x0200(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0208(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5695[0x7];                                     // 0x0209(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetAvatarActorFromActorInfo_ReturnValue_2; // 0x0210(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_1;    // 0x0218(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5696[0x3];                                     // 0x0219(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class AActor* OverlapActor)>   K2Node_CreateDelegate_OutputDelegate_2;            // 0x021C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5697[0x4];                                     // 0x022C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayEventData                     K2Node_Event_EventData;                            // 0x0230(0x00B0)(ConstParm)
	bool                                          K2Node_Event_bWasCancelled;                        // 0x02E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_BloodPactAbyssalFlame_C_ExecuteUbergraph_GA_BloodPactAbyssalFlame) == 0x000008, "Wrong alignment on GA_BloodPactAbyssalFlame_C_ExecuteUbergraph_GA_BloodPactAbyssalFlame");
static_assert(sizeof(GA_BloodPactAbyssalFlame_C_ExecuteUbergraph_GA_BloodPactAbyssalFlame) == 0x0002E8, "Wrong size on GA_BloodPactAbyssalFlame_C_ExecuteUbergraph_GA_BloodPactAbyssalFlame");
static_assert(offsetof(GA_BloodPactAbyssalFlame_C_ExecuteUbergraph_GA_BloodPactAbyssalFlame, EntryPoint) == 0x000000, "Member 'GA_BloodPactAbyssalFlame_C_ExecuteUbergraph_GA_BloodPactAbyssalFlame::EntryPoint' has a wrong offset!");
static_assert(offsetof(GA_BloodPactAbyssalFlame_C_ExecuteUbergraph_GA_BloodPactAbyssalFlame, K2Node_CustomEvent_OverlapActor_1) == 0x000008, "Member 'GA_BloodPactAbyssalFlame_C_ExecuteUbergraph_GA_BloodPactAbyssalFlame::K2Node_CustomEvent_OverlapActor_1' has a wrong offset!");
static_assert(offsetof(GA_BloodPactAbyssalFlame_C_ExecuteUbergraph_GA_BloodPactAbyssalFlame, CallFunc_GetConstantFloat_ReturnValue) == 0x000010, "Member 'GA_BloodPactAbyssalFlame_C_ExecuteUbergraph_GA_BloodPactAbyssalFlame::CallFunc_GetConstantFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_BloodPactAbyssalFlame_C_ExecuteUbergraph_GA_BloodPactAbyssalFlame, K2Node_CustomEvent_OverlapActor) == 0x000018, "Member 'GA_BloodPactAbyssalFlame_C_ExecuteUbergraph_GA_BloodPactAbyssalFlame::K2Node_CustomEvent_OverlapActor' has a wrong offset!");
static_assert(offsetof(GA_BloodPactAbyssalFlame_C_ExecuteUbergraph_GA_BloodPactAbyssalFlame, K2Node_CreateDelegate_OutputDelegate) == 0x000020, "Member 'GA_BloodPactAbyssalFlame_C_ExecuteUbergraph_GA_BloodPactAbyssalFlame::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(GA_BloodPactAbyssalFlame_C_ExecuteUbergraph_GA_BloodPactAbyssalFlame, Temp_object_Variable) == 0x000030, "Member 'GA_BloodPactAbyssalFlame_C_ExecuteUbergraph_GA_BloodPactAbyssalFlame::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(GA_BloodPactAbyssalFlame_C_ExecuteUbergraph_GA_BloodPactAbyssalFlame, Temp_struct_Variable) == 0x000038, "Member 'GA_BloodPactAbyssalFlame_C_ExecuteUbergraph_GA_BloodPactAbyssalFlame::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(GA_BloodPactAbyssalFlame_C_ExecuteUbergraph_GA_BloodPactAbyssalFlame, CallFunc_ApplyEffectContainer_ReturnValue) == 0x0000E8, "Member 'GA_BloodPactAbyssalFlame_C_ExecuteUbergraph_GA_BloodPactAbyssalFlame::CallFunc_ApplyEffectContainer_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_BloodPactAbyssalFlame_C_ExecuteUbergraph_GA_BloodPactAbyssalFlame, CallFunc_GetAbilitySystemComponent_ReturnValue) == 0x0000F8, "Member 'GA_BloodPactAbyssalFlame_C_ExecuteUbergraph_GA_BloodPactAbyssalFlame::CallFunc_GetAbilitySystemComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_BloodPactAbyssalFlame_C_ExecuteUbergraph_GA_BloodPactAbyssalFlame, CallFunc_IsValid_ReturnValue) == 0x000100, "Member 'GA_BloodPactAbyssalFlame_C_ExecuteUbergraph_GA_BloodPactAbyssalFlame::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_BloodPactAbyssalFlame_C_ExecuteUbergraph_GA_BloodPactAbyssalFlame, K2Node_CreateDelegate_OutputDelegate_1) == 0x000104, "Member 'GA_BloodPactAbyssalFlame_C_ExecuteUbergraph_GA_BloodPactAbyssalFlame::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(GA_BloodPactAbyssalFlame_C_ExecuteUbergraph_GA_BloodPactAbyssalFlame, CallFunc_WaitGameplayTagRemove_ReturnValue) == 0x000118, "Member 'GA_BloodPactAbyssalFlame_C_ExecuteUbergraph_GA_BloodPactAbyssalFlame::CallFunc_WaitGameplayTagRemove_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_BloodPactAbyssalFlame_C_ExecuteUbergraph_GA_BloodPactAbyssalFlame, CallFunc_IsValid_ReturnValue_1) == 0x000120, "Member 'GA_BloodPactAbyssalFlame_C_ExecuteUbergraph_GA_BloodPactAbyssalFlame::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_BloodPactAbyssalFlame_C_ExecuteUbergraph_GA_BloodPactAbyssalFlame, CallFunc_GetAvatarActorFromActorInfo_ReturnValue) == 0x000128, "Member 'GA_BloodPactAbyssalFlame_C_ExecuteUbergraph_GA_BloodPactAbyssalFlame::CallFunc_GetAvatarActorFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_BloodPactAbyssalFlame_C_ExecuteUbergraph_GA_BloodPactAbyssalFlame, CallFunc_OverlapActorsInRadius_ReturnValue) == 0x000130, "Member 'GA_BloodPactAbyssalFlame_C_ExecuteUbergraph_GA_BloodPactAbyssalFlame::CallFunc_OverlapActorsInRadius_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_BloodPactAbyssalFlame_C_ExecuteUbergraph_GA_BloodPactAbyssalFlame, K2Node_MakeStruct_GameplayEventData) == 0x000138, "Member 'GA_BloodPactAbyssalFlame_C_ExecuteUbergraph_GA_BloodPactAbyssalFlame::K2Node_MakeStruct_GameplayEventData' has a wrong offset!");
static_assert(offsetof(GA_BloodPactAbyssalFlame_C_ExecuteUbergraph_GA_BloodPactAbyssalFlame, CallFunc_ApplyEffectContainer_ReturnValue_1) == 0x0001E8, "Member 'GA_BloodPactAbyssalFlame_C_ExecuteUbergraph_GA_BloodPactAbyssalFlame::CallFunc_ApplyEffectContainer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_BloodPactAbyssalFlame_C_ExecuteUbergraph_GA_BloodPactAbyssalFlame, CallFunc_IsValid_ReturnValue_2) == 0x0001F8, "Member 'GA_BloodPactAbyssalFlame_C_ExecuteUbergraph_GA_BloodPactAbyssalFlame::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GA_BloodPactAbyssalFlame_C_ExecuteUbergraph_GA_BloodPactAbyssalFlame, CallFunc_GetAvatarActorFromActorInfo_ReturnValue_1) == 0x000200, "Member 'GA_BloodPactAbyssalFlame_C_ExecuteUbergraph_GA_BloodPactAbyssalFlame::CallFunc_GetAvatarActorFromActorInfo_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_BloodPactAbyssalFlame_C_ExecuteUbergraph_GA_BloodPactAbyssalFlame, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000208, "Member 'GA_BloodPactAbyssalFlame_C_ExecuteUbergraph_GA_BloodPactAbyssalFlame::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_BloodPactAbyssalFlame_C_ExecuteUbergraph_GA_BloodPactAbyssalFlame, CallFunc_GetAvatarActorFromActorInfo_ReturnValue_2) == 0x000210, "Member 'GA_BloodPactAbyssalFlame_C_ExecuteUbergraph_GA_BloodPactAbyssalFlame::CallFunc_GetAvatarActorFromActorInfo_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GA_BloodPactAbyssalFlame_C_ExecuteUbergraph_GA_BloodPactAbyssalFlame, CallFunc_EqualEqual_ObjectObject_ReturnValue_1) == 0x000218, "Member 'GA_BloodPactAbyssalFlame_C_ExecuteUbergraph_GA_BloodPactAbyssalFlame::CallFunc_EqualEqual_ObjectObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_BloodPactAbyssalFlame_C_ExecuteUbergraph_GA_BloodPactAbyssalFlame, K2Node_CreateDelegate_OutputDelegate_2) == 0x00021C, "Member 'GA_BloodPactAbyssalFlame_C_ExecuteUbergraph_GA_BloodPactAbyssalFlame::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(GA_BloodPactAbyssalFlame_C_ExecuteUbergraph_GA_BloodPactAbyssalFlame, K2Node_Event_EventData) == 0x000230, "Member 'GA_BloodPactAbyssalFlame_C_ExecuteUbergraph_GA_BloodPactAbyssalFlame::K2Node_Event_EventData' has a wrong offset!");
static_assert(offsetof(GA_BloodPactAbyssalFlame_C_ExecuteUbergraph_GA_BloodPactAbyssalFlame, K2Node_Event_bWasCancelled) == 0x0002E0, "Member 'GA_BloodPactAbyssalFlame_C_ExecuteUbergraph_GA_BloodPactAbyssalFlame::K2Node_Event_bWasCancelled' has a wrong offset!");

// Function GA_BloodPactAbyssalFlame.GA_BloodPactAbyssalFlame_C.K2_ActivateAbilityFromEvent
// 0x00B0 (0x00B0 - 0x0000)
struct GA_BloodPactAbyssalFlame_C_K2_ActivateAbilityFromEvent final
{
public:
	struct FGameplayEventData                     EventData;                                         // 0x0000(0x00B0)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(GA_BloodPactAbyssalFlame_C_K2_ActivateAbilityFromEvent) == 0x000008, "Wrong alignment on GA_BloodPactAbyssalFlame_C_K2_ActivateAbilityFromEvent");
static_assert(sizeof(GA_BloodPactAbyssalFlame_C_K2_ActivateAbilityFromEvent) == 0x0000B0, "Wrong size on GA_BloodPactAbyssalFlame_C_K2_ActivateAbilityFromEvent");
static_assert(offsetof(GA_BloodPactAbyssalFlame_C_K2_ActivateAbilityFromEvent, EventData) == 0x000000, "Member 'GA_BloodPactAbyssalFlame_C_K2_ActivateAbilityFromEvent::EventData' has a wrong offset!");

// Function GA_BloodPactAbyssalFlame.GA_BloodPactAbyssalFlame_C.K2_OnEndAbility
// 0x0001 (0x0001 - 0x0000)
struct GA_BloodPactAbyssalFlame_C_K2_OnEndAbility final
{
public:
	bool                                          bWasCancelled;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_BloodPactAbyssalFlame_C_K2_OnEndAbility) == 0x000001, "Wrong alignment on GA_BloodPactAbyssalFlame_C_K2_OnEndAbility");
static_assert(sizeof(GA_BloodPactAbyssalFlame_C_K2_OnEndAbility) == 0x000001, "Wrong size on GA_BloodPactAbyssalFlame_C_K2_OnEndAbility");
static_assert(offsetof(GA_BloodPactAbyssalFlame_C_K2_OnEndAbility, bWasCancelled) == 0x000000, "Member 'GA_BloodPactAbyssalFlame_C_K2_OnEndAbility::bWasCancelled' has a wrong offset!");

// Function GA_BloodPactAbyssalFlame.GA_BloodPactAbyssalFlame_C.OnTargetActorOverlapBegin_0E749DF2481E32A339AFE1AD7B241FF5
// 0x0008 (0x0008 - 0x0000)
struct GA_BloodPactAbyssalFlame_C_OnTargetActorOverlapBegin_0E749DF2481E32A339AFE1AD7B241FF5 final
{
public:
	class AActor*                                 OverlapActor;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_BloodPactAbyssalFlame_C_OnTargetActorOverlapBegin_0E749DF2481E32A339AFE1AD7B241FF5) == 0x000008, "Wrong alignment on GA_BloodPactAbyssalFlame_C_OnTargetActorOverlapBegin_0E749DF2481E32A339AFE1AD7B241FF5");
static_assert(sizeof(GA_BloodPactAbyssalFlame_C_OnTargetActorOverlapBegin_0E749DF2481E32A339AFE1AD7B241FF5) == 0x000008, "Wrong size on GA_BloodPactAbyssalFlame_C_OnTargetActorOverlapBegin_0E749DF2481E32A339AFE1AD7B241FF5");
static_assert(offsetof(GA_BloodPactAbyssalFlame_C_OnTargetActorOverlapBegin_0E749DF2481E32A339AFE1AD7B241FF5, OverlapActor) == 0x000000, "Member 'GA_BloodPactAbyssalFlame_C_OnTargetActorOverlapBegin_0E749DF2481E32A339AFE1AD7B241FF5::OverlapActor' has a wrong offset!");

// Function GA_BloodPactAbyssalFlame.GA_BloodPactAbyssalFlame_C.OnTargetActorOverlapEnd_0E749DF2481E32A339AFE1AD7B241FF5
// 0x0008 (0x0008 - 0x0000)
struct GA_BloodPactAbyssalFlame_C_OnTargetActorOverlapEnd_0E749DF2481E32A339AFE1AD7B241FF5 final
{
public:
	class AActor*                                 OverlapActor;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_BloodPactAbyssalFlame_C_OnTargetActorOverlapEnd_0E749DF2481E32A339AFE1AD7B241FF5) == 0x000008, "Wrong alignment on GA_BloodPactAbyssalFlame_C_OnTargetActorOverlapEnd_0E749DF2481E32A339AFE1AD7B241FF5");
static_assert(sizeof(GA_BloodPactAbyssalFlame_C_OnTargetActorOverlapEnd_0E749DF2481E32A339AFE1AD7B241FF5) == 0x000008, "Wrong size on GA_BloodPactAbyssalFlame_C_OnTargetActorOverlapEnd_0E749DF2481E32A339AFE1AD7B241FF5");
static_assert(offsetof(GA_BloodPactAbyssalFlame_C_OnTargetActorOverlapEnd_0E749DF2481E32A339AFE1AD7B241FF5, OverlapActor) == 0x000000, "Member 'GA_BloodPactAbyssalFlame_C_OnTargetActorOverlapEnd_0E749DF2481E32A339AFE1AD7B241FF5::OverlapActor' has a wrong offset!");

}

