#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_HoardBase

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "BP_ItemDispenserBase_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_HoardBase.BP_HoardBase_C
// 0x0238 (0x0718 - 0x04E0)
class ABP_HoardBase_C : public ABP_ItemDispenserBase_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_HoardBase_C;                     // 0x04E0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UStaticMeshComponent*                   SM_Coin_Pile_01f3;                                 // 0x04E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_CoinMaterial_01e9;                              // 0x04F0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_CoinMaterial_01e8;                              // 0x04F8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Coin_Pile_01f2;                                 // 0x0500(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_CoinMaterial_01e7;                              // 0x0508(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_CoinMaterial_01e6;                              // 0x0510(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Coin_Pile_01f1;                                 // 0x0518(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Candelabra_01;                                  // 0x0520(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Coin_Pile_01b2;                                 // 0x0528(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Coin_Pile_01e2;                                 // 0x0530(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Coin_Pile_01e3;                                 // 0x0538(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Bowl_01a;                                       // 0x0540(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Gems_01b_Holder1;                               // 0x0548(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Statue_02a;                                     // 0x0550(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_ScrollClosed;                                   // 0x0558(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Statue_01a;                                     // 0x0560(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Bangle_01a;                                     // 0x0568(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Bangle_01j;                                     // 0x0570(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Gems_01b_Holder;                                // 0x0578(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Pearls_01c;                                     // 0x0580(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_MetalGoblet;                                    // 0x0588(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Urn_01a;                                        // 0x0590(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_CoinMaterial_01e5;                              // 0x0598(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_CoinMaterial_01e4;                              // 0x05A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Coin_Pile_01a;                                  // 0x05A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Bangle_01i;                                     // 0x05B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Chest_01g;                                      // 0x05B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_ChestCoins_01a;                                 // 0x05C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Gems_01a_Holder3;                               // 0x05C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Gems_01c_Holder;                                // 0x05D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Dagger_01a;                                     // 0x05D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Crown_01a;                                      // 0x05E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Gems_01d_Holder;                                // 0x05E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Coin_Pile_01h;                                  // 0x05F0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Coin_Pile_01e1;                                 // 0x05F8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Coin_Pile_01e;                                  // 0x0600(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_CandleHolderSmall;                              // 0x0608(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Gems_01a_Holder;                                // 0x0610(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Coin_Pile_01b;                                  // 0x0618(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_WaterPot_01a;                                   // 0x0620(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Coin_Pile_01f;                                  // 0x0628(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Chalice_02b;                                    // 0x0630(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Gems_01a_Holder2;                               // 0x0638(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Chalice_01a;                                    // 0x0640(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Dagger_01b;                                     // 0x0648(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        MeshGroup_04;                                      // 0x0650(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        MeshGroup_03;                                      // 0x0658(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Gems_01a_Holder1;                               // 0x0660(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_CandleHolder;                                   // 0x0668(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Chalice_02a;                                    // 0x0670(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Coin_Pile_01b1;                                 // 0x0678(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        MeshGroup_02;                                      // 0x0680(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        MeshGroup_01;                                      // 0x0688(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_CoinMaterial_01e;                               // 0x0690(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Gems_01c_Holder1;                               // 0x0698(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_CoinMaterial_01e3;                              // 0x06A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_CoinMaterial_01e2;                              // 0x06A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_CoinMaterial_01e1;                              // 0x06B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        MeshGroup_00;                                      // 0x06B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UDCGameObjectLinkComponent*             DCGameObjectLink;                                  // 0x06C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<class UStaticMeshComponent*>           StaticMeshArray;                                   // 0x06C8(0x0010)(Edit, BlueprintVisible, Transient, ContainsInstancedReference)
	TArray<class USceneComponent*>                MeshGroupArray;                                    // 0x06D8(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	TArray<class USceneComponent*>                OffMeshGroupArray;                                 // 0x06E8(0x0010)(Edit, BlueprintVisible, Net, RepNotify, ContainsInstancedReference)
	bool                                          bIsLimitless;                                      // 0x06F8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_53F8[0x3];                                     // 0x06F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         TotalInteractableCount;                            // 0x06FC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsMeshGroupCountLower;                            // 0x0700(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_53F9[0x3];                                     // 0x0701(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         OffMeshCountPerOnce;                               // 0x0704(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         InteractionCountPerMeshGroup;                      // 0x0708(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         IncreaseInteractionCount;                          // 0x070C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         RemainInteractionCountPerMeshGroup;                // 0x0710(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void CheckAndNotifyOffMeshGroupArray(TArray<class USceneComponent*>& NewParam);
	void ExecuteUbergraph_BP_HoardBase(int32 EntryPoint);
	void GameplayTagUpdated(const struct FGameplayTag& InGameplayTag, int32 InCount);
	void InitCulculationVariables();
	void InteractFound(class AActor* Interacter, class UPrimitiveComponent* InteractPart);
	void InteractLost(class AActor* Interacter);
	void InteractSucceed(class AActor* Interacter, const struct FGameplayTag& StateTag, const struct FGameplayTag& TriggerTag, const struct FHitResult& HitResult);
	void OnRep_OffMeshGroupArray();
	void ReceiveBeginPlay();
	void SetInvisibleMeshGroup(class USceneComponent* MeshGroup);
	void TryInvisibleMeshGroup();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_HoardBase_C">();
	}
	static class ABP_HoardBase_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_HoardBase_C>();
	}
};
static_assert(alignof(ABP_HoardBase_C) == 0x000008, "Wrong alignment on ABP_HoardBase_C");
static_assert(sizeof(ABP_HoardBase_C) == 0x000718, "Wrong size on ABP_HoardBase_C");
static_assert(offsetof(ABP_HoardBase_C, UberGraphFrame_BP_HoardBase_C) == 0x0004E0, "Member 'ABP_HoardBase_C::UberGraphFrame_BP_HoardBase_C' has a wrong offset!");
static_assert(offsetof(ABP_HoardBase_C, SM_Coin_Pile_01f3) == 0x0004E8, "Member 'ABP_HoardBase_C::SM_Coin_Pile_01f3' has a wrong offset!");
static_assert(offsetof(ABP_HoardBase_C, SM_CoinMaterial_01e9) == 0x0004F0, "Member 'ABP_HoardBase_C::SM_CoinMaterial_01e9' has a wrong offset!");
static_assert(offsetof(ABP_HoardBase_C, SM_CoinMaterial_01e8) == 0x0004F8, "Member 'ABP_HoardBase_C::SM_CoinMaterial_01e8' has a wrong offset!");
static_assert(offsetof(ABP_HoardBase_C, SM_Coin_Pile_01f2) == 0x000500, "Member 'ABP_HoardBase_C::SM_Coin_Pile_01f2' has a wrong offset!");
static_assert(offsetof(ABP_HoardBase_C, SM_CoinMaterial_01e7) == 0x000508, "Member 'ABP_HoardBase_C::SM_CoinMaterial_01e7' has a wrong offset!");
static_assert(offsetof(ABP_HoardBase_C, SM_CoinMaterial_01e6) == 0x000510, "Member 'ABP_HoardBase_C::SM_CoinMaterial_01e6' has a wrong offset!");
static_assert(offsetof(ABP_HoardBase_C, SM_Coin_Pile_01f1) == 0x000518, "Member 'ABP_HoardBase_C::SM_Coin_Pile_01f1' has a wrong offset!");
static_assert(offsetof(ABP_HoardBase_C, SM_Candelabra_01) == 0x000520, "Member 'ABP_HoardBase_C::SM_Candelabra_01' has a wrong offset!");
static_assert(offsetof(ABP_HoardBase_C, SM_Coin_Pile_01b2) == 0x000528, "Member 'ABP_HoardBase_C::SM_Coin_Pile_01b2' has a wrong offset!");
static_assert(offsetof(ABP_HoardBase_C, SM_Coin_Pile_01e2) == 0x000530, "Member 'ABP_HoardBase_C::SM_Coin_Pile_01e2' has a wrong offset!");
static_assert(offsetof(ABP_HoardBase_C, SM_Coin_Pile_01e3) == 0x000538, "Member 'ABP_HoardBase_C::SM_Coin_Pile_01e3' has a wrong offset!");
static_assert(offsetof(ABP_HoardBase_C, SM_Bowl_01a) == 0x000540, "Member 'ABP_HoardBase_C::SM_Bowl_01a' has a wrong offset!");
static_assert(offsetof(ABP_HoardBase_C, SM_Gems_01b_Holder1) == 0x000548, "Member 'ABP_HoardBase_C::SM_Gems_01b_Holder1' has a wrong offset!");
static_assert(offsetof(ABP_HoardBase_C, SM_Statue_02a) == 0x000550, "Member 'ABP_HoardBase_C::SM_Statue_02a' has a wrong offset!");
static_assert(offsetof(ABP_HoardBase_C, SM_ScrollClosed) == 0x000558, "Member 'ABP_HoardBase_C::SM_ScrollClosed' has a wrong offset!");
static_assert(offsetof(ABP_HoardBase_C, SM_Statue_01a) == 0x000560, "Member 'ABP_HoardBase_C::SM_Statue_01a' has a wrong offset!");
static_assert(offsetof(ABP_HoardBase_C, SM_Bangle_01a) == 0x000568, "Member 'ABP_HoardBase_C::SM_Bangle_01a' has a wrong offset!");
static_assert(offsetof(ABP_HoardBase_C, SM_Bangle_01j) == 0x000570, "Member 'ABP_HoardBase_C::SM_Bangle_01j' has a wrong offset!");
static_assert(offsetof(ABP_HoardBase_C, SM_Gems_01b_Holder) == 0x000578, "Member 'ABP_HoardBase_C::SM_Gems_01b_Holder' has a wrong offset!");
static_assert(offsetof(ABP_HoardBase_C, SM_Pearls_01c) == 0x000580, "Member 'ABP_HoardBase_C::SM_Pearls_01c' has a wrong offset!");
static_assert(offsetof(ABP_HoardBase_C, SM_MetalGoblet) == 0x000588, "Member 'ABP_HoardBase_C::SM_MetalGoblet' has a wrong offset!");
static_assert(offsetof(ABP_HoardBase_C, SM_Urn_01a) == 0x000590, "Member 'ABP_HoardBase_C::SM_Urn_01a' has a wrong offset!");
static_assert(offsetof(ABP_HoardBase_C, SM_CoinMaterial_01e5) == 0x000598, "Member 'ABP_HoardBase_C::SM_CoinMaterial_01e5' has a wrong offset!");
static_assert(offsetof(ABP_HoardBase_C, SM_CoinMaterial_01e4) == 0x0005A0, "Member 'ABP_HoardBase_C::SM_CoinMaterial_01e4' has a wrong offset!");
static_assert(offsetof(ABP_HoardBase_C, SM_Coin_Pile_01a) == 0x0005A8, "Member 'ABP_HoardBase_C::SM_Coin_Pile_01a' has a wrong offset!");
static_assert(offsetof(ABP_HoardBase_C, SM_Bangle_01i) == 0x0005B0, "Member 'ABP_HoardBase_C::SM_Bangle_01i' has a wrong offset!");
static_assert(offsetof(ABP_HoardBase_C, SM_Chest_01g) == 0x0005B8, "Member 'ABP_HoardBase_C::SM_Chest_01g' has a wrong offset!");
static_assert(offsetof(ABP_HoardBase_C, SM_ChestCoins_01a) == 0x0005C0, "Member 'ABP_HoardBase_C::SM_ChestCoins_01a' has a wrong offset!");
static_assert(offsetof(ABP_HoardBase_C, SM_Gems_01a_Holder3) == 0x0005C8, "Member 'ABP_HoardBase_C::SM_Gems_01a_Holder3' has a wrong offset!");
static_assert(offsetof(ABP_HoardBase_C, SM_Gems_01c_Holder) == 0x0005D0, "Member 'ABP_HoardBase_C::SM_Gems_01c_Holder' has a wrong offset!");
static_assert(offsetof(ABP_HoardBase_C, SM_Dagger_01a) == 0x0005D8, "Member 'ABP_HoardBase_C::SM_Dagger_01a' has a wrong offset!");
static_assert(offsetof(ABP_HoardBase_C, SM_Crown_01a) == 0x0005E0, "Member 'ABP_HoardBase_C::SM_Crown_01a' has a wrong offset!");
static_assert(offsetof(ABP_HoardBase_C, SM_Gems_01d_Holder) == 0x0005E8, "Member 'ABP_HoardBase_C::SM_Gems_01d_Holder' has a wrong offset!");
static_assert(offsetof(ABP_HoardBase_C, SM_Coin_Pile_01h) == 0x0005F0, "Member 'ABP_HoardBase_C::SM_Coin_Pile_01h' has a wrong offset!");
static_assert(offsetof(ABP_HoardBase_C, SM_Coin_Pile_01e1) == 0x0005F8, "Member 'ABP_HoardBase_C::SM_Coin_Pile_01e1' has a wrong offset!");
static_assert(offsetof(ABP_HoardBase_C, SM_Coin_Pile_01e) == 0x000600, "Member 'ABP_HoardBase_C::SM_Coin_Pile_01e' has a wrong offset!");
static_assert(offsetof(ABP_HoardBase_C, SM_CandleHolderSmall) == 0x000608, "Member 'ABP_HoardBase_C::SM_CandleHolderSmall' has a wrong offset!");
static_assert(offsetof(ABP_HoardBase_C, SM_Gems_01a_Holder) == 0x000610, "Member 'ABP_HoardBase_C::SM_Gems_01a_Holder' has a wrong offset!");
static_assert(offsetof(ABP_HoardBase_C, SM_Coin_Pile_01b) == 0x000618, "Member 'ABP_HoardBase_C::SM_Coin_Pile_01b' has a wrong offset!");
static_assert(offsetof(ABP_HoardBase_C, SM_WaterPot_01a) == 0x000620, "Member 'ABP_HoardBase_C::SM_WaterPot_01a' has a wrong offset!");
static_assert(offsetof(ABP_HoardBase_C, SM_Coin_Pile_01f) == 0x000628, "Member 'ABP_HoardBase_C::SM_Coin_Pile_01f' has a wrong offset!");
static_assert(offsetof(ABP_HoardBase_C, SM_Chalice_02b) == 0x000630, "Member 'ABP_HoardBase_C::SM_Chalice_02b' has a wrong offset!");
static_assert(offsetof(ABP_HoardBase_C, SM_Gems_01a_Holder2) == 0x000638, "Member 'ABP_HoardBase_C::SM_Gems_01a_Holder2' has a wrong offset!");
static_assert(offsetof(ABP_HoardBase_C, SM_Chalice_01a) == 0x000640, "Member 'ABP_HoardBase_C::SM_Chalice_01a' has a wrong offset!");
static_assert(offsetof(ABP_HoardBase_C, SM_Dagger_01b) == 0x000648, "Member 'ABP_HoardBase_C::SM_Dagger_01b' has a wrong offset!");
static_assert(offsetof(ABP_HoardBase_C, MeshGroup_04) == 0x000650, "Member 'ABP_HoardBase_C::MeshGroup_04' has a wrong offset!");
static_assert(offsetof(ABP_HoardBase_C, MeshGroup_03) == 0x000658, "Member 'ABP_HoardBase_C::MeshGroup_03' has a wrong offset!");
static_assert(offsetof(ABP_HoardBase_C, SM_Gems_01a_Holder1) == 0x000660, "Member 'ABP_HoardBase_C::SM_Gems_01a_Holder1' has a wrong offset!");
static_assert(offsetof(ABP_HoardBase_C, SM_CandleHolder) == 0x000668, "Member 'ABP_HoardBase_C::SM_CandleHolder' has a wrong offset!");
static_assert(offsetof(ABP_HoardBase_C, SM_Chalice_02a) == 0x000670, "Member 'ABP_HoardBase_C::SM_Chalice_02a' has a wrong offset!");
static_assert(offsetof(ABP_HoardBase_C, SM_Coin_Pile_01b1) == 0x000678, "Member 'ABP_HoardBase_C::SM_Coin_Pile_01b1' has a wrong offset!");
static_assert(offsetof(ABP_HoardBase_C, MeshGroup_02) == 0x000680, "Member 'ABP_HoardBase_C::MeshGroup_02' has a wrong offset!");
static_assert(offsetof(ABP_HoardBase_C, MeshGroup_01) == 0x000688, "Member 'ABP_HoardBase_C::MeshGroup_01' has a wrong offset!");
static_assert(offsetof(ABP_HoardBase_C, SM_CoinMaterial_01e) == 0x000690, "Member 'ABP_HoardBase_C::SM_CoinMaterial_01e' has a wrong offset!");
static_assert(offsetof(ABP_HoardBase_C, SM_Gems_01c_Holder1) == 0x000698, "Member 'ABP_HoardBase_C::SM_Gems_01c_Holder1' has a wrong offset!");
static_assert(offsetof(ABP_HoardBase_C, SM_CoinMaterial_01e3) == 0x0006A0, "Member 'ABP_HoardBase_C::SM_CoinMaterial_01e3' has a wrong offset!");
static_assert(offsetof(ABP_HoardBase_C, SM_CoinMaterial_01e2) == 0x0006A8, "Member 'ABP_HoardBase_C::SM_CoinMaterial_01e2' has a wrong offset!");
static_assert(offsetof(ABP_HoardBase_C, SM_CoinMaterial_01e1) == 0x0006B0, "Member 'ABP_HoardBase_C::SM_CoinMaterial_01e1' has a wrong offset!");
static_assert(offsetof(ABP_HoardBase_C, MeshGroup_00) == 0x0006B8, "Member 'ABP_HoardBase_C::MeshGroup_00' has a wrong offset!");
static_assert(offsetof(ABP_HoardBase_C, DCGameObjectLink) == 0x0006C0, "Member 'ABP_HoardBase_C::DCGameObjectLink' has a wrong offset!");
static_assert(offsetof(ABP_HoardBase_C, StaticMeshArray) == 0x0006C8, "Member 'ABP_HoardBase_C::StaticMeshArray' has a wrong offset!");
static_assert(offsetof(ABP_HoardBase_C, MeshGroupArray) == 0x0006D8, "Member 'ABP_HoardBase_C::MeshGroupArray' has a wrong offset!");
static_assert(offsetof(ABP_HoardBase_C, OffMeshGroupArray) == 0x0006E8, "Member 'ABP_HoardBase_C::OffMeshGroupArray' has a wrong offset!");
static_assert(offsetof(ABP_HoardBase_C, bIsLimitless) == 0x0006F8, "Member 'ABP_HoardBase_C::bIsLimitless' has a wrong offset!");
static_assert(offsetof(ABP_HoardBase_C, TotalInteractableCount) == 0x0006FC, "Member 'ABP_HoardBase_C::TotalInteractableCount' has a wrong offset!");
static_assert(offsetof(ABP_HoardBase_C, bIsMeshGroupCountLower) == 0x000700, "Member 'ABP_HoardBase_C::bIsMeshGroupCountLower' has a wrong offset!");
static_assert(offsetof(ABP_HoardBase_C, OffMeshCountPerOnce) == 0x000704, "Member 'ABP_HoardBase_C::OffMeshCountPerOnce' has a wrong offset!");
static_assert(offsetof(ABP_HoardBase_C, InteractionCountPerMeshGroup) == 0x000708, "Member 'ABP_HoardBase_C::InteractionCountPerMeshGroup' has a wrong offset!");
static_assert(offsetof(ABP_HoardBase_C, IncreaseInteractionCount) == 0x00070C, "Member 'ABP_HoardBase_C::IncreaseInteractionCount' has a wrong offset!");
static_assert(offsetof(ABP_HoardBase_C, RemainInteractionCountPerMeshGroup) == 0x000710, "Member 'ABP_HoardBase_C::RemainInteractionCountPerMeshGroup' has a wrong offset!");

}

