#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ABP_CaveTroll

#include "Basic.hpp"

#include "AnimGraphRuntime_structs.hpp"
#include "Engine_structs.hpp"
#include "ABP_CaveTroll_structs.hpp"
#include "DungeonCrawler_classes.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass ABP_CaveTroll.ABP_CaveTroll_C
// 0x11A0 (0x16D0 - 0x0530)
class UABP_CaveTroll_C final : public UDCMonsterAnimInstanceBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0530(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct ABP_CaveTroll::FAnimBlueprintGeneratedMutableData __AnimBlueprintMutables;                           // 0x0538(0x0008)(HasGetValueTypeHash)
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_PropertyAccess;             // 0x0540(0x0008)()
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_Base;                       // 0x0548(0x0008)()
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x0550(0x0020)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_6;                  // 0x0570(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_5;                  // 0x0598(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_4;                  // 0x05C0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_3;                  // 0x05E8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_2;                  // 0x0610(0x0028)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_3;             // 0x0638(0x0020)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_3;             // 0x0658(0x0020)()
	struct FAnimNode_CopyBone                     AnimGraphNode_CopyBone_1;                          // 0x0678(0x00F0)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_6;                     // 0x0768(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_4;                    // 0x0790(0x0048)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend_1;                  // 0x07D8(0x00F0)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_5;                     // 0x08C8(0x0028)()
	struct FAnimNode_ApplyAdditive                AnimGraphNode_ApplyAdditive_3;                     // 0x08F0(0x00C8)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_2;             // 0x09B8(0x0020)()
	struct FAnimNode_LegIK                        AnimGraphNode_LegIK_1;                             // 0x09D8(0x00F8)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_3;                    // 0x0AD0(0x0048)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_2;             // 0x0B18(0x0020)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_4;                     // 0x0B38(0x0028)()
	struct FAnimNode_ApplyAdditive                AnimGraphNode_ApplyAdditive_2;                     // 0x0B60(0x00C8)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_1;                   // 0x0C28(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_4;                       // 0x0C70(0x0020)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_1;             // 0x0C90(0x0020)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_1;             // 0x0CB0(0x0020)()
	struct FAnimNode_CopyBone                     AnimGraphNode_CopyBone;                            // 0x0CD0(0x00F0)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_2;                    // 0x0DC0(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_1;                    // 0x0E08(0x0048)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend;                    // 0x0E50(0x00F0)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_3;                     // 0x0F40(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_2;                     // 0x0F68(0x0028)()
	struct FAnimNode_ApplyAdditive                AnimGraphNode_ApplyAdditive_1;                     // 0x0F90(0x00C8)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace;               // 0x1058(0x0020)()
	struct FAnimNode_LegIK                        AnimGraphNode_LegIK;                               // 0x1078(0x00F8)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace;               // 0x1170(0x0020)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_1;                     // 0x1190(0x0028)()
	struct FAnimNode_ApplyAdditive                AnimGraphNode_ApplyAdditive;                       // 0x11B8(0x00C8)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool;                     // 0x1280(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_3;                       // 0x12C8(0x0020)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose;                       // 0x12E8(0x0028)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_2;                       // 0x1310(0x0020)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine_1;                      // 0x1330(0x00C8)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_1;                  // 0x13F8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult;                    // 0x1420(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x1448(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_1;                       // 0x1490(0x0020)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer;                    // 0x14B0(0x0070)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult;                         // 0x1520(0x0020)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine;                        // 0x1540(0x00C8)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose;                      // 0x1608(0x0080)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot;                                // 0x1688(0x0048)()

public:
	void AnimGraph(struct FPoseLink* Param_AnimGraph);
	void ExecuteUbergraph_ABP_CaveTroll(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ABP_CaveTroll_C">();
	}
	static class UABP_CaveTroll_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UABP_CaveTroll_C>();
	}
};
static_assert(alignof(UABP_CaveTroll_C) == 0x000010, "Wrong alignment on UABP_CaveTroll_C");
static_assert(sizeof(UABP_CaveTroll_C) == 0x0016D0, "Wrong size on UABP_CaveTroll_C");
static_assert(offsetof(UABP_CaveTroll_C, UberGraphFrame) == 0x000530, "Member 'UABP_CaveTroll_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UABP_CaveTroll_C, __AnimBlueprintMutables) == 0x000538, "Member 'UABP_CaveTroll_C::__AnimBlueprintMutables' has a wrong offset!");
static_assert(offsetof(UABP_CaveTroll_C, AnimBlueprintExtension_PropertyAccess) == 0x000540, "Member 'UABP_CaveTroll_C::AnimBlueprintExtension_PropertyAccess' has a wrong offset!");
static_assert(offsetof(UABP_CaveTroll_C, AnimBlueprintExtension_Base) == 0x000548, "Member 'UABP_CaveTroll_C::AnimBlueprintExtension_Base' has a wrong offset!");
static_assert(offsetof(UABP_CaveTroll_C, AnimGraphNode_Root) == 0x000550, "Member 'UABP_CaveTroll_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UABP_CaveTroll_C, AnimGraphNode_TransitionResult_6) == 0x000570, "Member 'UABP_CaveTroll_C::AnimGraphNode_TransitionResult_6' has a wrong offset!");
static_assert(offsetof(UABP_CaveTroll_C, AnimGraphNode_TransitionResult_5) == 0x000598, "Member 'UABP_CaveTroll_C::AnimGraphNode_TransitionResult_5' has a wrong offset!");
static_assert(offsetof(UABP_CaveTroll_C, AnimGraphNode_TransitionResult_4) == 0x0005C0, "Member 'UABP_CaveTroll_C::AnimGraphNode_TransitionResult_4' has a wrong offset!");
static_assert(offsetof(UABP_CaveTroll_C, AnimGraphNode_TransitionResult_3) == 0x0005E8, "Member 'UABP_CaveTroll_C::AnimGraphNode_TransitionResult_3' has a wrong offset!");
static_assert(offsetof(UABP_CaveTroll_C, AnimGraphNode_TransitionResult_2) == 0x000610, "Member 'UABP_CaveTroll_C::AnimGraphNode_TransitionResult_2' has a wrong offset!");
static_assert(offsetof(UABP_CaveTroll_C, AnimGraphNode_ComponentToLocalSpace_3) == 0x000638, "Member 'UABP_CaveTroll_C::AnimGraphNode_ComponentToLocalSpace_3' has a wrong offset!");
static_assert(offsetof(UABP_CaveTroll_C, AnimGraphNode_LocalToComponentSpace_3) == 0x000658, "Member 'UABP_CaveTroll_C::AnimGraphNode_LocalToComponentSpace_3' has a wrong offset!");
static_assert(offsetof(UABP_CaveTroll_C, AnimGraphNode_CopyBone_1) == 0x000678, "Member 'UABP_CaveTroll_C::AnimGraphNode_CopyBone_1' has a wrong offset!");
static_assert(offsetof(UABP_CaveTroll_C, AnimGraphNode_UseCachedPose_6) == 0x000768, "Member 'UABP_CaveTroll_C::AnimGraphNode_UseCachedPose_6' has a wrong offset!");
static_assert(offsetof(UABP_CaveTroll_C, AnimGraphNode_SequencePlayer_4) == 0x000790, "Member 'UABP_CaveTroll_C::AnimGraphNode_SequencePlayer_4' has a wrong offset!");
static_assert(offsetof(UABP_CaveTroll_C, AnimGraphNode_LayeredBoneBlend_1) == 0x0007D8, "Member 'UABP_CaveTroll_C::AnimGraphNode_LayeredBoneBlend_1' has a wrong offset!");
static_assert(offsetof(UABP_CaveTroll_C, AnimGraphNode_UseCachedPose_5) == 0x0008C8, "Member 'UABP_CaveTroll_C::AnimGraphNode_UseCachedPose_5' has a wrong offset!");
static_assert(offsetof(UABP_CaveTroll_C, AnimGraphNode_ApplyAdditive_3) == 0x0008F0, "Member 'UABP_CaveTroll_C::AnimGraphNode_ApplyAdditive_3' has a wrong offset!");
static_assert(offsetof(UABP_CaveTroll_C, AnimGraphNode_LocalToComponentSpace_2) == 0x0009B8, "Member 'UABP_CaveTroll_C::AnimGraphNode_LocalToComponentSpace_2' has a wrong offset!");
static_assert(offsetof(UABP_CaveTroll_C, AnimGraphNode_LegIK_1) == 0x0009D8, "Member 'UABP_CaveTroll_C::AnimGraphNode_LegIK_1' has a wrong offset!");
static_assert(offsetof(UABP_CaveTroll_C, AnimGraphNode_SequencePlayer_3) == 0x000AD0, "Member 'UABP_CaveTroll_C::AnimGraphNode_SequencePlayer_3' has a wrong offset!");
static_assert(offsetof(UABP_CaveTroll_C, AnimGraphNode_ComponentToLocalSpace_2) == 0x000B18, "Member 'UABP_CaveTroll_C::AnimGraphNode_ComponentToLocalSpace_2' has a wrong offset!");
static_assert(offsetof(UABP_CaveTroll_C, AnimGraphNode_UseCachedPose_4) == 0x000B38, "Member 'UABP_CaveTroll_C::AnimGraphNode_UseCachedPose_4' has a wrong offset!");
static_assert(offsetof(UABP_CaveTroll_C, AnimGraphNode_ApplyAdditive_2) == 0x000B60, "Member 'UABP_CaveTroll_C::AnimGraphNode_ApplyAdditive_2' has a wrong offset!");
static_assert(offsetof(UABP_CaveTroll_C, AnimGraphNode_BlendListByBool_1) == 0x000C28, "Member 'UABP_CaveTroll_C::AnimGraphNode_BlendListByBool_1' has a wrong offset!");
static_assert(offsetof(UABP_CaveTroll_C, AnimGraphNode_StateResult_4) == 0x000C70, "Member 'UABP_CaveTroll_C::AnimGraphNode_StateResult_4' has a wrong offset!");
static_assert(offsetof(UABP_CaveTroll_C, AnimGraphNode_ComponentToLocalSpace_1) == 0x000C90, "Member 'UABP_CaveTroll_C::AnimGraphNode_ComponentToLocalSpace_1' has a wrong offset!");
static_assert(offsetof(UABP_CaveTroll_C, AnimGraphNode_LocalToComponentSpace_1) == 0x000CB0, "Member 'UABP_CaveTroll_C::AnimGraphNode_LocalToComponentSpace_1' has a wrong offset!");
static_assert(offsetof(UABP_CaveTroll_C, AnimGraphNode_CopyBone) == 0x000CD0, "Member 'UABP_CaveTroll_C::AnimGraphNode_CopyBone' has a wrong offset!");
static_assert(offsetof(UABP_CaveTroll_C, AnimGraphNode_SequencePlayer_2) == 0x000DC0, "Member 'UABP_CaveTroll_C::AnimGraphNode_SequencePlayer_2' has a wrong offset!");
static_assert(offsetof(UABP_CaveTroll_C, AnimGraphNode_SequencePlayer_1) == 0x000E08, "Member 'UABP_CaveTroll_C::AnimGraphNode_SequencePlayer_1' has a wrong offset!");
static_assert(offsetof(UABP_CaveTroll_C, AnimGraphNode_LayeredBoneBlend) == 0x000E50, "Member 'UABP_CaveTroll_C::AnimGraphNode_LayeredBoneBlend' has a wrong offset!");
static_assert(offsetof(UABP_CaveTroll_C, AnimGraphNode_UseCachedPose_3) == 0x000F40, "Member 'UABP_CaveTroll_C::AnimGraphNode_UseCachedPose_3' has a wrong offset!");
static_assert(offsetof(UABP_CaveTroll_C, AnimGraphNode_UseCachedPose_2) == 0x000F68, "Member 'UABP_CaveTroll_C::AnimGraphNode_UseCachedPose_2' has a wrong offset!");
static_assert(offsetof(UABP_CaveTroll_C, AnimGraphNode_ApplyAdditive_1) == 0x000F90, "Member 'UABP_CaveTroll_C::AnimGraphNode_ApplyAdditive_1' has a wrong offset!");
static_assert(offsetof(UABP_CaveTroll_C, AnimGraphNode_LocalToComponentSpace) == 0x001058, "Member 'UABP_CaveTroll_C::AnimGraphNode_LocalToComponentSpace' has a wrong offset!");
static_assert(offsetof(UABP_CaveTroll_C, AnimGraphNode_LegIK) == 0x001078, "Member 'UABP_CaveTroll_C::AnimGraphNode_LegIK' has a wrong offset!");
static_assert(offsetof(UABP_CaveTroll_C, AnimGraphNode_ComponentToLocalSpace) == 0x001170, "Member 'UABP_CaveTroll_C::AnimGraphNode_ComponentToLocalSpace' has a wrong offset!");
static_assert(offsetof(UABP_CaveTroll_C, AnimGraphNode_UseCachedPose_1) == 0x001190, "Member 'UABP_CaveTroll_C::AnimGraphNode_UseCachedPose_1' has a wrong offset!");
static_assert(offsetof(UABP_CaveTroll_C, AnimGraphNode_ApplyAdditive) == 0x0011B8, "Member 'UABP_CaveTroll_C::AnimGraphNode_ApplyAdditive' has a wrong offset!");
static_assert(offsetof(UABP_CaveTroll_C, AnimGraphNode_BlendListByBool) == 0x001280, "Member 'UABP_CaveTroll_C::AnimGraphNode_BlendListByBool' has a wrong offset!");
static_assert(offsetof(UABP_CaveTroll_C, AnimGraphNode_StateResult_3) == 0x0012C8, "Member 'UABP_CaveTroll_C::AnimGraphNode_StateResult_3' has a wrong offset!");
static_assert(offsetof(UABP_CaveTroll_C, AnimGraphNode_UseCachedPose) == 0x0012E8, "Member 'UABP_CaveTroll_C::AnimGraphNode_UseCachedPose' has a wrong offset!");
static_assert(offsetof(UABP_CaveTroll_C, AnimGraphNode_StateResult_2) == 0x001310, "Member 'UABP_CaveTroll_C::AnimGraphNode_StateResult_2' has a wrong offset!");
static_assert(offsetof(UABP_CaveTroll_C, AnimGraphNode_StateMachine_1) == 0x001330, "Member 'UABP_CaveTroll_C::AnimGraphNode_StateMachine_1' has a wrong offset!");
static_assert(offsetof(UABP_CaveTroll_C, AnimGraphNode_TransitionResult_1) == 0x0013F8, "Member 'UABP_CaveTroll_C::AnimGraphNode_TransitionResult_1' has a wrong offset!");
static_assert(offsetof(UABP_CaveTroll_C, AnimGraphNode_TransitionResult) == 0x001420, "Member 'UABP_CaveTroll_C::AnimGraphNode_TransitionResult' has a wrong offset!");
static_assert(offsetof(UABP_CaveTroll_C, AnimGraphNode_SequencePlayer) == 0x001448, "Member 'UABP_CaveTroll_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(UABP_CaveTroll_C, AnimGraphNode_StateResult_1) == 0x001490, "Member 'UABP_CaveTroll_C::AnimGraphNode_StateResult_1' has a wrong offset!");
static_assert(offsetof(UABP_CaveTroll_C, AnimGraphNode_BlendSpacePlayer) == 0x0014B0, "Member 'UABP_CaveTroll_C::AnimGraphNode_BlendSpacePlayer' has a wrong offset!");
static_assert(offsetof(UABP_CaveTroll_C, AnimGraphNode_StateResult) == 0x001520, "Member 'UABP_CaveTroll_C::AnimGraphNode_StateResult' has a wrong offset!");
static_assert(offsetof(UABP_CaveTroll_C, AnimGraphNode_StateMachine) == 0x001540, "Member 'UABP_CaveTroll_C::AnimGraphNode_StateMachine' has a wrong offset!");
static_assert(offsetof(UABP_CaveTroll_C, AnimGraphNode_SaveCachedPose) == 0x001608, "Member 'UABP_CaveTroll_C::AnimGraphNode_SaveCachedPose' has a wrong offset!");
static_assert(offsetof(UABP_CaveTroll_C, AnimGraphNode_Slot) == 0x001688, "Member 'UABP_CaveTroll_C::AnimGraphNode_Slot' has a wrong offset!");

}

