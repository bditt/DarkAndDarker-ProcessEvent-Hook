#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_GCXTorch_2024

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "BP_Torch_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_GCXTorch_2024.BP_GCXTorch_2024_C
// 0x0020 (0x05F0 - 0x05D0)
class ABP_GCXTorch_2024_C final : public ABP_Torch_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_GCXTorch_2024_C;                 // 0x05D0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	float                                         H;                                                 // 0x05D8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C6B[0x4];                                     // 0x05DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        ColorSpeed;                                        // 0x05E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         S;                                                 // 0x05E8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_GCXTorch_2024(int32 EntryPoint);
	void ReceiveTick(float DeltaSeconds);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_GCXTorch_2024_C">();
	}
	static class ABP_GCXTorch_2024_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_GCXTorch_2024_C>();
	}
};
static_assert(alignof(ABP_GCXTorch_2024_C) == 0x000008, "Wrong alignment on ABP_GCXTorch_2024_C");
static_assert(sizeof(ABP_GCXTorch_2024_C) == 0x0005F0, "Wrong size on ABP_GCXTorch_2024_C");
static_assert(offsetof(ABP_GCXTorch_2024_C, UberGraphFrame_BP_GCXTorch_2024_C) == 0x0005D0, "Member 'ABP_GCXTorch_2024_C::UberGraphFrame_BP_GCXTorch_2024_C' has a wrong offset!");
static_assert(offsetof(ABP_GCXTorch_2024_C, H) == 0x0005D8, "Member 'ABP_GCXTorch_2024_C::H' has a wrong offset!");
static_assert(offsetof(ABP_GCXTorch_2024_C, ColorSpeed) == 0x0005E0, "Member 'ABP_GCXTorch_2024_C::ColorSpeed' has a wrong offset!");
static_assert(offsetof(ABP_GCXTorch_2024_C, S) == 0x0005E8, "Member 'ABP_GCXTorch_2024_C::S' has a wrong offset!");

}

