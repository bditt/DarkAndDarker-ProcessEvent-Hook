#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BTT_CheckHeightFromTargetAndMove

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "DungeonCrawler_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BTT_CheckHeightFromTargetAndMove.BTT_CheckHeightFromTargetAndMove_C
// 0x0030 (0x00D8 - 0x00A8)
class UBTT_CheckHeightFromTargetAndMove_C final : public UBTT_BlueprintBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x00A8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	double                                        Allowed_Height_From_Target;                        // 0x00B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   TargetActor;                                       // 0x00B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Reached;                                           // 0x00C0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_38C9[0x7];                                     // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Return_Value_X;                                    // 0x00C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Return_Value_Y;                                    // 0x00D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BTT_CheckHeightFromTargetAndMove(int32 EntryPoint);
	void ReceiveExecuteAI(class AAIController* OwnerController, class APawn* ControlledPawn);
	void ReceiveTickAI(class AAIController* OwnerController, class APawn* ControlledPawn, float DeltaSeconds);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BTT_CheckHeightFromTargetAndMove_C">();
	}
	static class UBTT_CheckHeightFromTargetAndMove_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBTT_CheckHeightFromTargetAndMove_C>();
	}
};
static_assert(alignof(UBTT_CheckHeightFromTargetAndMove_C) == 0x000008, "Wrong alignment on UBTT_CheckHeightFromTargetAndMove_C");
static_assert(sizeof(UBTT_CheckHeightFromTargetAndMove_C) == 0x0000D8, "Wrong size on UBTT_CheckHeightFromTargetAndMove_C");
static_assert(offsetof(UBTT_CheckHeightFromTargetAndMove_C, UberGraphFrame) == 0x0000A8, "Member 'UBTT_CheckHeightFromTargetAndMove_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBTT_CheckHeightFromTargetAndMove_C, Allowed_Height_From_Target) == 0x0000B0, "Member 'UBTT_CheckHeightFromTargetAndMove_C::Allowed_Height_From_Target' has a wrong offset!");
static_assert(offsetof(UBTT_CheckHeightFromTargetAndMove_C, TargetActor) == 0x0000B8, "Member 'UBTT_CheckHeightFromTargetAndMove_C::TargetActor' has a wrong offset!");
static_assert(offsetof(UBTT_CheckHeightFromTargetAndMove_C, Reached) == 0x0000C0, "Member 'UBTT_CheckHeightFromTargetAndMove_C::Reached' has a wrong offset!");
static_assert(offsetof(UBTT_CheckHeightFromTargetAndMove_C, Return_Value_X) == 0x0000C8, "Member 'UBTT_CheckHeightFromTargetAndMove_C::Return_Value_X' has a wrong offset!");
static_assert(offsetof(UBTT_CheckHeightFromTargetAndMove_C, Return_Value_Y) == 0x0000D0, "Member 'UBTT_CheckHeightFromTargetAndMove_C::Return_Value_Y' has a wrong offset!");

}

