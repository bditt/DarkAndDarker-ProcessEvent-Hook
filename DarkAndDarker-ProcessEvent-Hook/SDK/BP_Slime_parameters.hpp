#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Slime

#include "Basic.hpp"

#include "DungeonCrawler_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_Slime.BP_Slime_C.ExecuteUbergraph_BP_Slime
// 0x0748 (0x0748 - 0x0000)
struct BP_Slime_C_ExecuteUbergraph_BP_Slime final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_Does_Activate;                        // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C01[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           K2Node_Event_InGameplayTag;                        // 0x0008(0x0008)(ConstParm, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_InCount;                              // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess;   // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess_1; // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0017(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FPhysicalAnimationData                 K2Node_MakeStruct_PhysicalAnimationData;           // 0x0018(0x0024)(NoDestructor)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_1;               // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue;       // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C02[0x6];                                     // 0x0042(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMsgGASActorDieNotify                  K2Node_Event_InMsg;                                // 0x0048(0x06E8)(ConstParm, ContainsInstancedReference)
	bool                                          CallFunc_HasAuthority_ReturnValue_2;               // 0x0730(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C03[0x3];                                     // 0x0731(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_GetCollisionProfileName_ReturnValue;      // 0x0734(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x073C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C04[0x3];                                     // 0x073D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Event_Index;                                // 0x0740(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0744(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Slime_C_ExecuteUbergraph_BP_Slime) == 0x000008, "Wrong alignment on BP_Slime_C_ExecuteUbergraph_BP_Slime");
static_assert(sizeof(BP_Slime_C_ExecuteUbergraph_BP_Slime) == 0x000748, "Wrong size on BP_Slime_C_ExecuteUbergraph_BP_Slime");
static_assert(offsetof(BP_Slime_C_ExecuteUbergraph_BP_Slime, EntryPoint) == 0x000000, "Member 'BP_Slime_C_ExecuteUbergraph_BP_Slime::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_Slime_C_ExecuteUbergraph_BP_Slime, K2Node_Event_Does_Activate) == 0x000004, "Member 'BP_Slime_C_ExecuteUbergraph_BP_Slime::K2Node_Event_Does_Activate' has a wrong offset!");
static_assert(offsetof(BP_Slime_C_ExecuteUbergraph_BP_Slime, K2Node_Event_InGameplayTag) == 0x000008, "Member 'BP_Slime_C_ExecuteUbergraph_BP_Slime::K2Node_Event_InGameplayTag' has a wrong offset!");
static_assert(offsetof(BP_Slime_C_ExecuteUbergraph_BP_Slime, K2Node_Event_InCount) == 0x000010, "Member 'BP_Slime_C_ExecuteUbergraph_BP_Slime::K2Node_Event_InCount' has a wrong offset!");
static_assert(offsetof(BP_Slime_C_ExecuteUbergraph_BP_Slime, CallFunc_Greater_IntInt_ReturnValue) == 0x000014, "Member 'BP_Slime_C_ExecuteUbergraph_BP_Slime::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Slime_C_ExecuteUbergraph_BP_Slime, GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess) == 0x000015, "Member 'BP_Slime_C_ExecuteUbergraph_BP_Slime::GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_Slime_C_ExecuteUbergraph_BP_Slime, GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess_1) == 0x000016, "Member 'BP_Slime_C_ExecuteUbergraph_BP_Slime::GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_Slime_C_ExecuteUbergraph_BP_Slime, CallFunc_HasAuthority_ReturnValue) == 0x000017, "Member 'BP_Slime_C_ExecuteUbergraph_BP_Slime::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Slime_C_ExecuteUbergraph_BP_Slime, K2Node_MakeStruct_PhysicalAnimationData) == 0x000018, "Member 'BP_Slime_C_ExecuteUbergraph_BP_Slime::K2Node_MakeStruct_PhysicalAnimationData' has a wrong offset!");
static_assert(offsetof(BP_Slime_C_ExecuteUbergraph_BP_Slime, K2Node_Event_DeltaSeconds) == 0x00003C, "Member 'BP_Slime_C_ExecuteUbergraph_BP_Slime::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_Slime_C_ExecuteUbergraph_BP_Slime, CallFunc_HasAuthority_ReturnValue_1) == 0x000040, "Member 'BP_Slime_C_ExecuteUbergraph_BP_Slime::CallFunc_HasAuthority_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Slime_C_ExecuteUbergraph_BP_Slime, CallFunc_HasMatchingGameplayTag_ReturnValue) == 0x000041, "Member 'BP_Slime_C_ExecuteUbergraph_BP_Slime::CallFunc_HasMatchingGameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Slime_C_ExecuteUbergraph_BP_Slime, K2Node_Event_InMsg) == 0x000048, "Member 'BP_Slime_C_ExecuteUbergraph_BP_Slime::K2Node_Event_InMsg' has a wrong offset!");
static_assert(offsetof(BP_Slime_C_ExecuteUbergraph_BP_Slime, CallFunc_HasAuthority_ReturnValue_2) == 0x000730, "Member 'BP_Slime_C_ExecuteUbergraph_BP_Slime::CallFunc_HasAuthority_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Slime_C_ExecuteUbergraph_BP_Slime, CallFunc_GetCollisionProfileName_ReturnValue) == 0x000734, "Member 'BP_Slime_C_ExecuteUbergraph_BP_Slime::CallFunc_GetCollisionProfileName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Slime_C_ExecuteUbergraph_BP_Slime, CallFunc_EqualEqual_NameName_ReturnValue) == 0x00073C, "Member 'BP_Slime_C_ExecuteUbergraph_BP_Slime::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Slime_C_ExecuteUbergraph_BP_Slime, K2Node_Event_Index) == 0x000740, "Member 'BP_Slime_C_ExecuteUbergraph_BP_Slime::K2Node_Event_Index' has a wrong offset!");
static_assert(offsetof(BP_Slime_C_ExecuteUbergraph_BP_Slime, K2Node_SwitchInteger_CmpSuccess) == 0x000744, "Member 'BP_Slime_C_ExecuteUbergraph_BP_Slime::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");

// Function BP_Slime.BP_Slime_C.GameplayTagUpdated
// 0x000C (0x000C - 0x0000)
struct BP_Slime_C_GameplayTagUpdated final
{
public:
	struct FGameplayTag                           InGameplayTag;                                     // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	int32                                         InCount;                                           // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Slime_C_GameplayTagUpdated) == 0x000004, "Wrong alignment on BP_Slime_C_GameplayTagUpdated");
static_assert(sizeof(BP_Slime_C_GameplayTagUpdated) == 0x00000C, "Wrong size on BP_Slime_C_GameplayTagUpdated");
static_assert(offsetof(BP_Slime_C_GameplayTagUpdated, InGameplayTag) == 0x000000, "Member 'BP_Slime_C_GameplayTagUpdated::InGameplayTag' has a wrong offset!");
static_assert(offsetof(BP_Slime_C_GameplayTagUpdated, InCount) == 0x000008, "Member 'BP_Slime_C_GameplayTagUpdated::InCount' has a wrong offset!");

// Function BP_Slime.BP_Slime_C.OnFMsgGASActorDieNotifyBlueprint
// 0x06E8 (0x06E8 - 0x0000)
struct BP_Slime_C_OnFMsgGASActorDieNotifyBlueprint final
{
public:
	struct FMsgGASActorDieNotify                  InMsg;                                             // 0x0000(0x06E8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(BP_Slime_C_OnFMsgGASActorDieNotifyBlueprint) == 0x000008, "Wrong alignment on BP_Slime_C_OnFMsgGASActorDieNotifyBlueprint");
static_assert(sizeof(BP_Slime_C_OnFMsgGASActorDieNotifyBlueprint) == 0x0006E8, "Wrong size on BP_Slime_C_OnFMsgGASActorDieNotifyBlueprint");
static_assert(offsetof(BP_Slime_C_OnFMsgGASActorDieNotifyBlueprint, InMsg) == 0x000000, "Member 'BP_Slime_C_OnFMsgGASActorDieNotifyBlueprint::InMsg' has a wrong offset!");

// Function BP_Slime.BP_Slime_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_Slime_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Slime_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_Slime_C_ReceiveTick");
static_assert(sizeof(BP_Slime_C_ReceiveTick) == 0x000004, "Wrong size on BP_Slime_C_ReceiveTick");
static_assert(offsetof(BP_Slime_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_Slime_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_Slime.BP_Slime_C.SetCharacterFXState
// 0x0001 (0x0001 - 0x0000)
struct BP_Slime_C_SetCharacterFXState final
{
public:
	bool                                          Does_Activate;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Slime_C_SetCharacterFXState) == 0x000001, "Wrong alignment on BP_Slime_C_SetCharacterFXState");
static_assert(sizeof(BP_Slime_C_SetCharacterFXState) == 0x000001, "Wrong size on BP_Slime_C_SetCharacterFXState");
static_assert(offsetof(BP_Slime_C_SetCharacterFXState, Does_Activate) == 0x000000, "Member 'BP_Slime_C_SetCharacterFXState::Does_Activate' has a wrong offset!");

// Function BP_Slime.BP_Slime_C.TriggerSkill
// 0x0004 (0x0004 - 0x0000)
struct BP_Slime_C_TriggerSkill final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Slime_C_TriggerSkill) == 0x000004, "Wrong alignment on BP_Slime_C_TriggerSkill");
static_assert(sizeof(BP_Slime_C_TriggerSkill) == 0x000004, "Wrong size on BP_Slime_C_TriggerSkill");
static_assert(offsetof(BP_Slime_C_TriggerSkill, Param_Index) == 0x000000, "Member 'BP_Slime_C_TriggerSkill::Param_Index' has a wrong offset!");

}

