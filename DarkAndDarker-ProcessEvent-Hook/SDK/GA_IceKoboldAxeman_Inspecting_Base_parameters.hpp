#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_IceKoboldAxeman_Inspecting_Base

#include "Basic.hpp"

#include "GameplayAbilities_structs.hpp"


namespace SDK::Params
{

// Function GA_IceKoboldAxeman_Inspecting_Base.GA_IceKoboldAxeman_Inspecting_Base_C.AbilityActivated
// 0x00B0 (0x00B0 - 0x0000)
struct GA_IceKoboldAxeman_Inspecting_Base_C_AbilityActivated final
{
public:
	struct FGameplayEventData                     TriggerEventData;                                  // 0x0000(0x00B0)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(GA_IceKoboldAxeman_Inspecting_Base_C_AbilityActivated) == 0x000008, "Wrong alignment on GA_IceKoboldAxeman_Inspecting_Base_C_AbilityActivated");
static_assert(sizeof(GA_IceKoboldAxeman_Inspecting_Base_C_AbilityActivated) == 0x0000B0, "Wrong size on GA_IceKoboldAxeman_Inspecting_Base_C_AbilityActivated");
static_assert(offsetof(GA_IceKoboldAxeman_Inspecting_Base_C_AbilityActivated, TriggerEventData) == 0x000000, "Member 'GA_IceKoboldAxeman_Inspecting_Base_C_AbilityActivated::TriggerEventData' has a wrong offset!");

// Function GA_IceKoboldAxeman_Inspecting_Base.GA_IceKoboldAxeman_Inspecting_Base_C.ExecuteUbergraph_GA_IceKoboldAxeman_Inspecting_Base
// 0x00D8 (0x00D8 - 0x0000)
struct GA_IceKoboldAxeman_Inspecting_Base_C_ExecuteUbergraph_GA_IceKoboldAxeman_Inspecting_Base final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4FB6[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAbilityTask_WaitGameplayTagAdded*      CallFunc_WaitGameplayTagAdd_ReturnValue;           // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4FB7[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayEventData                     K2Node_Event_TriggerEventData;                     // 0x0028(0x00B0)(ConstParm)
};
static_assert(alignof(GA_IceKoboldAxeman_Inspecting_Base_C_ExecuteUbergraph_GA_IceKoboldAxeman_Inspecting_Base) == 0x000008, "Wrong alignment on GA_IceKoboldAxeman_Inspecting_Base_C_ExecuteUbergraph_GA_IceKoboldAxeman_Inspecting_Base");
static_assert(sizeof(GA_IceKoboldAxeman_Inspecting_Base_C_ExecuteUbergraph_GA_IceKoboldAxeman_Inspecting_Base) == 0x0000D8, "Wrong size on GA_IceKoboldAxeman_Inspecting_Base_C_ExecuteUbergraph_GA_IceKoboldAxeman_Inspecting_Base");
static_assert(offsetof(GA_IceKoboldAxeman_Inspecting_Base_C_ExecuteUbergraph_GA_IceKoboldAxeman_Inspecting_Base, EntryPoint) == 0x000000, "Member 'GA_IceKoboldAxeman_Inspecting_Base_C_ExecuteUbergraph_GA_IceKoboldAxeman_Inspecting_Base::EntryPoint' has a wrong offset!");
static_assert(offsetof(GA_IceKoboldAxeman_Inspecting_Base_C_ExecuteUbergraph_GA_IceKoboldAxeman_Inspecting_Base, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'GA_IceKoboldAxeman_Inspecting_Base_C_ExecuteUbergraph_GA_IceKoboldAxeman_Inspecting_Base::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(GA_IceKoboldAxeman_Inspecting_Base_C_ExecuteUbergraph_GA_IceKoboldAxeman_Inspecting_Base, CallFunc_WaitGameplayTagAdd_ReturnValue) == 0x000018, "Member 'GA_IceKoboldAxeman_Inspecting_Base_C_ExecuteUbergraph_GA_IceKoboldAxeman_Inspecting_Base::CallFunc_WaitGameplayTagAdd_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_IceKoboldAxeman_Inspecting_Base_C_ExecuteUbergraph_GA_IceKoboldAxeman_Inspecting_Base, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'GA_IceKoboldAxeman_Inspecting_Base_C_ExecuteUbergraph_GA_IceKoboldAxeman_Inspecting_Base::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_IceKoboldAxeman_Inspecting_Base_C_ExecuteUbergraph_GA_IceKoboldAxeman_Inspecting_Base, K2Node_Event_TriggerEventData) == 0x000028, "Member 'GA_IceKoboldAxeman_Inspecting_Base_C_ExecuteUbergraph_GA_IceKoboldAxeman_Inspecting_Base::K2Node_Event_TriggerEventData' has a wrong offset!");

}

