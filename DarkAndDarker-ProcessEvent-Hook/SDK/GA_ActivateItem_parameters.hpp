#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_ActivateItem

#include "Basic.hpp"

#include "GameplayAbilities_structs.hpp"
#include "DungeonCrawler_structs.hpp"


namespace SDK::Params
{

// Function GA_ActivateItem.GA_ActivateItem_C.AbilityActivated
// 0x00B0 (0x00B0 - 0x0000)
struct GA_ActivateItem_C_AbilityActivated final
{
public:
	struct FGameplayEventData                     TriggerEventData;                                  // 0x0000(0x00B0)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(GA_ActivateItem_C_AbilityActivated) == 0x000008, "Wrong alignment on GA_ActivateItem_C_AbilityActivated");
static_assert(sizeof(GA_ActivateItem_C_AbilityActivated) == 0x0000B0, "Wrong size on GA_ActivateItem_C_AbilityActivated");
static_assert(offsetof(GA_ActivateItem_C_AbilityActivated, TriggerEventData) == 0x000000, "Member 'GA_ActivateItem_C_AbilityActivated::TriggerEventData' has a wrong offset!");

// Function GA_ActivateItem.GA_ActivateItem_C.ExecuteUbergraph_GA_ActivateItem
// 0x00F0 (0x00F0 - 0x0000)
struct GA_ActivateItem_C_ExecuteUbergraph_GA_ActivateItem final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_45CA[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMsgWidgetInitCrossHairNotify          K2Node_MakeStruct_MsgWidgetInitCrossHairNotify;    // 0x0008(0x0018)()
	struct FGameplayEventData                     K2Node_Event_TriggerEventData;                     // 0x0020(0x00B0)(ConstParm)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x00D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBaseInterface>        K2Node_DynamicCast_AsBase_Interface;               // 0x00D8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_ActivateItem_C_ExecuteUbergraph_GA_ActivateItem) == 0x000008, "Wrong alignment on GA_ActivateItem_C_ExecuteUbergraph_GA_ActivateItem");
static_assert(sizeof(GA_ActivateItem_C_ExecuteUbergraph_GA_ActivateItem) == 0x0000F0, "Wrong size on GA_ActivateItem_C_ExecuteUbergraph_GA_ActivateItem");
static_assert(offsetof(GA_ActivateItem_C_ExecuteUbergraph_GA_ActivateItem, EntryPoint) == 0x000000, "Member 'GA_ActivateItem_C_ExecuteUbergraph_GA_ActivateItem::EntryPoint' has a wrong offset!");
static_assert(offsetof(GA_ActivateItem_C_ExecuteUbergraph_GA_ActivateItem, K2Node_MakeStruct_MsgWidgetInitCrossHairNotify) == 0x000008, "Member 'GA_ActivateItem_C_ExecuteUbergraph_GA_ActivateItem::K2Node_MakeStruct_MsgWidgetInitCrossHairNotify' has a wrong offset!");
static_assert(offsetof(GA_ActivateItem_C_ExecuteUbergraph_GA_ActivateItem, K2Node_Event_TriggerEventData) == 0x000020, "Member 'GA_ActivateItem_C_ExecuteUbergraph_GA_ActivateItem::K2Node_Event_TriggerEventData' has a wrong offset!");
static_assert(offsetof(GA_ActivateItem_C_ExecuteUbergraph_GA_ActivateItem, CallFunc_GetPlayerController_ReturnValue) == 0x0000D0, "Member 'GA_ActivateItem_C_ExecuteUbergraph_GA_ActivateItem::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_ActivateItem_C_ExecuteUbergraph_GA_ActivateItem, K2Node_DynamicCast_AsBase_Interface) == 0x0000D8, "Member 'GA_ActivateItem_C_ExecuteUbergraph_GA_ActivateItem::K2Node_DynamicCast_AsBase_Interface' has a wrong offset!");
static_assert(offsetof(GA_ActivateItem_C_ExecuteUbergraph_GA_ActivateItem, K2Node_DynamicCast_bSuccess) == 0x0000E8, "Member 'GA_ActivateItem_C_ExecuteUbergraph_GA_ActivateItem::K2Node_DynamicCast_bSuccess' has a wrong offset!");

}

