#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_SkeletonRoyalGuard_BackStep

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "GA_MonsterMeleeAttackBaseWithOptions_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass GA_SkeletonRoyalGuard_BackStep.GA_SkeletonRoyalGuard_BackStep_C
// 0x0028 (0x0748 - 0x0720)
class UGA_SkeletonRoyalGuard_BackStep_C final : public UGA_MonsterMeleeAttackBaseWithOptions_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_GA_SkeletonRoyalGuard_BackStep_C;   // 0x0720(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UDCAT_RotateToActor*                    Async_Task_0;                                      // 0x0728(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	TArray<class ADCCharacterBase*>               TargetArray;                                       // 0x0730(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	class ADCCharacterBase*                       Target_Enemy;                                      // 0x0740(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void AbilityActivated(const struct FGameplayEventData& TriggerEventData);
	void EventReceived_4485961E499397E7ECF8C9ABD81E7C83(const struct FGameplayEventData& Payload);
	void EventReceived_55C9B74E4B49AA8B3DD829B2F1ED1F44(const struct FGameplayEventData& Payload);
	void EventReceived_CAB9D45E4CB99D3D874F89AE01FCF203(const struct FGameplayEventData& Payload);
	void ExecuteUbergraph_GA_SkeletonRoyalGuard_BackStep(int32 EntryPoint);
	void K2_OnEndAbility(bool bWasCancelled);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GA_SkeletonRoyalGuard_BackStep_C">();
	}
	static class UGA_SkeletonRoyalGuard_BackStep_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGA_SkeletonRoyalGuard_BackStep_C>();
	}
};
static_assert(alignof(UGA_SkeletonRoyalGuard_BackStep_C) == 0x000008, "Wrong alignment on UGA_SkeletonRoyalGuard_BackStep_C");
static_assert(sizeof(UGA_SkeletonRoyalGuard_BackStep_C) == 0x000748, "Wrong size on UGA_SkeletonRoyalGuard_BackStep_C");
static_assert(offsetof(UGA_SkeletonRoyalGuard_BackStep_C, UberGraphFrame_GA_SkeletonRoyalGuard_BackStep_C) == 0x000720, "Member 'UGA_SkeletonRoyalGuard_BackStep_C::UberGraphFrame_GA_SkeletonRoyalGuard_BackStep_C' has a wrong offset!");
static_assert(offsetof(UGA_SkeletonRoyalGuard_BackStep_C, Async_Task_0) == 0x000728, "Member 'UGA_SkeletonRoyalGuard_BackStep_C::Async_Task_0' has a wrong offset!");
static_assert(offsetof(UGA_SkeletonRoyalGuard_BackStep_C, TargetArray) == 0x000730, "Member 'UGA_SkeletonRoyalGuard_BackStep_C::TargetArray' has a wrong offset!");
static_assert(offsetof(UGA_SkeletonRoyalGuard_BackStep_C, Target_Enemy) == 0x000740, "Member 'UGA_SkeletonRoyalGuard_BackStep_C::Target_Enemy' has a wrong offset!");

}

