#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_FlameWalker

#include "Basic.hpp"

#include "GameplayAbilities_structs.hpp"


namespace SDK::Params
{

// Function GA_FlameWalker.GA_FlameWalker_C.AbilityActivated_BP
// 0x00B8 (0x00B8 - 0x0000)
struct GA_FlameWalker_C_AbilityActivated_BP final
{
public:
	struct FGameplayEventData                     TriggerEventData;                                  // 0x0000(0x00B0)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm)
	bool                                          bIsSocketSightBlocked;                             // 0x00B0(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_FlameWalker_C_AbilityActivated_BP) == 0x000008, "Wrong alignment on GA_FlameWalker_C_AbilityActivated_BP");
static_assert(sizeof(GA_FlameWalker_C_AbilityActivated_BP) == 0x0000B8, "Wrong size on GA_FlameWalker_C_AbilityActivated_BP");
static_assert(offsetof(GA_FlameWalker_C_AbilityActivated_BP, TriggerEventData) == 0x000000, "Member 'GA_FlameWalker_C_AbilityActivated_BP::TriggerEventData' has a wrong offset!");
static_assert(offsetof(GA_FlameWalker_C_AbilityActivated_BP, bIsSocketSightBlocked) == 0x0000B0, "Member 'GA_FlameWalker_C_AbilityActivated_BP::bIsSocketSightBlocked' has a wrong offset!");

// Function GA_FlameWalker.GA_FlameWalker_C.ExecuteUbergraph_GA_FlameWalker
// 0x00C0 (0x00C0 - 0x0000)
struct GA_FlameWalker_C_ExecuteUbergraph_GA_FlameWalker final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_43D7[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayEventData                     K2Node_Event_TriggerEventData;                     // 0x0008(0x00B0)(ConstParm)
	bool                                          K2Node_Event_bIsSocketSightBlocked;                // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_FlameWalker_C_ExecuteUbergraph_GA_FlameWalker) == 0x000008, "Wrong alignment on GA_FlameWalker_C_ExecuteUbergraph_GA_FlameWalker");
static_assert(sizeof(GA_FlameWalker_C_ExecuteUbergraph_GA_FlameWalker) == 0x0000C0, "Wrong size on GA_FlameWalker_C_ExecuteUbergraph_GA_FlameWalker");
static_assert(offsetof(GA_FlameWalker_C_ExecuteUbergraph_GA_FlameWalker, EntryPoint) == 0x000000, "Member 'GA_FlameWalker_C_ExecuteUbergraph_GA_FlameWalker::EntryPoint' has a wrong offset!");
static_assert(offsetof(GA_FlameWalker_C_ExecuteUbergraph_GA_FlameWalker, K2Node_Event_TriggerEventData) == 0x000008, "Member 'GA_FlameWalker_C_ExecuteUbergraph_GA_FlameWalker::K2Node_Event_TriggerEventData' has a wrong offset!");
static_assert(offsetof(GA_FlameWalker_C_ExecuteUbergraph_GA_FlameWalker, K2Node_Event_bIsSocketSightBlocked) == 0x0000B8, "Member 'GA_FlameWalker_C_ExecuteUbergraph_GA_FlameWalker::K2Node_Event_bIsSocketSightBlocked' has a wrong offset!");

}

