#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Torch

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"


namespace SDK::Params
{

// Function BP_Torch.BP_Torch_C.ExecuteUbergraph_BP_Torch
// 0x0018 (0x0018 - 0x0000)
struct BP_Torch_C_ExecuteUbergraph_BP_Torch final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_40F9[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           K2Node_Event_InGameplayTag;                        // 0x0008(0x0008)(ConstParm, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_InCount;                              // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_MatchesTag_ReturnValue;                   // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_IsActivating;                   // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Torch_C_ExecuteUbergraph_BP_Torch) == 0x000004, "Wrong alignment on BP_Torch_C_ExecuteUbergraph_BP_Torch");
static_assert(sizeof(BP_Torch_C_ExecuteUbergraph_BP_Torch) == 0x000018, "Wrong size on BP_Torch_C_ExecuteUbergraph_BP_Torch");
static_assert(offsetof(BP_Torch_C_ExecuteUbergraph_BP_Torch, EntryPoint) == 0x000000, "Member 'BP_Torch_C_ExecuteUbergraph_BP_Torch::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_Torch_C_ExecuteUbergraph_BP_Torch, CallFunc_HasAuthority_ReturnValue) == 0x000004, "Member 'BP_Torch_C_ExecuteUbergraph_BP_Torch::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Torch_C_ExecuteUbergraph_BP_Torch, K2Node_Event_InGameplayTag) == 0x000008, "Member 'BP_Torch_C_ExecuteUbergraph_BP_Torch::K2Node_Event_InGameplayTag' has a wrong offset!");
static_assert(offsetof(BP_Torch_C_ExecuteUbergraph_BP_Torch, K2Node_Event_InCount) == 0x000010, "Member 'BP_Torch_C_ExecuteUbergraph_BP_Torch::K2Node_Event_InCount' has a wrong offset!");
static_assert(offsetof(BP_Torch_C_ExecuteUbergraph_BP_Torch, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000014, "Member 'BP_Torch_C_ExecuteUbergraph_BP_Torch::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Torch_C_ExecuteUbergraph_BP_Torch, CallFunc_MatchesTag_ReturnValue) == 0x000015, "Member 'BP_Torch_C_ExecuteUbergraph_BP_Torch::CallFunc_MatchesTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Torch_C_ExecuteUbergraph_BP_Torch, K2Node_CustomEvent_IsActivating) == 0x000016, "Member 'BP_Torch_C_ExecuteUbergraph_BP_Torch::K2Node_CustomEvent_IsActivating' has a wrong offset!");

// Function BP_Torch.BP_Torch_C.FX_UpdateMaterial
// 0x0001 (0x0001 - 0x0000)
struct BP_Torch_C_FX_UpdateMaterial final
{
public:
	bool                                          IsActivating;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Torch_C_FX_UpdateMaterial) == 0x000001, "Wrong alignment on BP_Torch_C_FX_UpdateMaterial");
static_assert(sizeof(BP_Torch_C_FX_UpdateMaterial) == 0x000001, "Wrong size on BP_Torch_C_FX_UpdateMaterial");
static_assert(offsetof(BP_Torch_C_FX_UpdateMaterial, IsActivating) == 0x000000, "Member 'BP_Torch_C_FX_UpdateMaterial::IsActivating' has a wrong offset!");

// Function BP_Torch.BP_Torch_C.GameplayTagUpdated
// 0x000C (0x000C - 0x0000)
struct BP_Torch_C_GameplayTagUpdated final
{
public:
	struct FGameplayTag                           InGameplayTag;                                     // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	int32                                         InCount;                                           // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Torch_C_GameplayTagUpdated) == 0x000004, "Wrong alignment on BP_Torch_C_GameplayTagUpdated");
static_assert(sizeof(BP_Torch_C_GameplayTagUpdated) == 0x00000C, "Wrong size on BP_Torch_C_GameplayTagUpdated");
static_assert(offsetof(BP_Torch_C_GameplayTagUpdated, InGameplayTag) == 0x000000, "Member 'BP_Torch_C_GameplayTagUpdated::InGameplayTag' has a wrong offset!");
static_assert(offsetof(BP_Torch_C_GameplayTagUpdated, InCount) == 0x000008, "Member 'BP_Torch_C_GameplayTagUpdated::InCount' has a wrong offset!");

}

