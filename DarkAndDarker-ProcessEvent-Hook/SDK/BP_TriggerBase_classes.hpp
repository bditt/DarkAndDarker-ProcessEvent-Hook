#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_TriggerBase

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "BP_PropsActorBase_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_TriggerBase.BP_TriggerBase_C
// 0x0020 (0x04D8 - 0x04B8)
class ABP_TriggerBase_C : public ABP_PropsActorBase_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_TriggerBase_C;                   // 0x04B8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UDCGameObjectLinkComponent*             DCGameObjectLink;                                  // 0x04C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UDCSkeletalMeshComponent*               DCSkeletalMesh;                                    // 0x04C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           AbilityTriggerTag;                                 // 0x04D0(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_TriggerBase(int32 EntryPoint);
	void InteractSucceed(class AActor* Interacter, const struct FGameplayTag& StateTag, const struct FGameplayTag& TriggerTag, const struct FHitResult& HitResult);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_TriggerBase_C">();
	}
	static class ABP_TriggerBase_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_TriggerBase_C>();
	}
};
static_assert(alignof(ABP_TriggerBase_C) == 0x000008, "Wrong alignment on ABP_TriggerBase_C");
static_assert(sizeof(ABP_TriggerBase_C) == 0x0004D8, "Wrong size on ABP_TriggerBase_C");
static_assert(offsetof(ABP_TriggerBase_C, UberGraphFrame_BP_TriggerBase_C) == 0x0004B8, "Member 'ABP_TriggerBase_C::UberGraphFrame_BP_TriggerBase_C' has a wrong offset!");
static_assert(offsetof(ABP_TriggerBase_C, DCGameObjectLink) == 0x0004C0, "Member 'ABP_TriggerBase_C::DCGameObjectLink' has a wrong offset!");
static_assert(offsetof(ABP_TriggerBase_C, DCSkeletalMesh) == 0x0004C8, "Member 'ABP_TriggerBase_C::DCSkeletalMesh' has a wrong offset!");
static_assert(offsetof(ABP_TriggerBase_C, AbilityTriggerTag) == 0x0004D0, "Member 'ABP_TriggerBase_C::AbilityTriggerTag' has a wrong offset!");

}

