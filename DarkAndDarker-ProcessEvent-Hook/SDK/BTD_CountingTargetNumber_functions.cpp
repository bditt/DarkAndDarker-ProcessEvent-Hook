#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BTD_CountingTargetNumber

#include "Basic.hpp"

#include "BTD_CountingTargetNumber_classes.hpp"
#include "BTD_CountingTargetNumber_parameters.hpp"


namespace SDK
{

// Function BTD_CountingTargetNumber.BTD_CountingTargetNumber_C.FilterRange
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Bool                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBTD_CountingTargetNumber_C::FilterRange(bool* Bool)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BTD_CountingTargetNumber_C", "FilterRange");

	Params::BTD_CountingTargetNumber_C_FilterRange Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Bool != nullptr)
		*Bool = Parms.Bool;
}


// Function BTD_CountingTargetNumber.BTD_CountingTargetNumber_C.FilterTags
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Bool                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBTD_CountingTargetNumber_C::FilterTags(bool* Bool)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BTD_CountingTargetNumber_C", "FilterTags");

	Params::BTD_CountingTargetNumber_C_FilterTags Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Bool != nullptr)
		*Bool = Parms.Bool;
}


// Function BTD_CountingTargetNumber.BTD_CountingTargetNumber_C.GetTargetArray
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Bool                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBTD_CountingTargetNumber_C::GetTargetArray(bool* Bool)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BTD_CountingTargetNumber_C", "GetTargetArray");

	Params::BTD_CountingTargetNumber_C_GetTargetArray Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Bool != nullptr)
		*Bool = Parms.Bool;
}


// Function BTD_CountingTargetNumber.BTD_CountingTargetNumber_C.PerformConditionCheckAI
// (Event, Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AAIController*                    OwnerController                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class APawn*                            Param_ControlledPawn                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool UBTD_CountingTargetNumber_C::PerformConditionCheckAI(class AAIController* OwnerController, class APawn* Param_ControlledPawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BTD_CountingTargetNumber_C", "PerformConditionCheckAI");

	Params::BTD_CountingTargetNumber_C_PerformConditionCheckAI Parms{};

	Parms.OwnerController = OwnerController;
	Parms.Param_ControlledPawn = Param_ControlledPawn;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BTD_CountingTargetNumber.BTD_CountingTargetNumber_C.TargetingType
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Bool                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBTD_CountingTargetNumber_C::TargetingType(bool* Bool)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BTD_CountingTargetNumber_C", "TargetingType");

	Params::BTD_CountingTargetNumber_C_TargetingType Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Bool != nullptr)
		*Bool = Parms.Bool;
}

}

