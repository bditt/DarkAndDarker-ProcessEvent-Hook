#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_GoblinAxeman

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "DungeonCrawler_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_GoblinAxeman.BP_GoblinAxeman_C.ExecuteUbergraph_BP_GoblinAxeman
// 0x0AF0 (0x0AF0 - 0x0000)
struct BP_GoblinAxeman_C_ExecuteUbergraph_BP_GoblinAxeman final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_Event_InGameplayTag;                        // 0x0004(0x0008)(ConstParm, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_InCount;                              // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F9A[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UABP_GoblinAxeman_C*                    K2Node_DynamicCast_AsABP_Goblin_Axeman;            // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F9B[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UABP_GoblinAxeman_C*                    K2Node_DynamicCast_AsABP_Goblin_Axeman_1;          // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F9C[0x7];                                     // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UABP_GoblinAxeman_C*                    K2Node_DynamicCast_AsABP_Goblin_Axeman_2;          // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_GameplayTag_ReturnValue;       // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_GameplayTag_ReturnValue_1;     // 0x004A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_GameplayTag_ReturnValue_2;     // 0x004B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_GameplayTag_ReturnValue_3;     // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F9D[0x3];                                     // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_RandomFloatInRange_ReturnValue;           // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F9E[0x7];                                     // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0060(0x0060)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x00C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FMsgGASAttributeNotify                 K2Node_Event_InMsg;                                // 0x00C8(0x0720)(ConstParm, ContainsInstancedReference)
	class ABP_GoblinWarrior_Shield_C*             CallFunc_FinishSpawningActor_ReturnValue;          // 0x07E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_DCEffectContextGetInstigatorActor_ReturnValue; // 0x07F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x07F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEventData                     K2Node_MakeStruct_GameplayEventData;               // 0x0800(0x00B0)()
	bool                                          CallFunc_EqualEqual_GameplayAttributeGameplayAttribute_ReturnValue; // 0x08B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F9F[0x7];                                     // 0x08B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetActorRelativeRotation_SweepHitResult; // 0x08B8(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FHitResult                             CallFunc_K2_SetActorRelativeLocation_SweepHitResult; // 0x09A0(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_AttachToComponent_ReturnValue;         // 0x0A88(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0A89(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x0A8A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x0A8B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0A8C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4FA0[0x3];                                     // 0x0A8D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetDistanceTo_ReturnValue;                // 0x0A90(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0A94(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue;       // 0x0A95(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4FA1[0x2];                                     // 0x0A96(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FGameplayTag>                   K2Node_MakeArray_Array;                            // 0x0A98(0x0010)(ConstParm, ReferenceParm)
	struct FGameplayTagContainer                  CallFunc_MakeGameplayTagContainerFromArray_ReturnValue; // 0x0AA8(0x0020)()
	bool                                          CallFunc_HasAnyMatchingGameplayTags_ReturnValue;   // 0x0AC8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4FA2[0x7];                                     // 0x0AC9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_B_ImplicitCast;     // 0x0AD0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_A_ImplicitCast;     // 0x0AD8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Less_DoubleDouble_A_ImplicitCast;         // 0x0AE0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GoblinAxeman_C_ExecuteUbergraph_BP_GoblinAxeman) == 0x000010, "Wrong alignment on BP_GoblinAxeman_C_ExecuteUbergraph_BP_GoblinAxeman");
static_assert(sizeof(BP_GoblinAxeman_C_ExecuteUbergraph_BP_GoblinAxeman) == 0x000AF0, "Wrong size on BP_GoblinAxeman_C_ExecuteUbergraph_BP_GoblinAxeman");
static_assert(offsetof(BP_GoblinAxeman_C_ExecuteUbergraph_BP_GoblinAxeman, EntryPoint) == 0x000000, "Member 'BP_GoblinAxeman_C_ExecuteUbergraph_BP_GoblinAxeman::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_GoblinAxeman_C_ExecuteUbergraph_BP_GoblinAxeman, K2Node_Event_InGameplayTag) == 0x000004, "Member 'BP_GoblinAxeman_C_ExecuteUbergraph_BP_GoblinAxeman::K2Node_Event_InGameplayTag' has a wrong offset!");
static_assert(offsetof(BP_GoblinAxeman_C_ExecuteUbergraph_BP_GoblinAxeman, K2Node_Event_InCount) == 0x00000C, "Member 'BP_GoblinAxeman_C_ExecuteUbergraph_BP_GoblinAxeman::K2Node_Event_InCount' has a wrong offset!");
static_assert(offsetof(BP_GoblinAxeman_C_ExecuteUbergraph_BP_GoblinAxeman, CallFunc_GetAnimInstance_ReturnValue) == 0x000010, "Member 'BP_GoblinAxeman_C_ExecuteUbergraph_BP_GoblinAxeman::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GoblinAxeman_C_ExecuteUbergraph_BP_GoblinAxeman, CallFunc_Greater_IntInt_ReturnValue) == 0x000018, "Member 'BP_GoblinAxeman_C_ExecuteUbergraph_BP_GoblinAxeman::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GoblinAxeman_C_ExecuteUbergraph_BP_GoblinAxeman, K2Node_DynamicCast_AsABP_Goblin_Axeman) == 0x000020, "Member 'BP_GoblinAxeman_C_ExecuteUbergraph_BP_GoblinAxeman::K2Node_DynamicCast_AsABP_Goblin_Axeman' has a wrong offset!");
static_assert(offsetof(BP_GoblinAxeman_C_ExecuteUbergraph_BP_GoblinAxeman, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BP_GoblinAxeman_C_ExecuteUbergraph_BP_GoblinAxeman::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_GoblinAxeman_C_ExecuteUbergraph_BP_GoblinAxeman, K2Node_DynamicCast_AsABP_Goblin_Axeman_1) == 0x000030, "Member 'BP_GoblinAxeman_C_ExecuteUbergraph_BP_GoblinAxeman::K2Node_DynamicCast_AsABP_Goblin_Axeman_1' has a wrong offset!");
static_assert(offsetof(BP_GoblinAxeman_C_ExecuteUbergraph_BP_GoblinAxeman, K2Node_DynamicCast_bSuccess_1) == 0x000038, "Member 'BP_GoblinAxeman_C_ExecuteUbergraph_BP_GoblinAxeman::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_GoblinAxeman_C_ExecuteUbergraph_BP_GoblinAxeman, K2Node_DynamicCast_AsABP_Goblin_Axeman_2) == 0x000040, "Member 'BP_GoblinAxeman_C_ExecuteUbergraph_BP_GoblinAxeman::K2Node_DynamicCast_AsABP_Goblin_Axeman_2' has a wrong offset!");
static_assert(offsetof(BP_GoblinAxeman_C_ExecuteUbergraph_BP_GoblinAxeman, K2Node_DynamicCast_bSuccess_2) == 0x000048, "Member 'BP_GoblinAxeman_C_ExecuteUbergraph_BP_GoblinAxeman::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_GoblinAxeman_C_ExecuteUbergraph_BP_GoblinAxeman, CallFunc_EqualEqual_GameplayTag_ReturnValue) == 0x000049, "Member 'BP_GoblinAxeman_C_ExecuteUbergraph_BP_GoblinAxeman::CallFunc_EqualEqual_GameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GoblinAxeman_C_ExecuteUbergraph_BP_GoblinAxeman, CallFunc_EqualEqual_GameplayTag_ReturnValue_1) == 0x00004A, "Member 'BP_GoblinAxeman_C_ExecuteUbergraph_BP_GoblinAxeman::CallFunc_EqualEqual_GameplayTag_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GoblinAxeman_C_ExecuteUbergraph_BP_GoblinAxeman, CallFunc_EqualEqual_GameplayTag_ReturnValue_2) == 0x00004B, "Member 'BP_GoblinAxeman_C_ExecuteUbergraph_BP_GoblinAxeman::CallFunc_EqualEqual_GameplayTag_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GoblinAxeman_C_ExecuteUbergraph_BP_GoblinAxeman, CallFunc_EqualEqual_GameplayTag_ReturnValue_3) == 0x00004C, "Member 'BP_GoblinAxeman_C_ExecuteUbergraph_BP_GoblinAxeman::CallFunc_EqualEqual_GameplayTag_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_GoblinAxeman_C_ExecuteUbergraph_BP_GoblinAxeman, CallFunc_RandomFloatInRange_ReturnValue) == 0x000050, "Member 'BP_GoblinAxeman_C_ExecuteUbergraph_BP_GoblinAxeman::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GoblinAxeman_C_ExecuteUbergraph_BP_GoblinAxeman, CallFunc_HasAuthority_ReturnValue) == 0x000058, "Member 'BP_GoblinAxeman_C_ExecuteUbergraph_BP_GoblinAxeman::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GoblinAxeman_C_ExecuteUbergraph_BP_GoblinAxeman, CallFunc_GetTransform_ReturnValue) == 0x000060, "Member 'BP_GoblinAxeman_C_ExecuteUbergraph_BP_GoblinAxeman::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GoblinAxeman_C_ExecuteUbergraph_BP_GoblinAxeman, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x0000C0, "Member 'BP_GoblinAxeman_C_ExecuteUbergraph_BP_GoblinAxeman::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GoblinAxeman_C_ExecuteUbergraph_BP_GoblinAxeman, K2Node_Event_InMsg) == 0x0000C8, "Member 'BP_GoblinAxeman_C_ExecuteUbergraph_BP_GoblinAxeman::K2Node_Event_InMsg' has a wrong offset!");
static_assert(offsetof(BP_GoblinAxeman_C_ExecuteUbergraph_BP_GoblinAxeman, CallFunc_FinishSpawningActor_ReturnValue) == 0x0007E8, "Member 'BP_GoblinAxeman_C_ExecuteUbergraph_BP_GoblinAxeman::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GoblinAxeman_C_ExecuteUbergraph_BP_GoblinAxeman, CallFunc_DCEffectContextGetInstigatorActor_ReturnValue) == 0x0007F0, "Member 'BP_GoblinAxeman_C_ExecuteUbergraph_BP_GoblinAxeman::CallFunc_DCEffectContextGetInstigatorActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GoblinAxeman_C_ExecuteUbergraph_BP_GoblinAxeman, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x0007F8, "Member 'BP_GoblinAxeman_C_ExecuteUbergraph_BP_GoblinAxeman::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GoblinAxeman_C_ExecuteUbergraph_BP_GoblinAxeman, K2Node_MakeStruct_GameplayEventData) == 0x000800, "Member 'BP_GoblinAxeman_C_ExecuteUbergraph_BP_GoblinAxeman::K2Node_MakeStruct_GameplayEventData' has a wrong offset!");
static_assert(offsetof(BP_GoblinAxeman_C_ExecuteUbergraph_BP_GoblinAxeman, CallFunc_EqualEqual_GameplayAttributeGameplayAttribute_ReturnValue) == 0x0008B0, "Member 'BP_GoblinAxeman_C_ExecuteUbergraph_BP_GoblinAxeman::CallFunc_EqualEqual_GameplayAttributeGameplayAttribute_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GoblinAxeman_C_ExecuteUbergraph_BP_GoblinAxeman, CallFunc_K2_SetActorRelativeRotation_SweepHitResult) == 0x0008B8, "Member 'BP_GoblinAxeman_C_ExecuteUbergraph_BP_GoblinAxeman::CallFunc_K2_SetActorRelativeRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_GoblinAxeman_C_ExecuteUbergraph_BP_GoblinAxeman, CallFunc_K2_SetActorRelativeLocation_SweepHitResult) == 0x0009A0, "Member 'BP_GoblinAxeman_C_ExecuteUbergraph_BP_GoblinAxeman::CallFunc_K2_SetActorRelativeLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_GoblinAxeman_C_ExecuteUbergraph_BP_GoblinAxeman, CallFunc_K2_AttachToComponent_ReturnValue) == 0x000A88, "Member 'BP_GoblinAxeman_C_ExecuteUbergraph_BP_GoblinAxeman::CallFunc_K2_AttachToComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GoblinAxeman_C_ExecuteUbergraph_BP_GoblinAxeman, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000A89, "Member 'BP_GoblinAxeman_C_ExecuteUbergraph_BP_GoblinAxeman::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GoblinAxeman_C_ExecuteUbergraph_BP_GoblinAxeman, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x000A8A, "Member 'BP_GoblinAxeman_C_ExecuteUbergraph_BP_GoblinAxeman::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GoblinAxeman_C_ExecuteUbergraph_BP_GoblinAxeman, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x000A8B, "Member 'BP_GoblinAxeman_C_ExecuteUbergraph_BP_GoblinAxeman::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GoblinAxeman_C_ExecuteUbergraph_BP_GoblinAxeman, CallFunc_BooleanOR_ReturnValue) == 0x000A8C, "Member 'BP_GoblinAxeman_C_ExecuteUbergraph_BP_GoblinAxeman::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GoblinAxeman_C_ExecuteUbergraph_BP_GoblinAxeman, CallFunc_GetDistanceTo_ReturnValue) == 0x000A90, "Member 'BP_GoblinAxeman_C_ExecuteUbergraph_BP_GoblinAxeman::CallFunc_GetDistanceTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GoblinAxeman_C_ExecuteUbergraph_BP_GoblinAxeman, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000A94, "Member 'BP_GoblinAxeman_C_ExecuteUbergraph_BP_GoblinAxeman::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GoblinAxeman_C_ExecuteUbergraph_BP_GoblinAxeman, CallFunc_HasMatchingGameplayTag_ReturnValue) == 0x000A95, "Member 'BP_GoblinAxeman_C_ExecuteUbergraph_BP_GoblinAxeman::CallFunc_HasMatchingGameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GoblinAxeman_C_ExecuteUbergraph_BP_GoblinAxeman, K2Node_MakeArray_Array) == 0x000A98, "Member 'BP_GoblinAxeman_C_ExecuteUbergraph_BP_GoblinAxeman::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_GoblinAxeman_C_ExecuteUbergraph_BP_GoblinAxeman, CallFunc_MakeGameplayTagContainerFromArray_ReturnValue) == 0x000AA8, "Member 'BP_GoblinAxeman_C_ExecuteUbergraph_BP_GoblinAxeman::CallFunc_MakeGameplayTagContainerFromArray_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GoblinAxeman_C_ExecuteUbergraph_BP_GoblinAxeman, CallFunc_HasAnyMatchingGameplayTags_ReturnValue) == 0x000AC8, "Member 'BP_GoblinAxeman_C_ExecuteUbergraph_BP_GoblinAxeman::CallFunc_HasAnyMatchingGameplayTags_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GoblinAxeman_C_ExecuteUbergraph_BP_GoblinAxeman, CallFunc_Subtract_DoubleDouble_B_ImplicitCast) == 0x000AD0, "Member 'BP_GoblinAxeman_C_ExecuteUbergraph_BP_GoblinAxeman::CallFunc_Subtract_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_GoblinAxeman_C_ExecuteUbergraph_BP_GoblinAxeman, CallFunc_Subtract_DoubleDouble_A_ImplicitCast) == 0x000AD8, "Member 'BP_GoblinAxeman_C_ExecuteUbergraph_BP_GoblinAxeman::CallFunc_Subtract_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_GoblinAxeman_C_ExecuteUbergraph_BP_GoblinAxeman, CallFunc_Less_DoubleDouble_A_ImplicitCast) == 0x000AE0, "Member 'BP_GoblinAxeman_C_ExecuteUbergraph_BP_GoblinAxeman::CallFunc_Less_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function BP_GoblinAxeman.BP_GoblinAxeman_C.GameplayTagUpdated
// 0x000C (0x000C - 0x0000)
struct BP_GoblinAxeman_C_GameplayTagUpdated final
{
public:
	struct FGameplayTag                           InGameplayTag;                                     // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	int32                                         InCount;                                           // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GoblinAxeman_C_GameplayTagUpdated) == 0x000004, "Wrong alignment on BP_GoblinAxeman_C_GameplayTagUpdated");
static_assert(sizeof(BP_GoblinAxeman_C_GameplayTagUpdated) == 0x00000C, "Wrong size on BP_GoblinAxeman_C_GameplayTagUpdated");
static_assert(offsetof(BP_GoblinAxeman_C_GameplayTagUpdated, InGameplayTag) == 0x000000, "Member 'BP_GoblinAxeman_C_GameplayTagUpdated::InGameplayTag' has a wrong offset!");
static_assert(offsetof(BP_GoblinAxeman_C_GameplayTagUpdated, InCount) == 0x000008, "Member 'BP_GoblinAxeman_C_GameplayTagUpdated::InCount' has a wrong offset!");

// Function BP_GoblinAxeman.BP_GoblinAxeman_C.OnFMsgGASAttributeNotifyBlueprint
// 0x0720 (0x0720 - 0x0000)
struct BP_GoblinAxeman_C_OnFMsgGASAttributeNotifyBlueprint final
{
public:
	struct FMsgGASAttributeNotify                 InMsg;                                             // 0x0000(0x0720)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(BP_GoblinAxeman_C_OnFMsgGASAttributeNotifyBlueprint) == 0x000008, "Wrong alignment on BP_GoblinAxeman_C_OnFMsgGASAttributeNotifyBlueprint");
static_assert(sizeof(BP_GoblinAxeman_C_OnFMsgGASAttributeNotifyBlueprint) == 0x000720, "Wrong size on BP_GoblinAxeman_C_OnFMsgGASAttributeNotifyBlueprint");
static_assert(offsetof(BP_GoblinAxeman_C_OnFMsgGASAttributeNotifyBlueprint, InMsg) == 0x000000, "Member 'BP_GoblinAxeman_C_OnFMsgGASAttributeNotifyBlueprint::InMsg' has a wrong offset!");

}

