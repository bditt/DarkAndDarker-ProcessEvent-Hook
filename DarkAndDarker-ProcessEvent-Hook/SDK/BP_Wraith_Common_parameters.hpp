#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Wraith_Common

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"
#include "GameplayAbilities_structs.hpp"


namespace SDK::Params
{

// Function BP_Wraith_Common.BP_Wraith_Common_C.ExecuteUbergraph_BP_Wraith_Common
// 0x0110 (0x0110 - 0x0000)
struct BP_Wraith_Common_C_ExecuteUbergraph_BP_Wraith_Common final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59FE[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBlackboardComponent*                   CallFunc_GetBlackboard_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_Event_InGameplayTag;                        // 0x0010(0x0008)(ConstParm, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_InCount;                              // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59FF[0x3];                                     // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayCueTag                        CallFunc_Map_Find_Value;                           // 0x0020(0x0008)(NoDestructor)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A00[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        CallFunc_K2_GetRootComponent_ReturnValue;          // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 CallFunc_MakeGameplayCueParameters_ReturnValue;    // 0x0038(0x00D8)(ContainsInstancedReference)
};
static_assert(alignof(BP_Wraith_Common_C_ExecuteUbergraph_BP_Wraith_Common) == 0x000008, "Wrong alignment on BP_Wraith_Common_C_ExecuteUbergraph_BP_Wraith_Common");
static_assert(sizeof(BP_Wraith_Common_C_ExecuteUbergraph_BP_Wraith_Common) == 0x000110, "Wrong size on BP_Wraith_Common_C_ExecuteUbergraph_BP_Wraith_Common");
static_assert(offsetof(BP_Wraith_Common_C_ExecuteUbergraph_BP_Wraith_Common, EntryPoint) == 0x000000, "Member 'BP_Wraith_Common_C_ExecuteUbergraph_BP_Wraith_Common::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_Wraith_Common_C_ExecuteUbergraph_BP_Wraith_Common, CallFunc_GetBlackboard_ReturnValue) == 0x000008, "Member 'BP_Wraith_Common_C_ExecuteUbergraph_BP_Wraith_Common::CallFunc_GetBlackboard_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Wraith_Common_C_ExecuteUbergraph_BP_Wraith_Common, K2Node_Event_InGameplayTag) == 0x000010, "Member 'BP_Wraith_Common_C_ExecuteUbergraph_BP_Wraith_Common::K2Node_Event_InGameplayTag' has a wrong offset!");
static_assert(offsetof(BP_Wraith_Common_C_ExecuteUbergraph_BP_Wraith_Common, K2Node_Event_InCount) == 0x000018, "Member 'BP_Wraith_Common_C_ExecuteUbergraph_BP_Wraith_Common::K2Node_Event_InCount' has a wrong offset!");
static_assert(offsetof(BP_Wraith_Common_C_ExecuteUbergraph_BP_Wraith_Common, CallFunc_Greater_IntInt_ReturnValue) == 0x00001C, "Member 'BP_Wraith_Common_C_ExecuteUbergraph_BP_Wraith_Common::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Wraith_Common_C_ExecuteUbergraph_BP_Wraith_Common, CallFunc_Map_Find_Value) == 0x000020, "Member 'BP_Wraith_Common_C_ExecuteUbergraph_BP_Wraith_Common::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_Wraith_Common_C_ExecuteUbergraph_BP_Wraith_Common, CallFunc_Map_Find_ReturnValue) == 0x000028, "Member 'BP_Wraith_Common_C_ExecuteUbergraph_BP_Wraith_Common::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Wraith_Common_C_ExecuteUbergraph_BP_Wraith_Common, CallFunc_K2_GetRootComponent_ReturnValue) == 0x000030, "Member 'BP_Wraith_Common_C_ExecuteUbergraph_BP_Wraith_Common::CallFunc_K2_GetRootComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Wraith_Common_C_ExecuteUbergraph_BP_Wraith_Common, CallFunc_MakeGameplayCueParameters_ReturnValue) == 0x000038, "Member 'BP_Wraith_Common_C_ExecuteUbergraph_BP_Wraith_Common::CallFunc_MakeGameplayCueParameters_ReturnValue' has a wrong offset!");

// Function BP_Wraith_Common.BP_Wraith_Common_C.GameplayTagUpdated
// 0x000C (0x000C - 0x0000)
struct BP_Wraith_Common_C_GameplayTagUpdated final
{
public:
	struct FGameplayTag                           InGameplayTag;                                     // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	int32                                         InCount;                                           // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Wraith_Common_C_GameplayTagUpdated) == 0x000004, "Wrong alignment on BP_Wraith_Common_C_GameplayTagUpdated");
static_assert(sizeof(BP_Wraith_Common_C_GameplayTagUpdated) == 0x00000C, "Wrong size on BP_Wraith_Common_C_GameplayTagUpdated");
static_assert(offsetof(BP_Wraith_Common_C_GameplayTagUpdated, InGameplayTag) == 0x000000, "Member 'BP_Wraith_Common_C_GameplayTagUpdated::InGameplayTag' has a wrong offset!");
static_assert(offsetof(BP_Wraith_Common_C_GameplayTagUpdated, InCount) == 0x000008, "Member 'BP_Wraith_Common_C_GameplayTagUpdated::InCount' has a wrong offset!");

}

