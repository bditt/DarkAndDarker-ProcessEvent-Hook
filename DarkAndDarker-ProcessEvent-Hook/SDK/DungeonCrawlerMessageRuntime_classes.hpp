#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: DungeonCrawlerMessageRuntime

#include "Basic.hpp"

#include "DungeonCrawlerMessageRuntime_structs.hpp"
#include "CoreUObject_classes.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// Class DungeonCrawlerMessageRuntime.BaseObject
// 0x00A0 (0x00C8 - 0x0028)
class UBaseObject final : public UObject
{
public:
	uint8                                         Pad_1B64[0x50];                                    // 0x0028(0x0050)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class FString, struct FBindMsgNodeArray> MsgMulticastDelegateBlueprintMap;                  // 0x0078(0x0050)(NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"BaseObject">();
	}
	static class UBaseObject* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBaseObject>();
	}
};
static_assert(alignof(UBaseObject) == 0x000008, "Wrong alignment on UBaseObject");
static_assert(sizeof(UBaseObject) == 0x0000C8, "Wrong size on UBaseObject");
static_assert(offsetof(UBaseObject, MsgMulticastDelegateBlueprintMap) == 0x000078, "Member 'UBaseObject::MsgMulticastDelegateBlueprintMap' has a wrong offset!");

// Class DungeonCrawlerMessageRuntime.BaseInterface
// 0x0000 (0x0028 - 0x0028)
class IBaseInterface final : public IInterface
{
public:
	void BroadcastMsgBlueprint(const int32& InMsg);
	void TerminateBase();
	void UnbindMsg(class UScriptStruct* InMsgType, class UObject* InObject);
	void UnbindMsgAll(class UObject* InObject);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"BaseInterface">();
	}
	static class IBaseInterface* GetDefaultObj()
	{
		return GetDefaultObjImpl<IBaseInterface>();
	}
};
static_assert(alignof(IBaseInterface) == 0x000008, "Wrong alignment on IBaseInterface");
static_assert(sizeof(IBaseInterface) == 0x000028, "Wrong size on IBaseInterface");

// Class DungeonCrawlerMessageRuntime.MsgBaseNode
// 0x0040 (0x0070 - 0x0030)
class UMsgBaseNode : public UCancellableAsyncAction
{
public:
	FMulticastInlineDelegateProperty_             OnMessageReceived;                                 // 0x0030(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_1B65[0x30];                                    // 0x0040(0x0030)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	bool GetPayload(int32& OutRecvMsgType);
	void ReplyMsg(const int32& InMsg);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"MsgBaseNode">();
	}
	static class UMsgBaseNode* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMsgBaseNode>();
	}
};
static_assert(alignof(UMsgBaseNode) == 0x000008, "Wrong alignment on UMsgBaseNode");
static_assert(sizeof(UMsgBaseNode) == 0x000070, "Wrong size on UMsgBaseNode");
static_assert(offsetof(UMsgBaseNode, OnMessageReceived) == 0x000030, "Member 'UMsgBaseNode::OnMessageReceived' has a wrong offset!");

// Class DungeonCrawlerMessageRuntime.BindMsgNode
// 0x0000 (0x0070 - 0x0070)
class UBindMsgNode final : public UMsgBaseNode
{
public:
	static class UBindMsgNode* BindMsgNode(class UObject* Owner, class UScriptStruct* RecvMsgType, TScriptInterface<class IBaseInterface> BaseInterface);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"BindMsgNode">();
	}
	static class UBindMsgNode* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBindMsgNode>();
	}
};
static_assert(alignof(UBindMsgNode) == 0x000008, "Wrong alignment on UBindMsgNode");
static_assert(sizeof(UBindMsgNode) == 0x000070, "Wrong size on UBindMsgNode");

// Class DungeonCrawlerMessageRuntime.BroadcastMsgNode
// 0x0000 (0x0070 - 0x0070)
class UBroadcastMsgNode final : public UMsgBaseNode
{
public:
	static class UBroadcastMsgNode* BroadcastMsgNode(class UObject* Owner, class UScriptStruct* RecvMsgType, TScriptInterface<class IBaseInterface> BaseInterface);

	void BroadcastMsg(const int32& InMsg);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"BroadcastMsgNode">();
	}
	static class UBroadcastMsgNode* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBroadcastMsgNode>();
	}
};
static_assert(alignof(UBroadcastMsgNode) == 0x000008, "Wrong alignment on UBroadcastMsgNode");
static_assert(sizeof(UBroadcastMsgNode) == 0x000070, "Wrong size on UBroadcastMsgNode");

}

