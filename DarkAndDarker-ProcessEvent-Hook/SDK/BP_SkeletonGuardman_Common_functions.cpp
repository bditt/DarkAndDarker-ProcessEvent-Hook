#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_SkeletonGuardman_Common

#include "Basic.hpp"

#include "BP_SkeletonGuardman_Common_classes.hpp"
#include "BP_SkeletonGuardman_Common_parameters.hpp"


namespace SDK
{

// Function BP_SkeletonGuardman_Common.BP_SkeletonGuardman_Common_C.ExecuteUbergraph_BP_SkeletonGuardman_Common
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_SkeletonGuardman_Common_C::ExecuteUbergraph_BP_SkeletonGuardman_Common(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SkeletonGuardman_Common_C", "ExecuteUbergraph_BP_SkeletonGuardman_Common");

	Params::BP_SkeletonGuardman_Common_C_ExecuteUbergraph_BP_SkeletonGuardman_Common Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SkeletonGuardman_Common.BP_SkeletonGuardman_Common_C.InteractFound
// (Event, Protected, BlueprintEvent)
// Parameters:
// class AActor*                           Interacter                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              InteractPart                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void ABP_SkeletonGuardman_Common_C::InteractFound(class AActor* Interacter, class UPrimitiveComponent* InteractPart)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SkeletonGuardman_Common_C", "InteractFound");

	Params::BP_SkeletonGuardman_Common_C_InteractFound Parms{};

	Parms.Interacter = Interacter;
	Parms.InteractPart = InteractPart;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SkeletonGuardman_Common.BP_SkeletonGuardman_Common_C.InteractLost
// (Event, Protected, BlueprintEvent)
// Parameters:
// class AActor*                           Interacter                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_SkeletonGuardman_Common_C::InteractLost(class AActor* Interacter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SkeletonGuardman_Common_C", "InteractLost");

	Params::BP_SkeletonGuardman_Common_C_InteractLost Parms{};

	Parms.Interacter = Interacter;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SkeletonGuardman_Common.BP_SkeletonGuardman_Common_C.OnAsyncInitialized
// (Event, Protected, BlueprintEvent)

void ABP_SkeletonGuardman_Common_C::OnAsyncInitialized()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SkeletonGuardman_Common_C", "OnAsyncInitialized");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SkeletonGuardman_Common.BP_SkeletonGuardman_Common_C.OnStuckByShield
// (Event, Public, BlueprintEvent)
// Parameters:
// class ADCCharacterBase*                 InInstigator                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class AActor*                           InEffectCauser                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_SkeletonGuardman_Common_C::OnStuckByShield(class ADCCharacterBase* InInstigator, class AActor* InEffectCauser)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SkeletonGuardman_Common_C", "OnStuckByShield");

	Params::BP_SkeletonGuardman_Common_C_OnStuckByShield Parms{};

	Parms.InInstigator = InInstigator;
	Parms.InEffectCauser = InEffectCauser;

	UObject::ProcessEvent(Func, &Parms);
}

}

