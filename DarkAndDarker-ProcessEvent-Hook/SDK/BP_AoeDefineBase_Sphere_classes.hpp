#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AoeDefineBase_Sphere

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "BP_AoeDefineBase_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_AoeDefineBase_Sphere.BP_AoeDefineBase_Sphere_C
// 0x0010 (0x0910 - 0x0900)
#pragma pack(push, 0x1)
class alignas(0x10) ABP_AoeDefineBase_Sphere_C : public ABP_AoeDefineBase_C
{
public:
	uint8                                         Pad_484F[0x4];                                     // 0x08F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_AoeDefineBase_Sphere_C;          // 0x08F8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USphereComponent*                       Sphere;                                            // 0x0900(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_AoeDefineBase_Sphere(int32 EntryPoint);
	void Preceding_Time_over();
	void Set_Collision_Profile_Activate(class UPrimitiveComponent* Target);
	void Set_Collision_Profile_Deactivate(class UPrimitiveComponent* Target);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_AoeDefineBase_Sphere_C">();
	}
	static class ABP_AoeDefineBase_Sphere_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_AoeDefineBase_Sphere_C>();
	}
};
#pragma pack(pop)
static_assert(alignof(ABP_AoeDefineBase_Sphere_C) == 0x000010, "Wrong alignment on ABP_AoeDefineBase_Sphere_C");
static_assert(sizeof(ABP_AoeDefineBase_Sphere_C) == 0x000910, "Wrong size on ABP_AoeDefineBase_Sphere_C");
static_assert(offsetof(ABP_AoeDefineBase_Sphere_C, UberGraphFrame_BP_AoeDefineBase_Sphere_C) == 0x0008F8, "Member 'ABP_AoeDefineBase_Sphere_C::UberGraphFrame_BP_AoeDefineBase_Sphere_C' has a wrong offset!");
static_assert(offsetof(ABP_AoeDefineBase_Sphere_C, Sphere) == 0x000900, "Member 'ABP_AoeDefineBase_Sphere_C::Sphere' has a wrong offset!");

}

