#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ChainPlugin

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// Class ChainPlugin.ChainComponent
// 0x01D0 (0x0780 - 0x05B0)
#pragma pack(push, 0x1)
class alignas(0x10) UChainComponent : public UMeshComponent
{
public:
	float                                         Lerp;                                              // 0x05A8(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_294D[0x4];                                     // 0x05AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	FMulticastInlineDelegateProperty_             OnSoundReached;                                    // 0x05B0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnCollide;                                         // 0x05C0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class UStaticMesh*                            ChainMesh;                                         // 0x05D0(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                Scale;                                             // 0x05D8(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Segments;                                          // 0x05F0(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_294E[0x4];                                     // 0x05F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                AdditiveRotation;                                  // 0x05F8(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ChainLength;                                       // 0x0610(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsLocal;                                          // 0x0614(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_294F[0x3];                                     // 0x0615(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                EndPoint;                                          // 0x0618(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          AttachStart;                                       // 0x0630(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2950[0x7];                                     // 0x0631(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FComponentReference                    AttachStartTo;                                     // 0x0638(0x0028)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	class FName                                   AttachStartToSocket;                               // 0x0660(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          AttachEnd;                                         // 0x0668(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2951[0x7];                                     // 0x0669(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FComponentReference                    AttachEndTo;                                       // 0x0670(0x0028)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	class FName                                   AttachEndToSocket;                                 // 0x0698(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FComponentReference                    AttachComponentToStart;                            // 0x06A0(0x0028)(Edit, NativeAccessSpecifierPublic)
	bool                                          RotateStartAttachment;                             // 0x06C8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2952[0x7];                                     // 0x06C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FComponentReference                    AttachComponentToEnd;                              // 0x06D0(0x0028)(Edit, NativeAccessSpecifierPublic)
	bool                                          RotateEndAttachment;                               // 0x06F8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2953[0x3];                                     // 0x06F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Gravity;                                           // 0x06FC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Stiffness;                                         // 0x0700(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Friction;                                          // 0x0704(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ChainWidth;                                        // 0x0708(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          SelfCollision;                                     // 0x070C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2954[0x3];                                     // 0x070D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         SelfCollisionWidth;                                // 0x0710(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SelfCollisionThreshold;                            // 0x0714(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Skip;                                              // 0x0718(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          DrawDebugger;                                      // 0x071C(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2955[0x3];                                     // 0x071D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UInstancedStaticMeshComponent*          InstanceComponent;                                 // 0x0720(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SoundThreshold;                                    // 0x0728(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         SoundSkip;                                         // 0x072C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2956[0x48];                                    // 0x0730(0x0048)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	TArray<int32> ApplyForce(const struct FVector& InPosition, float InRadius, const struct FVector& InForce);
	void AttachEndToActor(const struct FComponentReference& ComponentReference, class FName Socket);
	void AttachStartToActor(const struct FComponentReference& ComponentReference, class FName Socket);
	struct FVector GetChainPoint(int32 Param_Index);
	TArray<struct FChainPoint> GetChainPoints();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ChainComponent">();
	}
	static class UChainComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UChainComponent>();
	}
};
#pragma pack(pop)
static_assert(alignof(UChainComponent) == 0x000010, "Wrong alignment on UChainComponent");
static_assert(sizeof(UChainComponent) == 0x000780, "Wrong size on UChainComponent");
static_assert(offsetof(UChainComponent, Lerp) == 0x0005A8, "Member 'UChainComponent::Lerp' has a wrong offset!");
static_assert(offsetof(UChainComponent, OnSoundReached) == 0x0005B0, "Member 'UChainComponent::OnSoundReached' has a wrong offset!");
static_assert(offsetof(UChainComponent, OnCollide) == 0x0005C0, "Member 'UChainComponent::OnCollide' has a wrong offset!");
static_assert(offsetof(UChainComponent, ChainMesh) == 0x0005D0, "Member 'UChainComponent::ChainMesh' has a wrong offset!");
static_assert(offsetof(UChainComponent, Scale) == 0x0005D8, "Member 'UChainComponent::Scale' has a wrong offset!");
static_assert(offsetof(UChainComponent, Segments) == 0x0005F0, "Member 'UChainComponent::Segments' has a wrong offset!");
static_assert(offsetof(UChainComponent, AdditiveRotation) == 0x0005F8, "Member 'UChainComponent::AdditiveRotation' has a wrong offset!");
static_assert(offsetof(UChainComponent, ChainLength) == 0x000610, "Member 'UChainComponent::ChainLength' has a wrong offset!");
static_assert(offsetof(UChainComponent, bIsLocal) == 0x000614, "Member 'UChainComponent::bIsLocal' has a wrong offset!");
static_assert(offsetof(UChainComponent, EndPoint) == 0x000618, "Member 'UChainComponent::EndPoint' has a wrong offset!");
static_assert(offsetof(UChainComponent, AttachStart) == 0x000630, "Member 'UChainComponent::AttachStart' has a wrong offset!");
static_assert(offsetof(UChainComponent, AttachStartTo) == 0x000638, "Member 'UChainComponent::AttachStartTo' has a wrong offset!");
static_assert(offsetof(UChainComponent, AttachStartToSocket) == 0x000660, "Member 'UChainComponent::AttachStartToSocket' has a wrong offset!");
static_assert(offsetof(UChainComponent, AttachEnd) == 0x000668, "Member 'UChainComponent::AttachEnd' has a wrong offset!");
static_assert(offsetof(UChainComponent, AttachEndTo) == 0x000670, "Member 'UChainComponent::AttachEndTo' has a wrong offset!");
static_assert(offsetof(UChainComponent, AttachEndToSocket) == 0x000698, "Member 'UChainComponent::AttachEndToSocket' has a wrong offset!");
static_assert(offsetof(UChainComponent, AttachComponentToStart) == 0x0006A0, "Member 'UChainComponent::AttachComponentToStart' has a wrong offset!");
static_assert(offsetof(UChainComponent, RotateStartAttachment) == 0x0006C8, "Member 'UChainComponent::RotateStartAttachment' has a wrong offset!");
static_assert(offsetof(UChainComponent, AttachComponentToEnd) == 0x0006D0, "Member 'UChainComponent::AttachComponentToEnd' has a wrong offset!");
static_assert(offsetof(UChainComponent, RotateEndAttachment) == 0x0006F8, "Member 'UChainComponent::RotateEndAttachment' has a wrong offset!");
static_assert(offsetof(UChainComponent, Gravity) == 0x0006FC, "Member 'UChainComponent::Gravity' has a wrong offset!");
static_assert(offsetof(UChainComponent, Stiffness) == 0x000700, "Member 'UChainComponent::Stiffness' has a wrong offset!");
static_assert(offsetof(UChainComponent, Friction) == 0x000704, "Member 'UChainComponent::Friction' has a wrong offset!");
static_assert(offsetof(UChainComponent, ChainWidth) == 0x000708, "Member 'UChainComponent::ChainWidth' has a wrong offset!");
static_assert(offsetof(UChainComponent, SelfCollision) == 0x00070C, "Member 'UChainComponent::SelfCollision' has a wrong offset!");
static_assert(offsetof(UChainComponent, SelfCollisionWidth) == 0x000710, "Member 'UChainComponent::SelfCollisionWidth' has a wrong offset!");
static_assert(offsetof(UChainComponent, SelfCollisionThreshold) == 0x000714, "Member 'UChainComponent::SelfCollisionThreshold' has a wrong offset!");
static_assert(offsetof(UChainComponent, Skip) == 0x000718, "Member 'UChainComponent::Skip' has a wrong offset!");
static_assert(offsetof(UChainComponent, DrawDebugger) == 0x00071C, "Member 'UChainComponent::DrawDebugger' has a wrong offset!");
static_assert(offsetof(UChainComponent, InstanceComponent) == 0x000720, "Member 'UChainComponent::InstanceComponent' has a wrong offset!");
static_assert(offsetof(UChainComponent, SoundThreshold) == 0x000728, "Member 'UChainComponent::SoundThreshold' has a wrong offset!");
static_assert(offsetof(UChainComponent, SoundSkip) == 0x00072C, "Member 'UChainComponent::SoundSkip' has a wrong offset!");

// Class ChainPlugin.SplineChainComponent
// 0x0090 (0x0810 - 0x0780)
class USplineChainComponent final : public UChainComponent
{
public:
	struct FRuntimeFloatCurve                     SplineFollowWeight;                                // 0x0778(0x0088)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	class USplineComponent*                       SplineComponent;                                   // 0x0800(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_2959[0x8];                                     // 0x0808(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SplineChainComponent">();
	}
	static class USplineChainComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<USplineChainComponent>();
	}
};
static_assert(alignof(USplineChainComponent) == 0x000010, "Wrong alignment on USplineChainComponent");
static_assert(sizeof(USplineChainComponent) == 0x000810, "Wrong size on USplineChainComponent");
static_assert(offsetof(USplineChainComponent, SplineFollowWeight) == 0x000778, "Member 'USplineChainComponent::SplineFollowWeight' has a wrong offset!");
static_assert(offsetof(USplineChainComponent, SplineComponent) == 0x000800, "Member 'USplineChainComponent::SplineComponent' has a wrong offset!");

}

