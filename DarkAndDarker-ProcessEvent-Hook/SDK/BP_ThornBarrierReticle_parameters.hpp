#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ThornBarrierReticle

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_ThornBarrierReticle.BP_ThornBarrierReticle_C.ExecuteUbergraph_BP_ThornBarrierReticle
// 0x0030 (0x0030 - 0x0000)
struct BP_ThornBarrierReticle_C_ExecuteUbergraph_BP_ThornBarrierReticle final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Event_ParamName;                            // 0x0004(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C98[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_Event_value;                                // 0x0010(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bNewValue;                            // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ThornBarrierReticle_C_ExecuteUbergraph_BP_ThornBarrierReticle) == 0x000008, "Wrong alignment on BP_ThornBarrierReticle_C_ExecuteUbergraph_BP_ThornBarrierReticle");
static_assert(sizeof(BP_ThornBarrierReticle_C_ExecuteUbergraph_BP_ThornBarrierReticle) == 0x000030, "Wrong size on BP_ThornBarrierReticle_C_ExecuteUbergraph_BP_ThornBarrierReticle");
static_assert(offsetof(BP_ThornBarrierReticle_C_ExecuteUbergraph_BP_ThornBarrierReticle, EntryPoint) == 0x000000, "Member 'BP_ThornBarrierReticle_C_ExecuteUbergraph_BP_ThornBarrierReticle::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_ThornBarrierReticle_C_ExecuteUbergraph_BP_ThornBarrierReticle, K2Node_Event_ParamName) == 0x000004, "Member 'BP_ThornBarrierReticle_C_ExecuteUbergraph_BP_ThornBarrierReticle::K2Node_Event_ParamName' has a wrong offset!");
static_assert(offsetof(BP_ThornBarrierReticle_C_ExecuteUbergraph_BP_ThornBarrierReticle, K2Node_Event_value) == 0x000010, "Member 'BP_ThornBarrierReticle_C_ExecuteUbergraph_BP_ThornBarrierReticle::K2Node_Event_value' has a wrong offset!");
static_assert(offsetof(BP_ThornBarrierReticle_C_ExecuteUbergraph_BP_ThornBarrierReticle, K2Node_Event_bNewValue) == 0x000028, "Member 'BP_ThornBarrierReticle_C_ExecuteUbergraph_BP_ThornBarrierReticle::K2Node_Event_bNewValue' has a wrong offset!");

// Function BP_ThornBarrierReticle.BP_ThornBarrierReticle_C.OnValidTargetChanged
// 0x0001 (0x0001 - 0x0000)
struct BP_ThornBarrierReticle_C_OnValidTargetChanged final
{
public:
	bool                                          bNewValue;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ThornBarrierReticle_C_OnValidTargetChanged) == 0x000001, "Wrong alignment on BP_ThornBarrierReticle_C_OnValidTargetChanged");
static_assert(sizeof(BP_ThornBarrierReticle_C_OnValidTargetChanged) == 0x000001, "Wrong size on BP_ThornBarrierReticle_C_OnValidTargetChanged");
static_assert(offsetof(BP_ThornBarrierReticle_C_OnValidTargetChanged, bNewValue) == 0x000000, "Member 'BP_ThornBarrierReticle_C_OnValidTargetChanged::bNewValue' has a wrong offset!");

// Function BP_ThornBarrierReticle.BP_ThornBarrierReticle_C.SetReticleMaterialParamVector
// 0x0020 (0x0020 - 0x0000)
struct BP_ThornBarrierReticle_C_SetReticleMaterialParamVector final
{
public:
	class FName                                   ParamName;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Value;                                             // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ThornBarrierReticle_C_SetReticleMaterialParamVector) == 0x000008, "Wrong alignment on BP_ThornBarrierReticle_C_SetReticleMaterialParamVector");
static_assert(sizeof(BP_ThornBarrierReticle_C_SetReticleMaterialParamVector) == 0x000020, "Wrong size on BP_ThornBarrierReticle_C_SetReticleMaterialParamVector");
static_assert(offsetof(BP_ThornBarrierReticle_C_SetReticleMaterialParamVector, ParamName) == 0x000000, "Member 'BP_ThornBarrierReticle_C_SetReticleMaterialParamVector::ParamName' has a wrong offset!");
static_assert(offsetof(BP_ThornBarrierReticle_C_SetReticleMaterialParamVector, Value) == 0x000008, "Member 'BP_ThornBarrierReticle_C_SetReticleMaterialParamVector::Value' has a wrong offset!");

// Function BP_ThornBarrierReticle.BP_ThornBarrierReticle_C.SetSizeVectors
// 0x0068 (0x0068 - 0x0000)
struct BP_ThornBarrierReticle_C_SetSizeVectors final
{
public:
	double                                        CallFunc_BreakVector_X;                            // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_1;                          // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_1;                          // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_1;                          // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0030(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x0050(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ThornBarrierReticle_C_SetSizeVectors) == 0x000008, "Wrong alignment on BP_ThornBarrierReticle_C_SetSizeVectors");
static_assert(sizeof(BP_ThornBarrierReticle_C_SetSizeVectors) == 0x000068, "Wrong size on BP_ThornBarrierReticle_C_SetSizeVectors");
static_assert(offsetof(BP_ThornBarrierReticle_C_SetSizeVectors, CallFunc_BreakVector_X) == 0x000000, "Member 'BP_ThornBarrierReticle_C_SetSizeVectors::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_ThornBarrierReticle_C_SetSizeVectors, CallFunc_BreakVector_Y) == 0x000008, "Member 'BP_ThornBarrierReticle_C_SetSizeVectors::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_ThornBarrierReticle_C_SetSizeVectors, CallFunc_BreakVector_Z) == 0x000010, "Member 'BP_ThornBarrierReticle_C_SetSizeVectors::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_ThornBarrierReticle_C_SetSizeVectors, CallFunc_BreakVector_X_1) == 0x000018, "Member 'BP_ThornBarrierReticle_C_SetSizeVectors::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(BP_ThornBarrierReticle_C_SetSizeVectors, CallFunc_BreakVector_Y_1) == 0x000020, "Member 'BP_ThornBarrierReticle_C_SetSizeVectors::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(BP_ThornBarrierReticle_C_SetSizeVectors, CallFunc_BreakVector_Z_1) == 0x000028, "Member 'BP_ThornBarrierReticle_C_SetSizeVectors::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(BP_ThornBarrierReticle_C_SetSizeVectors, CallFunc_MakeVector_ReturnValue) == 0x000030, "Member 'BP_ThornBarrierReticle_C_SetSizeVectors::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ThornBarrierReticle_C_SetSizeVectors, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000048, "Member 'BP_ThornBarrierReticle_C_SetSizeVectors::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ThornBarrierReticle_C_SetSizeVectors, CallFunc_MakeVector_ReturnValue_1) == 0x000050, "Member 'BP_ThornBarrierReticle_C_SetSizeVectors::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");

// Function BP_ThornBarrierReticle.BP_ThornBarrierReticle_C.UserConstructionScript
// 0x0030 (0x0030 - 0x0000)
struct BP_ThornBarrierReticle_C_UserConstructionScript final
{
public:
	double                                        CallFunc_BreakVector_X;                            // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ThornBarrierReticle_C_UserConstructionScript) == 0x000008, "Wrong alignment on BP_ThornBarrierReticle_C_UserConstructionScript");
static_assert(sizeof(BP_ThornBarrierReticle_C_UserConstructionScript) == 0x000030, "Wrong size on BP_ThornBarrierReticle_C_UserConstructionScript");
static_assert(offsetof(BP_ThornBarrierReticle_C_UserConstructionScript, CallFunc_BreakVector_X) == 0x000000, "Member 'BP_ThornBarrierReticle_C_UserConstructionScript::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_ThornBarrierReticle_C_UserConstructionScript, CallFunc_BreakVector_Y) == 0x000008, "Member 'BP_ThornBarrierReticle_C_UserConstructionScript::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_ThornBarrierReticle_C_UserConstructionScript, CallFunc_BreakVector_Z) == 0x000010, "Member 'BP_ThornBarrierReticle_C_UserConstructionScript::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_ThornBarrierReticle_C_UserConstructionScript, CallFunc_MakeVector_ReturnValue) == 0x000018, "Member 'BP_ThornBarrierReticle_C_UserConstructionScript::CallFunc_MakeVector_ReturnValue' has a wrong offset!");

}

