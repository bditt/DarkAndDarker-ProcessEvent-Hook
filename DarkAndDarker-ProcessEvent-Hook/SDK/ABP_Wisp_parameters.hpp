#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ABP_Wisp

#include "Basic.hpp"

#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function ABP_Wisp.ABP_Wisp_C.AnimGraph
// 0x0010 (0x0010 - 0x0000)
struct ABP_Wisp_C_AnimGraph final
{
public:
	struct FPoseLink                              Param_AnimGraph;                                   // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(ABP_Wisp_C_AnimGraph) == 0x000008, "Wrong alignment on ABP_Wisp_C_AnimGraph");
static_assert(sizeof(ABP_Wisp_C_AnimGraph) == 0x000010, "Wrong size on ABP_Wisp_C_AnimGraph");
static_assert(offsetof(ABP_Wisp_C_AnimGraph, Param_AnimGraph) == 0x000000, "Member 'ABP_Wisp_C_AnimGraph::Param_AnimGraph' has a wrong offset!");

// Function ABP_Wisp.ABP_Wisp_C.BlueprintThreadSafeUpdateAnimation
// 0x0008 (0x0008 - 0x0000)
struct ABP_Wisp_C_BlueprintThreadSafeUpdateAnimation final
{
public:
	float                                         DeltaTime;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_Wisp_C_BlueprintThreadSafeUpdateAnimation) == 0x000004, "Wrong alignment on ABP_Wisp_C_BlueprintThreadSafeUpdateAnimation");
static_assert(sizeof(ABP_Wisp_C_BlueprintThreadSafeUpdateAnimation) == 0x000008, "Wrong size on ABP_Wisp_C_BlueprintThreadSafeUpdateAnimation");
static_assert(offsetof(ABP_Wisp_C_BlueprintThreadSafeUpdateAnimation, DeltaTime) == 0x000000, "Member 'ABP_Wisp_C_BlueprintThreadSafeUpdateAnimation::DeltaTime' has a wrong offset!");
static_assert(offsetof(ABP_Wisp_C_BlueprintThreadSafeUpdateAnimation, CallFunc_Not_PreBool_ReturnValue) == 0x000004, "Member 'ABP_Wisp_C_BlueprintThreadSafeUpdateAnimation::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Wisp_C_BlueprintThreadSafeUpdateAnimation, CallFunc_BooleanAND_ReturnValue) == 0x000005, "Member 'ABP_Wisp_C_BlueprintThreadSafeUpdateAnimation::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Wisp_C_BlueprintThreadSafeUpdateAnimation, CallFunc_Not_PreBool_ReturnValue_1) == 0x000006, "Member 'ABP_Wisp_C_BlueprintThreadSafeUpdateAnimation::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_Wisp_C_BlueprintThreadSafeUpdateAnimation, CallFunc_BooleanAND_ReturnValue_1) == 0x000007, "Member 'ABP_Wisp_C_BlueprintThreadSafeUpdateAnimation::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");

// Function ABP_Wisp.ABP_Wisp_C.ExecuteUbergraph_ABP_Wisp
// 0x0004 (0x0004 - 0x0000)
struct ABP_Wisp_C_ExecuteUbergraph_ABP_Wisp final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_Wisp_C_ExecuteUbergraph_ABP_Wisp) == 0x000004, "Wrong alignment on ABP_Wisp_C_ExecuteUbergraph_ABP_Wisp");
static_assert(sizeof(ABP_Wisp_C_ExecuteUbergraph_ABP_Wisp) == 0x000004, "Wrong size on ABP_Wisp_C_ExecuteUbergraph_ABP_Wisp");
static_assert(offsetof(ABP_Wisp_C_ExecuteUbergraph_ABP_Wisp, EntryPoint) == 0x000000, "Member 'ABP_Wisp_C_ExecuteUbergraph_ABP_Wisp::EntryPoint' has a wrong offset!");

}

