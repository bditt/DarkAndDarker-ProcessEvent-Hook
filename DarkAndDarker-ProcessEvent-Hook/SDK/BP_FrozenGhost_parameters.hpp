#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_FrozenGhost

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "DungeonCrawler_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "GameplayAbilities_structs.hpp"


namespace SDK::Params
{

// Function BP_FrozenGhost.BP_FrozenGhost_C.ChangeFXState
// 0x0010 (0x0010 - 0x0000)
struct BP_FrozenGhost_C_ChangeFXState final
{
public:
	bool                                          New_State;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D0C[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UNiagaraComponent*                      Niagara_System_Component;                          // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FrozenGhost_C_ChangeFXState) == 0x000008, "Wrong alignment on BP_FrozenGhost_C_ChangeFXState");
static_assert(sizeof(BP_FrozenGhost_C_ChangeFXState) == 0x000010, "Wrong size on BP_FrozenGhost_C_ChangeFXState");
static_assert(offsetof(BP_FrozenGhost_C_ChangeFXState, New_State) == 0x000000, "Member 'BP_FrozenGhost_C_ChangeFXState::New_State' has a wrong offset!");
static_assert(offsetof(BP_FrozenGhost_C_ChangeFXState, Niagara_System_Component) == 0x000008, "Member 'BP_FrozenGhost_C_ChangeFXState::Niagara_System_Component' has a wrong offset!");

// Function BP_FrozenGhost.BP_FrozenGhost_C.ChangeFXStateOnTagUpdate
// 0x0018 (0x0018 - 0x0000)
struct BP_FrozenGhost_C_ChangeFXStateOnTagUpdate final
{
public:
	class UNiagaraComponent*                      Niagara_Component;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           In_Gameplay_Tag;                                   // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	int32                                         In_Count;                                          // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_GameplayTag_ReturnValue;       // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_GameplayTag_ReturnValue_1;     // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FrozenGhost_C_ChangeFXStateOnTagUpdate) == 0x000008, "Wrong alignment on BP_FrozenGhost_C_ChangeFXStateOnTagUpdate");
static_assert(sizeof(BP_FrozenGhost_C_ChangeFXStateOnTagUpdate) == 0x000018, "Wrong size on BP_FrozenGhost_C_ChangeFXStateOnTagUpdate");
static_assert(offsetof(BP_FrozenGhost_C_ChangeFXStateOnTagUpdate, Niagara_Component) == 0x000000, "Member 'BP_FrozenGhost_C_ChangeFXStateOnTagUpdate::Niagara_Component' has a wrong offset!");
static_assert(offsetof(BP_FrozenGhost_C_ChangeFXStateOnTagUpdate, In_Gameplay_Tag) == 0x000008, "Member 'BP_FrozenGhost_C_ChangeFXStateOnTagUpdate::In_Gameplay_Tag' has a wrong offset!");
static_assert(offsetof(BP_FrozenGhost_C_ChangeFXStateOnTagUpdate, In_Count) == 0x000010, "Member 'BP_FrozenGhost_C_ChangeFXStateOnTagUpdate::In_Count' has a wrong offset!");
static_assert(offsetof(BP_FrozenGhost_C_ChangeFXStateOnTagUpdate, CallFunc_Greater_IntInt_ReturnValue) == 0x000014, "Member 'BP_FrozenGhost_C_ChangeFXStateOnTagUpdate::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FrozenGhost_C_ChangeFXStateOnTagUpdate, CallFunc_EqualEqual_GameplayTag_ReturnValue) == 0x000015, "Member 'BP_FrozenGhost_C_ChangeFXStateOnTagUpdate::CallFunc_EqualEqual_GameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FrozenGhost_C_ChangeFXStateOnTagUpdate, CallFunc_EqualEqual_GameplayTag_ReturnValue_1) == 0x000016, "Member 'BP_FrozenGhost_C_ChangeFXStateOnTagUpdate::CallFunc_EqualEqual_GameplayTag_ReturnValue_1' has a wrong offset!");

// Function BP_FrozenGhost.BP_FrozenGhost_C.EventReceived_E0BD796B4E82B57E77C3C9A43F09021B
// 0x00B0 (0x00B0 - 0x0000)
struct BP_FrozenGhost_C_EventReceived_E0BD796B4E82B57E77C3C9A43F09021B final
{
public:
	struct FGameplayEventData                     Payload;                                           // 0x0000(0x00B0)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(BP_FrozenGhost_C_EventReceived_E0BD796B4E82B57E77C3C9A43F09021B) == 0x000008, "Wrong alignment on BP_FrozenGhost_C_EventReceived_E0BD796B4E82B57E77C3C9A43F09021B");
static_assert(sizeof(BP_FrozenGhost_C_EventReceived_E0BD796B4E82B57E77C3C9A43F09021B) == 0x0000B0, "Wrong size on BP_FrozenGhost_C_EventReceived_E0BD796B4E82B57E77C3C9A43F09021B");
static_assert(offsetof(BP_FrozenGhost_C_EventReceived_E0BD796B4E82B57E77C3C9A43F09021B, Payload) == 0x000000, "Member 'BP_FrozenGhost_C_EventReceived_E0BD796B4E82B57E77C3C9A43F09021B::Payload' has a wrong offset!");

// Function BP_FrozenGhost.BP_FrozenGhost_C.ExecuteUbergraph_BP_FrozenGhost
// 0x0A80 (0x0A80 - 0x0000)
struct BP_FrozenGhost_C_ExecuteUbergraph_BP_FrozenGhost final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckGradeType_ReturnValue;               // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D0D[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayEventData                     Temp_struct_Variable;                              // 0x0008(0x00B0)()
	class UAbilityAsync_WaitGameplayEvent*        CallFunc_WaitGameplayEventToActor_ReturnValue;     // 0x00B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D0E[0x2];                                     // 0x00CA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEventData                     K2Node_CustomEvent_Payload;                        // 0x00D0(0x00B0)()
	struct FGameplayTag                           K2Node_Event_InGameplayTag;                        // 0x0180(0x0008)(ConstParm, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_InCount;                              // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x018C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D0F[0x3];                                     // 0x018D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(const struct FGameplayEventData& Payload)> K2Node_CreateDelegate_OutputDelegate;              // 0x0190(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess;   // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess_1; // 0x01A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D10[0x6];                                     // 0x01A2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMsgGASAttributeNotify                 K2Node_Event_InMsg;                                // 0x01A8(0x0720)(ConstParm, ContainsInstancedReference)
	class AActor*                                 CallFunc_DCEffectContextGetInstigatorActor_ReturnValue; // 0x08C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_DCEffectContextGetInstigatorActor_ReturnValue_1; // 0x08D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEventData                     K2Node_MakeStruct_GameplayEventData;               // 0x08D8(0x00B0)()
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0988(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_GameplayAttributeGameplayAttribute_ReturnValue; // 0x0989(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue_1;          // 0x098A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue;       // 0x098B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D11[0x4];                                     // 0x098C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FActiveGameplayEffectHandle>    CallFunc_ApplyGameplayEffects_ReturnValue;         // 0x0990(0x0010)(ReferenceParm)
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x09A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UABP_FrozenGhost_C*                     K2Node_DynamicCast_AsABP_Frozen_Ghost;             // 0x09A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x09B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D12[0x7];                                     // 0x09B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_RandomFloatInRange_ReturnValue;           // 0x09B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FActiveGameplayEffectHandle            CallFunc_Array_Get_Item;                           // 0x09C0(0x0008)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x09C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RemoveActiveGameplayEffect_ReturnValue;   // 0x09CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D13[0x3];                                     // 0x09CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x09D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue;                          // 0x09D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue_1;            // 0x09D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UABP_FrozenGhost_C*                     K2Node_DynamicCast_AsABP_Frozen_Ghost_1;           // 0x09E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x09E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D14[0x3];                                     // 0x09E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetDistanceTo_ReturnValue;                // 0x09EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Actor_Has_AI_Timer_Return_Value;          // 0x09F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue_2;          // 0x09F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D15[0x2];                                     // 0x09F2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x09F4(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex)> K2Node_CreateDelegate_OutputDelegate_2;            // 0x0A04(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Get_Enemies_In_Range_And_Angle_From_Actor_Result; // 0x0A14(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D16[0x3];                                     // 0x0A15(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ADCCharacterBase*>               CallFunc_Get_Enemies_In_Range_And_Angle_From_Actor_DCCharacterBase; // 0x0A18(0x0010)(ReferenceParm)
	bool                                          CallFunc_GetFloatAttribute_bSuccessfullyFoundAttribute; // 0x0A28(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D17[0x3];                                     // 0x0A29(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetFloatAttribute_ReturnValue;            // 0x0A2C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0A30(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0A38(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0A40(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x0A48(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x0A49(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0A4A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D18[0x5];                                     // 0x0A4B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Less_DoubleDouble_A_ImplicitCast;         // 0x0A50(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_A_ImplicitCast;       // 0x0A58(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Less_DoubleDouble_A_ImplicitCast_1;       // 0x0A60(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Less_DoubleDouble_B_ImplicitCast;         // 0x0A68(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Less_DoubleDouble_A_ImplicitCast_2;       // 0x0A70(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_B_ImplicitCast;       // 0x0A78(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FrozenGhost_C_ExecuteUbergraph_BP_FrozenGhost) == 0x000008, "Wrong alignment on BP_FrozenGhost_C_ExecuteUbergraph_BP_FrozenGhost");
static_assert(sizeof(BP_FrozenGhost_C_ExecuteUbergraph_BP_FrozenGhost) == 0x000A80, "Wrong size on BP_FrozenGhost_C_ExecuteUbergraph_BP_FrozenGhost");
static_assert(offsetof(BP_FrozenGhost_C_ExecuteUbergraph_BP_FrozenGhost, EntryPoint) == 0x000000, "Member 'BP_FrozenGhost_C_ExecuteUbergraph_BP_FrozenGhost::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_FrozenGhost_C_ExecuteUbergraph_BP_FrozenGhost, CallFunc_CheckGradeType_ReturnValue) == 0x000004, "Member 'BP_FrozenGhost_C_ExecuteUbergraph_BP_FrozenGhost::CallFunc_CheckGradeType_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FrozenGhost_C_ExecuteUbergraph_BP_FrozenGhost, Temp_struct_Variable) == 0x000008, "Member 'BP_FrozenGhost_C_ExecuteUbergraph_BP_FrozenGhost::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_FrozenGhost_C_ExecuteUbergraph_BP_FrozenGhost, CallFunc_WaitGameplayEventToActor_ReturnValue) == 0x0000B8, "Member 'BP_FrozenGhost_C_ExecuteUbergraph_BP_FrozenGhost::CallFunc_WaitGameplayEventToActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FrozenGhost_C_ExecuteUbergraph_BP_FrozenGhost, Temp_int_Loop_Counter_Variable) == 0x0000C0, "Member 'BP_FrozenGhost_C_ExecuteUbergraph_BP_FrozenGhost::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_FrozenGhost_C_ExecuteUbergraph_BP_FrozenGhost, CallFunc_Subtract_IntInt_ReturnValue) == 0x0000C4, "Member 'BP_FrozenGhost_C_ExecuteUbergraph_BP_FrozenGhost::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FrozenGhost_C_ExecuteUbergraph_BP_FrozenGhost, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x0000C8, "Member 'BP_FrozenGhost_C_ExecuteUbergraph_BP_FrozenGhost::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FrozenGhost_C_ExecuteUbergraph_BP_FrozenGhost, CallFunc_IsValid_ReturnValue) == 0x0000C9, "Member 'BP_FrozenGhost_C_ExecuteUbergraph_BP_FrozenGhost::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FrozenGhost_C_ExecuteUbergraph_BP_FrozenGhost, Temp_int_Array_Index_Variable) == 0x0000CC, "Member 'BP_FrozenGhost_C_ExecuteUbergraph_BP_FrozenGhost::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_FrozenGhost_C_ExecuteUbergraph_BP_FrozenGhost, K2Node_CustomEvent_Payload) == 0x0000D0, "Member 'BP_FrozenGhost_C_ExecuteUbergraph_BP_FrozenGhost::K2Node_CustomEvent_Payload' has a wrong offset!");
static_assert(offsetof(BP_FrozenGhost_C_ExecuteUbergraph_BP_FrozenGhost, K2Node_Event_InGameplayTag) == 0x000180, "Member 'BP_FrozenGhost_C_ExecuteUbergraph_BP_FrozenGhost::K2Node_Event_InGameplayTag' has a wrong offset!");
static_assert(offsetof(BP_FrozenGhost_C_ExecuteUbergraph_BP_FrozenGhost, K2Node_Event_InCount) == 0x000188, "Member 'BP_FrozenGhost_C_ExecuteUbergraph_BP_FrozenGhost::K2Node_Event_InCount' has a wrong offset!");
static_assert(offsetof(BP_FrozenGhost_C_ExecuteUbergraph_BP_FrozenGhost, CallFunc_Greater_IntInt_ReturnValue) == 0x00018C, "Member 'BP_FrozenGhost_C_ExecuteUbergraph_BP_FrozenGhost::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FrozenGhost_C_ExecuteUbergraph_BP_FrozenGhost, K2Node_CreateDelegate_OutputDelegate) == 0x000190, "Member 'BP_FrozenGhost_C_ExecuteUbergraph_BP_FrozenGhost::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_FrozenGhost_C_ExecuteUbergraph_BP_FrozenGhost, GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess) == 0x0001A0, "Member 'BP_FrozenGhost_C_ExecuteUbergraph_BP_FrozenGhost::GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_FrozenGhost_C_ExecuteUbergraph_BP_FrozenGhost, GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess_1) == 0x0001A1, "Member 'BP_FrozenGhost_C_ExecuteUbergraph_BP_FrozenGhost::GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_FrozenGhost_C_ExecuteUbergraph_BP_FrozenGhost, K2Node_Event_InMsg) == 0x0001A8, "Member 'BP_FrozenGhost_C_ExecuteUbergraph_BP_FrozenGhost::K2Node_Event_InMsg' has a wrong offset!");
static_assert(offsetof(BP_FrozenGhost_C_ExecuteUbergraph_BP_FrozenGhost, CallFunc_DCEffectContextGetInstigatorActor_ReturnValue) == 0x0008C8, "Member 'BP_FrozenGhost_C_ExecuteUbergraph_BP_FrozenGhost::CallFunc_DCEffectContextGetInstigatorActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FrozenGhost_C_ExecuteUbergraph_BP_FrozenGhost, CallFunc_DCEffectContextGetInstigatorActor_ReturnValue_1) == 0x0008D0, "Member 'BP_FrozenGhost_C_ExecuteUbergraph_BP_FrozenGhost::CallFunc_DCEffectContextGetInstigatorActor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FrozenGhost_C_ExecuteUbergraph_BP_FrozenGhost, K2Node_MakeStruct_GameplayEventData) == 0x0008D8, "Member 'BP_FrozenGhost_C_ExecuteUbergraph_BP_FrozenGhost::K2Node_MakeStruct_GameplayEventData' has a wrong offset!");
static_assert(offsetof(BP_FrozenGhost_C_ExecuteUbergraph_BP_FrozenGhost, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000988, "Member 'BP_FrozenGhost_C_ExecuteUbergraph_BP_FrozenGhost::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FrozenGhost_C_ExecuteUbergraph_BP_FrozenGhost, CallFunc_EqualEqual_GameplayAttributeGameplayAttribute_ReturnValue) == 0x000989, "Member 'BP_FrozenGhost_C_ExecuteUbergraph_BP_FrozenGhost::CallFunc_EqualEqual_GameplayAttributeGameplayAttribute_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FrozenGhost_C_ExecuteUbergraph_BP_FrozenGhost, CallFunc_Less_DoubleDouble_ReturnValue_1) == 0x00098A, "Member 'BP_FrozenGhost_C_ExecuteUbergraph_BP_FrozenGhost::CallFunc_Less_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FrozenGhost_C_ExecuteUbergraph_BP_FrozenGhost, CallFunc_HasMatchingGameplayTag_ReturnValue) == 0x00098B, "Member 'BP_FrozenGhost_C_ExecuteUbergraph_BP_FrozenGhost::CallFunc_HasMatchingGameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FrozenGhost_C_ExecuteUbergraph_BP_FrozenGhost, CallFunc_ApplyGameplayEffects_ReturnValue) == 0x000990, "Member 'BP_FrozenGhost_C_ExecuteUbergraph_BP_FrozenGhost::CallFunc_ApplyGameplayEffects_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FrozenGhost_C_ExecuteUbergraph_BP_FrozenGhost, CallFunc_GetAnimInstance_ReturnValue) == 0x0009A0, "Member 'BP_FrozenGhost_C_ExecuteUbergraph_BP_FrozenGhost::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FrozenGhost_C_ExecuteUbergraph_BP_FrozenGhost, K2Node_DynamicCast_AsABP_Frozen_Ghost) == 0x0009A8, "Member 'BP_FrozenGhost_C_ExecuteUbergraph_BP_FrozenGhost::K2Node_DynamicCast_AsABP_Frozen_Ghost' has a wrong offset!");
static_assert(offsetof(BP_FrozenGhost_C_ExecuteUbergraph_BP_FrozenGhost, K2Node_DynamicCast_bSuccess) == 0x0009B0, "Member 'BP_FrozenGhost_C_ExecuteUbergraph_BP_FrozenGhost::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_FrozenGhost_C_ExecuteUbergraph_BP_FrozenGhost, CallFunc_RandomFloatInRange_ReturnValue) == 0x0009B8, "Member 'BP_FrozenGhost_C_ExecuteUbergraph_BP_FrozenGhost::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FrozenGhost_C_ExecuteUbergraph_BP_FrozenGhost, CallFunc_Array_Get_Item) == 0x0009C0, "Member 'BP_FrozenGhost_C_ExecuteUbergraph_BP_FrozenGhost::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_FrozenGhost_C_ExecuteUbergraph_BP_FrozenGhost, CallFunc_Array_Length_ReturnValue) == 0x0009C8, "Member 'BP_FrozenGhost_C_ExecuteUbergraph_BP_FrozenGhost::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FrozenGhost_C_ExecuteUbergraph_BP_FrozenGhost, CallFunc_RemoveActiveGameplayEffect_ReturnValue) == 0x0009CC, "Member 'BP_FrozenGhost_C_ExecuteUbergraph_BP_FrozenGhost::CallFunc_RemoveActiveGameplayEffect_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FrozenGhost_C_ExecuteUbergraph_BP_FrozenGhost, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x0009D0, "Member 'BP_FrozenGhost_C_ExecuteUbergraph_BP_FrozenGhost::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FrozenGhost_C_ExecuteUbergraph_BP_FrozenGhost, CallFunc_Max_ReturnValue) == 0x0009D4, "Member 'BP_FrozenGhost_C_ExecuteUbergraph_BP_FrozenGhost::CallFunc_Max_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FrozenGhost_C_ExecuteUbergraph_BP_FrozenGhost, CallFunc_GetAnimInstance_ReturnValue_1) == 0x0009D8, "Member 'BP_FrozenGhost_C_ExecuteUbergraph_BP_FrozenGhost::CallFunc_GetAnimInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FrozenGhost_C_ExecuteUbergraph_BP_FrozenGhost, K2Node_DynamicCast_AsABP_Frozen_Ghost_1) == 0x0009E0, "Member 'BP_FrozenGhost_C_ExecuteUbergraph_BP_FrozenGhost::K2Node_DynamicCast_AsABP_Frozen_Ghost_1' has a wrong offset!");
static_assert(offsetof(BP_FrozenGhost_C_ExecuteUbergraph_BP_FrozenGhost, K2Node_DynamicCast_bSuccess_1) == 0x0009E8, "Member 'BP_FrozenGhost_C_ExecuteUbergraph_BP_FrozenGhost::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_FrozenGhost_C_ExecuteUbergraph_BP_FrozenGhost, CallFunc_GetDistanceTo_ReturnValue) == 0x0009EC, "Member 'BP_FrozenGhost_C_ExecuteUbergraph_BP_FrozenGhost::CallFunc_GetDistanceTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FrozenGhost_C_ExecuteUbergraph_BP_FrozenGhost, CallFunc_Actor_Has_AI_Timer_Return_Value) == 0x0009F0, "Member 'BP_FrozenGhost_C_ExecuteUbergraph_BP_FrozenGhost::CallFunc_Actor_Has_AI_Timer_Return_Value' has a wrong offset!");
static_assert(offsetof(BP_FrozenGhost_C_ExecuteUbergraph_BP_FrozenGhost, CallFunc_Less_DoubleDouble_ReturnValue_2) == 0x0009F1, "Member 'BP_FrozenGhost_C_ExecuteUbergraph_BP_FrozenGhost::CallFunc_Less_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_FrozenGhost_C_ExecuteUbergraph_BP_FrozenGhost, K2Node_CreateDelegate_OutputDelegate_1) == 0x0009F4, "Member 'BP_FrozenGhost_C_ExecuteUbergraph_BP_FrozenGhost::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_FrozenGhost_C_ExecuteUbergraph_BP_FrozenGhost, K2Node_CreateDelegate_OutputDelegate_2) == 0x000A04, "Member 'BP_FrozenGhost_C_ExecuteUbergraph_BP_FrozenGhost::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(BP_FrozenGhost_C_ExecuteUbergraph_BP_FrozenGhost, CallFunc_Get_Enemies_In_Range_And_Angle_From_Actor_Result) == 0x000A14, "Member 'BP_FrozenGhost_C_ExecuteUbergraph_BP_FrozenGhost::CallFunc_Get_Enemies_In_Range_And_Angle_From_Actor_Result' has a wrong offset!");
static_assert(offsetof(BP_FrozenGhost_C_ExecuteUbergraph_BP_FrozenGhost, CallFunc_Get_Enemies_In_Range_And_Angle_From_Actor_DCCharacterBase) == 0x000A18, "Member 'BP_FrozenGhost_C_ExecuteUbergraph_BP_FrozenGhost::CallFunc_Get_Enemies_In_Range_And_Angle_From_Actor_DCCharacterBase' has a wrong offset!");
static_assert(offsetof(BP_FrozenGhost_C_ExecuteUbergraph_BP_FrozenGhost, CallFunc_GetFloatAttribute_bSuccessfullyFoundAttribute) == 0x000A28, "Member 'BP_FrozenGhost_C_ExecuteUbergraph_BP_FrozenGhost::CallFunc_GetFloatAttribute_bSuccessfullyFoundAttribute' has a wrong offset!");
static_assert(offsetof(BP_FrozenGhost_C_ExecuteUbergraph_BP_FrozenGhost, CallFunc_GetFloatAttribute_ReturnValue) == 0x000A2C, "Member 'BP_FrozenGhost_C_ExecuteUbergraph_BP_FrozenGhost::CallFunc_GetFloatAttribute_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FrozenGhost_C_ExecuteUbergraph_BP_FrozenGhost, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000A30, "Member 'BP_FrozenGhost_C_ExecuteUbergraph_BP_FrozenGhost::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FrozenGhost_C_ExecuteUbergraph_BP_FrozenGhost, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000A38, "Member 'BP_FrozenGhost_C_ExecuteUbergraph_BP_FrozenGhost::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FrozenGhost_C_ExecuteUbergraph_BP_FrozenGhost, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000A40, "Member 'BP_FrozenGhost_C_ExecuteUbergraph_BP_FrozenGhost::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FrozenGhost_C_ExecuteUbergraph_BP_FrozenGhost, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x000A48, "Member 'BP_FrozenGhost_C_ExecuteUbergraph_BP_FrozenGhost::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FrozenGhost_C_ExecuteUbergraph_BP_FrozenGhost, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x000A49, "Member 'BP_FrozenGhost_C_ExecuteUbergraph_BP_FrozenGhost::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FrozenGhost_C_ExecuteUbergraph_BP_FrozenGhost, CallFunc_BooleanOR_ReturnValue) == 0x000A4A, "Member 'BP_FrozenGhost_C_ExecuteUbergraph_BP_FrozenGhost::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FrozenGhost_C_ExecuteUbergraph_BP_FrozenGhost, CallFunc_Less_DoubleDouble_A_ImplicitCast) == 0x000A50, "Member 'BP_FrozenGhost_C_ExecuteUbergraph_BP_FrozenGhost::CallFunc_Less_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_FrozenGhost_C_ExecuteUbergraph_BP_FrozenGhost, CallFunc_Divide_DoubleDouble_A_ImplicitCast) == 0x000A58, "Member 'BP_FrozenGhost_C_ExecuteUbergraph_BP_FrozenGhost::CallFunc_Divide_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_FrozenGhost_C_ExecuteUbergraph_BP_FrozenGhost, CallFunc_Less_DoubleDouble_A_ImplicitCast_1) == 0x000A60, "Member 'BP_FrozenGhost_C_ExecuteUbergraph_BP_FrozenGhost::CallFunc_Less_DoubleDouble_A_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_FrozenGhost_C_ExecuteUbergraph_BP_FrozenGhost, CallFunc_Less_DoubleDouble_B_ImplicitCast) == 0x000A68, "Member 'BP_FrozenGhost_C_ExecuteUbergraph_BP_FrozenGhost::CallFunc_Less_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_FrozenGhost_C_ExecuteUbergraph_BP_FrozenGhost, CallFunc_Less_DoubleDouble_A_ImplicitCast_2) == 0x000A70, "Member 'BP_FrozenGhost_C_ExecuteUbergraph_BP_FrozenGhost::CallFunc_Less_DoubleDouble_A_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(BP_FrozenGhost_C_ExecuteUbergraph_BP_FrozenGhost, CallFunc_Divide_DoubleDouble_B_ImplicitCast) == 0x000A78, "Member 'BP_FrozenGhost_C_ExecuteUbergraph_BP_FrozenGhost::CallFunc_Divide_DoubleDouble_B_ImplicitCast' has a wrong offset!");

// Function BP_FrozenGhost.BP_FrozenGhost_C.GameplayTagUpdated
// 0x000C (0x000C - 0x0000)
struct BP_FrozenGhost_C_GameplayTagUpdated final
{
public:
	struct FGameplayTag                           InGameplayTag;                                     // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	int32                                         InCount;                                           // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FrozenGhost_C_GameplayTagUpdated) == 0x000004, "Wrong alignment on BP_FrozenGhost_C_GameplayTagUpdated");
static_assert(sizeof(BP_FrozenGhost_C_GameplayTagUpdated) == 0x00000C, "Wrong size on BP_FrozenGhost_C_GameplayTagUpdated");
static_assert(offsetof(BP_FrozenGhost_C_GameplayTagUpdated, InGameplayTag) == 0x000000, "Member 'BP_FrozenGhost_C_GameplayTagUpdated::InGameplayTag' has a wrong offset!");
static_assert(offsetof(BP_FrozenGhost_C_GameplayTagUpdated, InCount) == 0x000008, "Member 'BP_FrozenGhost_C_GameplayTagUpdated::InCount' has a wrong offset!");

// Function BP_FrozenGhost.BP_FrozenGhost_C.OnFMsgGASAttributeNotifyBlueprint
// 0x0720 (0x0720 - 0x0000)
struct BP_FrozenGhost_C_OnFMsgGASAttributeNotifyBlueprint final
{
public:
	struct FMsgGASAttributeNotify                 InMsg;                                             // 0x0000(0x0720)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(BP_FrozenGhost_C_OnFMsgGASAttributeNotifyBlueprint) == 0x000008, "Wrong alignment on BP_FrozenGhost_C_OnFMsgGASAttributeNotifyBlueprint");
static_assert(sizeof(BP_FrozenGhost_C_OnFMsgGASAttributeNotifyBlueprint) == 0x000720, "Wrong size on BP_FrozenGhost_C_OnFMsgGASAttributeNotifyBlueprint");
static_assert(offsetof(BP_FrozenGhost_C_OnFMsgGASAttributeNotifyBlueprint, InMsg) == 0x000000, "Member 'BP_FrozenGhost_C_OnFMsgGASAttributeNotifyBlueprint::InMsg' has a wrong offset!");

// Function BP_FrozenGhost.BP_FrozenGhost_C.Overlap in
// 0x0118 (0x0118 - 0x0000)
struct BP_FrozenGhost_C_Overlap_in final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D19[0x3];                                     // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x00E8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class ADCPlayerCharacterBase*                 K2Node_DynamicCast_AsDCPlayer_Character_Base;      // 0x0108(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D1A[0x3];                                     // 0x0111(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FrozenGhost_C_Overlap_in) == 0x000008, "Wrong alignment on BP_FrozenGhost_C_Overlap_in");
static_assert(sizeof(BP_FrozenGhost_C_Overlap_in) == 0x000118, "Wrong size on BP_FrozenGhost_C_Overlap_in");
static_assert(offsetof(BP_FrozenGhost_C_Overlap_in, OverlappedComponent) == 0x000000, "Member 'BP_FrozenGhost_C_Overlap_in::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_FrozenGhost_C_Overlap_in, OtherActor) == 0x000008, "Member 'BP_FrozenGhost_C_Overlap_in::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_FrozenGhost_C_Overlap_in, OtherComp) == 0x000010, "Member 'BP_FrozenGhost_C_Overlap_in::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_FrozenGhost_C_Overlap_in, OtherBodyIndex) == 0x000018, "Member 'BP_FrozenGhost_C_Overlap_in::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_FrozenGhost_C_Overlap_in, bFromSweep) == 0x00001C, "Member 'BP_FrozenGhost_C_Overlap_in::bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_FrozenGhost_C_Overlap_in, SweepResult) == 0x000020, "Member 'BP_FrozenGhost_C_Overlap_in::SweepResult' has a wrong offset!");
static_assert(offsetof(BP_FrozenGhost_C_Overlap_in, K2Node_DynamicCast_AsDCPlayer_Character_Base) == 0x000108, "Member 'BP_FrozenGhost_C_Overlap_in::K2Node_DynamicCast_AsDCPlayer_Character_Base' has a wrong offset!");
static_assert(offsetof(BP_FrozenGhost_C_Overlap_in, K2Node_DynamicCast_bSuccess) == 0x000110, "Member 'BP_FrozenGhost_C_Overlap_in::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_FrozenGhost_C_Overlap_in, CallFunc_Array_AddUnique_ReturnValue) == 0x000114, "Member 'BP_FrozenGhost_C_Overlap_in::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");

// Function BP_FrozenGhost.BP_FrozenGhost_C.Overlap Out
// 0x0030 (0x0030 - 0x0000)
struct BP_FrozenGhost_C_Overlap_Out final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D1B[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ADCPlayerCharacterBase*                 K2Node_DynamicCast_AsDCPlayer_Character_Base;      // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FrozenGhost_C_Overlap_Out) == 0x000008, "Wrong alignment on BP_FrozenGhost_C_Overlap_Out");
static_assert(sizeof(BP_FrozenGhost_C_Overlap_Out) == 0x000030, "Wrong size on BP_FrozenGhost_C_Overlap_Out");
static_assert(offsetof(BP_FrozenGhost_C_Overlap_Out, OverlappedComponent) == 0x000000, "Member 'BP_FrozenGhost_C_Overlap_Out::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_FrozenGhost_C_Overlap_Out, OtherActor) == 0x000008, "Member 'BP_FrozenGhost_C_Overlap_Out::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_FrozenGhost_C_Overlap_Out, OtherComp) == 0x000010, "Member 'BP_FrozenGhost_C_Overlap_Out::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_FrozenGhost_C_Overlap_Out, OtherBodyIndex) == 0x000018, "Member 'BP_FrozenGhost_C_Overlap_Out::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_FrozenGhost_C_Overlap_Out, K2Node_DynamicCast_AsDCPlayer_Character_Base) == 0x000020, "Member 'BP_FrozenGhost_C_Overlap_Out::K2Node_DynamicCast_AsDCPlayer_Character_Base' has a wrong offset!");
static_assert(offsetof(BP_FrozenGhost_C_Overlap_Out, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BP_FrozenGhost_C_Overlap_Out::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_FrozenGhost_C_Overlap_Out, CallFunc_Array_RemoveItem_ReturnValue) == 0x000029, "Member 'BP_FrozenGhost_C_Overlap_Out::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");

// Function BP_FrozenGhost.BP_FrozenGhost_C.Phase Count  Reset
// 0x0004 (0x0004 - 0x0000)
struct BP_FrozenGhost_C_Phase_Count__Reset final
{
public:
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FrozenGhost_C_Phase_Count__Reset) == 0x000004, "Wrong alignment on BP_FrozenGhost_C_Phase_Count__Reset");
static_assert(sizeof(BP_FrozenGhost_C_Phase_Count__Reset) == 0x000004, "Wrong size on BP_FrozenGhost_C_Phase_Count__Reset");
static_assert(offsetof(BP_FrozenGhost_C_Phase_Count__Reset, CallFunc_Subtract_IntInt_ReturnValue) == 0x000000, "Member 'BP_FrozenGhost_C_Phase_Count__Reset::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");

// Function BP_FrozenGhost.BP_FrozenGhost_C.Phase Count Function
// 0x0008 (0x0008 - 0x0000)
struct BP_FrozenGhost_C_Phase_Count_Function final
{
public:
	int32                                         CallFunc_RandomIntegerInRange_ReturnValue;         // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FrozenGhost_C_Phase_Count_Function) == 0x000004, "Wrong alignment on BP_FrozenGhost_C_Phase_Count_Function");
static_assert(sizeof(BP_FrozenGhost_C_Phase_Count_Function) == 0x000008, "Wrong size on BP_FrozenGhost_C_Phase_Count_Function");
static_assert(offsetof(BP_FrozenGhost_C_Phase_Count_Function, CallFunc_RandomIntegerInRange_ReturnValue) == 0x000000, "Member 'BP_FrozenGhost_C_Phase_Count_Function::CallFunc_RandomIntegerInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FrozenGhost_C_Phase_Count_Function, CallFunc_Add_IntInt_ReturnValue) == 0x000004, "Member 'BP_FrozenGhost_C_Phase_Count_Function::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

}

