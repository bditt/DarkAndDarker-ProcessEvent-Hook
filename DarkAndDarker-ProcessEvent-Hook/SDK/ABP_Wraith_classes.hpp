#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ABP_Wraith

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "AnimGraphRuntime_structs.hpp"
#include "ABP_Wraith_structs.hpp"
#include "DungeonCrawler_classes.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass ABP_Wraith.ABP_Wraith_C
// 0x10B0 (0x15E0 - 0x0530)
class UABP_Wraith_C final : public UDCMonsterAnimInstanceBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0530(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct ABP_Wraith::FAnimBlueprintGeneratedMutableData __AnimBlueprintMutables;                           // 0x0538(0x000C)(HasGetValueTypeHash)
	uint8                                         Pad_58D1[0x4];                                     // 0x0544(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_PropertyAccess;             // 0x0548(0x0008)()
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_Base;                       // 0x0550(0x0008)()
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x0558(0x0020)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot;                                // 0x0578(0x0048)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_6;                  // 0x05C0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_5;                  // 0x05E8(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_4;                    // 0x0610(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_4;                       // 0x0658(0x0020)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer;                    // 0x0678(0x0070)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_3;                       // 0x06E8(0x0020)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine_1;                      // 0x0708(0x00C8)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose;                      // 0x07D0(0x0080)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_4;                  // 0x0850(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_3;                  // 0x0878(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_2;                  // 0x08A0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_1;                  // 0x08C8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult;                    // 0x08F0(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_3;                    // 0x0918(0x0048)()
	struct FAnimNode_ApplyAdditive                AnimGraphNode_ApplyAdditive_3;                     // 0x0960(0x00C8)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_6;                     // 0x0A28(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_5;                     // 0x0A50(0x0028)()
	struct FAnimNode_ApplyAdditive                AnimGraphNode_ApplyAdditive_2;                     // 0x0A78(0x00C8)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_2;             // 0x0B40(0x0020)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_2;             // 0x0B60(0x0020)()
	struct FAnimNode_LegIK                        AnimGraphNode_LegIK_1;                             // 0x0B80(0x00F8)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_1;                   // 0x0C78(0x0048)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_4;                     // 0x0CC0(0x0028)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend_1;                  // 0x0CE8(0x00F0)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_2;                    // 0x0DD8(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_2;                       // 0x0E20(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_1;                    // 0x0E40(0x0048)()
	struct FAnimNode_ApplyAdditive                AnimGraphNode_ApplyAdditive_1;                     // 0x0E88(0x00C8)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_3;                     // 0x0F50(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_2;                     // 0x0F78(0x0028)()
	struct FAnimNode_ApplyAdditive                AnimGraphNode_ApplyAdditive;                       // 0x0FA0(0x00C8)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_1;             // 0x1068(0x0020)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_1;             // 0x1088(0x0020)()
	struct FAnimNode_LegIK                        AnimGraphNode_LegIK;                               // 0x10A8(0x00F8)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool;                     // 0x11A0(0x0048)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_1;                     // 0x11E8(0x0028)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend;                    // 0x1210(0x00F0)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x1300(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_1;                       // 0x1348(0x0020)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose;                       // 0x1368(0x0028)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult;                         // 0x1390(0x0020)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine;                        // 0x13B0(0x00C8)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone;                          // 0x1478(0x0128)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace;               // 0x15A0(0x0020)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace;               // 0x15C0(0x0020)()

public:
	void AnimGraph(struct FPoseLink* Param_AnimGraph);
	void ExecuteUbergraph_ABP_Wraith(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ABP_Wraith_C">();
	}
	static class UABP_Wraith_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UABP_Wraith_C>();
	}
};
static_assert(alignof(UABP_Wraith_C) == 0x000010, "Wrong alignment on UABP_Wraith_C");
static_assert(sizeof(UABP_Wraith_C) == 0x0015E0, "Wrong size on UABP_Wraith_C");
static_assert(offsetof(UABP_Wraith_C, UberGraphFrame) == 0x000530, "Member 'UABP_Wraith_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UABP_Wraith_C, __AnimBlueprintMutables) == 0x000538, "Member 'UABP_Wraith_C::__AnimBlueprintMutables' has a wrong offset!");
static_assert(offsetof(UABP_Wraith_C, AnimBlueprintExtension_PropertyAccess) == 0x000548, "Member 'UABP_Wraith_C::AnimBlueprintExtension_PropertyAccess' has a wrong offset!");
static_assert(offsetof(UABP_Wraith_C, AnimBlueprintExtension_Base) == 0x000550, "Member 'UABP_Wraith_C::AnimBlueprintExtension_Base' has a wrong offset!");
static_assert(offsetof(UABP_Wraith_C, AnimGraphNode_Root) == 0x000558, "Member 'UABP_Wraith_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UABP_Wraith_C, AnimGraphNode_Slot) == 0x000578, "Member 'UABP_Wraith_C::AnimGraphNode_Slot' has a wrong offset!");
static_assert(offsetof(UABP_Wraith_C, AnimGraphNode_TransitionResult_6) == 0x0005C0, "Member 'UABP_Wraith_C::AnimGraphNode_TransitionResult_6' has a wrong offset!");
static_assert(offsetof(UABP_Wraith_C, AnimGraphNode_TransitionResult_5) == 0x0005E8, "Member 'UABP_Wraith_C::AnimGraphNode_TransitionResult_5' has a wrong offset!");
static_assert(offsetof(UABP_Wraith_C, AnimGraphNode_SequencePlayer_4) == 0x000610, "Member 'UABP_Wraith_C::AnimGraphNode_SequencePlayer_4' has a wrong offset!");
static_assert(offsetof(UABP_Wraith_C, AnimGraphNode_StateResult_4) == 0x000658, "Member 'UABP_Wraith_C::AnimGraphNode_StateResult_4' has a wrong offset!");
static_assert(offsetof(UABP_Wraith_C, AnimGraphNode_BlendSpacePlayer) == 0x000678, "Member 'UABP_Wraith_C::AnimGraphNode_BlendSpacePlayer' has a wrong offset!");
static_assert(offsetof(UABP_Wraith_C, AnimGraphNode_StateResult_3) == 0x0006E8, "Member 'UABP_Wraith_C::AnimGraphNode_StateResult_3' has a wrong offset!");
static_assert(offsetof(UABP_Wraith_C, AnimGraphNode_StateMachine_1) == 0x000708, "Member 'UABP_Wraith_C::AnimGraphNode_StateMachine_1' has a wrong offset!");
static_assert(offsetof(UABP_Wraith_C, AnimGraphNode_SaveCachedPose) == 0x0007D0, "Member 'UABP_Wraith_C::AnimGraphNode_SaveCachedPose' has a wrong offset!");
static_assert(offsetof(UABP_Wraith_C, AnimGraphNode_TransitionResult_4) == 0x000850, "Member 'UABP_Wraith_C::AnimGraphNode_TransitionResult_4' has a wrong offset!");
static_assert(offsetof(UABP_Wraith_C, AnimGraphNode_TransitionResult_3) == 0x000878, "Member 'UABP_Wraith_C::AnimGraphNode_TransitionResult_3' has a wrong offset!");
static_assert(offsetof(UABP_Wraith_C, AnimGraphNode_TransitionResult_2) == 0x0008A0, "Member 'UABP_Wraith_C::AnimGraphNode_TransitionResult_2' has a wrong offset!");
static_assert(offsetof(UABP_Wraith_C, AnimGraphNode_TransitionResult_1) == 0x0008C8, "Member 'UABP_Wraith_C::AnimGraphNode_TransitionResult_1' has a wrong offset!");
static_assert(offsetof(UABP_Wraith_C, AnimGraphNode_TransitionResult) == 0x0008F0, "Member 'UABP_Wraith_C::AnimGraphNode_TransitionResult' has a wrong offset!");
static_assert(offsetof(UABP_Wraith_C, AnimGraphNode_SequencePlayer_3) == 0x000918, "Member 'UABP_Wraith_C::AnimGraphNode_SequencePlayer_3' has a wrong offset!");
static_assert(offsetof(UABP_Wraith_C, AnimGraphNode_ApplyAdditive_3) == 0x000960, "Member 'UABP_Wraith_C::AnimGraphNode_ApplyAdditive_3' has a wrong offset!");
static_assert(offsetof(UABP_Wraith_C, AnimGraphNode_UseCachedPose_6) == 0x000A28, "Member 'UABP_Wraith_C::AnimGraphNode_UseCachedPose_6' has a wrong offset!");
static_assert(offsetof(UABP_Wraith_C, AnimGraphNode_UseCachedPose_5) == 0x000A50, "Member 'UABP_Wraith_C::AnimGraphNode_UseCachedPose_5' has a wrong offset!");
static_assert(offsetof(UABP_Wraith_C, AnimGraphNode_ApplyAdditive_2) == 0x000A78, "Member 'UABP_Wraith_C::AnimGraphNode_ApplyAdditive_2' has a wrong offset!");
static_assert(offsetof(UABP_Wraith_C, AnimGraphNode_ComponentToLocalSpace_2) == 0x000B40, "Member 'UABP_Wraith_C::AnimGraphNode_ComponentToLocalSpace_2' has a wrong offset!");
static_assert(offsetof(UABP_Wraith_C, AnimGraphNode_LocalToComponentSpace_2) == 0x000B60, "Member 'UABP_Wraith_C::AnimGraphNode_LocalToComponentSpace_2' has a wrong offset!");
static_assert(offsetof(UABP_Wraith_C, AnimGraphNode_LegIK_1) == 0x000B80, "Member 'UABP_Wraith_C::AnimGraphNode_LegIK_1' has a wrong offset!");
static_assert(offsetof(UABP_Wraith_C, AnimGraphNode_BlendListByBool_1) == 0x000C78, "Member 'UABP_Wraith_C::AnimGraphNode_BlendListByBool_1' has a wrong offset!");
static_assert(offsetof(UABP_Wraith_C, AnimGraphNode_UseCachedPose_4) == 0x000CC0, "Member 'UABP_Wraith_C::AnimGraphNode_UseCachedPose_4' has a wrong offset!");
static_assert(offsetof(UABP_Wraith_C, AnimGraphNode_LayeredBoneBlend_1) == 0x000CE8, "Member 'UABP_Wraith_C::AnimGraphNode_LayeredBoneBlend_1' has a wrong offset!");
static_assert(offsetof(UABP_Wraith_C, AnimGraphNode_SequencePlayer_2) == 0x000DD8, "Member 'UABP_Wraith_C::AnimGraphNode_SequencePlayer_2' has a wrong offset!");
static_assert(offsetof(UABP_Wraith_C, AnimGraphNode_StateResult_2) == 0x000E20, "Member 'UABP_Wraith_C::AnimGraphNode_StateResult_2' has a wrong offset!");
static_assert(offsetof(UABP_Wraith_C, AnimGraphNode_SequencePlayer_1) == 0x000E40, "Member 'UABP_Wraith_C::AnimGraphNode_SequencePlayer_1' has a wrong offset!");
static_assert(offsetof(UABP_Wraith_C, AnimGraphNode_ApplyAdditive_1) == 0x000E88, "Member 'UABP_Wraith_C::AnimGraphNode_ApplyAdditive_1' has a wrong offset!");
static_assert(offsetof(UABP_Wraith_C, AnimGraphNode_UseCachedPose_3) == 0x000F50, "Member 'UABP_Wraith_C::AnimGraphNode_UseCachedPose_3' has a wrong offset!");
static_assert(offsetof(UABP_Wraith_C, AnimGraphNode_UseCachedPose_2) == 0x000F78, "Member 'UABP_Wraith_C::AnimGraphNode_UseCachedPose_2' has a wrong offset!");
static_assert(offsetof(UABP_Wraith_C, AnimGraphNode_ApplyAdditive) == 0x000FA0, "Member 'UABP_Wraith_C::AnimGraphNode_ApplyAdditive' has a wrong offset!");
static_assert(offsetof(UABP_Wraith_C, AnimGraphNode_ComponentToLocalSpace_1) == 0x001068, "Member 'UABP_Wraith_C::AnimGraphNode_ComponentToLocalSpace_1' has a wrong offset!");
static_assert(offsetof(UABP_Wraith_C, AnimGraphNode_LocalToComponentSpace_1) == 0x001088, "Member 'UABP_Wraith_C::AnimGraphNode_LocalToComponentSpace_1' has a wrong offset!");
static_assert(offsetof(UABP_Wraith_C, AnimGraphNode_LegIK) == 0x0010A8, "Member 'UABP_Wraith_C::AnimGraphNode_LegIK' has a wrong offset!");
static_assert(offsetof(UABP_Wraith_C, AnimGraphNode_BlendListByBool) == 0x0011A0, "Member 'UABP_Wraith_C::AnimGraphNode_BlendListByBool' has a wrong offset!");
static_assert(offsetof(UABP_Wraith_C, AnimGraphNode_UseCachedPose_1) == 0x0011E8, "Member 'UABP_Wraith_C::AnimGraphNode_UseCachedPose_1' has a wrong offset!");
static_assert(offsetof(UABP_Wraith_C, AnimGraphNode_LayeredBoneBlend) == 0x001210, "Member 'UABP_Wraith_C::AnimGraphNode_LayeredBoneBlend' has a wrong offset!");
static_assert(offsetof(UABP_Wraith_C, AnimGraphNode_SequencePlayer) == 0x001300, "Member 'UABP_Wraith_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(UABP_Wraith_C, AnimGraphNode_StateResult_1) == 0x001348, "Member 'UABP_Wraith_C::AnimGraphNode_StateResult_1' has a wrong offset!");
static_assert(offsetof(UABP_Wraith_C, AnimGraphNode_UseCachedPose) == 0x001368, "Member 'UABP_Wraith_C::AnimGraphNode_UseCachedPose' has a wrong offset!");
static_assert(offsetof(UABP_Wraith_C, AnimGraphNode_StateResult) == 0x001390, "Member 'UABP_Wraith_C::AnimGraphNode_StateResult' has a wrong offset!");
static_assert(offsetof(UABP_Wraith_C, AnimGraphNode_StateMachine) == 0x0013B0, "Member 'UABP_Wraith_C::AnimGraphNode_StateMachine' has a wrong offset!");
static_assert(offsetof(UABP_Wraith_C, AnimGraphNode_ModifyBone) == 0x001478, "Member 'UABP_Wraith_C::AnimGraphNode_ModifyBone' has a wrong offset!");
static_assert(offsetof(UABP_Wraith_C, AnimGraphNode_LocalToComponentSpace) == 0x0015A0, "Member 'UABP_Wraith_C::AnimGraphNode_LocalToComponentSpace' has a wrong offset!");
static_assert(offsetof(UABP_Wraith_C, AnimGraphNode_ComponentToLocalSpace) == 0x0015C0, "Member 'UABP_Wraith_C::AnimGraphNode_ComponentToLocalSpace' has a wrong offset!");

}

