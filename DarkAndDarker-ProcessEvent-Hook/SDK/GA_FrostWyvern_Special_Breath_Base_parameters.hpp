#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_FrostWyvern_Special_Breath_Base

#include "Basic.hpp"

#include "GameplayAbilities_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function GA_FrostWyvern_Special_Breath_Base.GA_FrostWyvern_Special_Breath_Base_C.Dealt Damage
// 0x0100 (0x0100 - 0x0000)
struct GA_FrostWyvern_Special_Breath_Base_C_Dealt_Damage final
{
public:
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4322[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ADCCharacterBase*>               CallFunc_Get_Vaild_Targets_AsDCPlayer_Character_Base; // 0x0010(0x0010)(ReferenceParm)
	class ADCCharacterBase*                       CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4323[0x4];                                     // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayEventData                     K2Node_MakeStruct_GameplayEventData;               // 0x0030(0x00B0)()
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4324[0x4];                                     // 0x00E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FActiveGameplayEffectHandle>    CallFunc_ApplyEffectContainer_ReturnValue;         // 0x00E8(0x0010)(ReferenceParm)
	int32                                         CallFunc_Max_ReturnValue;                          // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_FrostWyvern_Special_Breath_Base_C_Dealt_Damage) == 0x000008, "Wrong alignment on GA_FrostWyvern_Special_Breath_Base_C_Dealt_Damage");
static_assert(sizeof(GA_FrostWyvern_Special_Breath_Base_C_Dealt_Damage) == 0x000100, "Wrong size on GA_FrostWyvern_Special_Breath_Base_C_Dealt_Damage");
static_assert(offsetof(GA_FrostWyvern_Special_Breath_Base_C_Dealt_Damage, Temp_int_Loop_Counter_Variable) == 0x000000, "Member 'GA_FrostWyvern_Special_Breath_Base_C_Dealt_Damage::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(GA_FrostWyvern_Special_Breath_Base_C_Dealt_Damage, CallFunc_Subtract_IntInt_ReturnValue) == 0x000004, "Member 'GA_FrostWyvern_Special_Breath_Base_C_Dealt_Damage::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_FrostWyvern_Special_Breath_Base_C_Dealt_Damage, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000008, "Member 'GA_FrostWyvern_Special_Breath_Base_C_Dealt_Damage::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_FrostWyvern_Special_Breath_Base_C_Dealt_Damage, Temp_int_Array_Index_Variable) == 0x00000C, "Member 'GA_FrostWyvern_Special_Breath_Base_C_Dealt_Damage::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(GA_FrostWyvern_Special_Breath_Base_C_Dealt_Damage, CallFunc_Get_Vaild_Targets_AsDCPlayer_Character_Base) == 0x000010, "Member 'GA_FrostWyvern_Special_Breath_Base_C_Dealt_Damage::CallFunc_Get_Vaild_Targets_AsDCPlayer_Character_Base' has a wrong offset!");
static_assert(offsetof(GA_FrostWyvern_Special_Breath_Base_C_Dealt_Damage, CallFunc_Array_Get_Item) == 0x000020, "Member 'GA_FrostWyvern_Special_Breath_Base_C_Dealt_Damage::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(GA_FrostWyvern_Special_Breath_Base_C_Dealt_Damage, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'GA_FrostWyvern_Special_Breath_Base_C_Dealt_Damage::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_FrostWyvern_Special_Breath_Base_C_Dealt_Damage, K2Node_MakeStruct_GameplayEventData) == 0x000030, "Member 'GA_FrostWyvern_Special_Breath_Base_C_Dealt_Damage::K2Node_MakeStruct_GameplayEventData' has a wrong offset!");
static_assert(offsetof(GA_FrostWyvern_Special_Breath_Base_C_Dealt_Damage, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x0000E0, "Member 'GA_FrostWyvern_Special_Breath_Base_C_Dealt_Damage::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_FrostWyvern_Special_Breath_Base_C_Dealt_Damage, CallFunc_ApplyEffectContainer_ReturnValue) == 0x0000E8, "Member 'GA_FrostWyvern_Special_Breath_Base_C_Dealt_Damage::CallFunc_ApplyEffectContainer_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_FrostWyvern_Special_Breath_Base_C_Dealt_Damage, CallFunc_Max_ReturnValue) == 0x0000F8, "Member 'GA_FrostWyvern_Special_Breath_Base_C_Dealt_Damage::CallFunc_Max_ReturnValue' has a wrong offset!");

// Function GA_FrostWyvern_Special_Breath_Base.GA_FrostWyvern_Special_Breath_Base_C.Get Vaild Targets
// 0x0310 (0x0310 - 0x0000)
struct GA_FrostWyvern_Special_Breath_Base_C_Get_Vaild_Targets final
{
public:
	TArray<class ADCCharacterBase*>               AsDCPlayer_Character_Base;                         // 0x0000(0x0010)(Parm, OutParm)
	struct FVector                                Out_Socket_Location;                               // 0x0010(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ADCCharacterBase*>               Uncovered_Targets;                                 // 0x0028(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0038(0x0010)(ConstParm, ReferenceParm)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4325[0x3];                                     // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array;                            // 0x0058(0x0010)(ConstParm, ReferenceParm)
	class AActor*                                 CallFunc_GetAvatarActorFromActorInfo_ReturnValue;  // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_FrostWyvern_C*                      K2Node_DynamicCast_AsBP_Frost_Wyvern;              // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4326[0x7];                                     // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ADCPlayerCharacterBase*                 CallFunc_Array_Get_Item;                           // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4327[0x4];                                     // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0090(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4328[0x4];                                     // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Vector_Distance_ReturnValue;              // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue;                          // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4329[0x4];                                     // 0x00BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue;          // 0x00C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_FindLookAtRotation_ReturnValue;           // 0x00E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x00F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x0110(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0128(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingleForObjects_OutHit;         // 0x0140(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingleForObjects_ReturnValue;    // 0x0228(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0229(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x022A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_432A[0x1];                                     // 0x022B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x022C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0230(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_432B[0x4];                                     // 0x0234(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0238(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0250(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0268(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0280(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0298(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x02A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x02A8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x02B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x02B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x02C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x02C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x02C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_432C[0x4];                                     // 0x02CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x02D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x02E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ADCCharacterBase*                       K2Node_DynamicCast_AsDCCharacter_Base;             // 0x0300(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0308(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_432D[0x3];                                     // 0x0309(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x030C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_FrostWyvern_Special_Breath_Base_C_Get_Vaild_Targets) == 0x000008, "Wrong alignment on GA_FrostWyvern_Special_Breath_Base_C_Get_Vaild_Targets");
static_assert(sizeof(GA_FrostWyvern_Special_Breath_Base_C_Get_Vaild_Targets) == 0x000310, "Wrong size on GA_FrostWyvern_Special_Breath_Base_C_Get_Vaild_Targets");
static_assert(offsetof(GA_FrostWyvern_Special_Breath_Base_C_Get_Vaild_Targets, AsDCPlayer_Character_Base) == 0x000000, "Member 'GA_FrostWyvern_Special_Breath_Base_C_Get_Vaild_Targets::AsDCPlayer_Character_Base' has a wrong offset!");
static_assert(offsetof(GA_FrostWyvern_Special_Breath_Base_C_Get_Vaild_Targets, Out_Socket_Location) == 0x000010, "Member 'GA_FrostWyvern_Special_Breath_Base_C_Get_Vaild_Targets::Out_Socket_Location' has a wrong offset!");
static_assert(offsetof(GA_FrostWyvern_Special_Breath_Base_C_Get_Vaild_Targets, Uncovered_Targets) == 0x000028, "Member 'GA_FrostWyvern_Special_Breath_Base_C_Get_Vaild_Targets::Uncovered_Targets' has a wrong offset!");
static_assert(offsetof(GA_FrostWyvern_Special_Breath_Base_C_Get_Vaild_Targets, Temp_object_Variable) == 0x000038, "Member 'GA_FrostWyvern_Special_Breath_Base_C_Get_Vaild_Targets::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(GA_FrostWyvern_Special_Breath_Base_C_Get_Vaild_Targets, Temp_int_Loop_Counter_Variable) == 0x000048, "Member 'GA_FrostWyvern_Special_Breath_Base_C_Get_Vaild_Targets::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(GA_FrostWyvern_Special_Breath_Base_C_Get_Vaild_Targets, CallFunc_Subtract_IntInt_ReturnValue) == 0x00004C, "Member 'GA_FrostWyvern_Special_Breath_Base_C_Get_Vaild_Targets::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_FrostWyvern_Special_Breath_Base_C_Get_Vaild_Targets, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000050, "Member 'GA_FrostWyvern_Special_Breath_Base_C_Get_Vaild_Targets::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_FrostWyvern_Special_Breath_Base_C_Get_Vaild_Targets, Temp_int_Array_Index_Variable) == 0x000054, "Member 'GA_FrostWyvern_Special_Breath_Base_C_Get_Vaild_Targets::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(GA_FrostWyvern_Special_Breath_Base_C_Get_Vaild_Targets, K2Node_MakeArray_Array) == 0x000058, "Member 'GA_FrostWyvern_Special_Breath_Base_C_Get_Vaild_Targets::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(GA_FrostWyvern_Special_Breath_Base_C_Get_Vaild_Targets, CallFunc_GetAvatarActorFromActorInfo_ReturnValue) == 0x000068, "Member 'GA_FrostWyvern_Special_Breath_Base_C_Get_Vaild_Targets::CallFunc_GetAvatarActorFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_FrostWyvern_Special_Breath_Base_C_Get_Vaild_Targets, K2Node_DynamicCast_AsBP_Frost_Wyvern) == 0x000070, "Member 'GA_FrostWyvern_Special_Breath_Base_C_Get_Vaild_Targets::K2Node_DynamicCast_AsBP_Frost_Wyvern' has a wrong offset!");
static_assert(offsetof(GA_FrostWyvern_Special_Breath_Base_C_Get_Vaild_Targets, K2Node_DynamicCast_bSuccess) == 0x000078, "Member 'GA_FrostWyvern_Special_Breath_Base_C_Get_Vaild_Targets::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GA_FrostWyvern_Special_Breath_Base_C_Get_Vaild_Targets, CallFunc_Array_Get_Item) == 0x000080, "Member 'GA_FrostWyvern_Special_Breath_Base_C_Get_Vaild_Targets::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(GA_FrostWyvern_Special_Breath_Base_C_Get_Vaild_Targets, CallFunc_Array_Length_ReturnValue) == 0x000088, "Member 'GA_FrostWyvern_Special_Breath_Base_C_Get_Vaild_Targets::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_FrostWyvern_Special_Breath_Base_C_Get_Vaild_Targets, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000090, "Member 'GA_FrostWyvern_Special_Breath_Base_C_Get_Vaild_Targets::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_FrostWyvern_Special_Breath_Base_C_Get_Vaild_Targets, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x0000A8, "Member 'GA_FrostWyvern_Special_Breath_Base_C_Get_Vaild_Targets::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_FrostWyvern_Special_Breath_Base_C_Get_Vaild_Targets, CallFunc_Vector_Distance_ReturnValue) == 0x0000B0, "Member 'GA_FrostWyvern_Special_Breath_Base_C_Get_Vaild_Targets::CallFunc_Vector_Distance_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_FrostWyvern_Special_Breath_Base_C_Get_Vaild_Targets, CallFunc_Max_ReturnValue) == 0x0000B8, "Member 'GA_FrostWyvern_Special_Breath_Base_C_Get_Vaild_Targets::CallFunc_Max_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_FrostWyvern_Special_Breath_Base_C_Get_Vaild_Targets, CallFunc_Add_DoubleDouble_ReturnValue) == 0x0000C0, "Member 'GA_FrostWyvern_Special_Breath_Base_C_Get_Vaild_Targets::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_FrostWyvern_Special_Breath_Base_C_Get_Vaild_Targets, CallFunc_Conv_DoubleToVector_ReturnValue) == 0x0000C8, "Member 'GA_FrostWyvern_Special_Breath_Base_C_Get_Vaild_Targets::CallFunc_Conv_DoubleToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_FrostWyvern_Special_Breath_Base_C_Get_Vaild_Targets, CallFunc_FindLookAtRotation_ReturnValue) == 0x0000E0, "Member 'GA_FrostWyvern_Special_Breath_Base_C_Get_Vaild_Targets::CallFunc_FindLookAtRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_FrostWyvern_Special_Breath_Base_C_Get_Vaild_Targets, CallFunc_GetForwardVector_ReturnValue) == 0x0000F8, "Member 'GA_FrostWyvern_Special_Breath_Base_C_Get_Vaild_Targets::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_FrostWyvern_Special_Breath_Base_C_Get_Vaild_Targets, CallFunc_Multiply_VectorVector_ReturnValue) == 0x000110, "Member 'GA_FrostWyvern_Special_Breath_Base_C_Get_Vaild_Targets::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_FrostWyvern_Special_Breath_Base_C_Get_Vaild_Targets, CallFunc_Add_VectorVector_ReturnValue) == 0x000128, "Member 'GA_FrostWyvern_Special_Breath_Base_C_Get_Vaild_Targets::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_FrostWyvern_Special_Breath_Base_C_Get_Vaild_Targets, CallFunc_LineTraceSingleForObjects_OutHit) == 0x000140, "Member 'GA_FrostWyvern_Special_Breath_Base_C_Get_Vaild_Targets::CallFunc_LineTraceSingleForObjects_OutHit' has a wrong offset!");
static_assert(offsetof(GA_FrostWyvern_Special_Breath_Base_C_Get_Vaild_Targets, CallFunc_LineTraceSingleForObjects_ReturnValue) == 0x000228, "Member 'GA_FrostWyvern_Special_Breath_Base_C_Get_Vaild_Targets::CallFunc_LineTraceSingleForObjects_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_FrostWyvern_Special_Breath_Base_C_Get_Vaild_Targets, CallFunc_BreakHitResult_bBlockingHit) == 0x000229, "Member 'GA_FrostWyvern_Special_Breath_Base_C_Get_Vaild_Targets::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(GA_FrostWyvern_Special_Breath_Base_C_Get_Vaild_Targets, CallFunc_BreakHitResult_bInitialOverlap) == 0x00022A, "Member 'GA_FrostWyvern_Special_Breath_Base_C_Get_Vaild_Targets::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(GA_FrostWyvern_Special_Breath_Base_C_Get_Vaild_Targets, CallFunc_BreakHitResult_Time) == 0x00022C, "Member 'GA_FrostWyvern_Special_Breath_Base_C_Get_Vaild_Targets::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(GA_FrostWyvern_Special_Breath_Base_C_Get_Vaild_Targets, CallFunc_BreakHitResult_Distance) == 0x000230, "Member 'GA_FrostWyvern_Special_Breath_Base_C_Get_Vaild_Targets::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(GA_FrostWyvern_Special_Breath_Base_C_Get_Vaild_Targets, CallFunc_BreakHitResult_Location) == 0x000238, "Member 'GA_FrostWyvern_Special_Breath_Base_C_Get_Vaild_Targets::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(GA_FrostWyvern_Special_Breath_Base_C_Get_Vaild_Targets, CallFunc_BreakHitResult_ImpactPoint) == 0x000250, "Member 'GA_FrostWyvern_Special_Breath_Base_C_Get_Vaild_Targets::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(GA_FrostWyvern_Special_Breath_Base_C_Get_Vaild_Targets, CallFunc_BreakHitResult_Normal) == 0x000268, "Member 'GA_FrostWyvern_Special_Breath_Base_C_Get_Vaild_Targets::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(GA_FrostWyvern_Special_Breath_Base_C_Get_Vaild_Targets, CallFunc_BreakHitResult_ImpactNormal) == 0x000280, "Member 'GA_FrostWyvern_Special_Breath_Base_C_Get_Vaild_Targets::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(GA_FrostWyvern_Special_Breath_Base_C_Get_Vaild_Targets, CallFunc_BreakHitResult_PhysMat) == 0x000298, "Member 'GA_FrostWyvern_Special_Breath_Base_C_Get_Vaild_Targets::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(GA_FrostWyvern_Special_Breath_Base_C_Get_Vaild_Targets, CallFunc_BreakHitResult_HitActor) == 0x0002A0, "Member 'GA_FrostWyvern_Special_Breath_Base_C_Get_Vaild_Targets::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(GA_FrostWyvern_Special_Breath_Base_C_Get_Vaild_Targets, CallFunc_BreakHitResult_HitComponent) == 0x0002A8, "Member 'GA_FrostWyvern_Special_Breath_Base_C_Get_Vaild_Targets::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(GA_FrostWyvern_Special_Breath_Base_C_Get_Vaild_Targets, CallFunc_BreakHitResult_HitBoneName) == 0x0002B0, "Member 'GA_FrostWyvern_Special_Breath_Base_C_Get_Vaild_Targets::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(GA_FrostWyvern_Special_Breath_Base_C_Get_Vaild_Targets, CallFunc_BreakHitResult_BoneName) == 0x0002B8, "Member 'GA_FrostWyvern_Special_Breath_Base_C_Get_Vaild_Targets::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(GA_FrostWyvern_Special_Breath_Base_C_Get_Vaild_Targets, CallFunc_BreakHitResult_HitItem) == 0x0002C0, "Member 'GA_FrostWyvern_Special_Breath_Base_C_Get_Vaild_Targets::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(GA_FrostWyvern_Special_Breath_Base_C_Get_Vaild_Targets, CallFunc_BreakHitResult_ElementIndex) == 0x0002C4, "Member 'GA_FrostWyvern_Special_Breath_Base_C_Get_Vaild_Targets::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(GA_FrostWyvern_Special_Breath_Base_C_Get_Vaild_Targets, CallFunc_BreakHitResult_FaceIndex) == 0x0002C8, "Member 'GA_FrostWyvern_Special_Breath_Base_C_Get_Vaild_Targets::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(GA_FrostWyvern_Special_Breath_Base_C_Get_Vaild_Targets, CallFunc_BreakHitResult_TraceStart) == 0x0002D0, "Member 'GA_FrostWyvern_Special_Breath_Base_C_Get_Vaild_Targets::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(GA_FrostWyvern_Special_Breath_Base_C_Get_Vaild_Targets, CallFunc_BreakHitResult_TraceEnd) == 0x0002E8, "Member 'GA_FrostWyvern_Special_Breath_Base_C_Get_Vaild_Targets::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(GA_FrostWyvern_Special_Breath_Base_C_Get_Vaild_Targets, K2Node_DynamicCast_AsDCCharacter_Base) == 0x000300, "Member 'GA_FrostWyvern_Special_Breath_Base_C_Get_Vaild_Targets::K2Node_DynamicCast_AsDCCharacter_Base' has a wrong offset!");
static_assert(offsetof(GA_FrostWyvern_Special_Breath_Base_C_Get_Vaild_Targets, K2Node_DynamicCast_bSuccess_1) == 0x000308, "Member 'GA_FrostWyvern_Special_Breath_Base_C_Get_Vaild_Targets::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(GA_FrostWyvern_Special_Breath_Base_C_Get_Vaild_Targets, CallFunc_Array_AddUnique_ReturnValue) == 0x00030C, "Member 'GA_FrostWyvern_Special_Breath_Base_C_Get_Vaild_Targets::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");

}

