#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_EvilEye_Summoned

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "AkAudio_structs.hpp"


namespace SDK::Params
{

// Function BP_EvilEye_Summoned.BP_EvilEye_Summoned_C.CheckRemainDistanceByVelocity2D
// 0x0070 (0x0070 - 0x0000)
struct BP_EvilEye_Summoned_C_CheckRemainDistanceByVelocity2D final
{
public:
	struct FVector                                MoveDirection;                                     // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        DeltaTime;                                         // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        RemainDist;                                        // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        ResultDistance;                                    // 0x0028(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetMaxSpeed_ReturnValue;                  // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_56DF[0x4];                                     // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0040(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_VSizeXY_ReturnValue;                      // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_B_ImplicitCast;     // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EvilEye_Summoned_C_CheckRemainDistanceByVelocity2D) == 0x000008, "Wrong alignment on BP_EvilEye_Summoned_C_CheckRemainDistanceByVelocity2D");
static_assert(sizeof(BP_EvilEye_Summoned_C_CheckRemainDistanceByVelocity2D) == 0x000070, "Wrong size on BP_EvilEye_Summoned_C_CheckRemainDistanceByVelocity2D");
static_assert(offsetof(BP_EvilEye_Summoned_C_CheckRemainDistanceByVelocity2D, MoveDirection) == 0x000000, "Member 'BP_EvilEye_Summoned_C_CheckRemainDistanceByVelocity2D::MoveDirection' has a wrong offset!");
static_assert(offsetof(BP_EvilEye_Summoned_C_CheckRemainDistanceByVelocity2D, DeltaTime) == 0x000018, "Member 'BP_EvilEye_Summoned_C_CheckRemainDistanceByVelocity2D::DeltaTime' has a wrong offset!");
static_assert(offsetof(BP_EvilEye_Summoned_C_CheckRemainDistanceByVelocity2D, RemainDist) == 0x000020, "Member 'BP_EvilEye_Summoned_C_CheckRemainDistanceByVelocity2D::RemainDist' has a wrong offset!");
static_assert(offsetof(BP_EvilEye_Summoned_C_CheckRemainDistanceByVelocity2D, ResultDistance) == 0x000028, "Member 'BP_EvilEye_Summoned_C_CheckRemainDistanceByVelocity2D::ResultDistance' has a wrong offset!");
static_assert(offsetof(BP_EvilEye_Summoned_C_CheckRemainDistanceByVelocity2D, CallFunc_GetMaxSpeed_ReturnValue) == 0x000030, "Member 'BP_EvilEye_Summoned_C_CheckRemainDistanceByVelocity2D::CallFunc_GetMaxSpeed_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EvilEye_Summoned_C_CheckRemainDistanceByVelocity2D, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000038, "Member 'BP_EvilEye_Summoned_C_CheckRemainDistanceByVelocity2D::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EvilEye_Summoned_C_CheckRemainDistanceByVelocity2D, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000040, "Member 'BP_EvilEye_Summoned_C_CheckRemainDistanceByVelocity2D::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EvilEye_Summoned_C_CheckRemainDistanceByVelocity2D, CallFunc_VSizeXY_ReturnValue) == 0x000058, "Member 'BP_EvilEye_Summoned_C_CheckRemainDistanceByVelocity2D::CallFunc_VSizeXY_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EvilEye_Summoned_C_CheckRemainDistanceByVelocity2D, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000060, "Member 'BP_EvilEye_Summoned_C_CheckRemainDistanceByVelocity2D::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EvilEye_Summoned_C_CheckRemainDistanceByVelocity2D, CallFunc_Multiply_DoubleDouble_B_ImplicitCast) == 0x000068, "Member 'BP_EvilEye_Summoned_C_CheckRemainDistanceByVelocity2D::CallFunc_Multiply_DoubleDouble_B_ImplicitCast' has a wrong offset!");

// Function BP_EvilEye_Summoned.BP_EvilEye_Summoned_C.CheckRemainDistanceByVelocity3D
// 0x0070 (0x0070 - 0x0000)
struct BP_EvilEye_Summoned_C_CheckRemainDistanceByVelocity3D final
{
public:
	struct FVector                                MoveDirection;                                     // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        DeltaTime;                                         // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        RemainDist;                                        // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        ResultDistance;                                    // 0x0028(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetMaxSpeed_ReturnValue;                  // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_56E0[0x4];                                     // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0040(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_VSize_ReturnValue;                        // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_B_ImplicitCast;     // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EvilEye_Summoned_C_CheckRemainDistanceByVelocity3D) == 0x000008, "Wrong alignment on BP_EvilEye_Summoned_C_CheckRemainDistanceByVelocity3D");
static_assert(sizeof(BP_EvilEye_Summoned_C_CheckRemainDistanceByVelocity3D) == 0x000070, "Wrong size on BP_EvilEye_Summoned_C_CheckRemainDistanceByVelocity3D");
static_assert(offsetof(BP_EvilEye_Summoned_C_CheckRemainDistanceByVelocity3D, MoveDirection) == 0x000000, "Member 'BP_EvilEye_Summoned_C_CheckRemainDistanceByVelocity3D::MoveDirection' has a wrong offset!");
static_assert(offsetof(BP_EvilEye_Summoned_C_CheckRemainDistanceByVelocity3D, DeltaTime) == 0x000018, "Member 'BP_EvilEye_Summoned_C_CheckRemainDistanceByVelocity3D::DeltaTime' has a wrong offset!");
static_assert(offsetof(BP_EvilEye_Summoned_C_CheckRemainDistanceByVelocity3D, RemainDist) == 0x000020, "Member 'BP_EvilEye_Summoned_C_CheckRemainDistanceByVelocity3D::RemainDist' has a wrong offset!");
static_assert(offsetof(BP_EvilEye_Summoned_C_CheckRemainDistanceByVelocity3D, ResultDistance) == 0x000028, "Member 'BP_EvilEye_Summoned_C_CheckRemainDistanceByVelocity3D::ResultDistance' has a wrong offset!");
static_assert(offsetof(BP_EvilEye_Summoned_C_CheckRemainDistanceByVelocity3D, CallFunc_GetMaxSpeed_ReturnValue) == 0x000030, "Member 'BP_EvilEye_Summoned_C_CheckRemainDistanceByVelocity3D::CallFunc_GetMaxSpeed_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EvilEye_Summoned_C_CheckRemainDistanceByVelocity3D, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000038, "Member 'BP_EvilEye_Summoned_C_CheckRemainDistanceByVelocity3D::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EvilEye_Summoned_C_CheckRemainDistanceByVelocity3D, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000040, "Member 'BP_EvilEye_Summoned_C_CheckRemainDistanceByVelocity3D::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EvilEye_Summoned_C_CheckRemainDistanceByVelocity3D, CallFunc_VSize_ReturnValue) == 0x000058, "Member 'BP_EvilEye_Summoned_C_CheckRemainDistanceByVelocity3D::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EvilEye_Summoned_C_CheckRemainDistanceByVelocity3D, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000060, "Member 'BP_EvilEye_Summoned_C_CheckRemainDistanceByVelocity3D::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EvilEye_Summoned_C_CheckRemainDistanceByVelocity3D, CallFunc_Multiply_DoubleDouble_B_ImplicitCast) == 0x000068, "Member 'BP_EvilEye_Summoned_C_CheckRemainDistanceByVelocity3D::CallFunc_Multiply_DoubleDouble_B_ImplicitCast' has a wrong offset!");

// Function BP_EvilEye_Summoned.BP_EvilEye_Summoned_C.ExecuteUbergraph_BP_EvilEye_Summoned
// 0x0018 (0x0018 - 0x0000)
struct BP_EvilEye_Summoned_C_ExecuteUbergraph_BP_EvilEye_Summoned final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_56E1[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_56E2[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_UpdateGlowing_DeltaTime_ImplicitCast;     // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EvilEye_Summoned_C_ExecuteUbergraph_BP_EvilEye_Summoned) == 0x000008, "Wrong alignment on BP_EvilEye_Summoned_C_ExecuteUbergraph_BP_EvilEye_Summoned");
static_assert(sizeof(BP_EvilEye_Summoned_C_ExecuteUbergraph_BP_EvilEye_Summoned) == 0x000018, "Wrong size on BP_EvilEye_Summoned_C_ExecuteUbergraph_BP_EvilEye_Summoned");
static_assert(offsetof(BP_EvilEye_Summoned_C_ExecuteUbergraph_BP_EvilEye_Summoned, EntryPoint) == 0x000000, "Member 'BP_EvilEye_Summoned_C_ExecuteUbergraph_BP_EvilEye_Summoned::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_EvilEye_Summoned_C_ExecuteUbergraph_BP_EvilEye_Summoned, CallFunc_HasAuthority_ReturnValue) == 0x000004, "Member 'BP_EvilEye_Summoned_C_ExecuteUbergraph_BP_EvilEye_Summoned::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EvilEye_Summoned_C_ExecuteUbergraph_BP_EvilEye_Summoned, K2Node_Event_DeltaSeconds) == 0x000008, "Member 'BP_EvilEye_Summoned_C_ExecuteUbergraph_BP_EvilEye_Summoned::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_EvilEye_Summoned_C_ExecuteUbergraph_BP_EvilEye_Summoned, CallFunc_UpdateGlowing_DeltaTime_ImplicitCast) == 0x000010, "Member 'BP_EvilEye_Summoned_C_ExecuteUbergraph_BP_EvilEye_Summoned::CallFunc_UpdateGlowing_DeltaTime_ImplicitCast' has a wrong offset!");

// Function BP_EvilEye_Summoned.BP_EvilEye_Summoned_C.OnGlowingEyes
// 0x0001 (0x0001 - 0x0000)
struct BP_EvilEye_Summoned_C_OnGlowingEyes final
{
public:
	bool                                          OnAttack;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EvilEye_Summoned_C_OnGlowingEyes) == 0x000001, "Wrong alignment on BP_EvilEye_Summoned_C_OnGlowingEyes");
static_assert(sizeof(BP_EvilEye_Summoned_C_OnGlowingEyes) == 0x000001, "Wrong size on BP_EvilEye_Summoned_C_OnGlowingEyes");
static_assert(offsetof(BP_EvilEye_Summoned_C_OnGlowingEyes, OnAttack) == 0x000000, "Member 'BP_EvilEye_Summoned_C_OnGlowingEyes::OnAttack' has a wrong offset!");

// Function BP_EvilEye_Summoned.BP_EvilEye_Summoned_C.OnRep_OnRedEyes
// 0x0018 (0x0018 - 0x0000)
struct BP_EvilEye_Summoned_C_OnRep_OnRedEyes final
{
public:
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable;                            // 0x0000(0x0010)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_PostEvent_ReturnValue;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EvilEye_Summoned_C_OnRep_OnRedEyes) == 0x000004, "Wrong alignment on BP_EvilEye_Summoned_C_OnRep_OnRedEyes");
static_assert(sizeof(BP_EvilEye_Summoned_C_OnRep_OnRedEyes) == 0x000018, "Wrong size on BP_EvilEye_Summoned_C_OnRep_OnRedEyes");
static_assert(offsetof(BP_EvilEye_Summoned_C_OnRep_OnRedEyes, Temp_delegate_Variable) == 0x000000, "Member 'BP_EvilEye_Summoned_C_OnRep_OnRedEyes::Temp_delegate_Variable' has a wrong offset!");
static_assert(offsetof(BP_EvilEye_Summoned_C_OnRep_OnRedEyes, CallFunc_PostEvent_ReturnValue) == 0x000010, "Member 'BP_EvilEye_Summoned_C_OnRep_OnRedEyes::CallFunc_PostEvent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EvilEye_Summoned_C_OnRep_OnRedEyes, CallFunc_Not_PreBool_ReturnValue) == 0x000014, "Member 'BP_EvilEye_Summoned_C_OnRep_OnRedEyes::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function BP_EvilEye_Summoned.BP_EvilEye_Summoned_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_EvilEye_Summoned_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EvilEye_Summoned_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_EvilEye_Summoned_C_ReceiveTick");
static_assert(sizeof(BP_EvilEye_Summoned_C_ReceiveTick) == 0x000004, "Wrong size on BP_EvilEye_Summoned_C_ReceiveTick");
static_assert(offsetof(BP_EvilEye_Summoned_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_EvilEye_Summoned_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_EvilEye_Summoned.BP_EvilEye_Summoned_C.SetAttackByCollisionOption
// 0x0001 (0x0001 - 0x0000)
struct BP_EvilEye_Summoned_C_SetAttackByCollisionOption final
{
public:
	bool                                          OnAttack;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EvilEye_Summoned_C_SetAttackByCollisionOption) == 0x000001, "Wrong alignment on BP_EvilEye_Summoned_C_SetAttackByCollisionOption");
static_assert(sizeof(BP_EvilEye_Summoned_C_SetAttackByCollisionOption) == 0x000001, "Wrong size on BP_EvilEye_Summoned_C_SetAttackByCollisionOption");
static_assert(offsetof(BP_EvilEye_Summoned_C_SetAttackByCollisionOption, OnAttack) == 0x000000, "Member 'BP_EvilEye_Summoned_C_SetAttackByCollisionOption::OnAttack' has a wrong offset!");

// Function BP_EvilEye_Summoned.BP_EvilEye_Summoned_C.UpdateGlowing
// 0x0118 (0x0118 - 0x0000)
struct BP_EvilEye_Summoned_C_UpdateGlowing final
{
public:
	double                                        DeltaTime;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        MaxGlowingTime;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        MinGlowingTime;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Param_GlowingScale;                                // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_2;           // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_56E3[0x7];                                     // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Ease_ReturnValue;                         // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Ease_ReturnValue_1;                       // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMaterialSpriteElement                 K2Node_MakeStruct_MaterialSpriteElement;           // 0x0070(0x0028)(NoDestructor)
	TArray<struct FMaterialSpriteElement>         K2Node_MakeArray_Array;                            // 0x0098(0x0010)(ConstParm, ReferenceParm)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue_1;  // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_56E4[0x7];                                     // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_3;      // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Ease_ReturnValue_2;                       // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Ease_ReturnValue_3;                       // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMaterialSpriteElement                 K2Node_MakeStruct_MaterialSpriteElement_1;         // 0x00D0(0x0028)(NoDestructor)
	TArray<struct FMaterialSpriteElement>         K2Node_MakeArray_Array_1;                          // 0x00F8(0x0010)(ConstParm, ReferenceParm)
	float                                         K2Node_MakeStruct_BaseSizeY_ImplicitCast;          // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_BaseSizeX_ImplicitCast;          // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_BaseSizeY_ImplicitCast_1;        // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_BaseSizeX_ImplicitCast_1;        // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EvilEye_Summoned_C_UpdateGlowing) == 0x000008, "Wrong alignment on BP_EvilEye_Summoned_C_UpdateGlowing");
static_assert(sizeof(BP_EvilEye_Summoned_C_UpdateGlowing) == 0x000118, "Wrong size on BP_EvilEye_Summoned_C_UpdateGlowing");
static_assert(offsetof(BP_EvilEye_Summoned_C_UpdateGlowing, DeltaTime) == 0x000000, "Member 'BP_EvilEye_Summoned_C_UpdateGlowing::DeltaTime' has a wrong offset!");
static_assert(offsetof(BP_EvilEye_Summoned_C_UpdateGlowing, MaxGlowingTime) == 0x000008, "Member 'BP_EvilEye_Summoned_C_UpdateGlowing::MaxGlowingTime' has a wrong offset!");
static_assert(offsetof(BP_EvilEye_Summoned_C_UpdateGlowing, MinGlowingTime) == 0x000010, "Member 'BP_EvilEye_Summoned_C_UpdateGlowing::MinGlowingTime' has a wrong offset!");
static_assert(offsetof(BP_EvilEye_Summoned_C_UpdateGlowing, Param_GlowingScale) == 0x000018, "Member 'BP_EvilEye_Summoned_C_UpdateGlowing::Param_GlowingScale' has a wrong offset!");
static_assert(offsetof(BP_EvilEye_Summoned_C_UpdateGlowing, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000020, "Member 'BP_EvilEye_Summoned_C_UpdateGlowing::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EvilEye_Summoned_C_UpdateGlowing, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000028, "Member 'BP_EvilEye_Summoned_C_UpdateGlowing::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EvilEye_Summoned_C_UpdateGlowing, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x000030, "Member 'BP_EvilEye_Summoned_C_UpdateGlowing::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EvilEye_Summoned_C_UpdateGlowing, CallFunc_Add_DoubleDouble_ReturnValue_2) == 0x000038, "Member 'BP_EvilEye_Summoned_C_UpdateGlowing::CallFunc_Add_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EvilEye_Summoned_C_UpdateGlowing, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x000040, "Member 'BP_EvilEye_Summoned_C_UpdateGlowing::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EvilEye_Summoned_C_UpdateGlowing, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x000048, "Member 'BP_EvilEye_Summoned_C_UpdateGlowing::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EvilEye_Summoned_C_UpdateGlowing, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000050, "Member 'BP_EvilEye_Summoned_C_UpdateGlowing::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EvilEye_Summoned_C_UpdateGlowing, CallFunc_Ease_ReturnValue) == 0x000058, "Member 'BP_EvilEye_Summoned_C_UpdateGlowing::CallFunc_Ease_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EvilEye_Summoned_C_UpdateGlowing, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000060, "Member 'BP_EvilEye_Summoned_C_UpdateGlowing::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EvilEye_Summoned_C_UpdateGlowing, CallFunc_Ease_ReturnValue_1) == 0x000068, "Member 'BP_EvilEye_Summoned_C_UpdateGlowing::CallFunc_Ease_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EvilEye_Summoned_C_UpdateGlowing, K2Node_MakeStruct_MaterialSpriteElement) == 0x000070, "Member 'BP_EvilEye_Summoned_C_UpdateGlowing::K2Node_MakeStruct_MaterialSpriteElement' has a wrong offset!");
static_assert(offsetof(BP_EvilEye_Summoned_C_UpdateGlowing, K2Node_MakeArray_Array) == 0x000098, "Member 'BP_EvilEye_Summoned_C_UpdateGlowing::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_EvilEye_Summoned_C_UpdateGlowing, CallFunc_GreaterEqual_DoubleDouble_ReturnValue_1) == 0x0000A8, "Member 'BP_EvilEye_Summoned_C_UpdateGlowing::CallFunc_GreaterEqual_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EvilEye_Summoned_C_UpdateGlowing, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x0000B0, "Member 'BP_EvilEye_Summoned_C_UpdateGlowing::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EvilEye_Summoned_C_UpdateGlowing, CallFunc_Multiply_DoubleDouble_ReturnValue_3) == 0x0000B8, "Member 'BP_EvilEye_Summoned_C_UpdateGlowing::CallFunc_Multiply_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EvilEye_Summoned_C_UpdateGlowing, CallFunc_Ease_ReturnValue_2) == 0x0000C0, "Member 'BP_EvilEye_Summoned_C_UpdateGlowing::CallFunc_Ease_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EvilEye_Summoned_C_UpdateGlowing, CallFunc_Ease_ReturnValue_3) == 0x0000C8, "Member 'BP_EvilEye_Summoned_C_UpdateGlowing::CallFunc_Ease_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EvilEye_Summoned_C_UpdateGlowing, K2Node_MakeStruct_MaterialSpriteElement_1) == 0x0000D0, "Member 'BP_EvilEye_Summoned_C_UpdateGlowing::K2Node_MakeStruct_MaterialSpriteElement_1' has a wrong offset!");
static_assert(offsetof(BP_EvilEye_Summoned_C_UpdateGlowing, K2Node_MakeArray_Array_1) == 0x0000F8, "Member 'BP_EvilEye_Summoned_C_UpdateGlowing::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_EvilEye_Summoned_C_UpdateGlowing, K2Node_MakeStruct_BaseSizeY_ImplicitCast) == 0x000108, "Member 'BP_EvilEye_Summoned_C_UpdateGlowing::K2Node_MakeStruct_BaseSizeY_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_EvilEye_Summoned_C_UpdateGlowing, K2Node_MakeStruct_BaseSizeX_ImplicitCast) == 0x00010C, "Member 'BP_EvilEye_Summoned_C_UpdateGlowing::K2Node_MakeStruct_BaseSizeX_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_EvilEye_Summoned_C_UpdateGlowing, K2Node_MakeStruct_BaseSizeY_ImplicitCast_1) == 0x000110, "Member 'BP_EvilEye_Summoned_C_UpdateGlowing::K2Node_MakeStruct_BaseSizeY_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_EvilEye_Summoned_C_UpdateGlowing, K2Node_MakeStruct_BaseSizeX_ImplicitCast_1) == 0x000114, "Member 'BP_EvilEye_Summoned_C_UpdateGlowing::K2Node_MakeStruct_BaseSizeX_ImplicitCast_1' has a wrong offset!");

}

