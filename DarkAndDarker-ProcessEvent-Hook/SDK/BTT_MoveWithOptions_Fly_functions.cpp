#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BTT_MoveWithOptions_Fly

#include "Basic.hpp"

#include "BTT_MoveWithOptions_Fly_classes.hpp"
#include "BTT_MoveWithOptions_Fly_parameters.hpp"


namespace SDK
{

// Function BTT_MoveWithOptions_Fly.BTT_MoveWithOptions_Fly_C.Check Invisible Target
// (Public, BlueprintCallable, BlueprintEvent)

void UBTT_MoveWithOptions_Fly_C::Check_Invisible_Target()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BTT_MoveWithOptions_Fly_C", "Check Invisible Target");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BTT_MoveWithOptions_Fly.BTT_MoveWithOptions_Fly_C.Check Remain Distance 3D
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APawn*                            OwnerActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// double                                  DeltaTime                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  ResultDistance                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBTT_MoveWithOptions_Fly_C::Check_Remain_Distance_3D(class APawn* OwnerActor, double DeltaTime, double* ResultDistance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BTT_MoveWithOptions_Fly_C", "Check Remain Distance 3D");

	Params::BTT_MoveWithOptions_Fly_C_Check_Remain_Distance_3D Parms{};

	Parms.OwnerActor = OwnerActor;
	Parms.DeltaTime = DeltaTime;

	UObject::ProcessEvent(Func, &Parms);

	if (ResultDistance != nullptr)
		*ResultDistance = Parms.ResultDistance;
}


// Function BTT_MoveWithOptions_Fly.BTT_MoveWithOptions_Fly_C.CheckEnemies
// (BlueprintCallable, BlueprintEvent)

void UBTT_MoveWithOptions_Fly_C::CheckEnemies()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BTT_MoveWithOptions_Fly_C", "CheckEnemies");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BTT_MoveWithOptions_Fly.BTT_MoveWithOptions_Fly_C.CheckObjects
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APawn*                            OwnerActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBTT_MoveWithOptions_Fly_C::CheckObjects(class APawn* OwnerActor, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BTT_MoveWithOptions_Fly_C", "CheckObjects");

	Params::BTT_MoveWithOptions_Fly_C_CheckObjects Parms{};

	Parms.OwnerActor = OwnerActor;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function BTT_MoveWithOptions_Fly.BTT_MoveWithOptions_Fly_C.CheckStopTime
// (Public, BlueprintCallable, BlueprintEvent)

void UBTT_MoveWithOptions_Fly_C::CheckStopTime()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BTT_MoveWithOptions_Fly_C", "CheckStopTime");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BTT_MoveWithOptions_Fly.BTT_MoveWithOptions_Fly_C.ClearVariables
// (Public, BlueprintCallable, BlueprintEvent)

void UBTT_MoveWithOptions_Fly_C::ClearVariables()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BTT_MoveWithOptions_Fly_C", "ClearVariables");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BTT_MoveWithOptions_Fly.BTT_MoveWithOptions_Fly_C.EventReceived_DFF4174A4768D303B7BF7C8C1C1E69D4
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGameplayEventData               Payload                                                (BlueprintVisible, BlueprintReadOnly, Parm)

void UBTT_MoveWithOptions_Fly_C::EventReceived_DFF4174A4768D303B7BF7C8C1C1E69D4(const struct FGameplayEventData& Payload)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BTT_MoveWithOptions_Fly_C", "EventReceived_DFF4174A4768D303B7BF7C8C1C1E69D4");

	Params::BTT_MoveWithOptions_Fly_C_EventReceived_DFF4174A4768D303B7BF7C8C1C1E69D4 Parms{};

	Parms.Payload = std::move(Payload);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BTT_MoveWithOptions_Fly.BTT_MoveWithOptions_Fly_C.ExecuteUbergraph_BTT_MoveWithOptions_Fly
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBTT_MoveWithOptions_Fly_C::ExecuteUbergraph_BTT_MoveWithOptions_Fly(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BTT_MoveWithOptions_Fly_C", "ExecuteUbergraph_BTT_MoveWithOptions_Fly");

	Params::BTT_MoveWithOptions_Fly_C_ExecuteUbergraph_BTT_MoveWithOptions_Fly Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BTT_MoveWithOptions_Fly.BTT_MoveWithOptions_Fly_C.OnTaskFinished
// (Event, Protected, BlueprintEvent)
// Parameters:
// class AAIController*                    OwnerController                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class APawn*                            ControlledPawn                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// EBTNodeResult                           TaskResult                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBTT_MoveWithOptions_Fly_C::OnTaskFinished(class AAIController* OwnerController, class APawn* ControlledPawn, EBTNodeResult TaskResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BTT_MoveWithOptions_Fly_C", "OnTaskFinished");

	Params::BTT_MoveWithOptions_Fly_C_OnTaskFinished Parms{};

	Parms.OwnerController = OwnerController;
	Parms.ControlledPawn = ControlledPawn;
	Parms.TaskResult = TaskResult;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BTT_MoveWithOptions_Fly.BTT_MoveWithOptions_Fly_C.ReceiveExecuteAI
// (Event, Protected, BlueprintEvent)
// Parameters:
// class AAIController*                    OwnerController                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class APawn*                            ControlledPawn                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBTT_MoveWithOptions_Fly_C::ReceiveExecuteAI(class AAIController* OwnerController, class APawn* ControlledPawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BTT_MoveWithOptions_Fly_C", "ReceiveExecuteAI");

	Params::BTT_MoveWithOptions_Fly_C_ReceiveExecuteAI Parms{};

	Parms.OwnerController = OwnerController;
	Parms.ControlledPawn = ControlledPawn;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BTT_MoveWithOptions_Fly.BTT_MoveWithOptions_Fly_C.ReceiveTickAI
// (Event, Protected, BlueprintEvent)
// Parameters:
// class AAIController*                    OwnerController                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class APawn*                            ControlledPawn                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBTT_MoveWithOptions_Fly_C::ReceiveTickAI(class AAIController* OwnerController, class APawn* ControlledPawn, float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BTT_MoveWithOptions_Fly_C", "ReceiveTickAI");

	Params::BTT_MoveWithOptions_Fly_C_ReceiveTickAI Parms{};

	Parms.OwnerController = OwnerController;
	Parms.ControlledPawn = ControlledPawn;
	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BTT_MoveWithOptions_Fly.BTT_MoveWithOptions_Fly_C.SetDestination
// (Public, BlueprintCallable, BlueprintEvent)

void UBTT_MoveWithOptions_Fly_C::SetDestination()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BTT_MoveWithOptions_Fly_C", "SetDestination");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BTT_MoveWithOptions_Fly.BTT_MoveWithOptions_Fly_C.SetRemainDistance
// (Public, BlueprintCallable, BlueprintEvent)

void UBTT_MoveWithOptions_Fly_C::SetRemainDistance()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BTT_MoveWithOptions_Fly_C", "SetRemainDistance");

	UObject::ProcessEvent(Func, nullptr);
}

}

