#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_VictoryStrike

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"
#include "GameplayAbilities_structs.hpp"


namespace SDK::Params
{

// Function GA_VictoryStrike.GA_VictoryStrike_C.ClientOnSkillActivate
// 0x0010 (0x0010 - 0x0000)
struct GA_VictoryStrike_C_ClientOnSkillActivate final
{
public:
	struct FGameplayTag                           SkillTag;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           CooldownTag;                                       // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_VictoryStrike_C_ClientOnSkillActivate) == 0x000004, "Wrong alignment on GA_VictoryStrike_C_ClientOnSkillActivate");
static_assert(sizeof(GA_VictoryStrike_C_ClientOnSkillActivate) == 0x000010, "Wrong size on GA_VictoryStrike_C_ClientOnSkillActivate");
static_assert(offsetof(GA_VictoryStrike_C_ClientOnSkillActivate, SkillTag) == 0x000000, "Member 'GA_VictoryStrike_C_ClientOnSkillActivate::SkillTag' has a wrong offset!");
static_assert(offsetof(GA_VictoryStrike_C_ClientOnSkillActivate, CooldownTag) == 0x000008, "Member 'GA_VictoryStrike_C_ClientOnSkillActivate::CooldownTag' has a wrong offset!");

// Function GA_VictoryStrike.GA_VictoryStrike_C.EventReceived_4152A666499A52F3576D7DA76244168D
// 0x00B8 (0x00B8 - 0x0000)
struct GA_VictoryStrike_C_EventReceived_4152A666499A52F3576D7DA76244168D final
{
public:
	struct FGameplayTag                           EventTag;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEventData                     EventData;                                         // 0x0008(0x00B0)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(GA_VictoryStrike_C_EventReceived_4152A666499A52F3576D7DA76244168D) == 0x000008, "Wrong alignment on GA_VictoryStrike_C_EventReceived_4152A666499A52F3576D7DA76244168D");
static_assert(sizeof(GA_VictoryStrike_C_EventReceived_4152A666499A52F3576D7DA76244168D) == 0x0000B8, "Wrong size on GA_VictoryStrike_C_EventReceived_4152A666499A52F3576D7DA76244168D");
static_assert(offsetof(GA_VictoryStrike_C_EventReceived_4152A666499A52F3576D7DA76244168D, EventTag) == 0x000000, "Member 'GA_VictoryStrike_C_EventReceived_4152A666499A52F3576D7DA76244168D::EventTag' has a wrong offset!");
static_assert(offsetof(GA_VictoryStrike_C_EventReceived_4152A666499A52F3576D7DA76244168D, EventData) == 0x000008, "Member 'GA_VictoryStrike_C_EventReceived_4152A666499A52F3576D7DA76244168D::EventData' has a wrong offset!");

// Function GA_VictoryStrike.GA_VictoryStrike_C.EventReceived_4550563E45E7099E87C701BAF081F1C4
// 0x00B8 (0x00B8 - 0x0000)
struct GA_VictoryStrike_C_EventReceived_4550563E45E7099E87C701BAF081F1C4 final
{
public:
	struct FGameplayTag                           EventTag;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEventData                     EventData;                                         // 0x0008(0x00B0)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(GA_VictoryStrike_C_EventReceived_4550563E45E7099E87C701BAF081F1C4) == 0x000008, "Wrong alignment on GA_VictoryStrike_C_EventReceived_4550563E45E7099E87C701BAF081F1C4");
static_assert(sizeof(GA_VictoryStrike_C_EventReceived_4550563E45E7099E87C701BAF081F1C4) == 0x0000B8, "Wrong size on GA_VictoryStrike_C_EventReceived_4550563E45E7099E87C701BAF081F1C4");
static_assert(offsetof(GA_VictoryStrike_C_EventReceived_4550563E45E7099E87C701BAF081F1C4, EventTag) == 0x000000, "Member 'GA_VictoryStrike_C_EventReceived_4550563E45E7099E87C701BAF081F1C4::EventTag' has a wrong offset!");
static_assert(offsetof(GA_VictoryStrike_C_EventReceived_4550563E45E7099E87C701BAF081F1C4, EventData) == 0x000008, "Member 'GA_VictoryStrike_C_EventReceived_4550563E45E7099E87C701BAF081F1C4::EventData' has a wrong offset!");

// Function GA_VictoryStrike.GA_VictoryStrike_C.EventReceived_E82B711947DCAFA3711E85BF6CDB03F0
// 0x00B8 (0x00B8 - 0x0000)
struct GA_VictoryStrike_C_EventReceived_E82B711947DCAFA3711E85BF6CDB03F0 final
{
public:
	struct FGameplayTag                           EventTag;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEventData                     EventData;                                         // 0x0008(0x00B0)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(GA_VictoryStrike_C_EventReceived_E82B711947DCAFA3711E85BF6CDB03F0) == 0x000008, "Wrong alignment on GA_VictoryStrike_C_EventReceived_E82B711947DCAFA3711E85BF6CDB03F0");
static_assert(sizeof(GA_VictoryStrike_C_EventReceived_E82B711947DCAFA3711E85BF6CDB03F0) == 0x0000B8, "Wrong size on GA_VictoryStrike_C_EventReceived_E82B711947DCAFA3711E85BF6CDB03F0");
static_assert(offsetof(GA_VictoryStrike_C_EventReceived_E82B711947DCAFA3711E85BF6CDB03F0, EventTag) == 0x000000, "Member 'GA_VictoryStrike_C_EventReceived_E82B711947DCAFA3711E85BF6CDB03F0::EventTag' has a wrong offset!");
static_assert(offsetof(GA_VictoryStrike_C_EventReceived_E82B711947DCAFA3711E85BF6CDB03F0, EventData) == 0x000008, "Member 'GA_VictoryStrike_C_EventReceived_E82B711947DCAFA3711E85BF6CDB03F0::EventData' has a wrong offset!");

// Function GA_VictoryStrike.GA_VictoryStrike_C.ExecuteUbergraph_GA_VictoryStrike
// 0x0870 (0x0870 - 0x0000)
struct GA_VictoryStrike_C_ExecuteUbergraph_GA_VictoryStrike final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_CustomEvent_EventTag_2;                     // 0x0004(0x0008)(NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_48C6[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayEventData                     K2Node_CustomEvent_EventData_2;                    // 0x0010(0x00B0)()
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_48C7[0x4];                                     // 0x00C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayEventData                     Temp_struct_Variable;                              // 0x00C8(0x00B0)()
	struct FGameplayTag                           Temp_struct_Variable_1;                            // 0x0178(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsOnHitSkillActivatingPhysicalAttackHit_ReturnValue; // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_48C8[0x7];                                     // 0x0181(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UDCAT_WaitForGameplayEvents*            CallFunc_WaitForGameplayEvents_ReturnValue;        // 0x0188(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_48C9[0x3];                                     // 0x0191(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(const struct FGameplayTag& EventTag, const struct FGameplayEventData& EventData)> K2Node_CreateDelegate_OutputDelegate;              // 0x0194(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_CustomEvent_EventTag_1;                     // 0x01A4(0x0008)(NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_48CA[0x4];                                     // 0x01AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayEventData                     K2Node_CustomEvent_EventData_1;                    // 0x01B0(0x00B0)()
	struct FGameplayEventData                     Temp_struct_Variable_2;                            // 0x0260(0x00B0)()
	struct FGameplayTag                           Temp_struct_Variable_3;                            // 0x0310(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsOnHitSkillActivatingPhysicalAttackHit_ReturnValue_1; // 0x0318(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_48CB[0x7];                                     // 0x0319(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ADCCharacterBase*                       K2Node_DynamicCast_AsDCCharacter_Base;             // 0x0320(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0328(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_48CC[0x7];                                     // 0x0329(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UDCAT_WaitForGameplayEvents*            CallFunc_WaitForGameplayEvents_ReturnValue_1;      // 0x0330(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEventData                     Temp_struct_Variable_4;                            // 0x0338(0x00B0)(ConstParm)
	TArray<struct FActiveGameplayEffectHandle>    CallFunc_ApplyEffectContainer_ReturnValue;         // 0x03E8(0x0010)(ReferenceParm)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x03F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_48CD[0x3];                                     // 0x03F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(const struct FGameplayTag& EventTag, const struct FGameplayEventData& EventData)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x03FC(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_CustomEvent_EventTag;                       // 0x040C(0x0008)(NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_48CE[0x4];                                     // 0x0414(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayEventData                     K2Node_CustomEvent_EventData;                      // 0x0418(0x00B0)()
	struct FGameplayEventData                     Temp_struct_Variable_5;                            // 0x04C8(0x00B0)()
	struct FGameplayTag                           Temp_struct_Variable_6;                            // 0x0578(0x0008)(NoDestructor, HasGetValueTypeHash)
	class UDCAT_WaitForGameplayEvents*            CallFunc_WaitForGameplayEvents_ReturnValue_2;      // 0x0580(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEventData                     Temp_struct_Variable_7;                            // 0x0588(0x00B0)(ConstParm)
	TArray<struct FActiveGameplayEffectHandle>    CallFunc_ApplyEffectContainer_ReturnValue_1;       // 0x0638(0x0010)(ReferenceParm)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0648(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_48CF[0x3];                                     // 0x0649(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x064C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0650(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FActiveGameplayEffectHandle            CallFunc_Array_Get_Item;                           // 0x0654(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x065C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_48D0[0x3];                                     // 0x065D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0660(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_48D1[0x4];                                     // 0x0664(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetAvatarActorFromActorInfo_ReturnValue;  // 0x0668(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        CallFunc_K2_GetRootComponent_ReturnValue;          // 0x0670(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const struct FGameplayTag& EventTag, const struct FGameplayEventData& EventData)> K2Node_CreateDelegate_OutputDelegate_2;            // 0x0678(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 CallFunc_MakeGameplayCueParameters_ReturnValue;    // 0x0688(0x00D8)(ContainsInstancedReference)
	class AActor*                                 CallFunc_GetAvatarActorFromActorInfo_ReturnValue_1; // 0x0760(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_Event_SkillTag_1;                           // 0x0768(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_Event_CooldownTag_1;                        // 0x0770(0x0008)(NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        CallFunc_K2_GetRootComponent_ReturnValue_1;        // 0x0778(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_Event_SkillTag;                             // 0x0780(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_Event_CooldownTag;                          // 0x0788(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 CallFunc_MakeGameplayCueParameters_ReturnValue_1;  // 0x0790(0x00D8)(ContainsInstancedReference)
	bool                                          K2Node_Event_bWasCancelled;                        // 0x0868(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_VictoryStrike_C_ExecuteUbergraph_GA_VictoryStrike) == 0x000008, "Wrong alignment on GA_VictoryStrike_C_ExecuteUbergraph_GA_VictoryStrike");
static_assert(sizeof(GA_VictoryStrike_C_ExecuteUbergraph_GA_VictoryStrike) == 0x000870, "Wrong size on GA_VictoryStrike_C_ExecuteUbergraph_GA_VictoryStrike");
static_assert(offsetof(GA_VictoryStrike_C_ExecuteUbergraph_GA_VictoryStrike, EntryPoint) == 0x000000, "Member 'GA_VictoryStrike_C_ExecuteUbergraph_GA_VictoryStrike::EntryPoint' has a wrong offset!");
static_assert(offsetof(GA_VictoryStrike_C_ExecuteUbergraph_GA_VictoryStrike, K2Node_CustomEvent_EventTag_2) == 0x000004, "Member 'GA_VictoryStrike_C_ExecuteUbergraph_GA_VictoryStrike::K2Node_CustomEvent_EventTag_2' has a wrong offset!");
static_assert(offsetof(GA_VictoryStrike_C_ExecuteUbergraph_GA_VictoryStrike, K2Node_CustomEvent_EventData_2) == 0x000010, "Member 'GA_VictoryStrike_C_ExecuteUbergraph_GA_VictoryStrike::K2Node_CustomEvent_EventData_2' has a wrong offset!");
static_assert(offsetof(GA_VictoryStrike_C_ExecuteUbergraph_GA_VictoryStrike, CallFunc_Array_Length_ReturnValue) == 0x0000C0, "Member 'GA_VictoryStrike_C_ExecuteUbergraph_GA_VictoryStrike::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_VictoryStrike_C_ExecuteUbergraph_GA_VictoryStrike, Temp_struct_Variable) == 0x0000C8, "Member 'GA_VictoryStrike_C_ExecuteUbergraph_GA_VictoryStrike::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(GA_VictoryStrike_C_ExecuteUbergraph_GA_VictoryStrike, Temp_struct_Variable_1) == 0x000178, "Member 'GA_VictoryStrike_C_ExecuteUbergraph_GA_VictoryStrike::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(GA_VictoryStrike_C_ExecuteUbergraph_GA_VictoryStrike, CallFunc_IsOnHitSkillActivatingPhysicalAttackHit_ReturnValue) == 0x000180, "Member 'GA_VictoryStrike_C_ExecuteUbergraph_GA_VictoryStrike::CallFunc_IsOnHitSkillActivatingPhysicalAttackHit_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_VictoryStrike_C_ExecuteUbergraph_GA_VictoryStrike, CallFunc_WaitForGameplayEvents_ReturnValue) == 0x000188, "Member 'GA_VictoryStrike_C_ExecuteUbergraph_GA_VictoryStrike::CallFunc_WaitForGameplayEvents_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_VictoryStrike_C_ExecuteUbergraph_GA_VictoryStrike, CallFunc_IsValid_ReturnValue) == 0x000190, "Member 'GA_VictoryStrike_C_ExecuteUbergraph_GA_VictoryStrike::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_VictoryStrike_C_ExecuteUbergraph_GA_VictoryStrike, K2Node_CreateDelegate_OutputDelegate) == 0x000194, "Member 'GA_VictoryStrike_C_ExecuteUbergraph_GA_VictoryStrike::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(GA_VictoryStrike_C_ExecuteUbergraph_GA_VictoryStrike, K2Node_CustomEvent_EventTag_1) == 0x0001A4, "Member 'GA_VictoryStrike_C_ExecuteUbergraph_GA_VictoryStrike::K2Node_CustomEvent_EventTag_1' has a wrong offset!");
static_assert(offsetof(GA_VictoryStrike_C_ExecuteUbergraph_GA_VictoryStrike, K2Node_CustomEvent_EventData_1) == 0x0001B0, "Member 'GA_VictoryStrike_C_ExecuteUbergraph_GA_VictoryStrike::K2Node_CustomEvent_EventData_1' has a wrong offset!");
static_assert(offsetof(GA_VictoryStrike_C_ExecuteUbergraph_GA_VictoryStrike, Temp_struct_Variable_2) == 0x000260, "Member 'GA_VictoryStrike_C_ExecuteUbergraph_GA_VictoryStrike::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(GA_VictoryStrike_C_ExecuteUbergraph_GA_VictoryStrike, Temp_struct_Variable_3) == 0x000310, "Member 'GA_VictoryStrike_C_ExecuteUbergraph_GA_VictoryStrike::Temp_struct_Variable_3' has a wrong offset!");
static_assert(offsetof(GA_VictoryStrike_C_ExecuteUbergraph_GA_VictoryStrike, CallFunc_IsOnHitSkillActivatingPhysicalAttackHit_ReturnValue_1) == 0x000318, "Member 'GA_VictoryStrike_C_ExecuteUbergraph_GA_VictoryStrike::CallFunc_IsOnHitSkillActivatingPhysicalAttackHit_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_VictoryStrike_C_ExecuteUbergraph_GA_VictoryStrike, K2Node_DynamicCast_AsDCCharacter_Base) == 0x000320, "Member 'GA_VictoryStrike_C_ExecuteUbergraph_GA_VictoryStrike::K2Node_DynamicCast_AsDCCharacter_Base' has a wrong offset!");
static_assert(offsetof(GA_VictoryStrike_C_ExecuteUbergraph_GA_VictoryStrike, K2Node_DynamicCast_bSuccess) == 0x000328, "Member 'GA_VictoryStrike_C_ExecuteUbergraph_GA_VictoryStrike::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GA_VictoryStrike_C_ExecuteUbergraph_GA_VictoryStrike, CallFunc_WaitForGameplayEvents_ReturnValue_1) == 0x000330, "Member 'GA_VictoryStrike_C_ExecuteUbergraph_GA_VictoryStrike::CallFunc_WaitForGameplayEvents_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_VictoryStrike_C_ExecuteUbergraph_GA_VictoryStrike, Temp_struct_Variable_4) == 0x000338, "Member 'GA_VictoryStrike_C_ExecuteUbergraph_GA_VictoryStrike::Temp_struct_Variable_4' has a wrong offset!");
static_assert(offsetof(GA_VictoryStrike_C_ExecuteUbergraph_GA_VictoryStrike, CallFunc_ApplyEffectContainer_ReturnValue) == 0x0003E8, "Member 'GA_VictoryStrike_C_ExecuteUbergraph_GA_VictoryStrike::CallFunc_ApplyEffectContainer_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_VictoryStrike_C_ExecuteUbergraph_GA_VictoryStrike, CallFunc_IsValid_ReturnValue_1) == 0x0003F8, "Member 'GA_VictoryStrike_C_ExecuteUbergraph_GA_VictoryStrike::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_VictoryStrike_C_ExecuteUbergraph_GA_VictoryStrike, K2Node_CreateDelegate_OutputDelegate_1) == 0x0003FC, "Member 'GA_VictoryStrike_C_ExecuteUbergraph_GA_VictoryStrike::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(GA_VictoryStrike_C_ExecuteUbergraph_GA_VictoryStrike, K2Node_CustomEvent_EventTag) == 0x00040C, "Member 'GA_VictoryStrike_C_ExecuteUbergraph_GA_VictoryStrike::K2Node_CustomEvent_EventTag' has a wrong offset!");
static_assert(offsetof(GA_VictoryStrike_C_ExecuteUbergraph_GA_VictoryStrike, K2Node_CustomEvent_EventData) == 0x000418, "Member 'GA_VictoryStrike_C_ExecuteUbergraph_GA_VictoryStrike::K2Node_CustomEvent_EventData' has a wrong offset!");
static_assert(offsetof(GA_VictoryStrike_C_ExecuteUbergraph_GA_VictoryStrike, Temp_struct_Variable_5) == 0x0004C8, "Member 'GA_VictoryStrike_C_ExecuteUbergraph_GA_VictoryStrike::Temp_struct_Variable_5' has a wrong offset!");
static_assert(offsetof(GA_VictoryStrike_C_ExecuteUbergraph_GA_VictoryStrike, Temp_struct_Variable_6) == 0x000578, "Member 'GA_VictoryStrike_C_ExecuteUbergraph_GA_VictoryStrike::Temp_struct_Variable_6' has a wrong offset!");
static_assert(offsetof(GA_VictoryStrike_C_ExecuteUbergraph_GA_VictoryStrike, CallFunc_WaitForGameplayEvents_ReturnValue_2) == 0x000580, "Member 'GA_VictoryStrike_C_ExecuteUbergraph_GA_VictoryStrike::CallFunc_WaitForGameplayEvents_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GA_VictoryStrike_C_ExecuteUbergraph_GA_VictoryStrike, Temp_struct_Variable_7) == 0x000588, "Member 'GA_VictoryStrike_C_ExecuteUbergraph_GA_VictoryStrike::Temp_struct_Variable_7' has a wrong offset!");
static_assert(offsetof(GA_VictoryStrike_C_ExecuteUbergraph_GA_VictoryStrike, CallFunc_ApplyEffectContainer_ReturnValue_1) == 0x000638, "Member 'GA_VictoryStrike_C_ExecuteUbergraph_GA_VictoryStrike::CallFunc_ApplyEffectContainer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_VictoryStrike_C_ExecuteUbergraph_GA_VictoryStrike, CallFunc_IsValid_ReturnValue_2) == 0x000648, "Member 'GA_VictoryStrike_C_ExecuteUbergraph_GA_VictoryStrike::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GA_VictoryStrike_C_ExecuteUbergraph_GA_VictoryStrike, Temp_int_Array_Index_Variable) == 0x00064C, "Member 'GA_VictoryStrike_C_ExecuteUbergraph_GA_VictoryStrike::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(GA_VictoryStrike_C_ExecuteUbergraph_GA_VictoryStrike, Temp_int_Loop_Counter_Variable) == 0x000650, "Member 'GA_VictoryStrike_C_ExecuteUbergraph_GA_VictoryStrike::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(GA_VictoryStrike_C_ExecuteUbergraph_GA_VictoryStrike, CallFunc_Array_Get_Item) == 0x000654, "Member 'GA_VictoryStrike_C_ExecuteUbergraph_GA_VictoryStrike::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(GA_VictoryStrike_C_ExecuteUbergraph_GA_VictoryStrike, CallFunc_Less_IntInt_ReturnValue) == 0x00065C, "Member 'GA_VictoryStrike_C_ExecuteUbergraph_GA_VictoryStrike::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_VictoryStrike_C_ExecuteUbergraph_GA_VictoryStrike, CallFunc_Add_IntInt_ReturnValue) == 0x000660, "Member 'GA_VictoryStrike_C_ExecuteUbergraph_GA_VictoryStrike::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_VictoryStrike_C_ExecuteUbergraph_GA_VictoryStrike, CallFunc_GetAvatarActorFromActorInfo_ReturnValue) == 0x000668, "Member 'GA_VictoryStrike_C_ExecuteUbergraph_GA_VictoryStrike::CallFunc_GetAvatarActorFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_VictoryStrike_C_ExecuteUbergraph_GA_VictoryStrike, CallFunc_K2_GetRootComponent_ReturnValue) == 0x000670, "Member 'GA_VictoryStrike_C_ExecuteUbergraph_GA_VictoryStrike::CallFunc_K2_GetRootComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_VictoryStrike_C_ExecuteUbergraph_GA_VictoryStrike, K2Node_CreateDelegate_OutputDelegate_2) == 0x000678, "Member 'GA_VictoryStrike_C_ExecuteUbergraph_GA_VictoryStrike::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(GA_VictoryStrike_C_ExecuteUbergraph_GA_VictoryStrike, CallFunc_MakeGameplayCueParameters_ReturnValue) == 0x000688, "Member 'GA_VictoryStrike_C_ExecuteUbergraph_GA_VictoryStrike::CallFunc_MakeGameplayCueParameters_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_VictoryStrike_C_ExecuteUbergraph_GA_VictoryStrike, CallFunc_GetAvatarActorFromActorInfo_ReturnValue_1) == 0x000760, "Member 'GA_VictoryStrike_C_ExecuteUbergraph_GA_VictoryStrike::CallFunc_GetAvatarActorFromActorInfo_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_VictoryStrike_C_ExecuteUbergraph_GA_VictoryStrike, K2Node_Event_SkillTag_1) == 0x000768, "Member 'GA_VictoryStrike_C_ExecuteUbergraph_GA_VictoryStrike::K2Node_Event_SkillTag_1' has a wrong offset!");
static_assert(offsetof(GA_VictoryStrike_C_ExecuteUbergraph_GA_VictoryStrike, K2Node_Event_CooldownTag_1) == 0x000770, "Member 'GA_VictoryStrike_C_ExecuteUbergraph_GA_VictoryStrike::K2Node_Event_CooldownTag_1' has a wrong offset!");
static_assert(offsetof(GA_VictoryStrike_C_ExecuteUbergraph_GA_VictoryStrike, CallFunc_K2_GetRootComponent_ReturnValue_1) == 0x000778, "Member 'GA_VictoryStrike_C_ExecuteUbergraph_GA_VictoryStrike::CallFunc_K2_GetRootComponent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_VictoryStrike_C_ExecuteUbergraph_GA_VictoryStrike, K2Node_Event_SkillTag) == 0x000780, "Member 'GA_VictoryStrike_C_ExecuteUbergraph_GA_VictoryStrike::K2Node_Event_SkillTag' has a wrong offset!");
static_assert(offsetof(GA_VictoryStrike_C_ExecuteUbergraph_GA_VictoryStrike, K2Node_Event_CooldownTag) == 0x000788, "Member 'GA_VictoryStrike_C_ExecuteUbergraph_GA_VictoryStrike::K2Node_Event_CooldownTag' has a wrong offset!");
static_assert(offsetof(GA_VictoryStrike_C_ExecuteUbergraph_GA_VictoryStrike, CallFunc_MakeGameplayCueParameters_ReturnValue_1) == 0x000790, "Member 'GA_VictoryStrike_C_ExecuteUbergraph_GA_VictoryStrike::CallFunc_MakeGameplayCueParameters_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_VictoryStrike_C_ExecuteUbergraph_GA_VictoryStrike, K2Node_Event_bWasCancelled) == 0x000868, "Member 'GA_VictoryStrike_C_ExecuteUbergraph_GA_VictoryStrike::K2Node_Event_bWasCancelled' has a wrong offset!");

// Function GA_VictoryStrike.GA_VictoryStrike_C.K2_OnEndAbility
// 0x0001 (0x0001 - 0x0000)
struct GA_VictoryStrike_C_K2_OnEndAbility final
{
public:
	bool                                          bWasCancelled;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_VictoryStrike_C_K2_OnEndAbility) == 0x000001, "Wrong alignment on GA_VictoryStrike_C_K2_OnEndAbility");
static_assert(sizeof(GA_VictoryStrike_C_K2_OnEndAbility) == 0x000001, "Wrong size on GA_VictoryStrike_C_K2_OnEndAbility");
static_assert(offsetof(GA_VictoryStrike_C_K2_OnEndAbility, bWasCancelled) == 0x000000, "Member 'GA_VictoryStrike_C_K2_OnEndAbility::bWasCancelled' has a wrong offset!");

// Function GA_VictoryStrike.GA_VictoryStrike_C.ServerOnSkillActivate
// 0x0010 (0x0010 - 0x0000)
struct GA_VictoryStrike_C_ServerOnSkillActivate final
{
public:
	struct FGameplayTag                           SkillTag;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           CooldownTag;                                       // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_VictoryStrike_C_ServerOnSkillActivate) == 0x000004, "Wrong alignment on GA_VictoryStrike_C_ServerOnSkillActivate");
static_assert(sizeof(GA_VictoryStrike_C_ServerOnSkillActivate) == 0x000010, "Wrong size on GA_VictoryStrike_C_ServerOnSkillActivate");
static_assert(offsetof(GA_VictoryStrike_C_ServerOnSkillActivate, SkillTag) == 0x000000, "Member 'GA_VictoryStrike_C_ServerOnSkillActivate::SkillTag' has a wrong offset!");
static_assert(offsetof(GA_VictoryStrike_C_ServerOnSkillActivate, CooldownTag) == 0x000008, "Member 'GA_VictoryStrike_C_ServerOnSkillActivate::CooldownTag' has a wrong offset!");

}

