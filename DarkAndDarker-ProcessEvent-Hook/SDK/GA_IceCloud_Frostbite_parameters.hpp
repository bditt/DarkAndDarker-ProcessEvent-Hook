#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_IceCloud_Frostbite

#include "Basic.hpp"


namespace SDK::Params
{

// Function GA_IceCloud_Frostbite.GA_IceCloud_Frostbite_C.ExecuteUbergraph_GA_IceCloud_Frostbite
// 0x0004 (0x0004 - 0x0000)
struct GA_IceCloud_Frostbite_C_ExecuteUbergraph_GA_IceCloud_Frostbite final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_IceCloud_Frostbite_C_ExecuteUbergraph_GA_IceCloud_Frostbite) == 0x000004, "Wrong alignment on GA_IceCloud_Frostbite_C_ExecuteUbergraph_GA_IceCloud_Frostbite");
static_assert(sizeof(GA_IceCloud_Frostbite_C_ExecuteUbergraph_GA_IceCloud_Frostbite) == 0x000004, "Wrong size on GA_IceCloud_Frostbite_C_ExecuteUbergraph_GA_IceCloud_Frostbite");
static_assert(offsetof(GA_IceCloud_Frostbite_C_ExecuteUbergraph_GA_IceCloud_Frostbite, EntryPoint) == 0x000000, "Member 'GA_IceCloud_Frostbite_C_ExecuteUbergraph_GA_IceCloud_Frostbite::EntryPoint' has a wrong offset!");

// Function GA_IceCloud_Frostbite.GA_IceCloud_Frostbite_C.Remove Target Out
// 0x0001 (0x0001 - 0x0000)
struct GA_IceCloud_Frostbite_C_Remove_Target_Out final
{
public:
	bool                                          Param_Remove_Target_Out;                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_IceCloud_Frostbite_C_Remove_Target_Out) == 0x000001, "Wrong alignment on GA_IceCloud_Frostbite_C_Remove_Target_Out");
static_assert(sizeof(GA_IceCloud_Frostbite_C_Remove_Target_Out) == 0x000001, "Wrong size on GA_IceCloud_Frostbite_C_Remove_Target_Out");
static_assert(offsetof(GA_IceCloud_Frostbite_C_Remove_Target_Out, Param_Remove_Target_Out) == 0x000000, "Member 'GA_IceCloud_Frostbite_C_Remove_Target_Out::Param_Remove_Target_Out' has a wrong offset!");

}

