#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_LegendaryStatusPopup

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "DungeonCrawler_structs.hpp"
#include "DungeonCrawler_classes.hpp"
#include "CoreUObject_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WB_LegendaryStatusPopup.WB_LegendaryStatusPopup_C
// 0x0098 (0x0548 - 0x04B0)
class UWB_LegendaryStatusPopup_C final : public UDCLegendaryStatusPopup
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x04B0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       SlideIn;                                           // 0x04B8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWB_LegendaryStatusBenefitSlot_C*       BenefitSlot_01;                                    // 0x04C0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_LegendaryStatusBenefitSlot_C*       BenefitSlot_02;                                    // 0x04C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_LegendaryStatusBenefitSlot_C*       BenefitSlot_03;                                    // 0x04D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_LegendaryStatusBenefitSlot_C*       BenefitSlot_04;                                    // 0x04D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_LegendaryStatusBenefitSlot_C*       BenefitSlot_05;                                    // 0x04E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_SquireStatusBenefitSlot_C*          BenefitSlot_Squire_01;                             // 0x04E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_SquireStatusBenefitSlot_C*          BenefitSlot_Squire_02;                             // 0x04F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_SquireStatusBenefitSlot_C*          BenefitSlot_Squire_03;                             // 0x04F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_SquireStatusBenefitSlot_C*          BenefitSlot_Squire_04;                             // 0x0500(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_SquireStatusBenefitSlot_C*          BenefitSlot_Squire_05;                             // 0x0508(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Overlay_Comingsoon;                                // 0x0510(0x0008)(ExportObject, ZeroConstructor, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Text_DungeonName_Normal_7;                         // 0x0518(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetSwitcher*                        TitleSwitcher;                                     // 0x0520(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	bool                                          bIsLegendaryState;                                 // 0x0528(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E0D[0x7];                                     // 0x0529(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDateTime                              UpgradeAvailableDate;                              // 0x0530(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class FString                                 UnlockDateText;                                    // 0x0538(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)

public:
	void OnSetContentsBlockHours(const EServicePolicyType InPolicyType, const int32 InBlockHours);
	void OnSetAccountStatus(const EDCAccountStatus& InAccountStatus);
	ESlateVisibility GetNotAvailableUpgradeVisibility();
	void ExecuteUbergraph_WB_LegendaryStatusPopup(int32 EntryPoint);
	void Construct();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WB_LegendaryStatusPopup_C">();
	}
	static class UWB_LegendaryStatusPopup_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWB_LegendaryStatusPopup_C>();
	}
};
static_assert(alignof(UWB_LegendaryStatusPopup_C) == 0x000008, "Wrong alignment on UWB_LegendaryStatusPopup_C");
static_assert(sizeof(UWB_LegendaryStatusPopup_C) == 0x000548, "Wrong size on UWB_LegendaryStatusPopup_C");
static_assert(offsetof(UWB_LegendaryStatusPopup_C, UberGraphFrame) == 0x0004B0, "Member 'UWB_LegendaryStatusPopup_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWB_LegendaryStatusPopup_C, SlideIn) == 0x0004B8, "Member 'UWB_LegendaryStatusPopup_C::SlideIn' has a wrong offset!");
static_assert(offsetof(UWB_LegendaryStatusPopup_C, BenefitSlot_01) == 0x0004C0, "Member 'UWB_LegendaryStatusPopup_C::BenefitSlot_01' has a wrong offset!");
static_assert(offsetof(UWB_LegendaryStatusPopup_C, BenefitSlot_02) == 0x0004C8, "Member 'UWB_LegendaryStatusPopup_C::BenefitSlot_02' has a wrong offset!");
static_assert(offsetof(UWB_LegendaryStatusPopup_C, BenefitSlot_03) == 0x0004D0, "Member 'UWB_LegendaryStatusPopup_C::BenefitSlot_03' has a wrong offset!");
static_assert(offsetof(UWB_LegendaryStatusPopup_C, BenefitSlot_04) == 0x0004D8, "Member 'UWB_LegendaryStatusPopup_C::BenefitSlot_04' has a wrong offset!");
static_assert(offsetof(UWB_LegendaryStatusPopup_C, BenefitSlot_05) == 0x0004E0, "Member 'UWB_LegendaryStatusPopup_C::BenefitSlot_05' has a wrong offset!");
static_assert(offsetof(UWB_LegendaryStatusPopup_C, BenefitSlot_Squire_01) == 0x0004E8, "Member 'UWB_LegendaryStatusPopup_C::BenefitSlot_Squire_01' has a wrong offset!");
static_assert(offsetof(UWB_LegendaryStatusPopup_C, BenefitSlot_Squire_02) == 0x0004F0, "Member 'UWB_LegendaryStatusPopup_C::BenefitSlot_Squire_02' has a wrong offset!");
static_assert(offsetof(UWB_LegendaryStatusPopup_C, BenefitSlot_Squire_03) == 0x0004F8, "Member 'UWB_LegendaryStatusPopup_C::BenefitSlot_Squire_03' has a wrong offset!");
static_assert(offsetof(UWB_LegendaryStatusPopup_C, BenefitSlot_Squire_04) == 0x000500, "Member 'UWB_LegendaryStatusPopup_C::BenefitSlot_Squire_04' has a wrong offset!");
static_assert(offsetof(UWB_LegendaryStatusPopup_C, BenefitSlot_Squire_05) == 0x000508, "Member 'UWB_LegendaryStatusPopup_C::BenefitSlot_Squire_05' has a wrong offset!");
static_assert(offsetof(UWB_LegendaryStatusPopup_C, Overlay_Comingsoon) == 0x000510, "Member 'UWB_LegendaryStatusPopup_C::Overlay_Comingsoon' has a wrong offset!");
static_assert(offsetof(UWB_LegendaryStatusPopup_C, Text_DungeonName_Normal_7) == 0x000518, "Member 'UWB_LegendaryStatusPopup_C::Text_DungeonName_Normal_7' has a wrong offset!");
static_assert(offsetof(UWB_LegendaryStatusPopup_C, TitleSwitcher) == 0x000520, "Member 'UWB_LegendaryStatusPopup_C::TitleSwitcher' has a wrong offset!");
static_assert(offsetof(UWB_LegendaryStatusPopup_C, bIsLegendaryState) == 0x000528, "Member 'UWB_LegendaryStatusPopup_C::bIsLegendaryState' has a wrong offset!");
static_assert(offsetof(UWB_LegendaryStatusPopup_C, UpgradeAvailableDate) == 0x000530, "Member 'UWB_LegendaryStatusPopup_C::UpgradeAvailableDate' has a wrong offset!");
static_assert(offsetof(UWB_LegendaryStatusPopup_C, UnlockDateText) == 0x000538, "Member 'UWB_LegendaryStatusPopup_C::UnlockDateText' has a wrong offset!");

}

