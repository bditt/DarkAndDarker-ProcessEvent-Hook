#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BTD_CheckAngleToTarget

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BTD_CheckAngleToTarget.BTD_CheckAngleToTarget_C.PerformConditionCheckAI
// 0x00F0 (0x00F0 - 0x0000)
struct BTD_CheckAngleToTarget_C_PerformConditionCheckAI final
{
public:
	class AAIController*                          OwnerController;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  ControlledPawn;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44B2[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_DCMonsterBaseWithOptions_C*         K2Node_DynamicCast_AsBP_DCMonster_Base_with_Options; // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44B3[0xF];                                     // 0x0021(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0030(0x0060)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Get_BB_Target_Actor_Result;               // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44B4[0x7];                                     // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ADCCharacterBase*                       CallFunc_Get_BB_Target_Actor_DCCharacterBase;      // 0x0098(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x00A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_FindRelativeLookAtRotation_ReturnValue;   // 0x00B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_InRange_FloatFloat_ReturnValue;           // 0x00DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44B5[0x3];                                     // 0x00DD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_InRange_FloatFloat_Value_ImplicitCast;    // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTD_CheckAngleToTarget_C_PerformConditionCheckAI) == 0x000010, "Wrong alignment on BTD_CheckAngleToTarget_C_PerformConditionCheckAI");
static_assert(sizeof(BTD_CheckAngleToTarget_C_PerformConditionCheckAI) == 0x0000F0, "Wrong size on BTD_CheckAngleToTarget_C_PerformConditionCheckAI");
static_assert(offsetof(BTD_CheckAngleToTarget_C_PerformConditionCheckAI, OwnerController) == 0x000000, "Member 'BTD_CheckAngleToTarget_C_PerformConditionCheckAI::OwnerController' has a wrong offset!");
static_assert(offsetof(BTD_CheckAngleToTarget_C_PerformConditionCheckAI, ControlledPawn) == 0x000008, "Member 'BTD_CheckAngleToTarget_C_PerformConditionCheckAI::ControlledPawn' has a wrong offset!");
static_assert(offsetof(BTD_CheckAngleToTarget_C_PerformConditionCheckAI, ReturnValue) == 0x000010, "Member 'BTD_CheckAngleToTarget_C_PerformConditionCheckAI::ReturnValue' has a wrong offset!");
static_assert(offsetof(BTD_CheckAngleToTarget_C_PerformConditionCheckAI, K2Node_DynamicCast_AsBP_DCMonster_Base_with_Options) == 0x000018, "Member 'BTD_CheckAngleToTarget_C_PerformConditionCheckAI::K2Node_DynamicCast_AsBP_DCMonster_Base_with_Options' has a wrong offset!");
static_assert(offsetof(BTD_CheckAngleToTarget_C_PerformConditionCheckAI, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BTD_CheckAngleToTarget_C_PerformConditionCheckAI::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BTD_CheckAngleToTarget_C_PerformConditionCheckAI, CallFunc_GetTransform_ReturnValue) == 0x000030, "Member 'BTD_CheckAngleToTarget_C_PerformConditionCheckAI::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTD_CheckAngleToTarget_C_PerformConditionCheckAI, CallFunc_Get_BB_Target_Actor_Result) == 0x000090, "Member 'BTD_CheckAngleToTarget_C_PerformConditionCheckAI::CallFunc_Get_BB_Target_Actor_Result' has a wrong offset!");
static_assert(offsetof(BTD_CheckAngleToTarget_C_PerformConditionCheckAI, CallFunc_Get_BB_Target_Actor_DCCharacterBase) == 0x000098, "Member 'BTD_CheckAngleToTarget_C_PerformConditionCheckAI::CallFunc_Get_BB_Target_Actor_DCCharacterBase' has a wrong offset!");
static_assert(offsetof(BTD_CheckAngleToTarget_C_PerformConditionCheckAI, CallFunc_K2_GetActorLocation_ReturnValue) == 0x0000A0, "Member 'BTD_CheckAngleToTarget_C_PerformConditionCheckAI::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTD_CheckAngleToTarget_C_PerformConditionCheckAI, CallFunc_FindRelativeLookAtRotation_ReturnValue) == 0x0000B8, "Member 'BTD_CheckAngleToTarget_C_PerformConditionCheckAI::CallFunc_FindRelativeLookAtRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTD_CheckAngleToTarget_C_PerformConditionCheckAI, CallFunc_BreakRotator_Roll) == 0x0000D0, "Member 'BTD_CheckAngleToTarget_C_PerformConditionCheckAI::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BTD_CheckAngleToTarget_C_PerformConditionCheckAI, CallFunc_BreakRotator_Pitch) == 0x0000D4, "Member 'BTD_CheckAngleToTarget_C_PerformConditionCheckAI::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BTD_CheckAngleToTarget_C_PerformConditionCheckAI, CallFunc_BreakRotator_Yaw) == 0x0000D8, "Member 'BTD_CheckAngleToTarget_C_PerformConditionCheckAI::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BTD_CheckAngleToTarget_C_PerformConditionCheckAI, CallFunc_InRange_FloatFloat_ReturnValue) == 0x0000DC, "Member 'BTD_CheckAngleToTarget_C_PerformConditionCheckAI::CallFunc_InRange_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTD_CheckAngleToTarget_C_PerformConditionCheckAI, CallFunc_InRange_FloatFloat_Value_ImplicitCast) == 0x0000E0, "Member 'BTD_CheckAngleToTarget_C_PerformConditionCheckAI::CallFunc_InRange_FloatFloat_Value_ImplicitCast' has a wrong offset!");

}

