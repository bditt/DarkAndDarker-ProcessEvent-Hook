#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_TrackAxe

#include "Basic.hpp"

#include "DungeonCrawler_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_TrackAxe.BP_TrackAxe_C.EventFMsgSoundEvent
// 0x0028 (0x0028 - 0x0000)
struct BP_TrackAxe_C_EventFMsgSoundEvent final
{
public:
	struct FMsgSoundEvent                         Msg;                                               // 0x0000(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(BP_TrackAxe_C_EventFMsgSoundEvent) == 0x000008, "Wrong alignment on BP_TrackAxe_C_EventFMsgSoundEvent");
static_assert(sizeof(BP_TrackAxe_C_EventFMsgSoundEvent) == 0x000028, "Wrong size on BP_TrackAxe_C_EventFMsgSoundEvent");
static_assert(offsetof(BP_TrackAxe_C_EventFMsgSoundEvent, Msg) == 0x000000, "Member 'BP_TrackAxe_C_EventFMsgSoundEvent::Msg' has a wrong offset!");

// Function BP_TrackAxe.BP_TrackAxe_C.ExecuteUbergraph_BP_TrackAxe
// 0x01F0 (0x01F0 - 0x0000)
struct BP_TrackAxe_C_ExecuteUbergraph_BP_TrackAxe final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5BF8[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMsgBaseNode*                           K2Node_CustomEvent_ProxyObject;                    // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FMsgSoundEvent                         Temp_struct_Variable;                              // 0x0010(0x0028)()
	class UMsgBaseNode*                           Temp_object_Variable;                              // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5BF9[0x7];                                     // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_Interacter;                           // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_Event_StateTag;                             // 0x0050(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_Event_TriggerTag;                           // 0x0058(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_Event_HitResult;                            // 0x0060(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess;   // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5BFA[0x3];                                     // 0x0149(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           K2Node_Event_InGameplayTag;                        // 0x014C(0x0008)(ConstParm, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_InCount;                              // 0x0154(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess_1; // 0x0159(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5BFB[0x2];                                     // 0x015A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UMsgBaseNode* ProxyObject)> K2Node_CreateDelegate_OutputDelegate;              // 0x015C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5BFC[0x4];                                     // 0x016C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMsgSoundEvent                         Temp_struct_Variable_1;                            // 0x0170(0x0028)()
	bool                                          CallFunc_NotEqual_GameplayTag_ReturnValue;         // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetPayload_ReturnValue;                   // 0x0199(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetAbilityTriggerTag_Result;              // 0x019A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5BFD[0x5];                                     // 0x019B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMsgSoundEvent                         K2Node_CustomEvent_Msg;                            // 0x01A0(0x0028)()
	TScriptInterface<class IBaseInterface>        CallFunc_BindMsgNode_BaseInterface_CastInput;      // 0x01C8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UBindMsgNode*                           CallFunc_BindMsgNode_ReturnValue;                  // 0x01D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_PlaySoundWithTag_ReturnValue;             // 0x01E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x01E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5BFE[0x2];                                     // 0x01E2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Delay_Duration_ImplicitCast;              // 0x01E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Delay_Duration_ImplicitCast_1;            // 0x01E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_TrackAxe_C_ExecuteUbergraph_BP_TrackAxe) == 0x000008, "Wrong alignment on BP_TrackAxe_C_ExecuteUbergraph_BP_TrackAxe");
static_assert(sizeof(BP_TrackAxe_C_ExecuteUbergraph_BP_TrackAxe) == 0x0001F0, "Wrong size on BP_TrackAxe_C_ExecuteUbergraph_BP_TrackAxe");
static_assert(offsetof(BP_TrackAxe_C_ExecuteUbergraph_BP_TrackAxe, EntryPoint) == 0x000000, "Member 'BP_TrackAxe_C_ExecuteUbergraph_BP_TrackAxe::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_TrackAxe_C_ExecuteUbergraph_BP_TrackAxe, K2Node_CustomEvent_ProxyObject) == 0x000008, "Member 'BP_TrackAxe_C_ExecuteUbergraph_BP_TrackAxe::K2Node_CustomEvent_ProxyObject' has a wrong offset!");
static_assert(offsetof(BP_TrackAxe_C_ExecuteUbergraph_BP_TrackAxe, Temp_struct_Variable) == 0x000010, "Member 'BP_TrackAxe_C_ExecuteUbergraph_BP_TrackAxe::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_TrackAxe_C_ExecuteUbergraph_BP_TrackAxe, Temp_object_Variable) == 0x000038, "Member 'BP_TrackAxe_C_ExecuteUbergraph_BP_TrackAxe::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_TrackAxe_C_ExecuteUbergraph_BP_TrackAxe, CallFunc_HasAuthority_ReturnValue) == 0x000040, "Member 'BP_TrackAxe_C_ExecuteUbergraph_BP_TrackAxe::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrackAxe_C_ExecuteUbergraph_BP_TrackAxe, K2Node_Event_Interacter) == 0x000048, "Member 'BP_TrackAxe_C_ExecuteUbergraph_BP_TrackAxe::K2Node_Event_Interacter' has a wrong offset!");
static_assert(offsetof(BP_TrackAxe_C_ExecuteUbergraph_BP_TrackAxe, K2Node_Event_StateTag) == 0x000050, "Member 'BP_TrackAxe_C_ExecuteUbergraph_BP_TrackAxe::K2Node_Event_StateTag' has a wrong offset!");
static_assert(offsetof(BP_TrackAxe_C_ExecuteUbergraph_BP_TrackAxe, K2Node_Event_TriggerTag) == 0x000058, "Member 'BP_TrackAxe_C_ExecuteUbergraph_BP_TrackAxe::K2Node_Event_TriggerTag' has a wrong offset!");
static_assert(offsetof(BP_TrackAxe_C_ExecuteUbergraph_BP_TrackAxe, K2Node_Event_HitResult) == 0x000060, "Member 'BP_TrackAxe_C_ExecuteUbergraph_BP_TrackAxe::K2Node_Event_HitResult' has a wrong offset!");
static_assert(offsetof(BP_TrackAxe_C_ExecuteUbergraph_BP_TrackAxe, GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess) == 0x000148, "Member 'BP_TrackAxe_C_ExecuteUbergraph_BP_TrackAxe::GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_TrackAxe_C_ExecuteUbergraph_BP_TrackAxe, K2Node_Event_InGameplayTag) == 0x00014C, "Member 'BP_TrackAxe_C_ExecuteUbergraph_BP_TrackAxe::K2Node_Event_InGameplayTag' has a wrong offset!");
static_assert(offsetof(BP_TrackAxe_C_ExecuteUbergraph_BP_TrackAxe, K2Node_Event_InCount) == 0x000154, "Member 'BP_TrackAxe_C_ExecuteUbergraph_BP_TrackAxe::K2Node_Event_InCount' has a wrong offset!");
static_assert(offsetof(BP_TrackAxe_C_ExecuteUbergraph_BP_TrackAxe, CallFunc_Greater_IntInt_ReturnValue) == 0x000158, "Member 'BP_TrackAxe_C_ExecuteUbergraph_BP_TrackAxe::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrackAxe_C_ExecuteUbergraph_BP_TrackAxe, GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess_1) == 0x000159, "Member 'BP_TrackAxe_C_ExecuteUbergraph_BP_TrackAxe::GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_TrackAxe_C_ExecuteUbergraph_BP_TrackAxe, K2Node_CreateDelegate_OutputDelegate) == 0x00015C, "Member 'BP_TrackAxe_C_ExecuteUbergraph_BP_TrackAxe::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_TrackAxe_C_ExecuteUbergraph_BP_TrackAxe, Temp_struct_Variable_1) == 0x000170, "Member 'BP_TrackAxe_C_ExecuteUbergraph_BP_TrackAxe::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_TrackAxe_C_ExecuteUbergraph_BP_TrackAxe, CallFunc_NotEqual_GameplayTag_ReturnValue) == 0x000198, "Member 'BP_TrackAxe_C_ExecuteUbergraph_BP_TrackAxe::CallFunc_NotEqual_GameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrackAxe_C_ExecuteUbergraph_BP_TrackAxe, CallFunc_GetPayload_ReturnValue) == 0x000199, "Member 'BP_TrackAxe_C_ExecuteUbergraph_BP_TrackAxe::CallFunc_GetPayload_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrackAxe_C_ExecuteUbergraph_BP_TrackAxe, CallFunc_SetAbilityTriggerTag_Result) == 0x00019A, "Member 'BP_TrackAxe_C_ExecuteUbergraph_BP_TrackAxe::CallFunc_SetAbilityTriggerTag_Result' has a wrong offset!");
static_assert(offsetof(BP_TrackAxe_C_ExecuteUbergraph_BP_TrackAxe, K2Node_CustomEvent_Msg) == 0x0001A0, "Member 'BP_TrackAxe_C_ExecuteUbergraph_BP_TrackAxe::K2Node_CustomEvent_Msg' has a wrong offset!");
static_assert(offsetof(BP_TrackAxe_C_ExecuteUbergraph_BP_TrackAxe, CallFunc_BindMsgNode_BaseInterface_CastInput) == 0x0001C8, "Member 'BP_TrackAxe_C_ExecuteUbergraph_BP_TrackAxe::CallFunc_BindMsgNode_BaseInterface_CastInput' has a wrong offset!");
static_assert(offsetof(BP_TrackAxe_C_ExecuteUbergraph_BP_TrackAxe, CallFunc_BindMsgNode_ReturnValue) == 0x0001D8, "Member 'BP_TrackAxe_C_ExecuteUbergraph_BP_TrackAxe::CallFunc_BindMsgNode_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrackAxe_C_ExecuteUbergraph_BP_TrackAxe, CallFunc_PlaySoundWithTag_ReturnValue) == 0x0001E0, "Member 'BP_TrackAxe_C_ExecuteUbergraph_BP_TrackAxe::CallFunc_PlaySoundWithTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrackAxe_C_ExecuteUbergraph_BP_TrackAxe, CallFunc_IsValid_ReturnValue) == 0x0001E1, "Member 'BP_TrackAxe_C_ExecuteUbergraph_BP_TrackAxe::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrackAxe_C_ExecuteUbergraph_BP_TrackAxe, CallFunc_Delay_Duration_ImplicitCast) == 0x0001E4, "Member 'BP_TrackAxe_C_ExecuteUbergraph_BP_TrackAxe::CallFunc_Delay_Duration_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_TrackAxe_C_ExecuteUbergraph_BP_TrackAxe, CallFunc_Delay_Duration_ImplicitCast_1) == 0x0001E8, "Member 'BP_TrackAxe_C_ExecuteUbergraph_BP_TrackAxe::CallFunc_Delay_Duration_ImplicitCast_1' has a wrong offset!");

// Function BP_TrackAxe.BP_TrackAxe_C.GameplayTagUpdated
// 0x000C (0x000C - 0x0000)
struct BP_TrackAxe_C_GameplayTagUpdated final
{
public:
	struct FGameplayTag                           InGameplayTag;                                     // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	int32                                         InCount;                                           // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_TrackAxe_C_GameplayTagUpdated) == 0x000004, "Wrong alignment on BP_TrackAxe_C_GameplayTagUpdated");
static_assert(sizeof(BP_TrackAxe_C_GameplayTagUpdated) == 0x00000C, "Wrong size on BP_TrackAxe_C_GameplayTagUpdated");
static_assert(offsetof(BP_TrackAxe_C_GameplayTagUpdated, InGameplayTag) == 0x000000, "Member 'BP_TrackAxe_C_GameplayTagUpdated::InGameplayTag' has a wrong offset!");
static_assert(offsetof(BP_TrackAxe_C_GameplayTagUpdated, InCount) == 0x000008, "Member 'BP_TrackAxe_C_GameplayTagUpdated::InCount' has a wrong offset!");

// Function BP_TrackAxe.BP_TrackAxe_C.InteractSucceed
// 0x0100 (0x0100 - 0x0000)
struct BP_TrackAxe_C_InteractSucceed final
{
public:
	class AActor*                                 Interacter;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           StateTag;                                          // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           TriggerTag;                                        // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             HitResult;                                         // 0x0018(0x00E8)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_TrackAxe_C_InteractSucceed) == 0x000008, "Wrong alignment on BP_TrackAxe_C_InteractSucceed");
static_assert(sizeof(BP_TrackAxe_C_InteractSucceed) == 0x000100, "Wrong size on BP_TrackAxe_C_InteractSucceed");
static_assert(offsetof(BP_TrackAxe_C_InteractSucceed, Interacter) == 0x000000, "Member 'BP_TrackAxe_C_InteractSucceed::Interacter' has a wrong offset!");
static_assert(offsetof(BP_TrackAxe_C_InteractSucceed, StateTag) == 0x000008, "Member 'BP_TrackAxe_C_InteractSucceed::StateTag' has a wrong offset!");
static_assert(offsetof(BP_TrackAxe_C_InteractSucceed, TriggerTag) == 0x000010, "Member 'BP_TrackAxe_C_InteractSucceed::TriggerTag' has a wrong offset!");
static_assert(offsetof(BP_TrackAxe_C_InteractSucceed, HitResult) == 0x000018, "Member 'BP_TrackAxe_C_InteractSucceed::HitResult' has a wrong offset!");

// Function BP_TrackAxe.BP_TrackAxe_C.OnMessageReceived_8813A0C944F113C8C2169F887C962471
// 0x0008 (0x0008 - 0x0000)
struct BP_TrackAxe_C_OnMessageReceived_8813A0C944F113C8C2169F887C962471 final
{
public:
	class UMsgBaseNode*                           ProxyObject;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_TrackAxe_C_OnMessageReceived_8813A0C944F113C8C2169F887C962471) == 0x000008, "Wrong alignment on BP_TrackAxe_C_OnMessageReceived_8813A0C944F113C8C2169F887C962471");
static_assert(sizeof(BP_TrackAxe_C_OnMessageReceived_8813A0C944F113C8C2169F887C962471) == 0x000008, "Wrong size on BP_TrackAxe_C_OnMessageReceived_8813A0C944F113C8C2169F887C962471");
static_assert(offsetof(BP_TrackAxe_C_OnMessageReceived_8813A0C944F113C8C2169F887C962471, ProxyObject) == 0x000000, "Member 'BP_TrackAxe_C_OnMessageReceived_8813A0C944F113C8C2169F887C962471::ProxyObject' has a wrong offset!");

// Function BP_TrackAxe.BP_TrackAxe_C.SetAbilityTriggerTag
// 0x000C (0x000C - 0x0000)
struct BP_TrackAxe_C_SetAbilityTriggerTag final
{
public:
	struct FGameplayTag                           New_Trigger_Tag;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_GameplayTag_ReturnValue;         // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_TrackAxe_C_SetAbilityTriggerTag) == 0x000004, "Wrong alignment on BP_TrackAxe_C_SetAbilityTriggerTag");
static_assert(sizeof(BP_TrackAxe_C_SetAbilityTriggerTag) == 0x00000C, "Wrong size on BP_TrackAxe_C_SetAbilityTriggerTag");
static_assert(offsetof(BP_TrackAxe_C_SetAbilityTriggerTag, New_Trigger_Tag) == 0x000000, "Member 'BP_TrackAxe_C_SetAbilityTriggerTag::New_Trigger_Tag' has a wrong offset!");
static_assert(offsetof(BP_TrackAxe_C_SetAbilityTriggerTag, Result) == 0x000008, "Member 'BP_TrackAxe_C_SetAbilityTriggerTag::Result' has a wrong offset!");
static_assert(offsetof(BP_TrackAxe_C_SetAbilityTriggerTag, CallFunc_NotEqual_GameplayTag_ReturnValue) == 0x000009, "Member 'BP_TrackAxe_C_SetAbilityTriggerTag::CallFunc_NotEqual_GameplayTag_ReturnValue' has a wrong offset!");

}

