#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_FrostWyvern

#include "Basic.hpp"

#include "BP_FrostWyvern_classes.hpp"
#include "BP_FrostWyvern_parameters.hpp"


namespace SDK
{

// Function BP_FrostWyvern.BP_FrostWyvern_C.Add Phase
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Min                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Max                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_FrostWyvern_C::Add_Phase(int32 Min, int32 Max)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FrostWyvern_C", "Add Phase");

	Params::BP_FrostWyvern_C_Add_Phase Parms{};

	Parms.Min = Min;
	Parms.Max = Max;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_FrostWyvern.BP_FrostWyvern_C.Add Windforce Power
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// TScriptInterface<class IGameplayTagAssetInterface>_C                                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_FrostWyvern_C::Add_Windforce_Power(TScriptInterface<class IGameplayTagAssetInterface> _C)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FrostWyvern_C", "Add Windforce Power");

	Params::BP_FrostWyvern_C_Add_Windforce_Power Parms{};

	Parms._C = _C;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_FrostWyvern.BP_FrostWyvern_C.Area Overlap Check Event Bind
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_FrostWyvern_C::Area_Overlap_Check_Event_Bind()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FrostWyvern_C", "Area Overlap Check Event Bind");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_FrostWyvern.BP_FrostWyvern_C.Buff Movespeed Off
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_FrostWyvern_C::Buff_Movespeed_Off()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FrostWyvern_C", "Buff Movespeed Off");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_FrostWyvern.BP_FrostWyvern_C.Buff Movespeed On
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_FrostWyvern_C::Buff_Movespeed_On()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FrostWyvern_C", "Buff Movespeed On");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_FrostWyvern.BP_FrostWyvern_C.Buff Movespeed On Special
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_FrostWyvern_C::Buff_Movespeed_On_Special()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FrostWyvern_C", "Buff Movespeed On Special");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_FrostWyvern.BP_FrostWyvern_C.Check Combo Success Ratio
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_FrostWyvern_C::Check_Combo_Success_Ratio(bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FrostWyvern_C", "Check Combo Success Ratio");

	Params::BP_FrostWyvern_C_Check_Combo_Success_Ratio Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function BP_FrostWyvern.BP_FrostWyvern_C.Check Trigger To Be Freedom
// (BlueprintCallable, BlueprintEvent)

void ABP_FrostWyvern_C::Check_Trigger_To_Be_Freedom()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FrostWyvern_C", "Check Trigger To Be Freedom");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_FrostWyvern.BP_FrostWyvern_C.Comeback Event End
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Arrived_SpawnLocation                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_FrostWyvern_C::Comeback_Event_End(bool Arrived_SpawnLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FrostWyvern_C", "Comeback Event End");

	Params::BP_FrostWyvern_C_Comeback_Event_End Parms{};

	Parms.Arrived_SpawnLocation = Arrived_SpawnLocation;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_FrostWyvern.BP_FrostWyvern_C.Comeback Event Start
// (BlueprintCallable, BlueprintEvent)

void ABP_FrostWyvern_C::Comeback_Event_Start()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FrostWyvern_C", "Comeback Event Start");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_FrostWyvern.BP_FrostWyvern_C.EventReceived_718961DA4A4B5174D29F5EA00C881E23
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGameplayEventData               Payload                                                (BlueprintVisible, BlueprintReadOnly, Parm)

void ABP_FrostWyvern_C::EventReceived_718961DA4A4B5174D29F5EA00C881E23(const struct FGameplayEventData& Payload)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FrostWyvern_C", "EventReceived_718961DA4A4B5174D29F5EA00C881E23");

	Params::BP_FrostWyvern_C_EventReceived_718961DA4A4B5174D29F5EA00C881E23 Parms{};

	Parms.Payload = std::move(Payload);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_FrostWyvern.BP_FrostWyvern_C.EventReceived_7CEA9E874257AEC8835140BCE28E278D
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGameplayEventData               Payload                                                (BlueprintVisible, BlueprintReadOnly, Parm)

void ABP_FrostWyvern_C::EventReceived_7CEA9E874257AEC8835140BCE28E278D(const struct FGameplayEventData& Payload)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FrostWyvern_C", "EventReceived_7CEA9E874257AEC8835140BCE28E278D");

	Params::BP_FrostWyvern_C_EventReceived_7CEA9E874257AEC8835140BCE28E278D Parms{};

	Parms.Payload = std::move(Payload);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_FrostWyvern.BP_FrostWyvern_C.EventReceived_BD366F1748422D7274798A8D3D6F7919
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGameplayEventData               Payload                                                (BlueprintVisible, BlueprintReadOnly, Parm)

void ABP_FrostWyvern_C::EventReceived_BD366F1748422D7274798A8D3D6F7919(const struct FGameplayEventData& Payload)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FrostWyvern_C", "EventReceived_BD366F1748422D7274798A8D3D6F7919");

	Params::BP_FrostWyvern_C_EventReceived_BD366F1748422D7274798A8D3D6F7919 Parms{};

	Parms.Payload = std::move(Payload);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_FrostWyvern.BP_FrostWyvern_C.ExecuteUbergraph_BP_FrostWyvern
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_FrostWyvern_C::ExecuteUbergraph_BP_FrostWyvern(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FrostWyvern_C", "ExecuteUbergraph_BP_FrostWyvern");

	Params::BP_FrostWyvern_C_ExecuteUbergraph_BP_FrostWyvern Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_FrostWyvern.BP_FrostWyvern_C.Filter Enemies On Center Of Combat Area
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class ADCCharacterBase*>         DCCharacterBase                                        (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// bool                                    Anyone_On_Center                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<class ADCCharacterBase*>         Param_Players_On_Center                                (Parm, OutParm)
// TArray<class ADCCharacterBase*>         Param_Players_On_Edge                                  (Parm, OutParm)

void ABP_FrostWyvern_C::Filter_Enemies_On_Center_Of_Combat_Area(TArray<class ADCCharacterBase*>& DCCharacterBase, bool* Anyone_On_Center, TArray<class ADCCharacterBase*>* Param_Players_On_Center, TArray<class ADCCharacterBase*>* Param_Players_On_Edge)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FrostWyvern_C", "Filter Enemies On Center Of Combat Area");

	Params::BP_FrostWyvern_C_Filter_Enemies_On_Center_Of_Combat_Area Parms{};

	Parms.DCCharacterBase = std::move(DCCharacterBase);

	UObject::ProcessEvent(Func, &Parms);

	DCCharacterBase = std::move(Parms.DCCharacterBase);

	if (Anyone_On_Center != nullptr)
		*Anyone_On_Center = Parms.Anyone_On_Center;

	if (Param_Players_On_Center != nullptr)
		*Param_Players_On_Center = std::move(Parms.Param_Players_On_Center);

	if (Param_Players_On_Edge != nullptr)
		*Param_Players_On_Edge = std::move(Parms.Param_Players_On_Edge);
}


// Function BP_FrostWyvern.BP_FrostWyvern_C.GameplayTagUpdated
// (Event, Protected, BlueprintEvent)
// Parameters:
// struct FGameplayTag                     InGameplayTag                                          (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// int32                                   InCount                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_FrostWyvern_C::GameplayTagUpdated(const struct FGameplayTag& InGameplayTag, int32 InCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FrostWyvern_C", "GameplayTagUpdated");

	Params::BP_FrostWyvern_C_GameplayTagUpdated Parms{};

	Parms.InGameplayTag = std::move(InGameplayTag);
	Parms.InCount = InCount;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_FrostWyvern.BP_FrostWyvern_C.Get Overlap Weight From Effect Context
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGameplayEffectContextHandle     EffectContext                                          (BlueprintVisible, BlueprintReadOnly, Parm)
// double                                  Jump_Coefficient_XY                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Jump_Coefficient_Z                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Hit_Actor                                              (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// double                                  XY_Value                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Z_Value                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_FrostWyvern_C::Get_Overlap_Weight_From_Effect_Context(const struct FGameplayEffectContextHandle& EffectContext, double Jump_Coefficient_XY, double Jump_Coefficient_Z, class AActor** Hit_Actor, double* XY_Value, double* Z_Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FrostWyvern_C", "Get Overlap Weight From Effect Context");

	Params::BP_FrostWyvern_C_Get_Overlap_Weight_From_Effect_Context Parms{};

	Parms.EffectContext = std::move(EffectContext);
	Parms.Jump_Coefficient_XY = Jump_Coefficient_XY;
	Parms.Jump_Coefficient_Z = Jump_Coefficient_Z;

	UObject::ProcessEvent(Func, &Parms);

	if (Hit_Actor != nullptr)
		*Hit_Actor = Parms.Hit_Actor;

	if (XY_Value != nullptr)
		*XY_Value = Parms.XY_Value;

	if (Z_Value != nullptr)
		*Z_Value = Parms.Z_Value;
}


// Function BP_FrostWyvern.BP_FrostWyvern_C.Get Overlap Weight From Target
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           OtherActor                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// double                                  Jump_Coefficient_XY                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Jump_Coefficient_Z                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  ReturnValue2                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

double ABP_FrostWyvern_C::Get_Overlap_Weight_From_Target(const class AActor* OtherActor, double Jump_Coefficient_XY, double Jump_Coefficient_Z, double* ReturnValue2)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FrostWyvern_C", "Get Overlap Weight From Target");

	Params::BP_FrostWyvern_C_Get_Overlap_Weight_From_Target Parms{};

	Parms.OtherActor = OtherActor;
	Parms.Jump_Coefficient_XY = Jump_Coefficient_XY;
	Parms.Jump_Coefficient_Z = Jump_Coefficient_Z;

	UObject::ProcessEvent(Func, &Parms);

	if (ReturnValue2 != nullptr)
		*ReturnValue2 = Parms.ReturnValue2;

	return Parms.ReturnValue;
}


// Function BP_FrostWyvern.BP_FrostWyvern_C.Get Possible to Use Next Combo
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FGameplayTag                     Param_Next_Combo_Trigger_Tag                           (Parm, OutParm, NoDestructor, HasGetValueTypeHash)
// TArray<class ADCCharacterBase*>         DCCharacterBase                                        (Parm, OutParm)

bool ABP_FrostWyvern_C::Get_Possible_to_Use_Next_Combo(struct FGameplayTag* Param_Next_Combo_Trigger_Tag, TArray<class ADCCharacterBase*>* DCCharacterBase)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FrostWyvern_C", "Get Possible to Use Next Combo");

	Params::BP_FrostWyvern_C_Get_Possible_to_Use_Next_Combo Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Param_Next_Combo_Trigger_Tag != nullptr)
		*Param_Next_Combo_Trigger_Tag = std::move(Parms.Param_Next_Combo_Trigger_Tag);

	if (DCCharacterBase != nullptr)
		*DCCharacterBase = std::move(Parms.DCCharacterBase);

	return Parms.ReturnValue;
}


// Function BP_FrostWyvern.BP_FrostWyvern_C.Hide Eggs
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_FrostWyvern_C::Hide_Eggs()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FrostWyvern_C", "Hide Eggs");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_FrostWyvern.BP_FrostWyvern_C.Input Power Proportional To Spawn Location
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Move_Distance                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_FrostWyvern_C::Input_Power_Proportional_To_Spawn_Location(double Move_Distance, double* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FrostWyvern_C", "Input Power Proportional To Spawn Location");

	Params::BP_FrostWyvern_C_Input_Power_Proportional_To_Spawn_Location Parms{};

	Parms.Move_Distance = Move_Distance;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function BP_FrostWyvern.BP_FrostWyvern_C.Input Power Proportional To Target
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_FrostWyvern_C::Input_Power_Proportional_To_Target(double* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FrostWyvern_C", "Input Power Proportional To Target");

	Params::BP_FrostWyvern_C_Input_Power_Proportional_To_Target Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function BP_FrostWyvern.BP_FrostWyvern_C.OnAsyncInitialized
// (Event, Protected, BlueprintEvent)

void ABP_FrostWyvern_C::OnAsyncInitialized()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FrostWyvern_C", "OnAsyncInitialized");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_FrostWyvern.BP_FrostWyvern_C.OnFMsgGASAttributeNotifyBlueprint
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// struct FMsgGASAttributeNotify           InMsg                                                  (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)

void ABP_FrostWyvern_C::OnFMsgGASAttributeNotifyBlueprint(const struct FMsgGASAttributeNotify& InMsg)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FrostWyvern_C", "OnFMsgGASAttributeNotifyBlueprint");

	Params::BP_FrostWyvern_C_OnFMsgGASAttributeNotifyBlueprint Parms{};

	Parms.InMsg = std::move(InMsg);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_FrostWyvern.BP_FrostWyvern_C.OnRep_Cursed Area Destroyed
// (BlueprintCallable, BlueprintEvent)

void ABP_FrostWyvern_C::OnRep_Cursed_Area_Destroyed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FrostWyvern_C", "OnRep_Cursed Area Destroyed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_FrostWyvern.BP_FrostWyvern_C.OnSetAI
// (Event, Protected, BlueprintEvent)

void ABP_FrostWyvern_C::OnSetAI()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FrostWyvern_C", "OnSetAI");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_FrostWyvern.BP_FrostWyvern_C.Overlap In Add Impact Power Area
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// int32                                   OtherBodyIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bFromSweep                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FHitResult                       SweepResult                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void ABP_FrostWyvern_C::Overlap_In_Add_Impact_Power_Area(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FrostWyvern_C", "Overlap In Add Impact Power Area");

	Params::BP_FrostWyvern_C_Overlap_In_Add_Impact_Power_Area Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;
	Parms.bFromSweep = bFromSweep;
	Parms.SweepResult = std::move(SweepResult);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_FrostWyvern.BP_FrostWyvern_C.Overlap In Special Breath
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// int32                                   OtherBodyIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bFromSweep                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FHitResult                       SweepResult                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void ABP_FrostWyvern_C::Overlap_In_Special_Breath(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FrostWyvern_C", "Overlap In Special Breath");

	Params::BP_FrostWyvern_C_Overlap_In_Special_Breath Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;
	Parms.bFromSweep = bFromSweep;
	Parms.SweepResult = std::move(SweepResult);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_FrostWyvern.BP_FrostWyvern_C.Overlap In Windforce Breath Ground
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// int32                                   OtherBodyIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bFromSweep                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FHitResult                       SweepResult                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void ABP_FrostWyvern_C::Overlap_In_Windforce_Breath_Ground(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FrostWyvern_C", "Overlap In Windforce Breath Ground");

	Params::BP_FrostWyvern_C_Overlap_In_Windforce_Breath_Ground Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;
	Parms.bFromSweep = bFromSweep;
	Parms.SweepResult = std::move(SweepResult);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_FrostWyvern.BP_FrostWyvern_C.Overlap Out Special Breath
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// int32                                   OtherBodyIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_FrostWyvern_C::Overlap_Out_Special_Breath(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FrostWyvern_C", "Overlap Out Special Breath");

	Params::BP_FrostWyvern_C_Overlap_Out_Special_Breath Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_FrostWyvern.BP_FrostWyvern_C.Overlap Out Windforce Breath Ground
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// int32                                   OtherBodyIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_FrostWyvern_C::Overlap_Out_Windforce_Breath_Ground(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FrostWyvern_C", "Overlap Out Windforce Breath Ground");

	Params::BP_FrostWyvern_C_Overlap_Out_Windforce_Breath_Ground Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_FrostWyvern.BP_FrostWyvern_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_FrostWyvern_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FrostWyvern_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_FrostWyvern.BP_FrostWyvern_C.Reset Variables
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_FrostWyvern_C::Reset_Variables()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FrostWyvern_C", "Reset Variables");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_FrostWyvern.BP_FrostWyvern_C.Set Zero Phase
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_FrostWyvern_C::Set_Zero_Phase()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FrostWyvern_C", "Set Zero Phase");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_FrostWyvern.BP_FrostWyvern_C.Spawn Box for Area Check
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_FrostWyvern_C::Spawn_Box_for_Area_Check()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FrostWyvern_C", "Spawn Box for Area Check");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_FrostWyvern.BP_FrostWyvern_C.Spawn Eggs
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_FrostWyvern_C::Spawn_Eggs()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FrostWyvern_C", "Spawn Eggs");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_FrostWyvern.BP_FrostWyvern_C.Spawn Statues
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_FrostWyvern_C::Spawn_Statues()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FrostWyvern_C", "Spawn Statues");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_FrostWyvern.BP_FrostWyvern_C.UserConstructionScript
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ABP_FrostWyvern_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FrostWyvern_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}

}

