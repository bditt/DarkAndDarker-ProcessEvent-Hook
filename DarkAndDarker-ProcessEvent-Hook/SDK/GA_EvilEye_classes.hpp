#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_EvilEye

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "GA_SpellChanneling_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass GA_EvilEye.GA_EvilEye_C
// 0x0038 (0x06C0 - 0x0688)
class UGA_EvilEye_C final : public UGA_SpellChanneling_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0688(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FVector                                Out_Socket_Location;                               // 0x0690(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FPrimaryAssetId                        In_Monster_Id;                                     // 0x06A8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class ADCMonsterBase*                         SummonedEvilEye;                                   // 0x06B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void AbilityActivated_BP(const struct FGameplayEventData& TriggerEventData, bool bIsSocketSightBlocked);
	void ExecuteUbergraph_GA_EvilEye(int32 EntryPoint);
	void K2_OnEndAbility(bool bWasCancelled);
	void KillSummonedEvilEye();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GA_EvilEye_C">();
	}
	static class UGA_EvilEye_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGA_EvilEye_C>();
	}
};
static_assert(alignof(UGA_EvilEye_C) == 0x000008, "Wrong alignment on UGA_EvilEye_C");
static_assert(sizeof(UGA_EvilEye_C) == 0x0006C0, "Wrong size on UGA_EvilEye_C");
static_assert(offsetof(UGA_EvilEye_C, UberGraphFrame) == 0x000688, "Member 'UGA_EvilEye_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UGA_EvilEye_C, Out_Socket_Location) == 0x000690, "Member 'UGA_EvilEye_C::Out_Socket_Location' has a wrong offset!");
static_assert(offsetof(UGA_EvilEye_C, In_Monster_Id) == 0x0006A8, "Member 'UGA_EvilEye_C::In_Monster_Id' has a wrong offset!");
static_assert(offsetof(UGA_EvilEye_C, SummonedEvilEye) == 0x0006B8, "Member 'UGA_EvilEye_C::SummonedEvilEye' has a wrong offset!");

}

