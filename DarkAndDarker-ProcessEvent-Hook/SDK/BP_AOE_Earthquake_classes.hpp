#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AOE_Earthquake

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "BP_AoeDefineBase_Capsule_classes.hpp"
#include "AkAudio_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_AOE_Earthquake.BP_AOE_Earthquake_C
// 0x0030 (0x0940 - 0x0910)
class ABP_AOE_Earthquake_C final : public ABP_AoeDefineBase_Capsule_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_AOE_Earthquake_C;                // 0x0908(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UDecalComponent*                        Decal_Large;                                       // 0x0910(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        Radius;                                            // 0x0918(0x0008)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Launch_Location;                                   // 0x0920(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsDestroy;                                         // 0x0938(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void DestroyEvent();
	void ExecuteUbergraph_BP_AOE_Earthquake(int32 EntryPoint);
	void ReceiveBeginPlay();
	void Remove_GameplayCue_Location();
	void Set_Collision_Profile_Activate(class UPrimitiveComponent* Target);
	void SetAoeData(double Param_Radius);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_AOE_Earthquake_C">();
	}
	static class ABP_AOE_Earthquake_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_AOE_Earthquake_C>();
	}
};
static_assert(alignof(ABP_AOE_Earthquake_C) == 0x000010, "Wrong alignment on ABP_AOE_Earthquake_C");
static_assert(sizeof(ABP_AOE_Earthquake_C) == 0x000940, "Wrong size on ABP_AOE_Earthquake_C");
static_assert(offsetof(ABP_AOE_Earthquake_C, UberGraphFrame_BP_AOE_Earthquake_C) == 0x000908, "Member 'ABP_AOE_Earthquake_C::UberGraphFrame_BP_AOE_Earthquake_C' has a wrong offset!");
static_assert(offsetof(ABP_AOE_Earthquake_C, Decal_Large) == 0x000910, "Member 'ABP_AOE_Earthquake_C::Decal_Large' has a wrong offset!");
static_assert(offsetof(ABP_AOE_Earthquake_C, Radius) == 0x000918, "Member 'ABP_AOE_Earthquake_C::Radius' has a wrong offset!");
static_assert(offsetof(ABP_AOE_Earthquake_C, Launch_Location) == 0x000920, "Member 'ABP_AOE_Earthquake_C::Launch_Location' has a wrong offset!");
static_assert(offsetof(ABP_AOE_Earthquake_C, IsDestroy) == 0x000938, "Member 'ABP_AOE_Earthquake_C::IsDestroy' has a wrong offset!");

}

