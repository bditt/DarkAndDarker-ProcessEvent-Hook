#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BTT_Specter_MoveInCombatArea

#include "Basic.hpp"

#include "BTT_Specter_MoveInCombatArea_classes.hpp"
#include "BTT_Specter_MoveInCombatArea_parameters.hpp"


namespace SDK
{

// Function BTT_Specter_MoveInCombatArea.BTT_Specter_MoveInCombatArea_C.Do Move
// (Public, BlueprintCallable, BlueprintEvent)

void UBTT_Specter_MoveInCombatArea_C::Do_Move()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BTT_Specter_MoveInCombatArea_C", "Do Move");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BTT_Specter_MoveInCombatArea.BTT_Specter_MoveInCombatArea_C.ExecuteUbergraph_BTT_Specter_MoveInCombatArea
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBTT_Specter_MoveInCombatArea_C::ExecuteUbergraph_BTT_Specter_MoveInCombatArea(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BTT_Specter_MoveInCombatArea_C", "ExecuteUbergraph_BTT_Specter_MoveInCombatArea");

	Params::BTT_Specter_MoveInCombatArea_C_ExecuteUbergraph_BTT_Specter_MoveInCombatArea Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BTT_Specter_MoveInCombatArea.BTT_Specter_MoveInCombatArea_C.Get Goal Location
// (Public, BlueprintCallable, BlueprintEvent)

void UBTT_Specter_MoveInCombatArea_C::Get_Goal_Location()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BTT_Specter_MoveInCombatArea_C", "Get Goal Location");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BTT_Specter_MoveInCombatArea.BTT_Specter_MoveInCombatArea_C.Get Next Tick Location
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBTT_Specter_MoveInCombatArea_C::Get_Next_Tick_Location()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BTT_Specter_MoveInCombatArea_C", "Get Next Tick Location");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BTT_Specter_MoveInCombatArea.BTT_Specter_MoveInCombatArea_C.OnTaskFinished
// (Event, Protected, BlueprintEvent)
// Parameters:
// class AAIController*                    OwnerController                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class APawn*                            ControlledPawn                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// EBTNodeResult                           TaskResult                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBTT_Specter_MoveInCombatArea_C::OnTaskFinished(class AAIController* OwnerController, class APawn* ControlledPawn, EBTNodeResult TaskResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BTT_Specter_MoveInCombatArea_C", "OnTaskFinished");

	Params::BTT_Specter_MoveInCombatArea_C_OnTaskFinished Parms{};

	Parms.OwnerController = OwnerController;
	Parms.ControlledPawn = ControlledPawn;
	Parms.TaskResult = TaskResult;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BTT_Specter_MoveInCombatArea.BTT_Specter_MoveInCombatArea_C.ReceiveExecuteAI
// (Event, Protected, BlueprintEvent)
// Parameters:
// class AAIController*                    OwnerController                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class APawn*                            ControlledPawn                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBTT_Specter_MoveInCombatArea_C::ReceiveExecuteAI(class AAIController* OwnerController, class APawn* ControlledPawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BTT_Specter_MoveInCombatArea_C", "ReceiveExecuteAI");

	Params::BTT_Specter_MoveInCombatArea_C_ReceiveExecuteAI Parms{};

	Parms.OwnerController = OwnerController;
	Parms.ControlledPawn = ControlledPawn;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BTT_Specter_MoveInCombatArea.BTT_Specter_MoveInCombatArea_C.ReceiveTickAI
// (Event, Protected, BlueprintEvent)
// Parameters:
// class AAIController*                    OwnerController                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class APawn*                            ControlledPawn                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBTT_Specter_MoveInCombatArea_C::ReceiveTickAI(class AAIController* OwnerController, class APawn* ControlledPawn, float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BTT_Specter_MoveInCombatArea_C", "ReceiveTickAI");

	Params::BTT_Specter_MoveInCombatArea_C_ReceiveTickAI Parms{};

	Parms.OwnerController = OwnerController;
	Parms.ControlledPawn = ControlledPawn;
	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}

}

