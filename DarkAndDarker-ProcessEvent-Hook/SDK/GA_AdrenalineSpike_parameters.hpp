#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_AdrenalineSpike

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"
#include "GameplayAbilities_structs.hpp"


namespace SDK::Params
{

// Function GA_AdrenalineSpike.GA_AdrenalineSpike_C.CheckHealthBelowCertainPer
// 0x0080 (0x0080 - 0x0000)
struct GA_AdrenalineSpike_C_CheckHealthBelowCertainPer final
{
public:
	double                                        CurrentHealth;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_554E[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  CallFunc_MakeLiteralGameplayTagContainer_ReturnValue; // 0x0010(0x0020)()
	float                                         CallFunc_GetConstantFloat_ReturnValue;             // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_554F[0x4];                                     // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAbilitySystemComponent*                CallFunc_GetAbilitySystemComponentFromActorInfo_ReturnValue; // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetFloatAttributeFromAbilitySystemComponent_bSuccessfullyFoundAttribute; // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5550[0x3];                                     // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetFloatAttributeFromAbilitySystemComponent_ReturnValue; // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasAnyMatchingGameplayTags_self_CastInput; // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAnyMatchingGameplayTags_ReturnValue;   // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5551[0x7];                                     // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x006A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5552[0x5];                                     // 0x006B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_LessEqual_DoubleDouble_B_ImplicitCast;    // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_B_ImplicitCast;       // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_AdrenalineSpike_C_CheckHealthBelowCertainPer) == 0x000008, "Wrong alignment on GA_AdrenalineSpike_C_CheckHealthBelowCertainPer");
static_assert(sizeof(GA_AdrenalineSpike_C_CheckHealthBelowCertainPer) == 0x000080, "Wrong size on GA_AdrenalineSpike_C_CheckHealthBelowCertainPer");
static_assert(offsetof(GA_AdrenalineSpike_C_CheckHealthBelowCertainPer, CurrentHealth) == 0x000000, "Member 'GA_AdrenalineSpike_C_CheckHealthBelowCertainPer::CurrentHealth' has a wrong offset!");
static_assert(offsetof(GA_AdrenalineSpike_C_CheckHealthBelowCertainPer, Result) == 0x000008, "Member 'GA_AdrenalineSpike_C_CheckHealthBelowCertainPer::Result' has a wrong offset!");
static_assert(offsetof(GA_AdrenalineSpike_C_CheckHealthBelowCertainPer, CallFunc_MakeLiteralGameplayTagContainer_ReturnValue) == 0x000010, "Member 'GA_AdrenalineSpike_C_CheckHealthBelowCertainPer::CallFunc_MakeLiteralGameplayTagContainer_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_AdrenalineSpike_C_CheckHealthBelowCertainPer, CallFunc_GetConstantFloat_ReturnValue) == 0x000030, "Member 'GA_AdrenalineSpike_C_CheckHealthBelowCertainPer::CallFunc_GetConstantFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_AdrenalineSpike_C_CheckHealthBelowCertainPer, CallFunc_GetAbilitySystemComponentFromActorInfo_ReturnValue) == 0x000038, "Member 'GA_AdrenalineSpike_C_CheckHealthBelowCertainPer::CallFunc_GetAbilitySystemComponentFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_AdrenalineSpike_C_CheckHealthBelowCertainPer, CallFunc_GetFloatAttributeFromAbilitySystemComponent_bSuccessfullyFoundAttribute) == 0x000040, "Member 'GA_AdrenalineSpike_C_CheckHealthBelowCertainPer::CallFunc_GetFloatAttributeFromAbilitySystemComponent_bSuccessfullyFoundAttribute' has a wrong offset!");
static_assert(offsetof(GA_AdrenalineSpike_C_CheckHealthBelowCertainPer, CallFunc_GetFloatAttributeFromAbilitySystemComponent_ReturnValue) == 0x000044, "Member 'GA_AdrenalineSpike_C_CheckHealthBelowCertainPer::CallFunc_GetFloatAttributeFromAbilitySystemComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_AdrenalineSpike_C_CheckHealthBelowCertainPer, CallFunc_HasAnyMatchingGameplayTags_self_CastInput) == 0x000048, "Member 'GA_AdrenalineSpike_C_CheckHealthBelowCertainPer::CallFunc_HasAnyMatchingGameplayTags_self_CastInput' has a wrong offset!");
static_assert(offsetof(GA_AdrenalineSpike_C_CheckHealthBelowCertainPer, CallFunc_HasAnyMatchingGameplayTags_ReturnValue) == 0x000058, "Member 'GA_AdrenalineSpike_C_CheckHealthBelowCertainPer::CallFunc_HasAnyMatchingGameplayTags_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_AdrenalineSpike_C_CheckHealthBelowCertainPer, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000060, "Member 'GA_AdrenalineSpike_C_CheckHealthBelowCertainPer::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_AdrenalineSpike_C_CheckHealthBelowCertainPer, CallFunc_Not_PreBool_ReturnValue) == 0x000068, "Member 'GA_AdrenalineSpike_C_CheckHealthBelowCertainPer::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_AdrenalineSpike_C_CheckHealthBelowCertainPer, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x000069, "Member 'GA_AdrenalineSpike_C_CheckHealthBelowCertainPer::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_AdrenalineSpike_C_CheckHealthBelowCertainPer, CallFunc_BooleanAND_ReturnValue) == 0x00006A, "Member 'GA_AdrenalineSpike_C_CheckHealthBelowCertainPer::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_AdrenalineSpike_C_CheckHealthBelowCertainPer, CallFunc_LessEqual_DoubleDouble_B_ImplicitCast) == 0x000070, "Member 'GA_AdrenalineSpike_C_CheckHealthBelowCertainPer::CallFunc_LessEqual_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(GA_AdrenalineSpike_C_CheckHealthBelowCertainPer, CallFunc_Divide_DoubleDouble_B_ImplicitCast) == 0x000078, "Member 'GA_AdrenalineSpike_C_CheckHealthBelowCertainPer::CallFunc_Divide_DoubleDouble_B_ImplicitCast' has a wrong offset!");

// Function GA_AdrenalineSpike.GA_AdrenalineSpike_C.ExecuteUbergraph_GA_AdrenalineSpike
// 0x0238 (0x0238 - 0x0000)
struct GA_AdrenalineSpike_C_ExecuteUbergraph_GA_AdrenalineSpike final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable;                                // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(float OldValue, float NewValue)> K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UDCAT_WaitAttributeChangeByExecution*   CallFunc_WaitForAttributeChange_ReturnValue;       // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEventData                     Temp_struct_Variable;                              // 0x0020(0x00B0)(ConstParm)
	TArray<struct FActiveGameplayEffectHandle>    CallFunc_ApplyEffectContainer_ReturnValue;         // 0x00D0(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5553[0x3];                                     // 0x00E5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x00E8(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_2;            // 0x00F8(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAbilityTask_WaitGameplayTagRemoved*    CallFunc_WaitGameplayTagRemove_ReturnValue;        // 0x0108(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEventData                     Temp_struct_Variable_1;                            // 0x0110(0x00B0)(ConstParm)
	TArray<struct FActiveGameplayEffectHandle>    CallFunc_ApplyEffectContainer_ReturnValue_1;       // 0x01C0(0x0010)(ReferenceParm)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x01D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5554[0x3];                                     // 0x01D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x01D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x01D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FActiveGameplayEffectHandle            CallFunc_Array_Get_Item;                           // 0x01DC(0x0008)(NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetActiveGameplayEffectRemainingDuration_ReturnValue; // 0x01E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x01E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5555[0x7];                                     // 0x01E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAbilityTask_WaitDelay*                 CallFunc_WaitDelay_ReturnValue;                    // 0x01F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x01F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5556[0x3];                                     // 0x01F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x01FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_1;                              // 0x0200(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckHealthBelowCertainPer_Result;        // 0x0204(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_HasAuthority_ReturnValue;              // 0x0205(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5557[0x2];                                     // 0x0206(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_CustomEvent_OldValue;                       // 0x0208(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_NewValue;                       // 0x020C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetAvatarActorFromActorInfo_ReturnValue;  // 0x0210(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetFloatAttribute_bSuccessfullyFoundAttribute; // 0x0218(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5558[0x3];                                     // 0x0219(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetFloatAttribute_ReturnValue;            // 0x021C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckHealthBelowCertainPer_Result_1;      // 0x0220(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5559[0x7];                                     // 0x0221(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_CheckHealthBelowCertainPer_CurrentHealth_ImplicitCast; // 0x0228(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_CheckHealthBelowCertainPer_CurrentHealth_ImplicitCast_1; // 0x0230(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_AdrenalineSpike_C_ExecuteUbergraph_GA_AdrenalineSpike) == 0x000008, "Wrong alignment on GA_AdrenalineSpike_C_ExecuteUbergraph_GA_AdrenalineSpike");
static_assert(sizeof(GA_AdrenalineSpike_C_ExecuteUbergraph_GA_AdrenalineSpike) == 0x000238, "Wrong size on GA_AdrenalineSpike_C_ExecuteUbergraph_GA_AdrenalineSpike");
static_assert(offsetof(GA_AdrenalineSpike_C_ExecuteUbergraph_GA_AdrenalineSpike, EntryPoint) == 0x000000, "Member 'GA_AdrenalineSpike_C_ExecuteUbergraph_GA_AdrenalineSpike::EntryPoint' has a wrong offset!");
static_assert(offsetof(GA_AdrenalineSpike_C_ExecuteUbergraph_GA_AdrenalineSpike, Temp_real_Variable) == 0x000004, "Member 'GA_AdrenalineSpike_C_ExecuteUbergraph_GA_AdrenalineSpike::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(GA_AdrenalineSpike_C_ExecuteUbergraph_GA_AdrenalineSpike, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'GA_AdrenalineSpike_C_ExecuteUbergraph_GA_AdrenalineSpike::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(GA_AdrenalineSpike_C_ExecuteUbergraph_GA_AdrenalineSpike, CallFunc_WaitForAttributeChange_ReturnValue) == 0x000018, "Member 'GA_AdrenalineSpike_C_ExecuteUbergraph_GA_AdrenalineSpike::CallFunc_WaitForAttributeChange_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_AdrenalineSpike_C_ExecuteUbergraph_GA_AdrenalineSpike, Temp_struct_Variable) == 0x000020, "Member 'GA_AdrenalineSpike_C_ExecuteUbergraph_GA_AdrenalineSpike::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(GA_AdrenalineSpike_C_ExecuteUbergraph_GA_AdrenalineSpike, CallFunc_ApplyEffectContainer_ReturnValue) == 0x0000D0, "Member 'GA_AdrenalineSpike_C_ExecuteUbergraph_GA_AdrenalineSpike::CallFunc_ApplyEffectContainer_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_AdrenalineSpike_C_ExecuteUbergraph_GA_AdrenalineSpike, CallFunc_Array_Length_ReturnValue) == 0x0000E0, "Member 'GA_AdrenalineSpike_C_ExecuteUbergraph_GA_AdrenalineSpike::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_AdrenalineSpike_C_ExecuteUbergraph_GA_AdrenalineSpike, CallFunc_IsValid_ReturnValue) == 0x0000E4, "Member 'GA_AdrenalineSpike_C_ExecuteUbergraph_GA_AdrenalineSpike::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_AdrenalineSpike_C_ExecuteUbergraph_GA_AdrenalineSpike, K2Node_CreateDelegate_OutputDelegate_1) == 0x0000E8, "Member 'GA_AdrenalineSpike_C_ExecuteUbergraph_GA_AdrenalineSpike::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(GA_AdrenalineSpike_C_ExecuteUbergraph_GA_AdrenalineSpike, K2Node_CreateDelegate_OutputDelegate_2) == 0x0000F8, "Member 'GA_AdrenalineSpike_C_ExecuteUbergraph_GA_AdrenalineSpike::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(GA_AdrenalineSpike_C_ExecuteUbergraph_GA_AdrenalineSpike, CallFunc_WaitGameplayTagRemove_ReturnValue) == 0x000108, "Member 'GA_AdrenalineSpike_C_ExecuteUbergraph_GA_AdrenalineSpike::CallFunc_WaitGameplayTagRemove_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_AdrenalineSpike_C_ExecuteUbergraph_GA_AdrenalineSpike, Temp_struct_Variable_1) == 0x000110, "Member 'GA_AdrenalineSpike_C_ExecuteUbergraph_GA_AdrenalineSpike::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(GA_AdrenalineSpike_C_ExecuteUbergraph_GA_AdrenalineSpike, CallFunc_ApplyEffectContainer_ReturnValue_1) == 0x0001C0, "Member 'GA_AdrenalineSpike_C_ExecuteUbergraph_GA_AdrenalineSpike::CallFunc_ApplyEffectContainer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_AdrenalineSpike_C_ExecuteUbergraph_GA_AdrenalineSpike, CallFunc_IsValid_ReturnValue_1) == 0x0001D0, "Member 'GA_AdrenalineSpike_C_ExecuteUbergraph_GA_AdrenalineSpike::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_AdrenalineSpike_C_ExecuteUbergraph_GA_AdrenalineSpike, Temp_int_Array_Index_Variable) == 0x0001D4, "Member 'GA_AdrenalineSpike_C_ExecuteUbergraph_GA_AdrenalineSpike::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(GA_AdrenalineSpike_C_ExecuteUbergraph_GA_AdrenalineSpike, Temp_int_Loop_Counter_Variable) == 0x0001D8, "Member 'GA_AdrenalineSpike_C_ExecuteUbergraph_GA_AdrenalineSpike::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(GA_AdrenalineSpike_C_ExecuteUbergraph_GA_AdrenalineSpike, CallFunc_Array_Get_Item) == 0x0001DC, "Member 'GA_AdrenalineSpike_C_ExecuteUbergraph_GA_AdrenalineSpike::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(GA_AdrenalineSpike_C_ExecuteUbergraph_GA_AdrenalineSpike, CallFunc_GetActiveGameplayEffectRemainingDuration_ReturnValue) == 0x0001E4, "Member 'GA_AdrenalineSpike_C_ExecuteUbergraph_GA_AdrenalineSpike::CallFunc_GetActiveGameplayEffectRemainingDuration_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_AdrenalineSpike_C_ExecuteUbergraph_GA_AdrenalineSpike, CallFunc_Less_IntInt_ReturnValue) == 0x0001E8, "Member 'GA_AdrenalineSpike_C_ExecuteUbergraph_GA_AdrenalineSpike::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_AdrenalineSpike_C_ExecuteUbergraph_GA_AdrenalineSpike, CallFunc_WaitDelay_ReturnValue) == 0x0001F0, "Member 'GA_AdrenalineSpike_C_ExecuteUbergraph_GA_AdrenalineSpike::CallFunc_WaitDelay_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_AdrenalineSpike_C_ExecuteUbergraph_GA_AdrenalineSpike, CallFunc_IsValid_ReturnValue_2) == 0x0001F8, "Member 'GA_AdrenalineSpike_C_ExecuteUbergraph_GA_AdrenalineSpike::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GA_AdrenalineSpike_C_ExecuteUbergraph_GA_AdrenalineSpike, CallFunc_Add_IntInt_ReturnValue) == 0x0001FC, "Member 'GA_AdrenalineSpike_C_ExecuteUbergraph_GA_AdrenalineSpike::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_AdrenalineSpike_C_ExecuteUbergraph_GA_AdrenalineSpike, Temp_real_Variable_1) == 0x000200, "Member 'GA_AdrenalineSpike_C_ExecuteUbergraph_GA_AdrenalineSpike::Temp_real_Variable_1' has a wrong offset!");
static_assert(offsetof(GA_AdrenalineSpike_C_ExecuteUbergraph_GA_AdrenalineSpike, CallFunc_CheckHealthBelowCertainPer_Result) == 0x000204, "Member 'GA_AdrenalineSpike_C_ExecuteUbergraph_GA_AdrenalineSpike::CallFunc_CheckHealthBelowCertainPer_Result' has a wrong offset!");
static_assert(offsetof(GA_AdrenalineSpike_C_ExecuteUbergraph_GA_AdrenalineSpike, CallFunc_K2_HasAuthority_ReturnValue) == 0x000205, "Member 'GA_AdrenalineSpike_C_ExecuteUbergraph_GA_AdrenalineSpike::CallFunc_K2_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_AdrenalineSpike_C_ExecuteUbergraph_GA_AdrenalineSpike, K2Node_CustomEvent_OldValue) == 0x000208, "Member 'GA_AdrenalineSpike_C_ExecuteUbergraph_GA_AdrenalineSpike::K2Node_CustomEvent_OldValue' has a wrong offset!");
static_assert(offsetof(GA_AdrenalineSpike_C_ExecuteUbergraph_GA_AdrenalineSpike, K2Node_CustomEvent_NewValue) == 0x00020C, "Member 'GA_AdrenalineSpike_C_ExecuteUbergraph_GA_AdrenalineSpike::K2Node_CustomEvent_NewValue' has a wrong offset!");
static_assert(offsetof(GA_AdrenalineSpike_C_ExecuteUbergraph_GA_AdrenalineSpike, CallFunc_GetAvatarActorFromActorInfo_ReturnValue) == 0x000210, "Member 'GA_AdrenalineSpike_C_ExecuteUbergraph_GA_AdrenalineSpike::CallFunc_GetAvatarActorFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_AdrenalineSpike_C_ExecuteUbergraph_GA_AdrenalineSpike, CallFunc_GetFloatAttribute_bSuccessfullyFoundAttribute) == 0x000218, "Member 'GA_AdrenalineSpike_C_ExecuteUbergraph_GA_AdrenalineSpike::CallFunc_GetFloatAttribute_bSuccessfullyFoundAttribute' has a wrong offset!");
static_assert(offsetof(GA_AdrenalineSpike_C_ExecuteUbergraph_GA_AdrenalineSpike, CallFunc_GetFloatAttribute_ReturnValue) == 0x00021C, "Member 'GA_AdrenalineSpike_C_ExecuteUbergraph_GA_AdrenalineSpike::CallFunc_GetFloatAttribute_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_AdrenalineSpike_C_ExecuteUbergraph_GA_AdrenalineSpike, CallFunc_CheckHealthBelowCertainPer_Result_1) == 0x000220, "Member 'GA_AdrenalineSpike_C_ExecuteUbergraph_GA_AdrenalineSpike::CallFunc_CheckHealthBelowCertainPer_Result_1' has a wrong offset!");
static_assert(offsetof(GA_AdrenalineSpike_C_ExecuteUbergraph_GA_AdrenalineSpike, CallFunc_CheckHealthBelowCertainPer_CurrentHealth_ImplicitCast) == 0x000228, "Member 'GA_AdrenalineSpike_C_ExecuteUbergraph_GA_AdrenalineSpike::CallFunc_CheckHealthBelowCertainPer_CurrentHealth_ImplicitCast' has a wrong offset!");
static_assert(offsetof(GA_AdrenalineSpike_C_ExecuteUbergraph_GA_AdrenalineSpike, CallFunc_CheckHealthBelowCertainPer_CurrentHealth_ImplicitCast_1) == 0x000230, "Member 'GA_AdrenalineSpike_C_ExecuteUbergraph_GA_AdrenalineSpike::CallFunc_CheckHealthBelowCertainPer_CurrentHealth_ImplicitCast_1' has a wrong offset!");

// Function GA_AdrenalineSpike.GA_AdrenalineSpike_C.OnChange_15B3EBAC461BE5313FFA019C63C0FA1F
// 0x0008 (0x0008 - 0x0000)
struct GA_AdrenalineSpike_C_OnChange_15B3EBAC461BE5313FFA019C63C0FA1F final
{
public:
	float                                         OldValue;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         NewValue;                                          // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_AdrenalineSpike_C_OnChange_15B3EBAC461BE5313FFA019C63C0FA1F) == 0x000004, "Wrong alignment on GA_AdrenalineSpike_C_OnChange_15B3EBAC461BE5313FFA019C63C0FA1F");
static_assert(sizeof(GA_AdrenalineSpike_C_OnChange_15B3EBAC461BE5313FFA019C63C0FA1F) == 0x000008, "Wrong size on GA_AdrenalineSpike_C_OnChange_15B3EBAC461BE5313FFA019C63C0FA1F");
static_assert(offsetof(GA_AdrenalineSpike_C_OnChange_15B3EBAC461BE5313FFA019C63C0FA1F, OldValue) == 0x000000, "Member 'GA_AdrenalineSpike_C_OnChange_15B3EBAC461BE5313FFA019C63C0FA1F::OldValue' has a wrong offset!");
static_assert(offsetof(GA_AdrenalineSpike_C_OnChange_15B3EBAC461BE5313FFA019C63C0FA1F, NewValue) == 0x000004, "Member 'GA_AdrenalineSpike_C_OnChange_15B3EBAC461BE5313FFA019C63C0FA1F::NewValue' has a wrong offset!");

}

