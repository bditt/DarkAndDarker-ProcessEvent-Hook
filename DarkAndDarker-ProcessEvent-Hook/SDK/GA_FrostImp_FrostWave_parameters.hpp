#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_FrostImp_FrostWave

#include "Basic.hpp"

#include "GameplayAbilities_structs.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function GA_FrostImp_FrostWave.GA_FrostImp_FrostWave_C.AbilityActivated
// 0x00B0 (0x00B0 - 0x0000)
struct GA_FrostImp_FrostWave_C_AbilityActivated final
{
public:
	struct FGameplayEventData                     TriggerEventData;                                  // 0x0000(0x00B0)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(GA_FrostImp_FrostWave_C_AbilityActivated) == 0x000008, "Wrong alignment on GA_FrostImp_FrostWave_C_AbilityActivated");
static_assert(sizeof(GA_FrostImp_FrostWave_C_AbilityActivated) == 0x0000B0, "Wrong size on GA_FrostImp_FrostWave_C_AbilityActivated");
static_assert(offsetof(GA_FrostImp_FrostWave_C_AbilityActivated, TriggerEventData) == 0x000000, "Member 'GA_FrostImp_FrostWave_C_AbilityActivated::TriggerEventData' has a wrong offset!");

// Function GA_FrostImp_FrostWave.GA_FrostImp_FrostWave_C.ExecuteUbergraph_GA_FrostImp_FrostWave
// 0x0338 (0x0338 - 0x0000)
struct GA_FrostImp_FrostWave_C_ExecuteUbergraph_GA_FrostImp_FrostWave final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D7E[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0018(0x0010)(ConstParm, ReferenceParm)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D7F[0x3];                                     // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEventData                     K2Node_Event_TriggerEventData;                     // 0x0038(0x00B0)(ConstParm)
	class AActor*                                 CallFunc_GetAvatarActorFromActorInfo_ReturnValue;  // 0x00E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array;                            // 0x00F0(0x0010)(ConstParm, ReferenceParm)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0100(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetAvatarActorFromActorInfo_ReturnValue_1; // 0x0118(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0120(0x0008)(NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         CallFunc_SphereOverlapActors_OutActors;            // 0x0128(0x0010)(ReferenceParm)
	bool                                          CallFunc_SphereOverlapActors_ReturnValue;          // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D80[0x7];                                     // 0x0139(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0140(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D81[0x4];                                     // 0x014C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ADCCharacterBase*                       K2Node_DynamicCast_AsDCCharacter_Base;             // 0x0150(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D82[0x3];                                     // 0x0159(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x015C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEventData                     K2Node_MakeStruct_GameplayEventData;               // 0x0160(0x00B0)()
	int32                                         CallFunc_Max_ReturnValue;                          // 0x0210(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D83[0x4];                                     // 0x0214(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FActiveGameplayEffectHandle>    CallFunc_ApplyEffectContainer_ReturnValue;         // 0x0218(0x0010)(ReferenceParm)
	bool                                          K2Node_Event_bWasCancelled;                        // 0x0228(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D84[0x7];                                     // 0x0229(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetAvatarActorFromActorInfo_ReturnValue_2; // 0x0230(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_FrostImp_Common_C*                  K2Node_DynamicCast_AsBP_Frost_Imp_Common;          // 0x0238(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0240(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D85[0x7];                                     // 0x0241(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetAvatarActorFromActorInfo_ReturnValue_3; // 0x0248(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 CallFunc_MakeGameplayCueParameters_ReturnValue;    // 0x0250(0x00D8)(ContainsInstancedReference)
	float                                         CallFunc_Delay_Duration_ImplicitCast;              // 0x0328(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_K2_SetTimerDelegate_Time_ImplicitCast;    // 0x032C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SphereOverlapActors_SphereRadius_ImplicitCast; // 0x0330(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_FrostImp_FrostWave_C_ExecuteUbergraph_GA_FrostImp_FrostWave) == 0x000008, "Wrong alignment on GA_FrostImp_FrostWave_C_ExecuteUbergraph_GA_FrostImp_FrostWave");
static_assert(sizeof(GA_FrostImp_FrostWave_C_ExecuteUbergraph_GA_FrostImp_FrostWave) == 0x000338, "Wrong size on GA_FrostImp_FrostWave_C_ExecuteUbergraph_GA_FrostImp_FrostWave");
static_assert(offsetof(GA_FrostImp_FrostWave_C_ExecuteUbergraph_GA_FrostImp_FrostWave, EntryPoint) == 0x000000, "Member 'GA_FrostImp_FrostWave_C_ExecuteUbergraph_GA_FrostImp_FrostWave::EntryPoint' has a wrong offset!");
static_assert(offsetof(GA_FrostImp_FrostWave_C_ExecuteUbergraph_GA_FrostImp_FrostWave, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'GA_FrostImp_FrostWave_C_ExecuteUbergraph_GA_FrostImp_FrostWave::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(GA_FrostImp_FrostWave_C_ExecuteUbergraph_GA_FrostImp_FrostWave, Temp_object_Variable) == 0x000018, "Member 'GA_FrostImp_FrostWave_C_ExecuteUbergraph_GA_FrostImp_FrostWave::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(GA_FrostImp_FrostWave_C_ExecuteUbergraph_GA_FrostImp_FrostWave, Temp_int_Loop_Counter_Variable) == 0x000028, "Member 'GA_FrostImp_FrostWave_C_ExecuteUbergraph_GA_FrostImp_FrostWave::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(GA_FrostImp_FrostWave_C_ExecuteUbergraph_GA_FrostImp_FrostWave, CallFunc_Subtract_IntInt_ReturnValue) == 0x00002C, "Member 'GA_FrostImp_FrostWave_C_ExecuteUbergraph_GA_FrostImp_FrostWave::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_FrostImp_FrostWave_C_ExecuteUbergraph_GA_FrostImp_FrostWave, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000030, "Member 'GA_FrostImp_FrostWave_C_ExecuteUbergraph_GA_FrostImp_FrostWave::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_FrostImp_FrostWave_C_ExecuteUbergraph_GA_FrostImp_FrostWave, Temp_int_Array_Index_Variable) == 0x000034, "Member 'GA_FrostImp_FrostWave_C_ExecuteUbergraph_GA_FrostImp_FrostWave::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(GA_FrostImp_FrostWave_C_ExecuteUbergraph_GA_FrostImp_FrostWave, K2Node_Event_TriggerEventData) == 0x000038, "Member 'GA_FrostImp_FrostWave_C_ExecuteUbergraph_GA_FrostImp_FrostWave::K2Node_Event_TriggerEventData' has a wrong offset!");
static_assert(offsetof(GA_FrostImp_FrostWave_C_ExecuteUbergraph_GA_FrostImp_FrostWave, CallFunc_GetAvatarActorFromActorInfo_ReturnValue) == 0x0000E8, "Member 'GA_FrostImp_FrostWave_C_ExecuteUbergraph_GA_FrostImp_FrostWave::CallFunc_GetAvatarActorFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_FrostImp_FrostWave_C_ExecuteUbergraph_GA_FrostImp_FrostWave, K2Node_MakeArray_Array) == 0x0000F0, "Member 'GA_FrostImp_FrostWave_C_ExecuteUbergraph_GA_FrostImp_FrostWave::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(GA_FrostImp_FrostWave_C_ExecuteUbergraph_GA_FrostImp_FrostWave, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000100, "Member 'GA_FrostImp_FrostWave_C_ExecuteUbergraph_GA_FrostImp_FrostWave::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_FrostImp_FrostWave_C_ExecuteUbergraph_GA_FrostImp_FrostWave, CallFunc_GetAvatarActorFromActorInfo_ReturnValue_1) == 0x000118, "Member 'GA_FrostImp_FrostWave_C_ExecuteUbergraph_GA_FrostImp_FrostWave::CallFunc_GetAvatarActorFromActorInfo_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_FrostImp_FrostWave_C_ExecuteUbergraph_GA_FrostImp_FrostWave, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000120, "Member 'GA_FrostImp_FrostWave_C_ExecuteUbergraph_GA_FrostImp_FrostWave::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_FrostImp_FrostWave_C_ExecuteUbergraph_GA_FrostImp_FrostWave, CallFunc_SphereOverlapActors_OutActors) == 0x000128, "Member 'GA_FrostImp_FrostWave_C_ExecuteUbergraph_GA_FrostImp_FrostWave::CallFunc_SphereOverlapActors_OutActors' has a wrong offset!");
static_assert(offsetof(GA_FrostImp_FrostWave_C_ExecuteUbergraph_GA_FrostImp_FrostWave, CallFunc_SphereOverlapActors_ReturnValue) == 0x000138, "Member 'GA_FrostImp_FrostWave_C_ExecuteUbergraph_GA_FrostImp_FrostWave::CallFunc_SphereOverlapActors_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_FrostImp_FrostWave_C_ExecuteUbergraph_GA_FrostImp_FrostWave, CallFunc_Array_Get_Item) == 0x000140, "Member 'GA_FrostImp_FrostWave_C_ExecuteUbergraph_GA_FrostImp_FrostWave::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(GA_FrostImp_FrostWave_C_ExecuteUbergraph_GA_FrostImp_FrostWave, CallFunc_Array_Length_ReturnValue) == 0x000148, "Member 'GA_FrostImp_FrostWave_C_ExecuteUbergraph_GA_FrostImp_FrostWave::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_FrostImp_FrostWave_C_ExecuteUbergraph_GA_FrostImp_FrostWave, K2Node_DynamicCast_AsDCCharacter_Base) == 0x000150, "Member 'GA_FrostImp_FrostWave_C_ExecuteUbergraph_GA_FrostImp_FrostWave::K2Node_DynamicCast_AsDCCharacter_Base' has a wrong offset!");
static_assert(offsetof(GA_FrostImp_FrostWave_C_ExecuteUbergraph_GA_FrostImp_FrostWave, K2Node_DynamicCast_bSuccess) == 0x000158, "Member 'GA_FrostImp_FrostWave_C_ExecuteUbergraph_GA_FrostImp_FrostWave::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GA_FrostImp_FrostWave_C_ExecuteUbergraph_GA_FrostImp_FrostWave, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x00015C, "Member 'GA_FrostImp_FrostWave_C_ExecuteUbergraph_GA_FrostImp_FrostWave::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_FrostImp_FrostWave_C_ExecuteUbergraph_GA_FrostImp_FrostWave, K2Node_MakeStruct_GameplayEventData) == 0x000160, "Member 'GA_FrostImp_FrostWave_C_ExecuteUbergraph_GA_FrostImp_FrostWave::K2Node_MakeStruct_GameplayEventData' has a wrong offset!");
static_assert(offsetof(GA_FrostImp_FrostWave_C_ExecuteUbergraph_GA_FrostImp_FrostWave, CallFunc_Max_ReturnValue) == 0x000210, "Member 'GA_FrostImp_FrostWave_C_ExecuteUbergraph_GA_FrostImp_FrostWave::CallFunc_Max_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_FrostImp_FrostWave_C_ExecuteUbergraph_GA_FrostImp_FrostWave, CallFunc_ApplyEffectContainer_ReturnValue) == 0x000218, "Member 'GA_FrostImp_FrostWave_C_ExecuteUbergraph_GA_FrostImp_FrostWave::CallFunc_ApplyEffectContainer_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_FrostImp_FrostWave_C_ExecuteUbergraph_GA_FrostImp_FrostWave, K2Node_Event_bWasCancelled) == 0x000228, "Member 'GA_FrostImp_FrostWave_C_ExecuteUbergraph_GA_FrostImp_FrostWave::K2Node_Event_bWasCancelled' has a wrong offset!");
static_assert(offsetof(GA_FrostImp_FrostWave_C_ExecuteUbergraph_GA_FrostImp_FrostWave, CallFunc_GetAvatarActorFromActorInfo_ReturnValue_2) == 0x000230, "Member 'GA_FrostImp_FrostWave_C_ExecuteUbergraph_GA_FrostImp_FrostWave::CallFunc_GetAvatarActorFromActorInfo_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GA_FrostImp_FrostWave_C_ExecuteUbergraph_GA_FrostImp_FrostWave, K2Node_DynamicCast_AsBP_Frost_Imp_Common) == 0x000238, "Member 'GA_FrostImp_FrostWave_C_ExecuteUbergraph_GA_FrostImp_FrostWave::K2Node_DynamicCast_AsBP_Frost_Imp_Common' has a wrong offset!");
static_assert(offsetof(GA_FrostImp_FrostWave_C_ExecuteUbergraph_GA_FrostImp_FrostWave, K2Node_DynamicCast_bSuccess_1) == 0x000240, "Member 'GA_FrostImp_FrostWave_C_ExecuteUbergraph_GA_FrostImp_FrostWave::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(GA_FrostImp_FrostWave_C_ExecuteUbergraph_GA_FrostImp_FrostWave, CallFunc_GetAvatarActorFromActorInfo_ReturnValue_3) == 0x000248, "Member 'GA_FrostImp_FrostWave_C_ExecuteUbergraph_GA_FrostImp_FrostWave::CallFunc_GetAvatarActorFromActorInfo_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(GA_FrostImp_FrostWave_C_ExecuteUbergraph_GA_FrostImp_FrostWave, CallFunc_MakeGameplayCueParameters_ReturnValue) == 0x000250, "Member 'GA_FrostImp_FrostWave_C_ExecuteUbergraph_GA_FrostImp_FrostWave::CallFunc_MakeGameplayCueParameters_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_FrostImp_FrostWave_C_ExecuteUbergraph_GA_FrostImp_FrostWave, CallFunc_Delay_Duration_ImplicitCast) == 0x000328, "Member 'GA_FrostImp_FrostWave_C_ExecuteUbergraph_GA_FrostImp_FrostWave::CallFunc_Delay_Duration_ImplicitCast' has a wrong offset!");
static_assert(offsetof(GA_FrostImp_FrostWave_C_ExecuteUbergraph_GA_FrostImp_FrostWave, CallFunc_K2_SetTimerDelegate_Time_ImplicitCast) == 0x00032C, "Member 'GA_FrostImp_FrostWave_C_ExecuteUbergraph_GA_FrostImp_FrostWave::CallFunc_K2_SetTimerDelegate_Time_ImplicitCast' has a wrong offset!");
static_assert(offsetof(GA_FrostImp_FrostWave_C_ExecuteUbergraph_GA_FrostImp_FrostWave, CallFunc_SphereOverlapActors_SphereRadius_ImplicitCast) == 0x000330, "Member 'GA_FrostImp_FrostWave_C_ExecuteUbergraph_GA_FrostImp_FrostWave::CallFunc_SphereOverlapActors_SphereRadius_ImplicitCast' has a wrong offset!");

// Function GA_FrostImp_FrostWave.GA_FrostImp_FrostWave_C.K2_OnEndAbility
// 0x0001 (0x0001 - 0x0000)
struct GA_FrostImp_FrostWave_C_K2_OnEndAbility final
{
public:
	bool                                          bWasCancelled;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_FrostImp_FrostWave_C_K2_OnEndAbility) == 0x000001, "Wrong alignment on GA_FrostImp_FrostWave_C_K2_OnEndAbility");
static_assert(sizeof(GA_FrostImp_FrostWave_C_K2_OnEndAbility) == 0x000001, "Wrong size on GA_FrostImp_FrostWave_C_K2_OnEndAbility");
static_assert(offsetof(GA_FrostImp_FrostWave_C_K2_OnEndAbility, bWasCancelled) == 0x000000, "Member 'GA_FrostImp_FrostWave_C_K2_OnEndAbility::bWasCancelled' has a wrong offset!");

}

