#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_MenuOptionToggleSwitchSlot

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "DungeonCrawler_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WB_MenuOptionToggleSwitchSlot.WB_MenuOptionToggleSwitchSlot_C
// 0x0030 (0x03A8 - 0x0378)
class UWB_MenuOptionToggleSwitchSlot_C final : public UGameMenuOptionToggleSwitchWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0378(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UButton*                                Btn_Hovering;                                      // 0x0380(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetSwitcher*                        Switcher_Selected;                                 // 0x0388(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_OptionCheckButton01_C*              WB_OptionCheckButton_Off;                          // 0x0390(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_OptionCheckButton01_C*              WB_OptionCheckButton_On;                           // 0x0398(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_MenuOptionsControls_C*              WB_MenuOptionsControls;                            // 0x03A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)

public:
	void UpdateButtonText(const class FText& LeftText, const class FText& RightText);
	void SetButtomText();
	void OnToggleSwitch(bool InSwitch);
	void OnInitialized();
	class UWidget* GetPrimaryGamepadFocusWidget();
	void ExecuteUbergraph_WB_MenuOptionToggleSwitchSlot(int32 EntryPoint);
	void ChangeButtonActivated(class UWB_OptionCheckButton01_C* ActivateButton, class UWB_OptionCheckButton01_C* DeactivateButton);
	void SetOptionButtonTile(class UWB_OptionCheckButton01_C* OptionButton, const class FText& InTitle);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WB_MenuOptionToggleSwitchSlot_C">();
	}
	static class UWB_MenuOptionToggleSwitchSlot_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWB_MenuOptionToggleSwitchSlot_C>();
	}
};
static_assert(alignof(UWB_MenuOptionToggleSwitchSlot_C) == 0x000008, "Wrong alignment on UWB_MenuOptionToggleSwitchSlot_C");
static_assert(sizeof(UWB_MenuOptionToggleSwitchSlot_C) == 0x0003A8, "Wrong size on UWB_MenuOptionToggleSwitchSlot_C");
static_assert(offsetof(UWB_MenuOptionToggleSwitchSlot_C, UberGraphFrame) == 0x000378, "Member 'UWB_MenuOptionToggleSwitchSlot_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWB_MenuOptionToggleSwitchSlot_C, Btn_Hovering) == 0x000380, "Member 'UWB_MenuOptionToggleSwitchSlot_C::Btn_Hovering' has a wrong offset!");
static_assert(offsetof(UWB_MenuOptionToggleSwitchSlot_C, Switcher_Selected) == 0x000388, "Member 'UWB_MenuOptionToggleSwitchSlot_C::Switcher_Selected' has a wrong offset!");
static_assert(offsetof(UWB_MenuOptionToggleSwitchSlot_C, WB_OptionCheckButton_Off) == 0x000390, "Member 'UWB_MenuOptionToggleSwitchSlot_C::WB_OptionCheckButton_Off' has a wrong offset!");
static_assert(offsetof(UWB_MenuOptionToggleSwitchSlot_C, WB_OptionCheckButton_On) == 0x000398, "Member 'UWB_MenuOptionToggleSwitchSlot_C::WB_OptionCheckButton_On' has a wrong offset!");
static_assert(offsetof(UWB_MenuOptionToggleSwitchSlot_C, WB_MenuOptionsControls) == 0x0003A0, "Member 'UWB_MenuOptionToggleSwitchSlot_C::WB_MenuOptionsControls' has a wrong offset!");

}

