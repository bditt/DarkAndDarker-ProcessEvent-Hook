#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_PropsActorBase

#include "Basic.hpp"

#include "BP_PropsActorBase_classes.hpp"
#include "BP_PropsActorBase_parameters.hpp"


namespace SDK
{

// Function BP_PropsActorBase.BP_PropsActorBase_C.DestructClient
// (BlueprintCallable, BlueprintEvent)

void ABP_PropsActorBase_C::DestructClient()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PropsActorBase_C", "DestructClient");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PropsActorBase.BP_PropsActorBase_C.DisableAllMeshs
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_PropsActorBase_C::DisableAllMeshs()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PropsActorBase_C", "DisableAllMeshs");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PropsActorBase.BP_PropsActorBase_C.ExecuteUbergraph_BP_PropsActorBase
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PropsActorBase_C::ExecuteUbergraph_BP_PropsActorBase(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PropsActorBase_C", "ExecuteUbergraph_BP_PropsActorBase");

	Params::BP_PropsActorBase_C_ExecuteUbergraph_BP_PropsActorBase Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PropsActorBase.BP_PropsActorBase_C.FindGeometryCollectionDefault
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UGeometryCollectionComponent*     GeometryCollection                                     (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void ABP_PropsActorBase_C::FindGeometryCollectionDefault(class UGeometryCollectionComponent** GeometryCollection)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PropsActorBase_C", "FindGeometryCollectionDefault");

	Params::BP_PropsActorBase_C_FindGeometryCollectionDefault Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (GeometryCollection != nullptr)
		*GeometryCollection = Parms.GeometryCollection;
}


// Function BP_PropsActorBase.BP_PropsActorBase_C.FindNavModifier
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class UNavModifierComponent*>    Results                                                (Parm, OutParm, ContainsInstancedReference)

void ABP_PropsActorBase_C::FindNavModifier(TArray<class UNavModifierComponent*>* Results)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PropsActorBase_C", "FindNavModifier");

	Params::BP_PropsActorBase_C_FindNavModifier Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Results != nullptr)
		*Results = std::move(Parms.Results);
}


// Function BP_PropsActorBase.BP_PropsActorBase_C.InitBox
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<struct FItemData>                ItemDatas                                              (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// bool                                    bReset                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bSucceed                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PropsActorBase_C::InitBox(TArray<struct FItemData>& ItemDatas, bool bReset, bool* bSucceed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PropsActorBase_C", "InitBox");

	Params::BP_PropsActorBase_C_InitBox Parms{};

	Parms.ItemDatas = std::move(ItemDatas);
	Parms.bReset = bReset;

	UObject::ProcessEvent(Func, &Parms);

	ItemDatas = std::move(Parms.ItemDatas);

	if (bSucceed != nullptr)
		*bSucceed = Parms.bSucceed;
}


// Function BP_PropsActorBase.BP_PropsActorBase_C.InteractFailed
// (Event, Protected, BlueprintEvent)
// Parameters:
// class AActor*                           Interacter                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FGameplayTag                     EventTag                                               (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)

void ABP_PropsActorBase_C::InteractFailed(class AActor* Interacter, const struct FGameplayTag& EventTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PropsActorBase_C", "InteractFailed");

	Params::BP_PropsActorBase_C_InteractFailed Parms{};

	Parms.Interacter = Interacter;
	Parms.EventTag = std::move(EventTag);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PropsActorBase.BP_PropsActorBase_C.InteractSucceed
// (Event, Protected, BlueprintEvent)
// Parameters:
// class AActor*                           Interacter                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FGameplayTag                     StateTag                                               (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// struct FGameplayTag                     TriggerTag                                             (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// struct FHitResult                       HitResult                                              (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void ABP_PropsActorBase_C::InteractSucceed(class AActor* Interacter, const struct FGameplayTag& StateTag, const struct FGameplayTag& TriggerTag, const struct FHitResult& HitResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PropsActorBase_C", "InteractSucceed");

	Params::BP_PropsActorBase_C_InteractSucceed Parms{};

	Parms.Interacter = Interacter;
	Parms.StateTag = std::move(StateTag);
	Parms.TriggerTag = std::move(TriggerTag);
	Parms.HitResult = std::move(HitResult);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PropsActorBase.BP_PropsActorBase_C.OnImpactEnduranceExhausted
// (Event, Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   ExhaustedTime                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TSubclassOf<class UGameplayEffect>      GameplayEffectClass                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
// struct FDCGameplayEffectContext         EffectContext                                          (BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference)

void ABP_PropsActorBase_C::OnImpactEnduranceExhausted(float ExhaustedTime, TSubclassOf<class UGameplayEffect> GameplayEffectClass, const struct FDCGameplayEffectContext& EffectContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PropsActorBase_C", "OnImpactEnduranceExhausted");

	Params::BP_PropsActorBase_C_OnImpactEnduranceExhausted Parms{};

	Parms.ExhaustedTime = ExhaustedTime;
	Parms.GameplayEffectClass = GameplayEffectClass;
	Parms.EffectContext = std::move(EffectContext);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PropsActorBase.BP_PropsActorBase_C.ReceiveEndPlay
// (Event, Protected, BlueprintEvent)
// Parameters:
// EEndPlayReason                          EndPlayReason                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PropsActorBase_C::ReceiveEndPlay(EEndPlayReason EndPlayReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PropsActorBase_C", "ReceiveEndPlay");

	Params::BP_PropsActorBase_C_ReceiveEndPlay Parms{};

	Parms.EndPlayReason = EndPlayReason;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PropsActorBase.BP_PropsActorBase_C.Reduce Holding Item Count
// (Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Interactor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_PropsActorBase_C::Reduce_Holding_Item_Count(class AActor* Interactor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PropsActorBase_C", "Reduce Holding Item Count");

	Params::BP_PropsActorBase_C_Reduce_Holding_Item_Count Parms{};

	Parms.Interactor = Interactor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PropsActorBase.BP_PropsActorBase_C.Reduce Item Count by Id Tag
// (Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Interactor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FGameplayTag                     IdTag                                                  (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)

void ABP_PropsActorBase_C::Reduce_Item_Count_by_Id_Tag(class AActor* Interactor, const struct FGameplayTag& IdTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PropsActorBase_C", "Reduce Item Count by Id Tag");

	Params::BP_PropsActorBase_C_Reduce_Item_Count_by_Id_Tag Parms{};

	Parms.Interactor = Interactor;
	Parms.IdTag = std::move(IdTag);

	UObject::ProcessEvent(Func, &Parms);
}

}

