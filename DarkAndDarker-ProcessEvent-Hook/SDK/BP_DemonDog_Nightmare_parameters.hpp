#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_DemonDog_Nightmare

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"
#include "AkAudio_structs.hpp"


namespace SDK::Params
{

// Function BP_DemonDog_Nightmare.BP_DemonDog_Nightmare_C.ExecuteUbergraph_BP_DemonDog_Nightmare
// 0x003C (0x003C - 0x0000)
struct BP_DemonDog_Nightmare_C_ExecuteUbergraph_BP_DemonDog_Nightmare final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_Event_InGameplayTag;                        // 0x0004(0x0008)(ConstParm, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_InCount;                              // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable;                            // 0x0010(0x0010)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_GameplayTag_ReturnValue;       // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_45D1[0x2];                                     // 0x0022(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable_1;                          // 0x0024(0x0010)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_PostAkEvent_ReturnValue;                  // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_PostAkEvent_ReturnValue_1;                // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DemonDog_Nightmare_C_ExecuteUbergraph_BP_DemonDog_Nightmare) == 0x000004, "Wrong alignment on BP_DemonDog_Nightmare_C_ExecuteUbergraph_BP_DemonDog_Nightmare");
static_assert(sizeof(BP_DemonDog_Nightmare_C_ExecuteUbergraph_BP_DemonDog_Nightmare) == 0x00003C, "Wrong size on BP_DemonDog_Nightmare_C_ExecuteUbergraph_BP_DemonDog_Nightmare");
static_assert(offsetof(BP_DemonDog_Nightmare_C_ExecuteUbergraph_BP_DemonDog_Nightmare, EntryPoint) == 0x000000, "Member 'BP_DemonDog_Nightmare_C_ExecuteUbergraph_BP_DemonDog_Nightmare::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_DemonDog_Nightmare_C_ExecuteUbergraph_BP_DemonDog_Nightmare, K2Node_Event_InGameplayTag) == 0x000004, "Member 'BP_DemonDog_Nightmare_C_ExecuteUbergraph_BP_DemonDog_Nightmare::K2Node_Event_InGameplayTag' has a wrong offset!");
static_assert(offsetof(BP_DemonDog_Nightmare_C_ExecuteUbergraph_BP_DemonDog_Nightmare, K2Node_Event_InCount) == 0x00000C, "Member 'BP_DemonDog_Nightmare_C_ExecuteUbergraph_BP_DemonDog_Nightmare::K2Node_Event_InCount' has a wrong offset!");
static_assert(offsetof(BP_DemonDog_Nightmare_C_ExecuteUbergraph_BP_DemonDog_Nightmare, Temp_delegate_Variable) == 0x000010, "Member 'BP_DemonDog_Nightmare_C_ExecuteUbergraph_BP_DemonDog_Nightmare::Temp_delegate_Variable' has a wrong offset!");
static_assert(offsetof(BP_DemonDog_Nightmare_C_ExecuteUbergraph_BP_DemonDog_Nightmare, CallFunc_Greater_IntInt_ReturnValue) == 0x000020, "Member 'BP_DemonDog_Nightmare_C_ExecuteUbergraph_BP_DemonDog_Nightmare::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DemonDog_Nightmare_C_ExecuteUbergraph_BP_DemonDog_Nightmare, CallFunc_EqualEqual_GameplayTag_ReturnValue) == 0x000021, "Member 'BP_DemonDog_Nightmare_C_ExecuteUbergraph_BP_DemonDog_Nightmare::CallFunc_EqualEqual_GameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DemonDog_Nightmare_C_ExecuteUbergraph_BP_DemonDog_Nightmare, Temp_delegate_Variable_1) == 0x000024, "Member 'BP_DemonDog_Nightmare_C_ExecuteUbergraph_BP_DemonDog_Nightmare::Temp_delegate_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_DemonDog_Nightmare_C_ExecuteUbergraph_BP_DemonDog_Nightmare, CallFunc_PostAkEvent_ReturnValue) == 0x000034, "Member 'BP_DemonDog_Nightmare_C_ExecuteUbergraph_BP_DemonDog_Nightmare::CallFunc_PostAkEvent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DemonDog_Nightmare_C_ExecuteUbergraph_BP_DemonDog_Nightmare, CallFunc_PostAkEvent_ReturnValue_1) == 0x000038, "Member 'BP_DemonDog_Nightmare_C_ExecuteUbergraph_BP_DemonDog_Nightmare::CallFunc_PostAkEvent_ReturnValue_1' has a wrong offset!");

// Function BP_DemonDog_Nightmare.BP_DemonDog_Nightmare_C.GameplayTagUpdated
// 0x000C (0x000C - 0x0000)
struct BP_DemonDog_Nightmare_C_GameplayTagUpdated final
{
public:
	struct FGameplayTag                           InGameplayTag;                                     // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	int32                                         InCount;                                           // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DemonDog_Nightmare_C_GameplayTagUpdated) == 0x000004, "Wrong alignment on BP_DemonDog_Nightmare_C_GameplayTagUpdated");
static_assert(sizeof(BP_DemonDog_Nightmare_C_GameplayTagUpdated) == 0x00000C, "Wrong size on BP_DemonDog_Nightmare_C_GameplayTagUpdated");
static_assert(offsetof(BP_DemonDog_Nightmare_C_GameplayTagUpdated, InGameplayTag) == 0x000000, "Member 'BP_DemonDog_Nightmare_C_GameplayTagUpdated::InGameplayTag' has a wrong offset!");
static_assert(offsetof(BP_DemonDog_Nightmare_C_GameplayTagUpdated, InCount) == 0x000008, "Member 'BP_DemonDog_Nightmare_C_GameplayTagUpdated::InCount' has a wrong offset!");

}

