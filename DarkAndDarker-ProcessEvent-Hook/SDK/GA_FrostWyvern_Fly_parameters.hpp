#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_FrostWyvern_Fly

#include "Basic.hpp"

#include "GameplayAbilities_structs.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function GA_FrostWyvern_Fly.GA_FrostWyvern_Fly_C.AbilityActivated
// 0x00B0 (0x00B0 - 0x0000)
struct GA_FrostWyvern_Fly_C_AbilityActivated final
{
public:
	struct FGameplayEventData                     TriggerEventData;                                  // 0x0000(0x00B0)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(GA_FrostWyvern_Fly_C_AbilityActivated) == 0x000008, "Wrong alignment on GA_FrostWyvern_Fly_C_AbilityActivated");
static_assert(sizeof(GA_FrostWyvern_Fly_C_AbilityActivated) == 0x0000B0, "Wrong size on GA_FrostWyvern_Fly_C_AbilityActivated");
static_assert(offsetof(GA_FrostWyvern_Fly_C_AbilityActivated, TriggerEventData) == 0x000000, "Member 'GA_FrostWyvern_Fly_C_AbilityActivated::TriggerEventData' has a wrong offset!");

// Function GA_FrostWyvern_Fly.GA_FrostWyvern_Fly_C.ExecuteUbergraph_GA_FrostWyvern_Fly
// 0x0400 (0x0400 - 0x0000)
struct GA_FrostWyvern_Fly_C_ExecuteUbergraph_GA_FrostWyvern_Fly final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4959[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetAvatarActorFromActorInfo_ReturnValue;  // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0010(0x0060)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bWasCancelled;                        // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_495A[0x7];                                     // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0078(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0090(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x00A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEventData                     K2Node_Event_TriggerEventData;                     // 0x00D8(0x00B0)(ConstParm)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0190(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetAvatarActorFromActorInfo_ReturnValue_1; // 0x01A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_FrostWyvern_C*                      K2Node_DynamicCast_AsBP_Frost_Wyvern;              // 0x01B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x01B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Normal_ReturnValue;                       // 0x01B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_495B[0x6];                                     // 0x01BA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x01C8(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x01D8(0x0008)(NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x01E0(0x0010)(ConstParm, ReferenceParm)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x01F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array;                            // 0x0208(0x0010)(ConstParm, ReferenceParm)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0218(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingleForObjects_OutHit;         // 0x0230(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingleForObjects_ReturnValue;    // 0x0318(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0319(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x031A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_495C[0x1];                                     // 0x031B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x031C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0320(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_495D[0x4];                                     // 0x0324(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0328(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0340(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0358(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0370(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0388(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0390(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0398(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x03A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x03A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x03B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x03B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x03B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_495E[0x4];                                     // 0x03BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x03C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x03D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_K2_SetTimerDelegate_Time_ImplicitCast;    // 0x03F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_FrostWyvern_Fly_C_ExecuteUbergraph_GA_FrostWyvern_Fly) == 0x000010, "Wrong alignment on GA_FrostWyvern_Fly_C_ExecuteUbergraph_GA_FrostWyvern_Fly");
static_assert(sizeof(GA_FrostWyvern_Fly_C_ExecuteUbergraph_GA_FrostWyvern_Fly) == 0x000400, "Wrong size on GA_FrostWyvern_Fly_C_ExecuteUbergraph_GA_FrostWyvern_Fly");
static_assert(offsetof(GA_FrostWyvern_Fly_C_ExecuteUbergraph_GA_FrostWyvern_Fly, EntryPoint) == 0x000000, "Member 'GA_FrostWyvern_Fly_C_ExecuteUbergraph_GA_FrostWyvern_Fly::EntryPoint' has a wrong offset!");
static_assert(offsetof(GA_FrostWyvern_Fly_C_ExecuteUbergraph_GA_FrostWyvern_Fly, CallFunc_GetAvatarActorFromActorInfo_ReturnValue) == 0x000008, "Member 'GA_FrostWyvern_Fly_C_ExecuteUbergraph_GA_FrostWyvern_Fly::CallFunc_GetAvatarActorFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_FrostWyvern_Fly_C_ExecuteUbergraph_GA_FrostWyvern_Fly, CallFunc_GetTransform_ReturnValue) == 0x000010, "Member 'GA_FrostWyvern_Fly_C_ExecuteUbergraph_GA_FrostWyvern_Fly::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_FrostWyvern_Fly_C_ExecuteUbergraph_GA_FrostWyvern_Fly, K2Node_Event_bWasCancelled) == 0x000070, "Member 'GA_FrostWyvern_Fly_C_ExecuteUbergraph_GA_FrostWyvern_Fly::K2Node_Event_bWasCancelled' has a wrong offset!");
static_assert(offsetof(GA_FrostWyvern_Fly_C_ExecuteUbergraph_GA_FrostWyvern_Fly, CallFunc_BreakTransform_Location) == 0x000078, "Member 'GA_FrostWyvern_Fly_C_ExecuteUbergraph_GA_FrostWyvern_Fly::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(GA_FrostWyvern_Fly_C_ExecuteUbergraph_GA_FrostWyvern_Fly, CallFunc_BreakTransform_Rotation) == 0x000090, "Member 'GA_FrostWyvern_Fly_C_ExecuteUbergraph_GA_FrostWyvern_Fly::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(GA_FrostWyvern_Fly_C_ExecuteUbergraph_GA_FrostWyvern_Fly, CallFunc_BreakTransform_Scale) == 0x0000A8, "Member 'GA_FrostWyvern_Fly_C_ExecuteUbergraph_GA_FrostWyvern_Fly::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(GA_FrostWyvern_Fly_C_ExecuteUbergraph_GA_FrostWyvern_Fly, CallFunc_BreakVector_X) == 0x0000C0, "Member 'GA_FrostWyvern_Fly_C_ExecuteUbergraph_GA_FrostWyvern_Fly::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(GA_FrostWyvern_Fly_C_ExecuteUbergraph_GA_FrostWyvern_Fly, CallFunc_BreakVector_Y) == 0x0000C8, "Member 'GA_FrostWyvern_Fly_C_ExecuteUbergraph_GA_FrostWyvern_Fly::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(GA_FrostWyvern_Fly_C_ExecuteUbergraph_GA_FrostWyvern_Fly, CallFunc_BreakVector_Z) == 0x0000D0, "Member 'GA_FrostWyvern_Fly_C_ExecuteUbergraph_GA_FrostWyvern_Fly::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(GA_FrostWyvern_Fly_C_ExecuteUbergraph_GA_FrostWyvern_Fly, K2Node_Event_TriggerEventData) == 0x0000D8, "Member 'GA_FrostWyvern_Fly_C_ExecuteUbergraph_GA_FrostWyvern_Fly::K2Node_Event_TriggerEventData' has a wrong offset!");
static_assert(offsetof(GA_FrostWyvern_Fly_C_ExecuteUbergraph_GA_FrostWyvern_Fly, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000188, "Member 'GA_FrostWyvern_Fly_C_ExecuteUbergraph_GA_FrostWyvern_Fly::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_FrostWyvern_Fly_C_ExecuteUbergraph_GA_FrostWyvern_Fly, CallFunc_MakeVector_ReturnValue) == 0x000190, "Member 'GA_FrostWyvern_Fly_C_ExecuteUbergraph_GA_FrostWyvern_Fly::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_FrostWyvern_Fly_C_ExecuteUbergraph_GA_FrostWyvern_Fly, CallFunc_GetAvatarActorFromActorInfo_ReturnValue_1) == 0x0001A8, "Member 'GA_FrostWyvern_Fly_C_ExecuteUbergraph_GA_FrostWyvern_Fly::CallFunc_GetAvatarActorFromActorInfo_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_FrostWyvern_Fly_C_ExecuteUbergraph_GA_FrostWyvern_Fly, K2Node_DynamicCast_AsBP_Frost_Wyvern) == 0x0001B0, "Member 'GA_FrostWyvern_Fly_C_ExecuteUbergraph_GA_FrostWyvern_Fly::K2Node_DynamicCast_AsBP_Frost_Wyvern' has a wrong offset!");
static_assert(offsetof(GA_FrostWyvern_Fly_C_ExecuteUbergraph_GA_FrostWyvern_Fly, K2Node_DynamicCast_bSuccess) == 0x0001B8, "Member 'GA_FrostWyvern_Fly_C_ExecuteUbergraph_GA_FrostWyvern_Fly::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GA_FrostWyvern_Fly_C_ExecuteUbergraph_GA_FrostWyvern_Fly, CallFunc_Normal_ReturnValue) == 0x0001B9, "Member 'GA_FrostWyvern_Fly_C_ExecuteUbergraph_GA_FrostWyvern_Fly::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_FrostWyvern_Fly_C_ExecuteUbergraph_GA_FrostWyvern_Fly, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x0001C0, "Member 'GA_FrostWyvern_Fly_C_ExecuteUbergraph_GA_FrostWyvern_Fly::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_FrostWyvern_Fly_C_ExecuteUbergraph_GA_FrostWyvern_Fly, K2Node_CreateDelegate_OutputDelegate) == 0x0001C8, "Member 'GA_FrostWyvern_Fly_C_ExecuteUbergraph_GA_FrostWyvern_Fly::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(GA_FrostWyvern_Fly_C_ExecuteUbergraph_GA_FrostWyvern_Fly, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x0001D8, "Member 'GA_FrostWyvern_Fly_C_ExecuteUbergraph_GA_FrostWyvern_Fly::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_FrostWyvern_Fly_C_ExecuteUbergraph_GA_FrostWyvern_Fly, Temp_object_Variable) == 0x0001E0, "Member 'GA_FrostWyvern_Fly_C_ExecuteUbergraph_GA_FrostWyvern_Fly::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(GA_FrostWyvern_Fly_C_ExecuteUbergraph_GA_FrostWyvern_Fly, CallFunc_K2_GetActorLocation_ReturnValue) == 0x0001F0, "Member 'GA_FrostWyvern_Fly_C_ExecuteUbergraph_GA_FrostWyvern_Fly::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_FrostWyvern_Fly_C_ExecuteUbergraph_GA_FrostWyvern_Fly, K2Node_MakeArray_Array) == 0x000208, "Member 'GA_FrostWyvern_Fly_C_ExecuteUbergraph_GA_FrostWyvern_Fly::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(GA_FrostWyvern_Fly_C_ExecuteUbergraph_GA_FrostWyvern_Fly, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000218, "Member 'GA_FrostWyvern_Fly_C_ExecuteUbergraph_GA_FrostWyvern_Fly::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_FrostWyvern_Fly_C_ExecuteUbergraph_GA_FrostWyvern_Fly, CallFunc_LineTraceSingleForObjects_OutHit) == 0x000230, "Member 'GA_FrostWyvern_Fly_C_ExecuteUbergraph_GA_FrostWyvern_Fly::CallFunc_LineTraceSingleForObjects_OutHit' has a wrong offset!");
static_assert(offsetof(GA_FrostWyvern_Fly_C_ExecuteUbergraph_GA_FrostWyvern_Fly, CallFunc_LineTraceSingleForObjects_ReturnValue) == 0x000318, "Member 'GA_FrostWyvern_Fly_C_ExecuteUbergraph_GA_FrostWyvern_Fly::CallFunc_LineTraceSingleForObjects_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_FrostWyvern_Fly_C_ExecuteUbergraph_GA_FrostWyvern_Fly, CallFunc_BreakHitResult_bBlockingHit) == 0x000319, "Member 'GA_FrostWyvern_Fly_C_ExecuteUbergraph_GA_FrostWyvern_Fly::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(GA_FrostWyvern_Fly_C_ExecuteUbergraph_GA_FrostWyvern_Fly, CallFunc_BreakHitResult_bInitialOverlap) == 0x00031A, "Member 'GA_FrostWyvern_Fly_C_ExecuteUbergraph_GA_FrostWyvern_Fly::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(GA_FrostWyvern_Fly_C_ExecuteUbergraph_GA_FrostWyvern_Fly, CallFunc_BreakHitResult_Time) == 0x00031C, "Member 'GA_FrostWyvern_Fly_C_ExecuteUbergraph_GA_FrostWyvern_Fly::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(GA_FrostWyvern_Fly_C_ExecuteUbergraph_GA_FrostWyvern_Fly, CallFunc_BreakHitResult_Distance) == 0x000320, "Member 'GA_FrostWyvern_Fly_C_ExecuteUbergraph_GA_FrostWyvern_Fly::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(GA_FrostWyvern_Fly_C_ExecuteUbergraph_GA_FrostWyvern_Fly, CallFunc_BreakHitResult_Location) == 0x000328, "Member 'GA_FrostWyvern_Fly_C_ExecuteUbergraph_GA_FrostWyvern_Fly::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(GA_FrostWyvern_Fly_C_ExecuteUbergraph_GA_FrostWyvern_Fly, CallFunc_BreakHitResult_ImpactPoint) == 0x000340, "Member 'GA_FrostWyvern_Fly_C_ExecuteUbergraph_GA_FrostWyvern_Fly::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(GA_FrostWyvern_Fly_C_ExecuteUbergraph_GA_FrostWyvern_Fly, CallFunc_BreakHitResult_Normal) == 0x000358, "Member 'GA_FrostWyvern_Fly_C_ExecuteUbergraph_GA_FrostWyvern_Fly::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(GA_FrostWyvern_Fly_C_ExecuteUbergraph_GA_FrostWyvern_Fly, CallFunc_BreakHitResult_ImpactNormal) == 0x000370, "Member 'GA_FrostWyvern_Fly_C_ExecuteUbergraph_GA_FrostWyvern_Fly::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(GA_FrostWyvern_Fly_C_ExecuteUbergraph_GA_FrostWyvern_Fly, CallFunc_BreakHitResult_PhysMat) == 0x000388, "Member 'GA_FrostWyvern_Fly_C_ExecuteUbergraph_GA_FrostWyvern_Fly::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(GA_FrostWyvern_Fly_C_ExecuteUbergraph_GA_FrostWyvern_Fly, CallFunc_BreakHitResult_HitActor) == 0x000390, "Member 'GA_FrostWyvern_Fly_C_ExecuteUbergraph_GA_FrostWyvern_Fly::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(GA_FrostWyvern_Fly_C_ExecuteUbergraph_GA_FrostWyvern_Fly, CallFunc_BreakHitResult_HitComponent) == 0x000398, "Member 'GA_FrostWyvern_Fly_C_ExecuteUbergraph_GA_FrostWyvern_Fly::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(GA_FrostWyvern_Fly_C_ExecuteUbergraph_GA_FrostWyvern_Fly, CallFunc_BreakHitResult_HitBoneName) == 0x0003A0, "Member 'GA_FrostWyvern_Fly_C_ExecuteUbergraph_GA_FrostWyvern_Fly::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(GA_FrostWyvern_Fly_C_ExecuteUbergraph_GA_FrostWyvern_Fly, CallFunc_BreakHitResult_BoneName) == 0x0003A8, "Member 'GA_FrostWyvern_Fly_C_ExecuteUbergraph_GA_FrostWyvern_Fly::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(GA_FrostWyvern_Fly_C_ExecuteUbergraph_GA_FrostWyvern_Fly, CallFunc_BreakHitResult_HitItem) == 0x0003B0, "Member 'GA_FrostWyvern_Fly_C_ExecuteUbergraph_GA_FrostWyvern_Fly::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(GA_FrostWyvern_Fly_C_ExecuteUbergraph_GA_FrostWyvern_Fly, CallFunc_BreakHitResult_ElementIndex) == 0x0003B4, "Member 'GA_FrostWyvern_Fly_C_ExecuteUbergraph_GA_FrostWyvern_Fly::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(GA_FrostWyvern_Fly_C_ExecuteUbergraph_GA_FrostWyvern_Fly, CallFunc_BreakHitResult_FaceIndex) == 0x0003B8, "Member 'GA_FrostWyvern_Fly_C_ExecuteUbergraph_GA_FrostWyvern_Fly::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(GA_FrostWyvern_Fly_C_ExecuteUbergraph_GA_FrostWyvern_Fly, CallFunc_BreakHitResult_TraceStart) == 0x0003C0, "Member 'GA_FrostWyvern_Fly_C_ExecuteUbergraph_GA_FrostWyvern_Fly::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(GA_FrostWyvern_Fly_C_ExecuteUbergraph_GA_FrostWyvern_Fly, CallFunc_BreakHitResult_TraceEnd) == 0x0003D8, "Member 'GA_FrostWyvern_Fly_C_ExecuteUbergraph_GA_FrostWyvern_Fly::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(GA_FrostWyvern_Fly_C_ExecuteUbergraph_GA_FrostWyvern_Fly, CallFunc_K2_SetTimerDelegate_Time_ImplicitCast) == 0x0003F0, "Member 'GA_FrostWyvern_Fly_C_ExecuteUbergraph_GA_FrostWyvern_Fly::CallFunc_K2_SetTimerDelegate_Time_ImplicitCast' has a wrong offset!");

// Function GA_FrostWyvern_Fly.GA_FrostWyvern_Fly_C.K2_OnEndAbility
// 0x0001 (0x0001 - 0x0000)
struct GA_FrostWyvern_Fly_C_K2_OnEndAbility final
{
public:
	bool                                          bWasCancelled;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_FrostWyvern_Fly_C_K2_OnEndAbility) == 0x000001, "Wrong alignment on GA_FrostWyvern_Fly_C_K2_OnEndAbility");
static_assert(sizeof(GA_FrostWyvern_Fly_C_K2_OnEndAbility) == 0x000001, "Wrong size on GA_FrostWyvern_Fly_C_K2_OnEndAbility");
static_assert(offsetof(GA_FrostWyvern_Fly_C_K2_OnEndAbility, bWasCancelled) == 0x000000, "Member 'GA_FrostWyvern_Fly_C_K2_OnEndAbility::bWasCancelled' has a wrong offset!");

}

