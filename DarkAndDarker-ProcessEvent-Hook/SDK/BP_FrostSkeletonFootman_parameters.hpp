#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_FrostSkeletonFootman

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"


namespace SDK::Params
{

// Function BP_FrostSkeletonFootman.BP_FrostSkeletonFootman_C.ChangeFXState
// 0x0010 (0x0010 - 0x0000)
struct BP_FrostSkeletonFootman_C_ChangeFXState final
{
public:
	bool                                          New_State;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5959[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UNiagaraComponent*                      Niagara_System_Component;                          // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FrostSkeletonFootman_C_ChangeFXState) == 0x000008, "Wrong alignment on BP_FrostSkeletonFootman_C_ChangeFXState");
static_assert(sizeof(BP_FrostSkeletonFootman_C_ChangeFXState) == 0x000010, "Wrong size on BP_FrostSkeletonFootman_C_ChangeFXState");
static_assert(offsetof(BP_FrostSkeletonFootman_C_ChangeFXState, New_State) == 0x000000, "Member 'BP_FrostSkeletonFootman_C_ChangeFXState::New_State' has a wrong offset!");
static_assert(offsetof(BP_FrostSkeletonFootman_C_ChangeFXState, Niagara_System_Component) == 0x000008, "Member 'BP_FrostSkeletonFootman_C_ChangeFXState::Niagara_System_Component' has a wrong offset!");

// Function BP_FrostSkeletonFootman.BP_FrostSkeletonFootman_C.ChangeFXStateOnTagUpdate
// 0x0018 (0x0018 - 0x0000)
struct BP_FrostSkeletonFootman_C_ChangeFXStateOnTagUpdate final
{
public:
	class UNiagaraComponent*                      Niagara_Component;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           In_Gameplay_Tag;                                   // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	int32                                         In_Count;                                          // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_GameplayTag_ReturnValue;       // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_GameplayTag_ReturnValue_1;     // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FrostSkeletonFootman_C_ChangeFXStateOnTagUpdate) == 0x000008, "Wrong alignment on BP_FrostSkeletonFootman_C_ChangeFXStateOnTagUpdate");
static_assert(sizeof(BP_FrostSkeletonFootman_C_ChangeFXStateOnTagUpdate) == 0x000018, "Wrong size on BP_FrostSkeletonFootman_C_ChangeFXStateOnTagUpdate");
static_assert(offsetof(BP_FrostSkeletonFootman_C_ChangeFXStateOnTagUpdate, Niagara_Component) == 0x000000, "Member 'BP_FrostSkeletonFootman_C_ChangeFXStateOnTagUpdate::Niagara_Component' has a wrong offset!");
static_assert(offsetof(BP_FrostSkeletonFootman_C_ChangeFXStateOnTagUpdate, In_Gameplay_Tag) == 0x000008, "Member 'BP_FrostSkeletonFootman_C_ChangeFXStateOnTagUpdate::In_Gameplay_Tag' has a wrong offset!");
static_assert(offsetof(BP_FrostSkeletonFootman_C_ChangeFXStateOnTagUpdate, In_Count) == 0x000010, "Member 'BP_FrostSkeletonFootman_C_ChangeFXStateOnTagUpdate::In_Count' has a wrong offset!");
static_assert(offsetof(BP_FrostSkeletonFootman_C_ChangeFXStateOnTagUpdate, CallFunc_Greater_IntInt_ReturnValue) == 0x000014, "Member 'BP_FrostSkeletonFootman_C_ChangeFXStateOnTagUpdate::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FrostSkeletonFootman_C_ChangeFXStateOnTagUpdate, CallFunc_EqualEqual_GameplayTag_ReturnValue) == 0x000015, "Member 'BP_FrostSkeletonFootman_C_ChangeFXStateOnTagUpdate::CallFunc_EqualEqual_GameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FrostSkeletonFootman_C_ChangeFXStateOnTagUpdate, CallFunc_EqualEqual_GameplayTag_ReturnValue_1) == 0x000016, "Member 'BP_FrostSkeletonFootman_C_ChangeFXStateOnTagUpdate::CallFunc_EqualEqual_GameplayTag_ReturnValue_1' has a wrong offset!");

// Function BP_FrostSkeletonFootman.BP_FrostSkeletonFootman_C.ExecuteUbergraph_BP_FrostSkeletonFootman
// 0x0010 (0x0010 - 0x0000)
struct BP_FrostSkeletonFootman_C_ExecuteUbergraph_BP_FrostSkeletonFootman final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_Event_InGameplayTag;                        // 0x0004(0x0008)(ConstParm, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_InCount;                              // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FrostSkeletonFootman_C_ExecuteUbergraph_BP_FrostSkeletonFootman) == 0x000004, "Wrong alignment on BP_FrostSkeletonFootman_C_ExecuteUbergraph_BP_FrostSkeletonFootman");
static_assert(sizeof(BP_FrostSkeletonFootman_C_ExecuteUbergraph_BP_FrostSkeletonFootman) == 0x000010, "Wrong size on BP_FrostSkeletonFootman_C_ExecuteUbergraph_BP_FrostSkeletonFootman");
static_assert(offsetof(BP_FrostSkeletonFootman_C_ExecuteUbergraph_BP_FrostSkeletonFootman, EntryPoint) == 0x000000, "Member 'BP_FrostSkeletonFootman_C_ExecuteUbergraph_BP_FrostSkeletonFootman::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_FrostSkeletonFootman_C_ExecuteUbergraph_BP_FrostSkeletonFootman, K2Node_Event_InGameplayTag) == 0x000004, "Member 'BP_FrostSkeletonFootman_C_ExecuteUbergraph_BP_FrostSkeletonFootman::K2Node_Event_InGameplayTag' has a wrong offset!");
static_assert(offsetof(BP_FrostSkeletonFootman_C_ExecuteUbergraph_BP_FrostSkeletonFootman, K2Node_Event_InCount) == 0x00000C, "Member 'BP_FrostSkeletonFootman_C_ExecuteUbergraph_BP_FrostSkeletonFootman::K2Node_Event_InCount' has a wrong offset!");

// Function BP_FrostSkeletonFootman.BP_FrostSkeletonFootman_C.GameplayTagUpdated
// 0x000C (0x000C - 0x0000)
struct BP_FrostSkeletonFootman_C_GameplayTagUpdated final
{
public:
	struct FGameplayTag                           InGameplayTag;                                     // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	int32                                         InCount;                                           // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FrostSkeletonFootman_C_GameplayTagUpdated) == 0x000004, "Wrong alignment on BP_FrostSkeletonFootman_C_GameplayTagUpdated");
static_assert(sizeof(BP_FrostSkeletonFootman_C_GameplayTagUpdated) == 0x00000C, "Wrong size on BP_FrostSkeletonFootman_C_GameplayTagUpdated");
static_assert(offsetof(BP_FrostSkeletonFootman_C_GameplayTagUpdated, InGameplayTag) == 0x000000, "Member 'BP_FrostSkeletonFootman_C_GameplayTagUpdated::InGameplayTag' has a wrong offset!");
static_assert(offsetof(BP_FrostSkeletonFootman_C_GameplayTagUpdated, InCount) == 0x000008, "Member 'BP_FrostSkeletonFootman_C_GameplayTagUpdated::InCount' has a wrong offset!");

}

