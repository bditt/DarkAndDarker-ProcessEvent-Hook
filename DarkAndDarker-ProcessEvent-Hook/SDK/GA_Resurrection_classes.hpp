#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_Resurrection

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "DungeonCrawler_structs.hpp"
#include "GA_SpellChanneling_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass GA_Resurrection.GA_Resurrection_C
// 0x0168 (0x07F0 - 0x0688)
class UGA_Resurrection_C final : public UGA_SpellChanneling_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0688(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class ABP_PlayerCharacter_C*                  CorpseActor;                                       // 0x0690(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          IsPartyMember;                                     // 0x0698(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4826[0x7];                                     // 0x0699(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 AccountId;                                         // 0x06A0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	bool                                          OnResurrection;                                    // 0x06B0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4827[0x7];                                     // 0x06B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        ResurrectionHealth;                                // 0x06B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   Msg_ChannelingCancel;                              // 0x06C0(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FText                                   Msg_NotValidTarget;                                // 0x06D8(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FText                                   Msg_IsTargetLiving;                                // 0x06F0(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FText                                   Msg_IsNotSoulHeart;                                // 0x0708(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FText                                   Msg_IsNotSoulHeart_1;                              // 0x0720(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FText                                   Msg_IsPartiMember;                                 // 0x0738(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FText                                   Msg_AimOverDir;                                    // 0x0750(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FText                                   Msg_SpellActorEmpty;                               // 0x0768(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FDCGameplayEffectData                  RespawnHealthEffectData;                           // 0x0780(0x0068)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          bAlreadyMsgNotified;                               // 0x07E8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void AbilityActivated_BP(const struct FGameplayEventData& TriggerEventData, bool bIsSocketSightBlocked);
	void BroadcastSystemMessage(const class FText& SystemMessage);
	void Cancelled_EA1ED724476E505943D50C8012DA1AF4(const struct FGameplayAbilityTargetDataHandle& Data);
	void EndSpell(const class FText& SystemMessage, bool IsEndAbilty);
	void ExecuteUbergraph_GA_Resurrection(int32 EntryPoint);
	void Get_Soul_Heart_in_Chest_in_Corpse(class FString* Param_AccountId, class FString* PartyId);
	void Has_Soul_Heart_in_Chest_in_Corpse(bool* Result);
	void Is_Soul_Heart_in_Chest_Valid_Target(bool* bIsSoulHeartInChestValidTarget);
	void K2_OnEndAbility(bool bWasCancelled);
	void OnChannelingCancelled();
	void OnDirectionChanged_CF4D66C54B0F5708CE4F1D9E3DBB3CF7();
	void OnServerChannelingFinish();
	void StartResurrection();
	void ValidData_EA1ED724476E505943D50C8012DA1AF4(const struct FGameplayAbilityTargetDataHandle& Data);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GA_Resurrection_C">();
	}
	static class UGA_Resurrection_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGA_Resurrection_C>();
	}
};
static_assert(alignof(UGA_Resurrection_C) == 0x000008, "Wrong alignment on UGA_Resurrection_C");
static_assert(sizeof(UGA_Resurrection_C) == 0x0007F0, "Wrong size on UGA_Resurrection_C");
static_assert(offsetof(UGA_Resurrection_C, UberGraphFrame) == 0x000688, "Member 'UGA_Resurrection_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UGA_Resurrection_C, CorpseActor) == 0x000690, "Member 'UGA_Resurrection_C::CorpseActor' has a wrong offset!");
static_assert(offsetof(UGA_Resurrection_C, IsPartyMember) == 0x000698, "Member 'UGA_Resurrection_C::IsPartyMember' has a wrong offset!");
static_assert(offsetof(UGA_Resurrection_C, AccountId) == 0x0006A0, "Member 'UGA_Resurrection_C::AccountId' has a wrong offset!");
static_assert(offsetof(UGA_Resurrection_C, OnResurrection) == 0x0006B0, "Member 'UGA_Resurrection_C::OnResurrection' has a wrong offset!");
static_assert(offsetof(UGA_Resurrection_C, ResurrectionHealth) == 0x0006B8, "Member 'UGA_Resurrection_C::ResurrectionHealth' has a wrong offset!");
static_assert(offsetof(UGA_Resurrection_C, Msg_ChannelingCancel) == 0x0006C0, "Member 'UGA_Resurrection_C::Msg_ChannelingCancel' has a wrong offset!");
static_assert(offsetof(UGA_Resurrection_C, Msg_NotValidTarget) == 0x0006D8, "Member 'UGA_Resurrection_C::Msg_NotValidTarget' has a wrong offset!");
static_assert(offsetof(UGA_Resurrection_C, Msg_IsTargetLiving) == 0x0006F0, "Member 'UGA_Resurrection_C::Msg_IsTargetLiving' has a wrong offset!");
static_assert(offsetof(UGA_Resurrection_C, Msg_IsNotSoulHeart) == 0x000708, "Member 'UGA_Resurrection_C::Msg_IsNotSoulHeart' has a wrong offset!");
static_assert(offsetof(UGA_Resurrection_C, Msg_IsNotSoulHeart_1) == 0x000720, "Member 'UGA_Resurrection_C::Msg_IsNotSoulHeart_1' has a wrong offset!");
static_assert(offsetof(UGA_Resurrection_C, Msg_IsPartiMember) == 0x000738, "Member 'UGA_Resurrection_C::Msg_IsPartiMember' has a wrong offset!");
static_assert(offsetof(UGA_Resurrection_C, Msg_AimOverDir) == 0x000750, "Member 'UGA_Resurrection_C::Msg_AimOverDir' has a wrong offset!");
static_assert(offsetof(UGA_Resurrection_C, Msg_SpellActorEmpty) == 0x000768, "Member 'UGA_Resurrection_C::Msg_SpellActorEmpty' has a wrong offset!");
static_assert(offsetof(UGA_Resurrection_C, RespawnHealthEffectData) == 0x000780, "Member 'UGA_Resurrection_C::RespawnHealthEffectData' has a wrong offset!");
static_assert(offsetof(UGA_Resurrection_C, bAlreadyMsgNotified) == 0x0007E8, "Member 'UGA_Resurrection_C::bAlreadyMsgNotified' has a wrong offset!");

}

