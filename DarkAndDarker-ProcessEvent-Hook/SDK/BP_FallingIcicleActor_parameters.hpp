#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_FallingIcicleActor

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_FallingIcicleActor.BP_FallingIcicleActor_C.ExecuteUbergraph_BP_FallingIcicleActor
// 0x0130 (0x0130 - 0x0000)
struct BP_FallingIcicleActor_C_ExecuteUbergraph_BP_FallingIcicleActor final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4E24[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           K2Node_Event_InGameplayTag;                        // 0x0008(0x0008)(ConstParm, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_InCount;                              // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess;   // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4E25[0x2];                                     // 0x0016(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_RandomUnitVector_ReturnValue;             // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x0030(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult;    // 0x0048(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_FallingIcicleActor_C_ExecuteUbergraph_BP_FallingIcicleActor) == 0x000008, "Wrong alignment on BP_FallingIcicleActor_C_ExecuteUbergraph_BP_FallingIcicleActor");
static_assert(sizeof(BP_FallingIcicleActor_C_ExecuteUbergraph_BP_FallingIcicleActor) == 0x000130, "Wrong size on BP_FallingIcicleActor_C_ExecuteUbergraph_BP_FallingIcicleActor");
static_assert(offsetof(BP_FallingIcicleActor_C_ExecuteUbergraph_BP_FallingIcicleActor, EntryPoint) == 0x000000, "Member 'BP_FallingIcicleActor_C_ExecuteUbergraph_BP_FallingIcicleActor::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_FallingIcicleActor_C_ExecuteUbergraph_BP_FallingIcicleActor, CallFunc_HasAuthority_ReturnValue) == 0x000004, "Member 'BP_FallingIcicleActor_C_ExecuteUbergraph_BP_FallingIcicleActor::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FallingIcicleActor_C_ExecuteUbergraph_BP_FallingIcicleActor, K2Node_Event_InGameplayTag) == 0x000008, "Member 'BP_FallingIcicleActor_C_ExecuteUbergraph_BP_FallingIcicleActor::K2Node_Event_InGameplayTag' has a wrong offset!");
static_assert(offsetof(BP_FallingIcicleActor_C_ExecuteUbergraph_BP_FallingIcicleActor, K2Node_Event_InCount) == 0x000010, "Member 'BP_FallingIcicleActor_C_ExecuteUbergraph_BP_FallingIcicleActor::K2Node_Event_InCount' has a wrong offset!");
static_assert(offsetof(BP_FallingIcicleActor_C_ExecuteUbergraph_BP_FallingIcicleActor, CallFunc_Greater_IntInt_ReturnValue) == 0x000014, "Member 'BP_FallingIcicleActor_C_ExecuteUbergraph_BP_FallingIcicleActor::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FallingIcicleActor_C_ExecuteUbergraph_BP_FallingIcicleActor, GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess) == 0x000015, "Member 'BP_FallingIcicleActor_C_ExecuteUbergraph_BP_FallingIcicleActor::GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_FallingIcicleActor_C_ExecuteUbergraph_BP_FallingIcicleActor, CallFunc_RandomUnitVector_ReturnValue) == 0x000018, "Member 'BP_FallingIcicleActor_C_ExecuteUbergraph_BP_FallingIcicleActor::CallFunc_RandomUnitVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FallingIcicleActor_C_ExecuteUbergraph_BP_FallingIcicleActor, CallFunc_Multiply_VectorVector_ReturnValue) == 0x000030, "Member 'BP_FallingIcicleActor_C_ExecuteUbergraph_BP_FallingIcicleActor::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FallingIcicleActor_C_ExecuteUbergraph_BP_FallingIcicleActor, CallFunc_K2_SetRelativeLocation_SweepHitResult) == 0x000048, "Member 'BP_FallingIcicleActor_C_ExecuteUbergraph_BP_FallingIcicleActor::CallFunc_K2_SetRelativeLocation_SweepHitResult' has a wrong offset!");

// Function BP_FallingIcicleActor.BP_FallingIcicleActor_C.GameplayTagUpdated
// 0x000C (0x000C - 0x0000)
struct BP_FallingIcicleActor_C_GameplayTagUpdated final
{
public:
	struct FGameplayTag                           InGameplayTag;                                     // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	int32                                         InCount;                                           // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FallingIcicleActor_C_GameplayTagUpdated) == 0x000004, "Wrong alignment on BP_FallingIcicleActor_C_GameplayTagUpdated");
static_assert(sizeof(BP_FallingIcicleActor_C_GameplayTagUpdated) == 0x00000C, "Wrong size on BP_FallingIcicleActor_C_GameplayTagUpdated");
static_assert(offsetof(BP_FallingIcicleActor_C_GameplayTagUpdated, InGameplayTag) == 0x000000, "Member 'BP_FallingIcicleActor_C_GameplayTagUpdated::InGameplayTag' has a wrong offset!");
static_assert(offsetof(BP_FallingIcicleActor_C_GameplayTagUpdated, InCount) == 0x000008, "Member 'BP_FallingIcicleActor_C_GameplayTagUpdated::InCount' has a wrong offset!");

}

