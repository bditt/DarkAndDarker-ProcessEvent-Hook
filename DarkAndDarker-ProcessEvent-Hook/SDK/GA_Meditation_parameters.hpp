#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_Meditation

#include "Basic.hpp"

#include "GameplayAbilities_structs.hpp"
#include "DungeonCrawler_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function GA_Meditation.GA_Meditation_C.AbilityActivated
// 0x00B0 (0x00B0 - 0x0000)
struct GA_Meditation_C_AbilityActivated final
{
public:
	struct FGameplayEventData                     TriggerEventData;                                  // 0x0000(0x00B0)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(GA_Meditation_C_AbilityActivated) == 0x000008, "Wrong alignment on GA_Meditation_C_AbilityActivated");
static_assert(sizeof(GA_Meditation_C_AbilityActivated) == 0x0000B0, "Wrong size on GA_Meditation_C_AbilityActivated");
static_assert(offsetof(GA_Meditation_C_AbilityActivated, TriggerEventData) == 0x000000, "Member 'GA_Meditation_C_AbilityActivated::TriggerEventData' has a wrong offset!");

// Function GA_Meditation.GA_Meditation_C.ExecuteUbergraph_GA_Meditation
// 0x0628 (0x0628 - 0x0000)
struct GA_Meditation_C_ExecuteUbergraph_GA_Meditation final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FActiveGameplayEffectHandle            CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_181F[0x3];                                     // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEventData                     Temp_struct_Variable;                              // 0x0020(0x00B0)(ConstParm)
	TArray<struct FActiveGameplayEffectHandle>    CallFunc_ApplyEffectContainer_ReturnValue;         // 0x00D0(0x0010)(ReferenceParm)
	bool                                          CallFunc_K2_HasAuthority_ReturnValue;              // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1820[0x7];                                     // 0x00E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetAvatarActorFromActorInfo_ReturnValue;  // 0x00E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_GetCurrentSourceObject_ReturnValue;       // 0x00F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBaseInterface>        K2Node_DynamicCast_AsBase_Interface;               // 0x00F8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1821[0x7];                                     // 0x0109(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASkillActor*                            K2Node_DynamicCast_AsSkill_Actor;                  // 0x0110(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue;          // 0x0119(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1822[0x6];                                     // 0x011A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetAvatarActorFromActorInfo_ReturnValue_1; // 0x0120(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetAvatarActorFromActorInfo_ReturnValue_2; // 0x0128(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bWasCancelled;                        // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_HasAuthority_ReturnValue_1;            // 0x0131(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1823[0x6];                                     // 0x0132(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayEventData                     Temp_struct_Variable_1;                            // 0x0138(0x00B0)(ConstParm)
	TArray<struct FActiveGameplayEffectHandle>    CallFunc_ApplyEffectContainer_ReturnValue_1;       // 0x01E8(0x0010)(ReferenceParm)
	struct FGameplayEventData                     K2Node_Event_TriggerEventData;                     // 0x01F8(0x00B0)(ConstParm)
	struct FGameplayEventData                     K2Node_Event_EventData_1;                          // 0x02A8(0x00B0)()
	struct FGameplayCueParameters                 K2Node_Event_CueParams_1;                          // 0x0358(0x00D8)(ContainsInstancedReference)
	int32                                         K2Node_Event_ActionCount;                          // 0x0430(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FPrimaryAssetId                        CallFunc_GetPrimaryAssetIdFromObject_ReturnValue;  // 0x0434(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FPrimaryAssetId                        CallFunc_GetPrimaryAssetIdFromObject_ReturnValue_1; // 0x0444(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetConstantInt32_ReturnValue;             // 0x0454(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetConstantInt32_ReturnValue_1;           // 0x0458(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1824[0x4];                                     // 0x045C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMsgSpellRecharge                      K2Node_MakeStruct_MsgSpellRecharge;                // 0x0460(0x0020)()
	struct FMsgSkillRechargeRequest               K2Node_MakeStruct_MsgSkillRechargeRequest;         // 0x0480(0x0020)()
	struct FGameplayEventData                     K2Node_Event_EventData;                            // 0x04A0(0x00B0)()
	struct FGameplayCueParameters                 K2Node_Event_CueParams;                            // 0x0550(0x00D8)(ContainsInstancedReference)
};
static_assert(alignof(GA_Meditation_C_ExecuteUbergraph_GA_Meditation) == 0x000008, "Wrong alignment on GA_Meditation_C_ExecuteUbergraph_GA_Meditation");
static_assert(sizeof(GA_Meditation_C_ExecuteUbergraph_GA_Meditation) == 0x000628, "Wrong size on GA_Meditation_C_ExecuteUbergraph_GA_Meditation");
static_assert(offsetof(GA_Meditation_C_ExecuteUbergraph_GA_Meditation, EntryPoint) == 0x000000, "Member 'GA_Meditation_C_ExecuteUbergraph_GA_Meditation::EntryPoint' has a wrong offset!");
static_assert(offsetof(GA_Meditation_C_ExecuteUbergraph_GA_Meditation, CallFunc_Array_Length_ReturnValue) == 0x000004, "Member 'GA_Meditation_C_ExecuteUbergraph_GA_Meditation::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Meditation_C_ExecuteUbergraph_GA_Meditation, Temp_int_Array_Index_Variable) == 0x000008, "Member 'GA_Meditation_C_ExecuteUbergraph_GA_Meditation::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(GA_Meditation_C_ExecuteUbergraph_GA_Meditation, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'GA_Meditation_C_ExecuteUbergraph_GA_Meditation::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(GA_Meditation_C_ExecuteUbergraph_GA_Meditation, CallFunc_Array_Get_Item) == 0x000010, "Member 'GA_Meditation_C_ExecuteUbergraph_GA_Meditation::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(GA_Meditation_C_ExecuteUbergraph_GA_Meditation, CallFunc_Less_IntInt_ReturnValue) == 0x000018, "Member 'GA_Meditation_C_ExecuteUbergraph_GA_Meditation::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Meditation_C_ExecuteUbergraph_GA_Meditation, CallFunc_Add_IntInt_ReturnValue) == 0x00001C, "Member 'GA_Meditation_C_ExecuteUbergraph_GA_Meditation::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Meditation_C_ExecuteUbergraph_GA_Meditation, Temp_struct_Variable) == 0x000020, "Member 'GA_Meditation_C_ExecuteUbergraph_GA_Meditation::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(GA_Meditation_C_ExecuteUbergraph_GA_Meditation, CallFunc_ApplyEffectContainer_ReturnValue) == 0x0000D0, "Member 'GA_Meditation_C_ExecuteUbergraph_GA_Meditation::CallFunc_ApplyEffectContainer_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Meditation_C_ExecuteUbergraph_GA_Meditation, CallFunc_K2_HasAuthority_ReturnValue) == 0x0000E0, "Member 'GA_Meditation_C_ExecuteUbergraph_GA_Meditation::CallFunc_K2_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Meditation_C_ExecuteUbergraph_GA_Meditation, CallFunc_GetAvatarActorFromActorInfo_ReturnValue) == 0x0000E8, "Member 'GA_Meditation_C_ExecuteUbergraph_GA_Meditation::CallFunc_GetAvatarActorFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Meditation_C_ExecuteUbergraph_GA_Meditation, CallFunc_GetCurrentSourceObject_ReturnValue) == 0x0000F0, "Member 'GA_Meditation_C_ExecuteUbergraph_GA_Meditation::CallFunc_GetCurrentSourceObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Meditation_C_ExecuteUbergraph_GA_Meditation, K2Node_DynamicCast_AsBase_Interface) == 0x0000F8, "Member 'GA_Meditation_C_ExecuteUbergraph_GA_Meditation::K2Node_DynamicCast_AsBase_Interface' has a wrong offset!");
static_assert(offsetof(GA_Meditation_C_ExecuteUbergraph_GA_Meditation, K2Node_DynamicCast_bSuccess) == 0x000108, "Member 'GA_Meditation_C_ExecuteUbergraph_GA_Meditation::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GA_Meditation_C_ExecuteUbergraph_GA_Meditation, K2Node_DynamicCast_AsSkill_Actor) == 0x000110, "Member 'GA_Meditation_C_ExecuteUbergraph_GA_Meditation::K2Node_DynamicCast_AsSkill_Actor' has a wrong offset!");
static_assert(offsetof(GA_Meditation_C_ExecuteUbergraph_GA_Meditation, K2Node_DynamicCast_bSuccess_1) == 0x000118, "Member 'GA_Meditation_C_ExecuteUbergraph_GA_Meditation::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(GA_Meditation_C_ExecuteUbergraph_GA_Meditation, CallFunc_IsLocallyControlled_ReturnValue) == 0x000119, "Member 'GA_Meditation_C_ExecuteUbergraph_GA_Meditation::CallFunc_IsLocallyControlled_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Meditation_C_ExecuteUbergraph_GA_Meditation, CallFunc_GetAvatarActorFromActorInfo_ReturnValue_1) == 0x000120, "Member 'GA_Meditation_C_ExecuteUbergraph_GA_Meditation::CallFunc_GetAvatarActorFromActorInfo_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_Meditation_C_ExecuteUbergraph_GA_Meditation, CallFunc_GetAvatarActorFromActorInfo_ReturnValue_2) == 0x000128, "Member 'GA_Meditation_C_ExecuteUbergraph_GA_Meditation::CallFunc_GetAvatarActorFromActorInfo_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GA_Meditation_C_ExecuteUbergraph_GA_Meditation, K2Node_Event_bWasCancelled) == 0x000130, "Member 'GA_Meditation_C_ExecuteUbergraph_GA_Meditation::K2Node_Event_bWasCancelled' has a wrong offset!");
static_assert(offsetof(GA_Meditation_C_ExecuteUbergraph_GA_Meditation, CallFunc_K2_HasAuthority_ReturnValue_1) == 0x000131, "Member 'GA_Meditation_C_ExecuteUbergraph_GA_Meditation::CallFunc_K2_HasAuthority_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_Meditation_C_ExecuteUbergraph_GA_Meditation, Temp_struct_Variable_1) == 0x000138, "Member 'GA_Meditation_C_ExecuteUbergraph_GA_Meditation::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(GA_Meditation_C_ExecuteUbergraph_GA_Meditation, CallFunc_ApplyEffectContainer_ReturnValue_1) == 0x0001E8, "Member 'GA_Meditation_C_ExecuteUbergraph_GA_Meditation::CallFunc_ApplyEffectContainer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_Meditation_C_ExecuteUbergraph_GA_Meditation, K2Node_Event_TriggerEventData) == 0x0001F8, "Member 'GA_Meditation_C_ExecuteUbergraph_GA_Meditation::K2Node_Event_TriggerEventData' has a wrong offset!");
static_assert(offsetof(GA_Meditation_C_ExecuteUbergraph_GA_Meditation, K2Node_Event_EventData_1) == 0x0002A8, "Member 'GA_Meditation_C_ExecuteUbergraph_GA_Meditation::K2Node_Event_EventData_1' has a wrong offset!");
static_assert(offsetof(GA_Meditation_C_ExecuteUbergraph_GA_Meditation, K2Node_Event_CueParams_1) == 0x000358, "Member 'GA_Meditation_C_ExecuteUbergraph_GA_Meditation::K2Node_Event_CueParams_1' has a wrong offset!");
static_assert(offsetof(GA_Meditation_C_ExecuteUbergraph_GA_Meditation, K2Node_Event_ActionCount) == 0x000430, "Member 'GA_Meditation_C_ExecuteUbergraph_GA_Meditation::K2Node_Event_ActionCount' has a wrong offset!");
static_assert(offsetof(GA_Meditation_C_ExecuteUbergraph_GA_Meditation, CallFunc_GetPrimaryAssetIdFromObject_ReturnValue) == 0x000434, "Member 'GA_Meditation_C_ExecuteUbergraph_GA_Meditation::CallFunc_GetPrimaryAssetIdFromObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Meditation_C_ExecuteUbergraph_GA_Meditation, CallFunc_GetPrimaryAssetIdFromObject_ReturnValue_1) == 0x000444, "Member 'GA_Meditation_C_ExecuteUbergraph_GA_Meditation::CallFunc_GetPrimaryAssetIdFromObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_Meditation_C_ExecuteUbergraph_GA_Meditation, CallFunc_GetConstantInt32_ReturnValue) == 0x000454, "Member 'GA_Meditation_C_ExecuteUbergraph_GA_Meditation::CallFunc_GetConstantInt32_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Meditation_C_ExecuteUbergraph_GA_Meditation, CallFunc_GetConstantInt32_ReturnValue_1) == 0x000458, "Member 'GA_Meditation_C_ExecuteUbergraph_GA_Meditation::CallFunc_GetConstantInt32_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_Meditation_C_ExecuteUbergraph_GA_Meditation, K2Node_MakeStruct_MsgSpellRecharge) == 0x000460, "Member 'GA_Meditation_C_ExecuteUbergraph_GA_Meditation::K2Node_MakeStruct_MsgSpellRecharge' has a wrong offset!");
static_assert(offsetof(GA_Meditation_C_ExecuteUbergraph_GA_Meditation, K2Node_MakeStruct_MsgSkillRechargeRequest) == 0x000480, "Member 'GA_Meditation_C_ExecuteUbergraph_GA_Meditation::K2Node_MakeStruct_MsgSkillRechargeRequest' has a wrong offset!");
static_assert(offsetof(GA_Meditation_C_ExecuteUbergraph_GA_Meditation, K2Node_Event_EventData) == 0x0004A0, "Member 'GA_Meditation_C_ExecuteUbergraph_GA_Meditation::K2Node_Event_EventData' has a wrong offset!");
static_assert(offsetof(GA_Meditation_C_ExecuteUbergraph_GA_Meditation, K2Node_Event_CueParams) == 0x000550, "Member 'GA_Meditation_C_ExecuteUbergraph_GA_Meditation::K2Node_Event_CueParams' has a wrong offset!");

// Function GA_Meditation.GA_Meditation_C.K2_OnEndAbility
// 0x0001 (0x0001 - 0x0000)
struct GA_Meditation_C_K2_OnEndAbility final
{
public:
	bool                                          bWasCancelled;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Meditation_C_K2_OnEndAbility) == 0x000001, "Wrong alignment on GA_Meditation_C_K2_OnEndAbility");
static_assert(sizeof(GA_Meditation_C_K2_OnEndAbility) == 0x000001, "Wrong size on GA_Meditation_C_K2_OnEndAbility");
static_assert(offsetof(GA_Meditation_C_K2_OnEndAbility, bWasCancelled) == 0x000000, "Member 'GA_Meditation_C_K2_OnEndAbility::bWasCancelled' has a wrong offset!");

// Function GA_Meditation.GA_Meditation_C.ServerOnChannelingAction_BP
// 0x0190 (0x0190 - 0x0000)
struct GA_Meditation_C_ServerOnChannelingAction_BP final
{
public:
	struct FGameplayEventData                     EventData;                                         // 0x0000(0x00B0)(BlueprintVisible, BlueprintReadOnly, Parm)
	struct FGameplayCueParameters                 CueParams;                                         // 0x00B0(0x00D8)(BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference)
	int32                                         ActionCount;                                       // 0x0188(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Meditation_C_ServerOnChannelingAction_BP) == 0x000008, "Wrong alignment on GA_Meditation_C_ServerOnChannelingAction_BP");
static_assert(sizeof(GA_Meditation_C_ServerOnChannelingAction_BP) == 0x000190, "Wrong size on GA_Meditation_C_ServerOnChannelingAction_BP");
static_assert(offsetof(GA_Meditation_C_ServerOnChannelingAction_BP, EventData) == 0x000000, "Member 'GA_Meditation_C_ServerOnChannelingAction_BP::EventData' has a wrong offset!");
static_assert(offsetof(GA_Meditation_C_ServerOnChannelingAction_BP, CueParams) == 0x0000B0, "Member 'GA_Meditation_C_ServerOnChannelingAction_BP::CueParams' has a wrong offset!");
static_assert(offsetof(GA_Meditation_C_ServerOnChannelingAction_BP, ActionCount) == 0x000188, "Member 'GA_Meditation_C_ServerOnChannelingAction_BP::ActionCount' has a wrong offset!");

// Function GA_Meditation.GA_Meditation_C.ServerOnChannelingStart
// 0x0188 (0x0188 - 0x0000)
struct GA_Meditation_C_ServerOnChannelingStart final
{
public:
	struct FGameplayEventData                     EventData;                                         // 0x0000(0x00B0)(BlueprintVisible, BlueprintReadOnly, Parm)
	struct FGameplayCueParameters                 CueParams;                                         // 0x00B0(0x00D8)(BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference)
};
static_assert(alignof(GA_Meditation_C_ServerOnChannelingStart) == 0x000008, "Wrong alignment on GA_Meditation_C_ServerOnChannelingStart");
static_assert(sizeof(GA_Meditation_C_ServerOnChannelingStart) == 0x000188, "Wrong size on GA_Meditation_C_ServerOnChannelingStart");
static_assert(offsetof(GA_Meditation_C_ServerOnChannelingStart, EventData) == 0x000000, "Member 'GA_Meditation_C_ServerOnChannelingStart::EventData' has a wrong offset!");
static_assert(offsetof(GA_Meditation_C_ServerOnChannelingStart, CueParams) == 0x0000B0, "Member 'GA_Meditation_C_ServerOnChannelingStart::CueParams' has a wrong offset!");

}

