#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BTD_CheckTarget

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "GameplayTags_structs.hpp"


namespace SDK::Params
{

// Function BTD_CheckTarget.BTD_CheckTarget_C.FilterHP
// 0x00D0 (0x00D0 - 0x0000)
struct BTD_CheckTarget_C_FilterHP final
{
public:
	bool                                          Bool;                                              // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3AF7[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3AF8[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_1;        // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3AF9[0x3];                                     // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_2;        // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3AFA[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ADCCharacterBase*                       CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3AFB[0x3];                                     // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_2;            // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetFloatAttribute_bSuccessfullyFoundAttribute; // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3AFC[0x3];                                     // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetFloatAttribute_ReturnValue;            // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue;                          // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetFloatAttribute_bSuccessfullyFoundAttribute_1; // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3AFD[0x3];                                     // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetFloatAttribute_ReturnValue_1;          // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3AFE[0x7];                                     // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ADCCharacterBase*                       CallFunc_Array_Get_Item_1;                         // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue_1;           // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetFloatAttribute_bSuccessfullyFoundAttribute_2; // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3AFF[0x2];                                     // 0x007A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetFloatAttribute_ReturnValue_2;          // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetFloatAttribute_bSuccessfullyFoundAttribute_3; // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B00[0x3];                                     // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetFloatAttribute_ReturnValue_3;          // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B01[0x4];                                     // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_3;            // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B02[0x4];                                     // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue_1;                        // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x00AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B03[0x3];                                     // 0x00AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_B_ImplicitCast;       // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_A_ImplicitCast;       // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_B_ImplicitCast_1;     // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_A_ImplicitCast_1;     // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTD_CheckTarget_C_FilterHP) == 0x000008, "Wrong alignment on BTD_CheckTarget_C_FilterHP");
static_assert(sizeof(BTD_CheckTarget_C_FilterHP) == 0x0000D0, "Wrong size on BTD_CheckTarget_C_FilterHP");
static_assert(offsetof(BTD_CheckTarget_C_FilterHP, Bool) == 0x000000, "Member 'BTD_CheckTarget_C_FilterHP::Bool' has a wrong offset!");
static_assert(offsetof(BTD_CheckTarget_C_FilterHP, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BTD_CheckTarget_C_FilterHP::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BTD_CheckTarget_C_FilterHP, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'BTD_CheckTarget_C_FilterHP::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BTD_CheckTarget_C_FilterHP, CallFunc_Subtract_IntInt_ReturnValue) == 0x00000C, "Member 'BTD_CheckTarget_C_FilterHP::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTD_CheckTarget_C_FilterHP, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000010, "Member 'BTD_CheckTarget_C_FilterHP::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTD_CheckTarget_C_FilterHP, Temp_int_Array_Index_Variable_1) == 0x000014, "Member 'BTD_CheckTarget_C_FilterHP::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BTD_CheckTarget_C_FilterHP, Temp_int_Loop_Counter_Variable_1) == 0x000018, "Member 'BTD_CheckTarget_C_FilterHP::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BTD_CheckTarget_C_FilterHP, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x00001C, "Member 'BTD_CheckTarget_C_FilterHP::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BTD_CheckTarget_C_FilterHP, CallFunc_GreaterEqual_IntInt_ReturnValue_1) == 0x000020, "Member 'BTD_CheckTarget_C_FilterHP::CallFunc_GreaterEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BTD_CheckTarget_C_FilterHP, CallFunc_Array_Length_ReturnValue) == 0x000024, "Member 'BTD_CheckTarget_C_FilterHP::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTD_CheckTarget_C_FilterHP, CallFunc_GreaterEqual_IntInt_ReturnValue_2) == 0x000028, "Member 'BTD_CheckTarget_C_FilterHP::CallFunc_GreaterEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BTD_CheckTarget_C_FilterHP, CallFunc_Array_Get_Item) == 0x000030, "Member 'BTD_CheckTarget_C_FilterHP::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BTD_CheckTarget_C_FilterHP, CallFunc_Array_Length_ReturnValue_1) == 0x000038, "Member 'BTD_CheckTarget_C_FilterHP::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BTD_CheckTarget_C_FilterHP, CallFunc_Array_RemoveItem_ReturnValue) == 0x00003C, "Member 'BTD_CheckTarget_C_FilterHP::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTD_CheckTarget_C_FilterHP, CallFunc_Subtract_IntInt_ReturnValue_2) == 0x000040, "Member 'BTD_CheckTarget_C_FilterHP::CallFunc_Subtract_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BTD_CheckTarget_C_FilterHP, CallFunc_GetFloatAttribute_bSuccessfullyFoundAttribute) == 0x000044, "Member 'BTD_CheckTarget_C_FilterHP::CallFunc_GetFloatAttribute_bSuccessfullyFoundAttribute' has a wrong offset!");
static_assert(offsetof(BTD_CheckTarget_C_FilterHP, CallFunc_GetFloatAttribute_ReturnValue) == 0x000048, "Member 'BTD_CheckTarget_C_FilterHP::CallFunc_GetFloatAttribute_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTD_CheckTarget_C_FilterHP, CallFunc_Max_ReturnValue) == 0x00004C, "Member 'BTD_CheckTarget_C_FilterHP::CallFunc_Max_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTD_CheckTarget_C_FilterHP, CallFunc_GetFloatAttribute_bSuccessfullyFoundAttribute_1) == 0x000050, "Member 'BTD_CheckTarget_C_FilterHP::CallFunc_GetFloatAttribute_bSuccessfullyFoundAttribute_1' has a wrong offset!");
static_assert(offsetof(BTD_CheckTarget_C_FilterHP, CallFunc_GetFloatAttribute_ReturnValue_1) == 0x000054, "Member 'BTD_CheckTarget_C_FilterHP::CallFunc_GetFloatAttribute_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BTD_CheckTarget_C_FilterHP, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000058, "Member 'BTD_CheckTarget_C_FilterHP::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTD_CheckTarget_C_FilterHP, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000060, "Member 'BTD_CheckTarget_C_FilterHP::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTD_CheckTarget_C_FilterHP, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000068, "Member 'BTD_CheckTarget_C_FilterHP::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTD_CheckTarget_C_FilterHP, CallFunc_Array_Get_Item_1) == 0x000070, "Member 'BTD_CheckTarget_C_FilterHP::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BTD_CheckTarget_C_FilterHP, CallFunc_Array_RemoveItem_ReturnValue_1) == 0x000078, "Member 'BTD_CheckTarget_C_FilterHP::CallFunc_Array_RemoveItem_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BTD_CheckTarget_C_FilterHP, CallFunc_GetFloatAttribute_bSuccessfullyFoundAttribute_2) == 0x000079, "Member 'BTD_CheckTarget_C_FilterHP::CallFunc_GetFloatAttribute_bSuccessfullyFoundAttribute_2' has a wrong offset!");
static_assert(offsetof(BTD_CheckTarget_C_FilterHP, CallFunc_GetFloatAttribute_ReturnValue_2) == 0x00007C, "Member 'BTD_CheckTarget_C_FilterHP::CallFunc_GetFloatAttribute_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BTD_CheckTarget_C_FilterHP, CallFunc_GetFloatAttribute_bSuccessfullyFoundAttribute_3) == 0x000080, "Member 'BTD_CheckTarget_C_FilterHP::CallFunc_GetFloatAttribute_bSuccessfullyFoundAttribute_3' has a wrong offset!");
static_assert(offsetof(BTD_CheckTarget_C_FilterHP, CallFunc_GetFloatAttribute_ReturnValue_3) == 0x000084, "Member 'BTD_CheckTarget_C_FilterHP::CallFunc_GetFloatAttribute_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BTD_CheckTarget_C_FilterHP, CallFunc_Array_Length_ReturnValue_2) == 0x000088, "Member 'BTD_CheckTarget_C_FilterHP::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BTD_CheckTarget_C_FilterHP, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x000090, "Member 'BTD_CheckTarget_C_FilterHP::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BTD_CheckTarget_C_FilterHP, CallFunc_Subtract_IntInt_ReturnValue_3) == 0x000098, "Member 'BTD_CheckTarget_C_FilterHP::CallFunc_Subtract_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BTD_CheckTarget_C_FilterHP, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x0000A0, "Member 'BTD_CheckTarget_C_FilterHP::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BTD_CheckTarget_C_FilterHP, CallFunc_Max_ReturnValue_1) == 0x0000A8, "Member 'BTD_CheckTarget_C_FilterHP::CallFunc_Max_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BTD_CheckTarget_C_FilterHP, CallFunc_Less_DoubleDouble_ReturnValue) == 0x0000AC, "Member 'BTD_CheckTarget_C_FilterHP::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTD_CheckTarget_C_FilterHP, CallFunc_Divide_DoubleDouble_B_ImplicitCast) == 0x0000B0, "Member 'BTD_CheckTarget_C_FilterHP::CallFunc_Divide_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BTD_CheckTarget_C_FilterHP, CallFunc_Divide_DoubleDouble_A_ImplicitCast) == 0x0000B8, "Member 'BTD_CheckTarget_C_FilterHP::CallFunc_Divide_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BTD_CheckTarget_C_FilterHP, CallFunc_Divide_DoubleDouble_B_ImplicitCast_1) == 0x0000C0, "Member 'BTD_CheckTarget_C_FilterHP::CallFunc_Divide_DoubleDouble_B_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BTD_CheckTarget_C_FilterHP, CallFunc_Divide_DoubleDouble_A_ImplicitCast_1) == 0x0000C8, "Member 'BTD_CheckTarget_C_FilterHP::CallFunc_Divide_DoubleDouble_A_ImplicitCast_1' has a wrong offset!");

// Function BTD_CheckTarget.BTD_CheckTarget_C.FilterRange
// 0x0050 (0x0050 - 0x0000)
struct BTD_CheckTarget_C_FilterRange final
{
public:
	bool                                          Bool;                                              // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Get_Max_Distance_From_Perception_Result;  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B04[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Get_Max_Distance_From_Perception_Return_Value; // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Get_Max_Distance_From_Perception_Result_1; // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B05[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Get_Max_Distance_From_Perception_Return_Value_1; // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FilterTargetsOverDistance_ReturnValue;    // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FilterTargetsOverXYRange_ReturnValue;     // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FilterTargetsWithinDirectionAngleAndAllowedAngle_ReturnValue; // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetVisionAngle_ReturnValue;               // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue;      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FilterTargetsWithinXYRange_ReturnValue;   // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FilterTargetsWithinDirectionAngleAndAllowedAngle_ReturnValue_1; // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x002B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FilterTargetsWithinDistance_ReturnValue;  // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B06[0x3];                                     // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_FilterTargetsOverDistance_Distance_ImplicitCast; // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FilterTargetsOverXYRange_XYRange_ImplicitCast; // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FilterTargetsWithinDirectionAngleAndAllowedAngle_AllowedAngle_ImplicitCast; // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FilterTargetsWithinDirectionAngleAndAllowedAngle_DirectionalAngle_ImplicitCast; // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FilterTargetsWithinDirectionAngleAndAllowedAngle_DirectionalAngle_ImplicitCast_1; // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FilterTargetsWithinXYRange_XYRange_ImplicitCast; // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FilterTargetsWithinDistance_Distance_ImplicitCast; // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTD_CheckTarget_C_FilterRange) == 0x000008, "Wrong alignment on BTD_CheckTarget_C_FilterRange");
static_assert(sizeof(BTD_CheckTarget_C_FilterRange) == 0x000050, "Wrong size on BTD_CheckTarget_C_FilterRange");
static_assert(offsetof(BTD_CheckTarget_C_FilterRange, Bool) == 0x000000, "Member 'BTD_CheckTarget_C_FilterRange::Bool' has a wrong offset!");
static_assert(offsetof(BTD_CheckTarget_C_FilterRange, CallFunc_Get_Max_Distance_From_Perception_Result) == 0x000001, "Member 'BTD_CheckTarget_C_FilterRange::CallFunc_Get_Max_Distance_From_Perception_Result' has a wrong offset!");
static_assert(offsetof(BTD_CheckTarget_C_FilterRange, CallFunc_Get_Max_Distance_From_Perception_Return_Value) == 0x000008, "Member 'BTD_CheckTarget_C_FilterRange::CallFunc_Get_Max_Distance_From_Perception_Return_Value' has a wrong offset!");
static_assert(offsetof(BTD_CheckTarget_C_FilterRange, CallFunc_Get_Max_Distance_From_Perception_Result_1) == 0x000010, "Member 'BTD_CheckTarget_C_FilterRange::CallFunc_Get_Max_Distance_From_Perception_Result_1' has a wrong offset!");
static_assert(offsetof(BTD_CheckTarget_C_FilterRange, CallFunc_Get_Max_Distance_From_Perception_Return_Value_1) == 0x000018, "Member 'BTD_CheckTarget_C_FilterRange::CallFunc_Get_Max_Distance_From_Perception_Return_Value_1' has a wrong offset!");
static_assert(offsetof(BTD_CheckTarget_C_FilterRange, K2Node_SwitchEnum_CmpSuccess) == 0x000020, "Member 'BTD_CheckTarget_C_FilterRange::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BTD_CheckTarget_C_FilterRange, CallFunc_FilterTargetsOverDistance_ReturnValue) == 0x000021, "Member 'BTD_CheckTarget_C_FilterRange::CallFunc_FilterTargetsOverDistance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTD_CheckTarget_C_FilterRange, CallFunc_FilterTargetsOverXYRange_ReturnValue) == 0x000022, "Member 'BTD_CheckTarget_C_FilterRange::CallFunc_FilterTargetsOverXYRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTD_CheckTarget_C_FilterRange, CallFunc_FilterTargetsWithinDirectionAngleAndAllowedAngle_ReturnValue) == 0x000023, "Member 'BTD_CheckTarget_C_FilterRange::CallFunc_FilterTargetsWithinDirectionAngleAndAllowedAngle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTD_CheckTarget_C_FilterRange, CallFunc_GetVisionAngle_ReturnValue) == 0x000024, "Member 'BTD_CheckTarget_C_FilterRange::CallFunc_GetVisionAngle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTD_CheckTarget_C_FilterRange, CallFunc_EqualEqual_DoubleDouble_ReturnValue) == 0x000028, "Member 'BTD_CheckTarget_C_FilterRange::CallFunc_EqualEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTD_CheckTarget_C_FilterRange, CallFunc_FilterTargetsWithinXYRange_ReturnValue) == 0x000029, "Member 'BTD_CheckTarget_C_FilterRange::CallFunc_FilterTargetsWithinXYRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTD_CheckTarget_C_FilterRange, CallFunc_FilterTargetsWithinDirectionAngleAndAllowedAngle_ReturnValue_1) == 0x00002A, "Member 'BTD_CheckTarget_C_FilterRange::CallFunc_FilterTargetsWithinDirectionAngleAndAllowedAngle_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BTD_CheckTarget_C_FilterRange, K2Node_SwitchEnum_CmpSuccess_1) == 0x00002B, "Member 'BTD_CheckTarget_C_FilterRange::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(BTD_CheckTarget_C_FilterRange, CallFunc_FilterTargetsWithinDistance_ReturnValue) == 0x00002C, "Member 'BTD_CheckTarget_C_FilterRange::CallFunc_FilterTargetsWithinDistance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTD_CheckTarget_C_FilterRange, CallFunc_FilterTargetsOverDistance_Distance_ImplicitCast) == 0x000030, "Member 'BTD_CheckTarget_C_FilterRange::CallFunc_FilterTargetsOverDistance_Distance_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BTD_CheckTarget_C_FilterRange, CallFunc_FilterTargetsOverXYRange_XYRange_ImplicitCast) == 0x000034, "Member 'BTD_CheckTarget_C_FilterRange::CallFunc_FilterTargetsOverXYRange_XYRange_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BTD_CheckTarget_C_FilterRange, CallFunc_FilterTargetsWithinDirectionAngleAndAllowedAngle_AllowedAngle_ImplicitCast) == 0x000038, "Member 'BTD_CheckTarget_C_FilterRange::CallFunc_FilterTargetsWithinDirectionAngleAndAllowedAngle_AllowedAngle_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BTD_CheckTarget_C_FilterRange, CallFunc_FilterTargetsWithinDirectionAngleAndAllowedAngle_DirectionalAngle_ImplicitCast) == 0x00003C, "Member 'BTD_CheckTarget_C_FilterRange::CallFunc_FilterTargetsWithinDirectionAngleAndAllowedAngle_DirectionalAngle_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BTD_CheckTarget_C_FilterRange, CallFunc_FilterTargetsWithinDirectionAngleAndAllowedAngle_DirectionalAngle_ImplicitCast_1) == 0x000040, "Member 'BTD_CheckTarget_C_FilterRange::CallFunc_FilterTargetsWithinDirectionAngleAndAllowedAngle_DirectionalAngle_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BTD_CheckTarget_C_FilterRange, CallFunc_FilterTargetsWithinXYRange_XYRange_ImplicitCast) == 0x000044, "Member 'BTD_CheckTarget_C_FilterRange::CallFunc_FilterTargetsWithinXYRange_XYRange_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BTD_CheckTarget_C_FilterRange, CallFunc_FilterTargetsWithinDistance_Distance_ImplicitCast) == 0x000048, "Member 'BTD_CheckTarget_C_FilterRange::CallFunc_FilterTargetsWithinDistance_Distance_ImplicitCast' has a wrong offset!");

// Function BTD_CheckTarget.BTD_CheckTarget_C.FilterTags
// 0x0058 (0x0058 - 0x0000)
struct BTD_CheckTarget_C_FilterTags final
{
public:
	bool                                          Bool;                                              // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B07[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B08[0x2];                                     // 0x001A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B09[0x3];                                     // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FilterUnTagedTargets_ReturnValue;         // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B0A[0x2];                                     // 0x003E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           CallFunc_Array_Get_Item_1;                         // 0x0040(0x0008)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_4;               // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FilterTagedTargets_ReturnValue;           // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_4;                // 0x004D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B0B[0x2];                                     // 0x004E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_5;               // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_5;                // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTD_CheckTarget_C_FilterTags) == 0x000004, "Wrong alignment on BTD_CheckTarget_C_FilterTags");
static_assert(sizeof(BTD_CheckTarget_C_FilterTags) == 0x000058, "Wrong size on BTD_CheckTarget_C_FilterTags");
static_assert(offsetof(BTD_CheckTarget_C_FilterTags, Bool) == 0x000000, "Member 'BTD_CheckTarget_C_FilterTags::Bool' has a wrong offset!");
static_assert(offsetof(BTD_CheckTarget_C_FilterTags, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BTD_CheckTarget_C_FilterTags::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BTD_CheckTarget_C_FilterTags, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BTD_CheckTarget_C_FilterTags::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTD_CheckTarget_C_FilterTags, Temp_int_Array_Index_Variable) == 0x00000C, "Member 'BTD_CheckTarget_C_FilterTags::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BTD_CheckTarget_C_FilterTags, CallFunc_Array_Length_ReturnValue) == 0x000010, "Member 'BTD_CheckTarget_C_FilterTags::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTD_CheckTarget_C_FilterTags, CallFunc_Array_Length_ReturnValue_1) == 0x000014, "Member 'BTD_CheckTarget_C_FilterTags::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BTD_CheckTarget_C_FilterTags, CallFunc_Less_IntInt_ReturnValue) == 0x000018, "Member 'BTD_CheckTarget_C_FilterTags::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTD_CheckTarget_C_FilterTags, CallFunc_Less_IntInt_ReturnValue_1) == 0x000019, "Member 'BTD_CheckTarget_C_FilterTags::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BTD_CheckTarget_C_FilterTags, Temp_int_Loop_Counter_Variable_1) == 0x00001C, "Member 'BTD_CheckTarget_C_FilterTags::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BTD_CheckTarget_C_FilterTags, CallFunc_Array_Length_ReturnValue_2) == 0x000020, "Member 'BTD_CheckTarget_C_FilterTags::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BTD_CheckTarget_C_FilterTags, CallFunc_Add_IntInt_ReturnValue_1) == 0x000024, "Member 'BTD_CheckTarget_C_FilterTags::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BTD_CheckTarget_C_FilterTags, CallFunc_Less_IntInt_ReturnValue_2) == 0x000028, "Member 'BTD_CheckTarget_C_FilterTags::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BTD_CheckTarget_C_FilterTags, Temp_int_Array_Index_Variable_1) == 0x00002C, "Member 'BTD_CheckTarget_C_FilterTags::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BTD_CheckTarget_C_FilterTags, CallFunc_Array_Get_Item) == 0x000030, "Member 'BTD_CheckTarget_C_FilterTags::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BTD_CheckTarget_C_FilterTags, CallFunc_Array_Length_ReturnValue_3) == 0x000038, "Member 'BTD_CheckTarget_C_FilterTags::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BTD_CheckTarget_C_FilterTags, CallFunc_FilterUnTagedTargets_ReturnValue) == 0x00003C, "Member 'BTD_CheckTarget_C_FilterTags::CallFunc_FilterUnTagedTargets_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTD_CheckTarget_C_FilterTags, CallFunc_Less_IntInt_ReturnValue_3) == 0x00003D, "Member 'BTD_CheckTarget_C_FilterTags::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BTD_CheckTarget_C_FilterTags, CallFunc_Array_Get_Item_1) == 0x000040, "Member 'BTD_CheckTarget_C_FilterTags::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BTD_CheckTarget_C_FilterTags, CallFunc_Array_Length_ReturnValue_4) == 0x000048, "Member 'BTD_CheckTarget_C_FilterTags::CallFunc_Array_Length_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BTD_CheckTarget_C_FilterTags, CallFunc_FilterTagedTargets_ReturnValue) == 0x00004C, "Member 'BTD_CheckTarget_C_FilterTags::CallFunc_FilterTagedTargets_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTD_CheckTarget_C_FilterTags, CallFunc_Less_IntInt_ReturnValue_4) == 0x00004D, "Member 'BTD_CheckTarget_C_FilterTags::CallFunc_Less_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BTD_CheckTarget_C_FilterTags, CallFunc_Array_Length_ReturnValue_5) == 0x000050, "Member 'BTD_CheckTarget_C_FilterTags::CallFunc_Array_Length_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BTD_CheckTarget_C_FilterTags, CallFunc_Less_IntInt_ReturnValue_5) == 0x000054, "Member 'BTD_CheckTarget_C_FilterTags::CallFunc_Less_IntInt_ReturnValue_5' has a wrong offset!");

// Function BTD_CheckTarget.BTD_CheckTarget_C.PerformConditionCheckAI
// 0x00D8 (0x00D8 - 0x0000)
struct BTD_CheckTarget_C_PerformConditionCheckAI final
{
public:
	class AAIController*                          OwnerController;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  Param_ControlledPawn;                              // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B0C[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_DCMonsterBaseWithOptions_C*         K2Node_DynamicCast_AsBP_DCMonster_Base_with_Options; // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B0D[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAIPerceptionComponent*                 CallFunc_GetAIPerceptionComponent_ReturnValue;     // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UBlackboardComponent*                   CallFunc_GetBlackboard_ReturnValue;                // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0038(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Filter_Target_From_Spawn_Location_Return_Value; // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B0E[0x7];                                     // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ADCCharacterBase*>               CallFunc_Filter_Target_From_Spawn_Location_Result; // 0x0058(0x0010)(ReferenceParm)
	bool                                          CallFunc_FilterHP_Bool;                            // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B0F[0x7];                                     // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_GetValueAsObject_ReturnValue;             // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ADCCharacterBase*                       K2Node_DynamicCast_AsDCCharacter_Base;             // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B10[0x7];                                     // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0088(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Filter_Target_From_Spawn_Location_Return_Value_1; // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B11[0x3];                                     // 0x00A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ADCCharacterBase*>               CallFunc_Filter_Target_From_Spawn_Location_Result_1; // 0x00A8(0x0010)(ReferenceParm)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FilterRange_Bool;                         // 0x00B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FilterTags_Bool;                          // 0x00BA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TargetingType_Bool;                       // 0x00BB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Get_Target_Array_Return_Value;            // 0x00BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B12[0x3];                                     // 0x00BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ADCCharacterBase*>               CallFunc_Get_Target_Array_TargetArray;             // 0x00C0(0x0010)(ReferenceParm)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTD_CheckTarget_C_PerformConditionCheckAI) == 0x000008, "Wrong alignment on BTD_CheckTarget_C_PerformConditionCheckAI");
static_assert(sizeof(BTD_CheckTarget_C_PerformConditionCheckAI) == 0x0000D8, "Wrong size on BTD_CheckTarget_C_PerformConditionCheckAI");
static_assert(offsetof(BTD_CheckTarget_C_PerformConditionCheckAI, OwnerController) == 0x000000, "Member 'BTD_CheckTarget_C_PerformConditionCheckAI::OwnerController' has a wrong offset!");
static_assert(offsetof(BTD_CheckTarget_C_PerformConditionCheckAI, Param_ControlledPawn) == 0x000008, "Member 'BTD_CheckTarget_C_PerformConditionCheckAI::Param_ControlledPawn' has a wrong offset!");
static_assert(offsetof(BTD_CheckTarget_C_PerformConditionCheckAI, ReturnValue) == 0x000010, "Member 'BTD_CheckTarget_C_PerformConditionCheckAI::ReturnValue' has a wrong offset!");
static_assert(offsetof(BTD_CheckTarget_C_PerformConditionCheckAI, K2Node_DynamicCast_AsBP_DCMonster_Base_with_Options) == 0x000018, "Member 'BTD_CheckTarget_C_PerformConditionCheckAI::K2Node_DynamicCast_AsBP_DCMonster_Base_with_Options' has a wrong offset!");
static_assert(offsetof(BTD_CheckTarget_C_PerformConditionCheckAI, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BTD_CheckTarget_C_PerformConditionCheckAI::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BTD_CheckTarget_C_PerformConditionCheckAI, CallFunc_GetAIPerceptionComponent_ReturnValue) == 0x000028, "Member 'BTD_CheckTarget_C_PerformConditionCheckAI::CallFunc_GetAIPerceptionComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTD_CheckTarget_C_PerformConditionCheckAI, CallFunc_GetBlackboard_ReturnValue) == 0x000030, "Member 'BTD_CheckTarget_C_PerformConditionCheckAI::CallFunc_GetBlackboard_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTD_CheckTarget_C_PerformConditionCheckAI, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000038, "Member 'BTD_CheckTarget_C_PerformConditionCheckAI::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTD_CheckTarget_C_PerformConditionCheckAI, CallFunc_Filter_Target_From_Spawn_Location_Return_Value) == 0x000050, "Member 'BTD_CheckTarget_C_PerformConditionCheckAI::CallFunc_Filter_Target_From_Spawn_Location_Return_Value' has a wrong offset!");
static_assert(offsetof(BTD_CheckTarget_C_PerformConditionCheckAI, CallFunc_Filter_Target_From_Spawn_Location_Result) == 0x000058, "Member 'BTD_CheckTarget_C_PerformConditionCheckAI::CallFunc_Filter_Target_From_Spawn_Location_Result' has a wrong offset!");
static_assert(offsetof(BTD_CheckTarget_C_PerformConditionCheckAI, CallFunc_FilterHP_Bool) == 0x000068, "Member 'BTD_CheckTarget_C_PerformConditionCheckAI::CallFunc_FilterHP_Bool' has a wrong offset!");
static_assert(offsetof(BTD_CheckTarget_C_PerformConditionCheckAI, CallFunc_GetValueAsObject_ReturnValue) == 0x000070, "Member 'BTD_CheckTarget_C_PerformConditionCheckAI::CallFunc_GetValueAsObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTD_CheckTarget_C_PerformConditionCheckAI, K2Node_DynamicCast_AsDCCharacter_Base) == 0x000078, "Member 'BTD_CheckTarget_C_PerformConditionCheckAI::K2Node_DynamicCast_AsDCCharacter_Base' has a wrong offset!");
static_assert(offsetof(BTD_CheckTarget_C_PerformConditionCheckAI, K2Node_DynamicCast_bSuccess_1) == 0x000080, "Member 'BTD_CheckTarget_C_PerformConditionCheckAI::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BTD_CheckTarget_C_PerformConditionCheckAI, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000088, "Member 'BTD_CheckTarget_C_PerformConditionCheckAI::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BTD_CheckTarget_C_PerformConditionCheckAI, CallFunc_Array_Add_ReturnValue) == 0x0000A0, "Member 'BTD_CheckTarget_C_PerformConditionCheckAI::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTD_CheckTarget_C_PerformConditionCheckAI, CallFunc_Filter_Target_From_Spawn_Location_Return_Value_1) == 0x0000A4, "Member 'BTD_CheckTarget_C_PerformConditionCheckAI::CallFunc_Filter_Target_From_Spawn_Location_Return_Value_1' has a wrong offset!");
static_assert(offsetof(BTD_CheckTarget_C_PerformConditionCheckAI, CallFunc_Filter_Target_From_Spawn_Location_Result_1) == 0x0000A8, "Member 'BTD_CheckTarget_C_PerformConditionCheckAI::CallFunc_Filter_Target_From_Spawn_Location_Result_1' has a wrong offset!");
static_assert(offsetof(BTD_CheckTarget_C_PerformConditionCheckAI, CallFunc_IsValid_ReturnValue) == 0x0000B8, "Member 'BTD_CheckTarget_C_PerformConditionCheckAI::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTD_CheckTarget_C_PerformConditionCheckAI, CallFunc_FilterRange_Bool) == 0x0000B9, "Member 'BTD_CheckTarget_C_PerformConditionCheckAI::CallFunc_FilterRange_Bool' has a wrong offset!");
static_assert(offsetof(BTD_CheckTarget_C_PerformConditionCheckAI, CallFunc_FilterTags_Bool) == 0x0000BA, "Member 'BTD_CheckTarget_C_PerformConditionCheckAI::CallFunc_FilterTags_Bool' has a wrong offset!");
static_assert(offsetof(BTD_CheckTarget_C_PerformConditionCheckAI, CallFunc_TargetingType_Bool) == 0x0000BB, "Member 'BTD_CheckTarget_C_PerformConditionCheckAI::CallFunc_TargetingType_Bool' has a wrong offset!");
static_assert(offsetof(BTD_CheckTarget_C_PerformConditionCheckAI, CallFunc_Get_Target_Array_Return_Value) == 0x0000BC, "Member 'BTD_CheckTarget_C_PerformConditionCheckAI::CallFunc_Get_Target_Array_Return_Value' has a wrong offset!");
static_assert(offsetof(BTD_CheckTarget_C_PerformConditionCheckAI, CallFunc_Get_Target_Array_TargetArray) == 0x0000C0, "Member 'BTD_CheckTarget_C_PerformConditionCheckAI::CallFunc_Get_Target_Array_TargetArray' has a wrong offset!");
static_assert(offsetof(BTD_CheckTarget_C_PerformConditionCheckAI, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x0000D0, "Member 'BTD_CheckTarget_C_PerformConditionCheckAI::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");

// Function BTD_CheckTarget.BTD_CheckTarget_C.TargetingType
// 0x000C (0x000C - 0x0000)
struct BTD_CheckTarget_C_TargetingType final
{
public:
	bool                                          Bool;                                              // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B13[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTD_CheckTarget_C_TargetingType) == 0x000004, "Wrong alignment on BTD_CheckTarget_C_TargetingType");
static_assert(sizeof(BTD_CheckTarget_C_TargetingType) == 0x00000C, "Wrong size on BTD_CheckTarget_C_TargetingType");
static_assert(offsetof(BTD_CheckTarget_C_TargetingType, Bool) == 0x000000, "Member 'BTD_CheckTarget_C_TargetingType::Bool' has a wrong offset!");
static_assert(offsetof(BTD_CheckTarget_C_TargetingType, CallFunc_Array_Length_ReturnValue) == 0x000004, "Member 'BTD_CheckTarget_C_TargetingType::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTD_CheckTarget_C_TargetingType, CallFunc_Less_IntInt_ReturnValue) == 0x000008, "Member 'BTD_CheckTarget_C_TargetingType::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

}

