#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BTT_FrostElemental_MoveToTarget

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "DungeonCrawler_classes.hpp"
#include "AIModule_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BTT_FrostElemental_MoveToTarget.BTT_FrostElemental_MoveToTarget_C
// 0x0020 (0x00C8 - 0x00A8)
class UBTT_FrostElemental_MoveToTarget_C final : public UBTT_BlueprintBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x00A8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FTimerHandle                           Check_Target_Valid_TimerHandle;                    // 0x00B0(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class ADCPlayerCharacterBase*                 As_DCPlayer_Character_Base;                        // 0x00B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class ABP_FrostElemental_C*                   As_BP_Frost_Elemental;                             // 0x00C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void Check_Target();
	void ExecuteUbergraph_BTT_FrostElemental_MoveToTarget(int32 EntryPoint);
	void OnFail_F3F3009B48DF8435B5ECC39D93FB3962(EPathFollowingResult MovementResult);
	void OnSuccess_F3F3009B48DF8435B5ECC39D93FB3962(EPathFollowingResult MovementResult);
	void OnTaskFinished(class AAIController* OwnerController, class APawn* ControlledPawn, EBTNodeResult TaskResult);
	void ReceiveExecuteAI(class AAIController* OwnerController, class APawn* ControlledPawn);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BTT_FrostElemental_MoveToTarget_C">();
	}
	static class UBTT_FrostElemental_MoveToTarget_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBTT_FrostElemental_MoveToTarget_C>();
	}
};
static_assert(alignof(UBTT_FrostElemental_MoveToTarget_C) == 0x000008, "Wrong alignment on UBTT_FrostElemental_MoveToTarget_C");
static_assert(sizeof(UBTT_FrostElemental_MoveToTarget_C) == 0x0000C8, "Wrong size on UBTT_FrostElemental_MoveToTarget_C");
static_assert(offsetof(UBTT_FrostElemental_MoveToTarget_C, UberGraphFrame) == 0x0000A8, "Member 'UBTT_FrostElemental_MoveToTarget_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBTT_FrostElemental_MoveToTarget_C, Check_Target_Valid_TimerHandle) == 0x0000B0, "Member 'UBTT_FrostElemental_MoveToTarget_C::Check_Target_Valid_TimerHandle' has a wrong offset!");
static_assert(offsetof(UBTT_FrostElemental_MoveToTarget_C, As_DCPlayer_Character_Base) == 0x0000B8, "Member 'UBTT_FrostElemental_MoveToTarget_C::As_DCPlayer_Character_Base' has a wrong offset!");
static_assert(offsetof(UBTT_FrostElemental_MoveToTarget_C, As_BP_Frost_Elemental) == 0x0000C0, "Member 'UBTT_FrostElemental_MoveToTarget_C::As_BP_Frost_Elemental' has a wrong offset!");

}

