#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_SpikeLogDeactivate

#include "Basic.hpp"

#include "GameplayAbilities_structs.hpp"


namespace SDK::Params
{

// Function GA_SpikeLogDeactivate.GA_SpikeLogDeactivate_C.AbilityActivated
// 0x00B0 (0x00B0 - 0x0000)
struct GA_SpikeLogDeactivate_C_AbilityActivated final
{
public:
	struct FGameplayEventData                     TriggerEventData;                                  // 0x0000(0x00B0)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(GA_SpikeLogDeactivate_C_AbilityActivated) == 0x000008, "Wrong alignment on GA_SpikeLogDeactivate_C_AbilityActivated");
static_assert(sizeof(GA_SpikeLogDeactivate_C_AbilityActivated) == 0x0000B0, "Wrong size on GA_SpikeLogDeactivate_C_AbilityActivated");
static_assert(offsetof(GA_SpikeLogDeactivate_C_AbilityActivated, TriggerEventData) == 0x000000, "Member 'GA_SpikeLogDeactivate_C_AbilityActivated::TriggerEventData' has a wrong offset!");

// Function GA_SpikeLogDeactivate.GA_SpikeLogDeactivate_C.ExecuteUbergraph_GA_SpikeLogDeactivate
// 0x00D8 (0x00D8 - 0x0000)
struct GA_SpikeLogDeactivate_C_ExecuteUbergraph_GA_SpikeLogDeactivate final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_46C8[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayEventData                     K2Node_Event_TriggerEventData;                     // 0x0008(0x00B0)(ConstParm)
	class AActor*                                 CallFunc_GetAvatarActorFromActorInfo_ReturnValue;  // 0x00B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_46C9[0x7];                                     // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_SpikeLog_C*                         K2Node_DynamicCast_AsBP_Spike_Log;                 // 0x00C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x00D2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_SpikeLogDeactivate_C_ExecuteUbergraph_GA_SpikeLogDeactivate) == 0x000008, "Wrong alignment on GA_SpikeLogDeactivate_C_ExecuteUbergraph_GA_SpikeLogDeactivate");
static_assert(sizeof(GA_SpikeLogDeactivate_C_ExecuteUbergraph_GA_SpikeLogDeactivate) == 0x0000D8, "Wrong size on GA_SpikeLogDeactivate_C_ExecuteUbergraph_GA_SpikeLogDeactivate");
static_assert(offsetof(GA_SpikeLogDeactivate_C_ExecuteUbergraph_GA_SpikeLogDeactivate, EntryPoint) == 0x000000, "Member 'GA_SpikeLogDeactivate_C_ExecuteUbergraph_GA_SpikeLogDeactivate::EntryPoint' has a wrong offset!");
static_assert(offsetof(GA_SpikeLogDeactivate_C_ExecuteUbergraph_GA_SpikeLogDeactivate, K2Node_Event_TriggerEventData) == 0x000008, "Member 'GA_SpikeLogDeactivate_C_ExecuteUbergraph_GA_SpikeLogDeactivate::K2Node_Event_TriggerEventData' has a wrong offset!");
static_assert(offsetof(GA_SpikeLogDeactivate_C_ExecuteUbergraph_GA_SpikeLogDeactivate, CallFunc_GetAvatarActorFromActorInfo_ReturnValue) == 0x0000B8, "Member 'GA_SpikeLogDeactivate_C_ExecuteUbergraph_GA_SpikeLogDeactivate::CallFunc_GetAvatarActorFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_SpikeLogDeactivate_C_ExecuteUbergraph_GA_SpikeLogDeactivate, CallFunc_IsValid_ReturnValue) == 0x0000C0, "Member 'GA_SpikeLogDeactivate_C_ExecuteUbergraph_GA_SpikeLogDeactivate::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_SpikeLogDeactivate_C_ExecuteUbergraph_GA_SpikeLogDeactivate, K2Node_DynamicCast_AsBP_Spike_Log) == 0x0000C8, "Member 'GA_SpikeLogDeactivate_C_ExecuteUbergraph_GA_SpikeLogDeactivate::K2Node_DynamicCast_AsBP_Spike_Log' has a wrong offset!");
static_assert(offsetof(GA_SpikeLogDeactivate_C_ExecuteUbergraph_GA_SpikeLogDeactivate, K2Node_DynamicCast_bSuccess) == 0x0000D0, "Member 'GA_SpikeLogDeactivate_C_ExecuteUbergraph_GA_SpikeLogDeactivate::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GA_SpikeLogDeactivate_C_ExecuteUbergraph_GA_SpikeLogDeactivate, CallFunc_IsValid_ReturnValue_1) == 0x0000D1, "Member 'GA_SpikeLogDeactivate_C_ExecuteUbergraph_GA_SpikeLogDeactivate::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_SpikeLogDeactivate_C_ExecuteUbergraph_GA_SpikeLogDeactivate, CallFunc_IsValid_ReturnValue_2) == 0x0000D2, "Member 'GA_SpikeLogDeactivate_C_ExecuteUbergraph_GA_SpikeLogDeactivate::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");

}

